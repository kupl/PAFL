59 :	"NS_PROJ"
		- NEIGH  = { NS_PROJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

59 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

85 :	"NS_PROJ_START"
		- NEIGH  = { NS_PROJ_START , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

87 :	"crs"
		- NEIGH  = { crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

92 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

92 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

93 :	"BoundCRSPtr"
		- NEIGH  = { canonicalBoundCRS_ , BoundCRSPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { extensionProj4_ , string , std , }

93 :	"canonicalBoundCRS_"
		- NEIGH  = { canonicalBoundCRS_ , BoundCRSPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { extensionProj4_ , string , std , }

94 :	"std"
		- NEIGH  = { extensionProj4_ , string , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { canonicalBoundCRS_ , BoundCRSPtr , }
		- SUCC   = { implicitCS_ , }

94 :	"string"
		- NEIGH  = { extensionProj4_ , string , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { canonicalBoundCRS_ , BoundCRSPtr , }
		- SUCC   = { implicitCS_ , }

94 :	"extensionProj4_"
		- NEIGH  = { extensionProj4_ , string , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { canonicalBoundCRS_ , BoundCRSPtr , }
		- SUCC   = { implicitCS_ , }

95 :	"implicitCS_"
		- NEIGH  = { implicitCS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extensionProj4_ , string , std , }
		- SUCC   = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }

97 :	"setImplicitCS"
		- NEIGH  = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { implicitCS_ , }
		- SUCC   = { }

97 :	"util"
		- NEIGH  = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { implicitCS_ , }
		- SUCC   = { }

97 :	"PropertyMap"
		- NEIGH  = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { implicitCS_ , }
		- SUCC   = { }

97 :	"&"
		- NEIGH  = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { implicitCS_ , }
		- SUCC   = { }

97 :	"properties"
		- NEIGH  = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { implicitCS_ , }
		- SUCC   = { }

98 :	"pVal"
		- NEIGH  = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { implicitCS_ , }
		- SUCC   = { }

98 :	"properties"
		- NEIGH  = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { implicitCS_ , }
		- SUCC   = { }

98 :	"get"
		- NEIGH  = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { implicitCS_ , }
		- SUCC   = { }

99 :	"if"
		- NEIGH  = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- PARENT = { }
		- CHILD  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PRED   = { implicitCS_ , }
		- SUCC   = { }

99 :	"pVal"
		- NEIGH  = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- PARENT = { }
		- CHILD  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PRED   = { implicitCS_ , }
		- SUCC   = { }

100 :	"if"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

100 :	"genVal"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

101 :	"dynamic_cast"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

101 :	"<"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

101 :	"util"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

101 :	"BoxedValue"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

101 :	"*"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

101 :	">"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

101 :	"pVal"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

101 :	"get"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

102 :	"if"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { implicitCS_ , }
		- PRED   = { }
		- SUCC   = { }

102 :	"genVal"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { implicitCS_ , }
		- PRED   = { }
		- SUCC   = { }

102 :	"type"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { implicitCS_ , }
		- PRED   = { }
		- SUCC   = { }

102 :	"=="
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { implicitCS_ , }
		- PRED   = { }
		- SUCC   = { }

102 :	"util"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { implicitCS_ , }
		- PRED   = { }
		- SUCC   = { }

102 :	"BoxedValue"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { implicitCS_ , }
		- PRED   = { }
		- SUCC   = { }

102 :	"Type"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { implicitCS_ , }
		- PRED   = { }
		- SUCC   = { }

102 :	"BOOLEAN"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { implicitCS_ , }
		- PRED   = { }
		- SUCC   = { }

102 :	"&&"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { implicitCS_ , }
		- PRED   = { }
		- SUCC   = { }

103 :	"genVal"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { implicitCS_ , }
		- PRED   = { }
		- SUCC   = { }

103 :	"booleanValue"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { implicitCS_ , }
		- PRED   = { }
		- SUCC   = { }

104 :	"implicitCS_"
		- NEIGH  = { implicitCS_ , }
		- PARENT = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

114 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

114 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

114 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

114 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

114 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

114 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

114 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

114 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

118 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

118 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

118 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

118 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

118 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

119 :	"ObjectUsage"
		- NEIGH  = { ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

119 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

119 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

119 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

119 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

119 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

119 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

119 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

119 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

119 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

119 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

124 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

124 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

137 :	"BoundCRSPtr"
		- NEIGH  = { BoundCRSPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

137 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

137 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

137 :	"canonicalBoundCRS"
		- NEIGH  = { canonicalBoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

137 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

138 :	"return"
		- NEIGH  = { canonicalBoundCRS_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

138 :	"d"
		- NEIGH  = { canonicalBoundCRS_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

138 :	"canonicalBoundCRS_"
		- NEIGH  = { canonicalBoundCRS_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

151 :	"GeodeticCRSPtr"
		- NEIGH  = { GeodeticCRSPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

151 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

151 :	"extractGeodeticCRS"
		- NEIGH  = { extractGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

152 :	"raw"
		- NEIGH  = { extractGeodeticCRSRaw , raw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { raw , if , }

152 :	"extractGeodeticCRSRaw"
		- NEIGH  = { extractGeodeticCRSRaw , raw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { raw , if , }

153 :	"if"
		- NEIGH  = { raw , if , }
		- PARENT = { }
		- CHILD  = { shared_from_this , raw , > , < , dynamic_pointer_cast , GeodeticCRS , as_nullable , std , return , }
		- PRED   = { extractGeodeticCRSRaw , raw , }
		- SUCC   = { return , }

153 :	"raw"
		- NEIGH  = { raw , if , }
		- PARENT = { }
		- CHILD  = { shared_from_this , raw , > , < , dynamic_pointer_cast , GeodeticCRS , as_nullable , std , return , }
		- PRED   = { extractGeodeticCRSRaw , raw , }
		- SUCC   = { return , }

154 :	"return"
		- NEIGH  = { shared_from_this , raw , > , < , dynamic_pointer_cast , GeodeticCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

154 :	"std"
		- NEIGH  = { shared_from_this , raw , > , < , dynamic_pointer_cast , GeodeticCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

154 :	"dynamic_pointer_cast"
		- NEIGH  = { shared_from_this , raw , > , < , dynamic_pointer_cast , GeodeticCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

154 :	"<"
		- NEIGH  = { shared_from_this , raw , > , < , dynamic_pointer_cast , GeodeticCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

154 :	"GeodeticCRS"
		- NEIGH  = { shared_from_this , raw , > , < , dynamic_pointer_cast , GeodeticCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

154 :	">"
		- NEIGH  = { shared_from_this , raw , > , < , dynamic_pointer_cast , GeodeticCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

155 :	"raw"
		- NEIGH  = { shared_from_this , raw , > , < , dynamic_pointer_cast , GeodeticCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

155 :	"shared_from_this"
		- NEIGH  = { shared_from_this , raw , > , < , dynamic_pointer_cast , GeodeticCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

155 :	"as_nullable"
		- NEIGH  = { shared_from_this , raw , > , < , dynamic_pointer_cast , GeodeticCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

157 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { raw , if , }
		- SUCC   = { }

163 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

163 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

163 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

163 :	"extractGeodeticCRSRaw"
		- NEIGH  = { extractGeodeticCRSRaw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

164 :	"geodCRS"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

164 :	"dynamic_cast"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

164 :	"<"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

164 :	"GeodeticCRS"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

164 :	"*"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

164 :	">"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

164 :	"this"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

165 :	"if"
		- NEIGH  = { geodCRS , if , }
		- PARENT = { }
		- CHILD  = { geodCRS , return , }
		- PRED   = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- SUCC   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }

165 :	"geodCRS"
		- NEIGH  = { geodCRS , if , }
		- PARENT = { }
		- CHILD  = { geodCRS , return , }
		- PRED   = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- SUCC   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }

166 :	"return"
		- NEIGH  = { geodCRS , return , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

166 :	"geodCRS"
		- NEIGH  = { geodCRS , return , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

168 :	"projCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

168 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

168 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

168 :	"ProjectedCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

168 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

168 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

168 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

169 :	"if"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { extractGeodeticCRSRaw , projCRS , baseCRS , return , }
		- PRED   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }

169 :	"projCRS"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { extractGeodeticCRSRaw , projCRS , baseCRS , return , }
		- PRED   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }

170 :	"return"
		- NEIGH  = { extractGeodeticCRSRaw , projCRS , baseCRS , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

170 :	"projCRS"
		- NEIGH  = { extractGeodeticCRSRaw , projCRS , baseCRS , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

170 :	"baseCRS"
		- NEIGH  = { extractGeodeticCRSRaw , projCRS , baseCRS , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

170 :	"extractGeodeticCRSRaw"
		- NEIGH  = { extractGeodeticCRSRaw , projCRS , baseCRS , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

172 :	"compoundCRS"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

172 :	"dynamic_cast"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

172 :	"<"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

172 :	"CompoundCRS"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

172 :	"*"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

172 :	">"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

172 :	"this"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

173 :	"if"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PRED   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- SUCC   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }

173 :	"compoundCRS"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PRED   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- SUCC   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }

174 :	"for"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { if , subCrs , extractGeodeticCRSRaw , retGeogCRS , }
		- PRED   = { }
		- SUCC   = { }

174 :	"&"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { if , subCrs , extractGeodeticCRSRaw , retGeogCRS , }
		- PRED   = { }
		- SUCC   = { }

174 :	"subCrs"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { if , subCrs , extractGeodeticCRSRaw , retGeogCRS , }
		- PRED   = { }
		- SUCC   = { }

174 :	"compoundCRS"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { if , subCrs , extractGeodeticCRSRaw , retGeogCRS , }
		- PRED   = { }
		- SUCC   = { }

174 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { if , subCrs , extractGeodeticCRSRaw , retGeogCRS , }
		- PRED   = { }
		- SUCC   = { }

175 :	"retGeogCRS"
		- NEIGH  = { subCrs , extractGeodeticCRSRaw , retGeogCRS , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { retGeogCRS , if , }

175 :	"subCrs"
		- NEIGH  = { subCrs , extractGeodeticCRSRaw , retGeogCRS , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { retGeogCRS , if , }

175 :	"extractGeodeticCRSRaw"
		- NEIGH  = { subCrs , extractGeodeticCRSRaw , retGeogCRS , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { retGeogCRS , if , }

176 :	"if"
		- NEIGH  = { retGeogCRS , if , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { retGeogCRS , return , }
		- PRED   = { subCrs , extractGeodeticCRSRaw , retGeogCRS , }
		- SUCC   = { }

176 :	"retGeogCRS"
		- NEIGH  = { retGeogCRS , if , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { retGeogCRS , return , }
		- PRED   = { subCrs , extractGeodeticCRSRaw , retGeogCRS , }
		- SUCC   = { }

177 :	"return"
		- NEIGH  = { retGeogCRS , return , }
		- PARENT = { retGeogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

177 :	"retGeogCRS"
		- NEIGH  = { retGeogCRS , return , }
		- PARENT = { retGeogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

181 :	"boundCRS"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

181 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

181 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

181 :	"BoundCRS"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

181 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

181 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

181 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

182 :	"if"
		- NEIGH  = { boundCRS , if , }
		- PARENT = { }
		- CHILD  = { extractGeodeticCRSRaw , boundCRS , baseCRS , return , }
		- PRED   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- SUCC   = { return , }

182 :	"boundCRS"
		- NEIGH  = { boundCRS , if , }
		- PARENT = { }
		- CHILD  = { extractGeodeticCRSRaw , boundCRS , baseCRS , return , }
		- PRED   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- SUCC   = { return , }

183 :	"return"
		- NEIGH  = { extractGeodeticCRSRaw , boundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

183 :	"boundCRS"
		- NEIGH  = { extractGeodeticCRSRaw , boundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

183 :	"baseCRS"
		- NEIGH  = { extractGeodeticCRSRaw , boundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

183 :	"extractGeodeticCRSRaw"
		- NEIGH  = { extractGeodeticCRSRaw , boundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

185 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { }

192 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

192 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

192 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

192 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

192 :	"getExtensionProj4"
		- NEIGH  = { getExtensionProj4 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

193 :	"return"
		- NEIGH  = { extensionProj4_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

193 :	"d"
		- NEIGH  = { extensionProj4_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

193 :	"extensionProj4_"
		- NEIGH  = { extensionProj4_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

207 :	"GeographicCRSPtr"
		- NEIGH  = { GeographicCRSPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

207 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

207 :	"extractGeographicCRS"
		- NEIGH  = { extractGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

208 :	"raw"
		- NEIGH  = { extractGeodeticCRSRaw , raw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { raw , if , }

208 :	"extractGeodeticCRSRaw"
		- NEIGH  = { extractGeodeticCRSRaw , raw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { raw , if , }

209 :	"if"
		- NEIGH  = { raw , if , }
		- PARENT = { }
		- CHILD  = { raw , > , < , dynamic_pointer_cast , shared_from_this , GeographicCRS , as_nullable , std , return , }
		- PRED   = { extractGeodeticCRSRaw , raw , }
		- SUCC   = { return , }

209 :	"raw"
		- NEIGH  = { raw , if , }
		- PARENT = { }
		- CHILD  = { raw , > , < , dynamic_pointer_cast , shared_from_this , GeographicCRS , as_nullable , std , return , }
		- PRED   = { extractGeodeticCRSRaw , raw , }
		- SUCC   = { return , }

210 :	"return"
		- NEIGH  = { raw , > , < , dynamic_pointer_cast , shared_from_this , GeographicCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

210 :	"std"
		- NEIGH  = { raw , > , < , dynamic_pointer_cast , shared_from_this , GeographicCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

210 :	"dynamic_pointer_cast"
		- NEIGH  = { raw , > , < , dynamic_pointer_cast , shared_from_this , GeographicCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

210 :	"<"
		- NEIGH  = { raw , > , < , dynamic_pointer_cast , shared_from_this , GeographicCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

210 :	"GeographicCRS"
		- NEIGH  = { raw , > , < , dynamic_pointer_cast , shared_from_this , GeographicCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

210 :	">"
		- NEIGH  = { raw , > , < , dynamic_pointer_cast , shared_from_this , GeographicCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

211 :	"raw"
		- NEIGH  = { raw , > , < , dynamic_pointer_cast , shared_from_this , GeographicCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

211 :	"shared_from_this"
		- NEIGH  = { raw , > , < , dynamic_pointer_cast , shared_from_this , GeographicCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

211 :	"as_nullable"
		- NEIGH  = { raw , > , < , dynamic_pointer_cast , shared_from_this , GeographicCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

213 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { raw , if , }
		- SUCC   = { }

219 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

219 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

220 :	"createPropertyMap"
		- NEIGH  = { createPropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

220 :	"common"
		- NEIGH  = { common , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

220 :	"IdentifiedObject"
		- NEIGH  = { IdentifiedObject , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

220 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

220 :	"obj"
		- NEIGH  = { obj , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

221 :	"props"
		- NEIGH  = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isDeprecated , obj , if , }

221 :	"util"
		- NEIGH  = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isDeprecated , obj , if , }

221 :	"PropertyMap"
		- NEIGH  = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isDeprecated , obj , if , }

221 :	"set"
		- NEIGH  = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isDeprecated , obj , if , }

221 :	"common"
		- NEIGH  = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isDeprecated , obj , if , }

221 :	"IdentifiedObject"
		- NEIGH  = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isDeprecated , obj , if , }

221 :	"NAME_KEY"
		- NEIGH  = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isDeprecated , obj , if , }

222 :	"obj"
		- NEIGH  = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isDeprecated , obj , if , }

222 :	"nameStr"
		- NEIGH  = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isDeprecated , obj , if , }

223 :	"if"
		- NEIGH  = { isDeprecated , obj , if , }
		- PARENT = { }
		- CHILD  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PRED   = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- SUCC   = { props , return , }

223 :	"obj"
		- NEIGH  = { isDeprecated , obj , if , }
		- PARENT = { }
		- CHILD  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PRED   = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- SUCC   = { props , return , }

223 :	"isDeprecated"
		- NEIGH  = { isDeprecated , obj , if , }
		- PARENT = { }
		- CHILD  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PRED   = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- SUCC   = { props , return , }

224 :	"props"
		- NEIGH  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PARENT = { isDeprecated , obj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

224 :	"set"
		- NEIGH  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PARENT = { isDeprecated , obj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

224 :	"common"
		- NEIGH  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PARENT = { isDeprecated , obj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

224 :	"IdentifiedObject"
		- NEIGH  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PARENT = { isDeprecated , obj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

224 :	"DEPRECATED_KEY"
		- NEIGH  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PARENT = { isDeprecated , obj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

226 :	"return"
		- NEIGH  = { props , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isDeprecated , obj , if , }
		- SUCC   = { }

226 :	"props"
		- NEIGH  = { props , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isDeprecated , obj , if , }
		- SUCC   = { }

234 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

234 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

234 :	"alterGeodeticCRS"
		- NEIGH  = { alterGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

234 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

234 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

234 :	"newGeodCRS"
		- NEIGH  = { newGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

235 :	"geodCRS"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

235 :	"dynamic_cast"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

235 :	"<"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

235 :	"GeodeticCRS"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

235 :	"*"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

235 :	">"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

235 :	"this"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

236 :	"if"
		- NEIGH  = { geodCRS , if , }
		- PARENT = { }
		- CHILD  = { newGeodCRS , return , }
		- PRED   = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- SUCC   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }

236 :	"geodCRS"
		- NEIGH  = { geodCRS , if , }
		- PARENT = { }
		- CHILD  = { newGeodCRS , return , }
		- PRED   = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- SUCC   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }

237 :	"return"
		- NEIGH  = { newGeodCRS , return , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

237 :	"newGeodCRS"
		- NEIGH  = { newGeodCRS , return , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

240 :	"projCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

240 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

240 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

240 :	"ProjectedCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

240 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

240 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

240 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

241 :	"if"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { derivingConversion , projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }

241 :	"projCRS"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { derivingConversion , projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }

242 :	"return"
		- NEIGH  = { derivingConversion , projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

242 :	"ProjectedCRS"
		- NEIGH  = { derivingConversion , projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

242 :	"create"
		- NEIGH  = { derivingConversion , projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

242 :	"createPropertyMap"
		- NEIGH  = { derivingConversion , projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

242 :	"this"
		- NEIGH  = { derivingConversion , projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

242 :	"newGeodCRS"
		- NEIGH  = { derivingConversion , projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

243 :	"projCRS"
		- NEIGH  = { derivingConversion , projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

243 :	"derivingConversion"
		- NEIGH  = { derivingConversion , projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

244 :	"projCRS"
		- NEIGH  = { derivingConversion , projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

244 :	"coordinateSystem"
		- NEIGH  = { derivingConversion , projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

247 :	"compoundCRS"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

247 :	"dynamic_cast"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

247 :	"<"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

247 :	"CompoundCRS"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

247 :	"*"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

247 :	">"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

247 :	"this"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

248 :	"if"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { createPropertyMap , CompoundCRS , this , return , compoundCRS , componentReferenceSystems , subCrs , & , for , components , vector , > , create , CRSNNPtr , < , std , }
		- PRED   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- SUCC   = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

248 :	"compoundCRS"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { createPropertyMap , CompoundCRS , this , return , compoundCRS , componentReferenceSystems , subCrs , & , for , components , vector , > , create , CRSNNPtr , < , std , }
		- PRED   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- SUCC   = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

249 :	"std"
		- NEIGH  = { components , > , CRSNNPtr , < , vector , std , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }

249 :	"vector"
		- NEIGH  = { components , > , CRSNNPtr , < , vector , std , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }

249 :	"<"
		- NEIGH  = { components , > , CRSNNPtr , < , vector , std , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }

249 :	"CRSNNPtr"
		- NEIGH  = { components , > , CRSNNPtr , < , vector , std , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }

249 :	">"
		- NEIGH  = { components , > , CRSNNPtr , < , vector , std , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }

249 :	"components"
		- NEIGH  = { components , > , CRSNNPtr , < , vector , std , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }

250 :	"for"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { newGeodCRS , subCrs , emplace_back , alterGeodeticCRS , components , }
		- PRED   = { components , > , CRSNNPtr , < , vector , std , }
		- SUCC   = { this , components , create , CompoundCRS , createPropertyMap , return , }

250 :	"&"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { newGeodCRS , subCrs , emplace_back , alterGeodeticCRS , components , }
		- PRED   = { components , > , CRSNNPtr , < , vector , std , }
		- SUCC   = { this , components , create , CompoundCRS , createPropertyMap , return , }

250 :	"subCrs"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { newGeodCRS , subCrs , emplace_back , alterGeodeticCRS , components , }
		- PRED   = { components , > , CRSNNPtr , < , vector , std , }
		- SUCC   = { this , components , create , CompoundCRS , createPropertyMap , return , }

250 :	"compoundCRS"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { newGeodCRS , subCrs , emplace_back , alterGeodeticCRS , components , }
		- PRED   = { components , > , CRSNNPtr , < , vector , std , }
		- SUCC   = { this , components , create , CompoundCRS , createPropertyMap , return , }

250 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { newGeodCRS , subCrs , emplace_back , alterGeodeticCRS , components , }
		- PRED   = { components , > , CRSNNPtr , < , vector , std , }
		- SUCC   = { this , components , create , CompoundCRS , createPropertyMap , return , }

251 :	"components"
		- NEIGH  = { newGeodCRS , subCrs , emplace_back , alterGeodeticCRS , components , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

251 :	"emplace_back"
		- NEIGH  = { newGeodCRS , subCrs , emplace_back , alterGeodeticCRS , components , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

251 :	"subCrs"
		- NEIGH  = { newGeodCRS , subCrs , emplace_back , alterGeodeticCRS , components , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

251 :	"alterGeodeticCRS"
		- NEIGH  = { newGeodCRS , subCrs , emplace_back , alterGeodeticCRS , components , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

251 :	"newGeodCRS"
		- NEIGH  = { newGeodCRS , subCrs , emplace_back , alterGeodeticCRS , components , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

253 :	"return"
		- NEIGH  = { this , components , create , CompoundCRS , createPropertyMap , return , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- SUCC   = { }

253 :	"CompoundCRS"
		- NEIGH  = { this , components , create , CompoundCRS , createPropertyMap , return , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- SUCC   = { }

253 :	"create"
		- NEIGH  = { this , components , create , CompoundCRS , createPropertyMap , return , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- SUCC   = { }

253 :	"createPropertyMap"
		- NEIGH  = { this , components , create , CompoundCRS , createPropertyMap , return , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- SUCC   = { }

253 :	"this"
		- NEIGH  = { this , components , create , CompoundCRS , createPropertyMap , return , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- SUCC   = { }

253 :	"components"
		- NEIGH  = { this , components , create , CompoundCRS , createPropertyMap , return , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- SUCC   = { }

256 :	"return"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

256 :	"NN_NO_CHECK"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

257 :	"std"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

257 :	"dynamic_pointer_cast"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

257 :	"<"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

257 :	"CRS"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

257 :	">"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

257 :	"shared_from_this"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

257 :	"as_nullable"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

264 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

264 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

264 :	"alterCSLinearUnit"
		- NEIGH  = { alterCSLinearUnit , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

264 :	"common"
		- NEIGH  = { common , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

264 :	"UnitOfMeasure"
		- NEIGH  = { UnitOfMeasure , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

264 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

264 :	"unit"
		- NEIGH  = { unit , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

266 :	"projCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projCRS , if , }

266 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projCRS , if , }

266 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projCRS , if , }

266 :	"ProjectedCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projCRS , if , }

266 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projCRS , if , }

266 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projCRS , if , }

266 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projCRS , if , }

267 :	"if"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterUnit , derivingConversion , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }

267 :	"projCRS"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterUnit , derivingConversion , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }

268 :	"return"
		- NEIGH  = { unit , alterUnit , derivingConversion , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

268 :	"ProjectedCRS"
		- NEIGH  = { unit , alterUnit , derivingConversion , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

268 :	"create"
		- NEIGH  = { unit , alterUnit , derivingConversion , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

269 :	"createPropertyMap"
		- NEIGH  = { unit , alterUnit , derivingConversion , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

269 :	"this"
		- NEIGH  = { unit , alterUnit , derivingConversion , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

269 :	"projCRS"
		- NEIGH  = { unit , alterUnit , derivingConversion , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

269 :	"baseCRS"
		- NEIGH  = { unit , alterUnit , derivingConversion , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

270 :	"projCRS"
		- NEIGH  = { unit , alterUnit , derivingConversion , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

270 :	"derivingConversion"
		- NEIGH  = { unit , alterUnit , derivingConversion , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

271 :	"projCRS"
		- NEIGH  = { unit , alterUnit , derivingConversion , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

271 :	"coordinateSystem"
		- NEIGH  = { unit , alterUnit , derivingConversion , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

271 :	"alterUnit"
		- NEIGH  = { unit , alterUnit , derivingConversion , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

271 :	"unit"
		- NEIGH  = { unit , alterUnit , derivingConversion , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

276 :	"geodCRS"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { isGeocentric , && , geodCRS , if , }

276 :	"dynamic_cast"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { isGeocentric , && , geodCRS , if , }

276 :	"<"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { isGeocentric , && , geodCRS , if , }

276 :	"GeodeticCRS"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { isGeocentric , && , geodCRS , if , }

276 :	"*"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { isGeocentric , && , geodCRS , if , }

276 :	">"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { isGeocentric , && , geodCRS , if , }

276 :	"this"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { isGeocentric , && , geodCRS , if , }

277 :	"if"
		- NEIGH  = { isGeocentric , && , geodCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterUnit , datumEnsemble , createPropertyMap , create , get , this , return , datum , coordinateSystem , GeodeticCRS , geodCRS , > , assert , cs , < , dynamic_cast , * , CartesianCS , }
		- PRED   = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

277 :	"geodCRS"
		- NEIGH  = { isGeocentric , && , geodCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterUnit , datumEnsemble , createPropertyMap , create , get , this , return , datum , coordinateSystem , GeodeticCRS , geodCRS , > , assert , cs , < , dynamic_cast , * , CartesianCS , }
		- PRED   = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

277 :	"&&"
		- NEIGH  = { isGeocentric , && , geodCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterUnit , datumEnsemble , createPropertyMap , create , get , this , return , datum , coordinateSystem , GeodeticCRS , geodCRS , > , assert , cs , < , dynamic_cast , * , CartesianCS , }
		- PRED   = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

277 :	"geodCRS"
		- NEIGH  = { isGeocentric , && , geodCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterUnit , datumEnsemble , createPropertyMap , create , get , this , return , datum , coordinateSystem , GeodeticCRS , geodCRS , > , assert , cs , < , dynamic_cast , * , CartesianCS , }
		- PRED   = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

277 :	"isGeocentric"
		- NEIGH  = { isGeocentric , && , geodCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterUnit , datumEnsemble , createPropertyMap , create , get , this , return , datum , coordinateSystem , GeodeticCRS , geodCRS , > , assert , cs , < , dynamic_cast , * , CartesianCS , }
		- PRED   = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

278 :	"cs"
		- NEIGH  = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs , assert , }

278 :	"dynamic_cast"
		- NEIGH  = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs , assert , }

278 :	"<"
		- NEIGH  = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs , assert , }

278 :	"cs"
		- NEIGH  = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs , assert , }

278 :	"CartesianCS"
		- NEIGH  = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs , assert , }

278 :	"*"
		- NEIGH  = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs , assert , }

278 :	">"
		- NEIGH  = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs , assert , }

279 :	"geodCRS"
		- NEIGH  = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs , assert , }

279 :	"coordinateSystem"
		- NEIGH  = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs , assert , }

279 :	"get"
		- NEIGH  = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs , assert , }

280 :	"assert"
		- NEIGH  = { cs , assert , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- SUCC   = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }

280 :	"cs"
		- NEIGH  = { cs , assert , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- SUCC   = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }

281 :	"return"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

281 :	"GeodeticCRS"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

281 :	"create"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

282 :	"createPropertyMap"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

282 :	"this"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

282 :	"geodCRS"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

282 :	"datum"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

283 :	"geodCRS"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

283 :	"datumEnsemble"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

283 :	"cs"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

283 :	"alterUnit"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

283 :	"unit"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

288 :	"geogCRS"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isGeocentric , && , geodCRS , if , }
		- SUCC   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }

288 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isGeocentric , && , geodCRS , if , }
		- SUCC   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }

288 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isGeocentric , && , geodCRS , if , }
		- SUCC   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }

288 :	"GeographicCRS"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isGeocentric , && , geodCRS , if , }
		- SUCC   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }

288 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isGeocentric , && , geodCRS , if , }
		- SUCC   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }

288 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isGeocentric , && , geodCRS , if , }
		- SUCC   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }

288 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isGeocentric , && , geodCRS , if , }
		- SUCC   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }

289 :	"if"
		- NEIGH  = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }

289 :	"geogCRS"
		- NEIGH  = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }

289 :	"&&"
		- NEIGH  = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }

289 :	"geogCRS"
		- NEIGH  = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }

289 :	"coordinateSystem"
		- NEIGH  = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }

289 :	"axisList"
		- NEIGH  = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }

289 :	"size"
		- NEIGH  = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }

289 :	"=="
		- NEIGH  = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }

290 :	"return"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

290 :	"GeographicCRS"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

290 :	"create"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

291 :	"createPropertyMap"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

291 :	"this"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

291 :	"geogCRS"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

291 :	"datum"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

292 :	"geogCRS"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

292 :	"datumEnsemble"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

293 :	"geogCRS"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

293 :	"coordinateSystem"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

293 :	"alterLinearUnit"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

293 :	"unit"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

298 :	"vertCRS"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- SUCC   = { vertCRS , if , }

298 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- SUCC   = { vertCRS , if , }

298 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- SUCC   = { vertCRS , if , }

298 :	"VerticalCRS"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- SUCC   = { vertCRS , if , }

298 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- SUCC   = { vertCRS , if , }

298 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- SUCC   = { vertCRS , if , }

298 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- SUCC   = { vertCRS , if , }

299 :	"if"
		- NEIGH  = { vertCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- SUCC   = { > , this , dynamic_cast , * , engCRS , < , EngineeringCRS , }

299 :	"vertCRS"
		- NEIGH  = { vertCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- SUCC   = { > , this , dynamic_cast , * , engCRS , < , EngineeringCRS , }

300 :	"return"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

300 :	"VerticalCRS"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

300 :	"create"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

301 :	"createPropertyMap"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

301 :	"this"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

301 :	"vertCRS"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

301 :	"datum"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

302 :	"vertCRS"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

302 :	"datumEnsemble"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

303 :	"vertCRS"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

303 :	"coordinateSystem"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

303 :	"alterUnit"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

303 :	"unit"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

308 :	"engCRS"
		- NEIGH  = { > , this , dynamic_cast , * , engCRS , < , EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { engCRS , if , }

308 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , engCRS , < , EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { engCRS , if , }

308 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , engCRS , < , EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { engCRS , if , }

308 :	"EngineeringCRS"
		- NEIGH  = { > , this , dynamic_cast , * , engCRS , < , EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { engCRS , if , }

308 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , engCRS , < , EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { engCRS , if , }

308 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , engCRS , < , EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { engCRS , if , }

308 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , engCRS , < , EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { engCRS , if , }

309 :	"if"
		- NEIGH  = { engCRS , if , }
		- PARENT = { }
		- CHILD  = { if , coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- PRED   = { > , this , dynamic_cast , * , engCRS , < , EngineeringCRS , }
		- SUCC   = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

309 :	"engCRS"
		- NEIGH  = { engCRS , if , }
		- PARENT = { }
		- CHILD  = { if , coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- PRED   = { > , this , dynamic_cast , * , engCRS , < , EngineeringCRS , }
		- SUCC   = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

310 :	"cartCS"
		- NEIGH  = { coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- PARENT = { engCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cartCS , if , }

310 :	"util"
		- NEIGH  = { coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- PARENT = { engCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cartCS , if , }

310 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- PARENT = { engCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cartCS , if , }

310 :	"<"
		- NEIGH  = { coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- PARENT = { engCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cartCS , if , }

310 :	"cs"
		- NEIGH  = { coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- PARENT = { engCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cartCS , if , }

310 :	"CartesianCS"
		- NEIGH  = { coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- PARENT = { engCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cartCS , if , }

310 :	">"
		- NEIGH  = { coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- PARENT = { engCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cartCS , if , }

311 :	"engCRS"
		- NEIGH  = { coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- PARENT = { engCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cartCS , if , }

311 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- PARENT = { engCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cartCS , if , }

312 :	"if"
		- NEIGH  = { cartCS , if , }
		- PARENT = { engCRS , if , }
		- CHILD  = { if , > , nn_dynamic_pointer_cast , VerticalCS , cs , < , util , unit , alterUnit , create , vertCS , EngineeringCRS , cartCS , coordinateSystem , datum , engCRS , return , this , createPropertyMap , }
		- PRED   = { coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- SUCC   = { }

312 :	"cartCS"
		- NEIGH  = { cartCS , if , }
		- PARENT = { engCRS , if , }
		- CHILD  = { if , > , nn_dynamic_pointer_cast , VerticalCS , cs , < , util , unit , alterUnit , create , vertCS , EngineeringCRS , cartCS , coordinateSystem , datum , engCRS , return , this , createPropertyMap , }
		- PRED   = { coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- SUCC   = { }

313 :	"return"
		- NEIGH  = { unit , alterUnit , cartCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

313 :	"EngineeringCRS"
		- NEIGH  = { unit , alterUnit , cartCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

313 :	"create"
		- NEIGH  = { unit , alterUnit , cartCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

313 :	"createPropertyMap"
		- NEIGH  = { unit , alterUnit , cartCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

313 :	"this"
		- NEIGH  = { unit , alterUnit , cartCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

314 :	"engCRS"
		- NEIGH  = { unit , alterUnit , cartCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

314 :	"datum"
		- NEIGH  = { unit , alterUnit , cartCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

315 :	"cartCS"
		- NEIGH  = { unit , alterUnit , cartCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

315 :	"alterUnit"
		- NEIGH  = { unit , alterUnit , cartCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

315 :	"unit"
		- NEIGH  = { unit , alterUnit , cartCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

317 :	"vertCS"
		- NEIGH  = { coordinateSystem , > , VerticalCS , engCRS , < , util , cs , nn_dynamic_pointer_cast , vertCS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCS , if , }

317 :	"util"
		- NEIGH  = { coordinateSystem , > , VerticalCS , engCRS , < , util , cs , nn_dynamic_pointer_cast , vertCS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCS , if , }

317 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { coordinateSystem , > , VerticalCS , engCRS , < , util , cs , nn_dynamic_pointer_cast , vertCS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCS , if , }

317 :	"<"
		- NEIGH  = { coordinateSystem , > , VerticalCS , engCRS , < , util , cs , nn_dynamic_pointer_cast , vertCS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCS , if , }

317 :	"cs"
		- NEIGH  = { coordinateSystem , > , VerticalCS , engCRS , < , util , cs , nn_dynamic_pointer_cast , vertCS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCS , if , }

317 :	"VerticalCS"
		- NEIGH  = { coordinateSystem , > , VerticalCS , engCRS , < , util , cs , nn_dynamic_pointer_cast , vertCS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCS , if , }

317 :	">"
		- NEIGH  = { coordinateSystem , > , VerticalCS , engCRS , < , util , cs , nn_dynamic_pointer_cast , vertCS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCS , if , }

318 :	"engCRS"
		- NEIGH  = { coordinateSystem , > , VerticalCS , engCRS , < , util , cs , nn_dynamic_pointer_cast , vertCS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCS , if , }

318 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , > , VerticalCS , engCRS , < , util , cs , nn_dynamic_pointer_cast , vertCS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCS , if , }

319 :	"if"
		- NEIGH  = { vertCS , if , }
		- PARENT = { cartCS , if , }
		- CHILD  = { unit , alterUnit , vertCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PRED   = { coordinateSystem , > , VerticalCS , engCRS , < , util , cs , nn_dynamic_pointer_cast , vertCS , }
		- SUCC   = { }

319 :	"vertCS"
		- NEIGH  = { vertCS , if , }
		- PARENT = { cartCS , if , }
		- CHILD  = { unit , alterUnit , vertCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PRED   = { coordinateSystem , > , VerticalCS , engCRS , < , util , cs , nn_dynamic_pointer_cast , vertCS , }
		- SUCC   = { }

320 :	"return"
		- NEIGH  = { unit , alterUnit , vertCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { vertCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

320 :	"EngineeringCRS"
		- NEIGH  = { unit , alterUnit , vertCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { vertCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

320 :	"create"
		- NEIGH  = { unit , alterUnit , vertCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { vertCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

320 :	"createPropertyMap"
		- NEIGH  = { unit , alterUnit , vertCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { vertCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

320 :	"this"
		- NEIGH  = { unit , alterUnit , vertCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { vertCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

321 :	"engCRS"
		- NEIGH  = { unit , alterUnit , vertCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { vertCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

321 :	"datum"
		- NEIGH  = { unit , alterUnit , vertCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { vertCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

322 :	"vertCS"
		- NEIGH  = { unit , alterUnit , vertCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { vertCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

322 :	"alterUnit"
		- NEIGH  = { unit , alterUnit , vertCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { vertCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

322 :	"unit"
		- NEIGH  = { unit , alterUnit , vertCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { vertCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

328 :	"return"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { engCRS , if , }
		- SUCC   = { }

328 :	"NN_NO_CHECK"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { engCRS , if , }
		- SUCC   = { }

329 :	"std"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { engCRS , if , }
		- SUCC   = { }

329 :	"dynamic_pointer_cast"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { engCRS , if , }
		- SUCC   = { }

329 :	"<"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { engCRS , if , }
		- SUCC   = { }

329 :	"CRS"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { engCRS , if , }
		- SUCC   = { }

329 :	">"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { engCRS , if , }
		- SUCC   = { }

329 :	"shared_from_this"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { engCRS , if , }
		- SUCC   = { }

329 :	"as_nullable"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { engCRS , if , }
		- SUCC   = { }

342 :	"VerticalCRSPtr"
		- NEIGH  = { VerticalCRSPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

342 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

342 :	"extractVerticalCRS"
		- NEIGH  = { extractVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

343 :	"vertCRS"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCRS , if , }

343 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCRS , if , }

343 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCRS , if , }

343 :	"VerticalCRS"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCRS , if , }

343 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCRS , if , }

343 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCRS , if , }

343 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCRS , if , }

344 :	"if"
		- NEIGH  = { vertCRS , if , }
		- PARENT = { }
		- CHILD  = { shared_from_this , > , VerticalCRS , < , dynamic_pointer_cast , as_nullable , std , return , }
		- PRED   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- SUCC   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }

344 :	"vertCRS"
		- NEIGH  = { vertCRS , if , }
		- PARENT = { }
		- CHILD  = { shared_from_this , > , VerticalCRS , < , dynamic_pointer_cast , as_nullable , std , return , }
		- PRED   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- SUCC   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }

345 :	"return"
		- NEIGH  = { shared_from_this , > , VerticalCRS , < , dynamic_pointer_cast , as_nullable , std , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

345 :	"std"
		- NEIGH  = { shared_from_this , > , VerticalCRS , < , dynamic_pointer_cast , as_nullable , std , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

345 :	"dynamic_pointer_cast"
		- NEIGH  = { shared_from_this , > , VerticalCRS , < , dynamic_pointer_cast , as_nullable , std , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

345 :	"<"
		- NEIGH  = { shared_from_this , > , VerticalCRS , < , dynamic_pointer_cast , as_nullable , std , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

345 :	"VerticalCRS"
		- NEIGH  = { shared_from_this , > , VerticalCRS , < , dynamic_pointer_cast , as_nullable , std , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

345 :	">"
		- NEIGH  = { shared_from_this , > , VerticalCRS , < , dynamic_pointer_cast , as_nullable , std , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

346 :	"shared_from_this"
		- NEIGH  = { shared_from_this , > , VerticalCRS , < , dynamic_pointer_cast , as_nullable , std , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

346 :	"as_nullable"
		- NEIGH  = { shared_from_this , > , VerticalCRS , < , dynamic_pointer_cast , as_nullable , std , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

348 :	"compoundCRS"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { compoundCRS , if , }

348 :	"dynamic_cast"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { compoundCRS , if , }

348 :	"<"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { compoundCRS , if , }

348 :	"CompoundCRS"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { compoundCRS , if , }

348 :	"*"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { compoundCRS , if , }

348 :	">"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { compoundCRS , if , }

348 :	"this"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { compoundCRS , if , }

349 :	"if"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PRED   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- SUCC   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }

349 :	"compoundCRS"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PRED   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- SUCC   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }

350 :	"for"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { extractVerticalCRS , subCrs , if , retVertCRS , }
		- PRED   = { }
		- SUCC   = { }

350 :	"&"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { extractVerticalCRS , subCrs , if , retVertCRS , }
		- PRED   = { }
		- SUCC   = { }

350 :	"subCrs"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { extractVerticalCRS , subCrs , if , retVertCRS , }
		- PRED   = { }
		- SUCC   = { }

350 :	"compoundCRS"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { extractVerticalCRS , subCrs , if , retVertCRS , }
		- PRED   = { }
		- SUCC   = { }

350 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { extractVerticalCRS , subCrs , if , retVertCRS , }
		- PRED   = { }
		- SUCC   = { }

351 :	"retVertCRS"
		- NEIGH  = { extractVerticalCRS , subCrs , retVertCRS , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { retVertCRS , if , }

351 :	"subCrs"
		- NEIGH  = { extractVerticalCRS , subCrs , retVertCRS , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { retVertCRS , if , }

351 :	"extractVerticalCRS"
		- NEIGH  = { extractVerticalCRS , subCrs , retVertCRS , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { retVertCRS , if , }

352 :	"if"
		- NEIGH  = { retVertCRS , if , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { retVertCRS , return , }
		- PRED   = { extractVerticalCRS , subCrs , retVertCRS , }
		- SUCC   = { }

352 :	"retVertCRS"
		- NEIGH  = { retVertCRS , if , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { retVertCRS , return , }
		- PRED   = { extractVerticalCRS , subCrs , retVertCRS , }
		- SUCC   = { }

353 :	"return"
		- NEIGH  = { retVertCRS , return , }
		- PARENT = { retVertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

353 :	"retVertCRS"
		- NEIGH  = { retVertCRS , return , }
		- PARENT = { retVertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

357 :	"boundCRS"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

357 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

357 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

357 :	"BoundCRS"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

357 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

357 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

357 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

358 :	"if"
		- NEIGH  = { boundCRS , if , }
		- PARENT = { }
		- CHILD  = { extractVerticalCRS , boundCRS , baseCRS , return , }
		- PRED   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- SUCC   = { return , }

358 :	"boundCRS"
		- NEIGH  = { boundCRS , if , }
		- PARENT = { }
		- CHILD  = { extractVerticalCRS , boundCRS , baseCRS , return , }
		- PRED   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- SUCC   = { return , }

359 :	"return"
		- NEIGH  = { extractVerticalCRS , boundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

359 :	"boundCRS"
		- NEIGH  = { extractVerticalCRS , boundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

359 :	"baseCRS"
		- NEIGH  = { extractVerticalCRS , boundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

359 :	"extractVerticalCRS"
		- NEIGH  = { extractVerticalCRS , boundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

361 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { }

379 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

379 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

379 :	"createBoundCRSToWGS84IfPossible"
		- NEIGH  = { createBoundCRSToWGS84IfPossible , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

380 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

380 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

380 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

380 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

381 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

381 :	"CoordinateOperationContext"
		- NEIGH  = { CoordinateOperationContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

381 :	"IntermediateCRSUse"
		- NEIGH  = { IntermediateCRSUse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

382 :	"allowIntermediateCRSUse"
		- NEIGH  = { allowIntermediateCRSUse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

383 :	"thisAsCRS"
		- NEIGH  = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }

383 :	"NN_NO_CHECK"
		- NEIGH  = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }

384 :	"std"
		- NEIGH  = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }

384 :	"static_pointer_cast"
		- NEIGH  = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }

384 :	"<"
		- NEIGH  = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }

384 :	"CRS"
		- NEIGH  = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }

384 :	">"
		- NEIGH  = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }

384 :	"shared_from_this"
		- NEIGH  = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }

384 :	"as_nullable"
		- NEIGH  = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }

385 :	"boundCRS"
		- NEIGH  = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- SUCC   = { boundCRS , ! , if , }

385 :	"util"
		- NEIGH  = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- SUCC   = { boundCRS , ! , if , }

385 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- SUCC   = { boundCRS , ! , if , }

385 :	"<"
		- NEIGH  = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- SUCC   = { boundCRS , ! , if , }

385 :	"BoundCRS"
		- NEIGH  = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- SUCC   = { boundCRS , ! , if , }

385 :	">"
		- NEIGH  = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- SUCC   = { boundCRS , ! , if , }

385 :	"thisAsCRS"
		- NEIGH  = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- SUCC   = { boundCRS , ! , if , }

386 :	"if"
		- NEIGH  = { boundCRS , ! , if , }
		- PARENT = { }
		- CHILD  = { canonicalBoundCRS , boundCRS , }
		- PRED   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }
		- SUCC   = { boundCRS , if , }

386 :	"!"
		- NEIGH  = { boundCRS , ! , if , }
		- PARENT = { }
		- CHILD  = { canonicalBoundCRS , boundCRS , }
		- PRED   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }
		- SUCC   = { boundCRS , if , }

386 :	"boundCRS"
		- NEIGH  = { boundCRS , ! , if , }
		- PARENT = { }
		- CHILD  = { canonicalBoundCRS , boundCRS , }
		- PRED   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }
		- SUCC   = { boundCRS , if , }

387 :	"boundCRS"
		- NEIGH  = { canonicalBoundCRS , boundCRS , }
		- PARENT = { boundCRS , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

387 :	"canonicalBoundCRS"
		- NEIGH  = { canonicalBoundCRS , boundCRS , }
		- PARENT = { boundCRS , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

389 :	"if"
		- NEIGH  = { boundCRS , if , }
		- PARENT = { }
		- CHILD  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , dbContext , if , }
		- PRED   = { boundCRS , ! , if , }
		- SUCC   = { thisAsCRS , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , geodCRS , }

389 :	"boundCRS"
		- NEIGH  = { boundCRS , if , }
		- PARENT = { }
		- CHILD  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , dbContext , if , }
		- PRED   = { boundCRS , ! , if , }
		- SUCC   = { thisAsCRS , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , geodCRS , }

390 :	"if"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , dbContext , if , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { boundCRS , NN_NO_CHECK , return , }
		- PRED   = { }
		- SUCC   = { }

390 :	"boundCRS"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , dbContext , if , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { boundCRS , NN_NO_CHECK , return , }
		- PRED   = { }
		- SUCC   = { }

390 :	"hubCRS"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , dbContext , if , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { boundCRS , NN_NO_CHECK , return , }
		- PRED   = { }
		- SUCC   = { }

390 :	"_isEquivalentTo"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , dbContext , if , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { boundCRS , NN_NO_CHECK , return , }
		- PRED   = { }
		- SUCC   = { }

391 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , dbContext , if , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { boundCRS , NN_NO_CHECK , return , }
		- PRED   = { }
		- SUCC   = { }

391 :	"EPSG_4326"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , dbContext , if , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { boundCRS , NN_NO_CHECK , return , }
		- PRED   = { }
		- SUCC   = { }

391 :	"get"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , dbContext , if , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { boundCRS , NN_NO_CHECK , return , }
		- PRED   = { }
		- SUCC   = { }

392 :	"util"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , dbContext , if , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { boundCRS , NN_NO_CHECK , return , }
		- PRED   = { }
		- SUCC   = { }

392 :	"IComparable"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , dbContext , if , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { boundCRS , NN_NO_CHECK , return , }
		- PRED   = { }
		- SUCC   = { }

392 :	"Criterion"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , dbContext , if , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { boundCRS , NN_NO_CHECK , return , }
		- PRED   = { }
		- SUCC   = { }

392 :	"EQUIVALENT"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , dbContext , if , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { boundCRS , NN_NO_CHECK , return , }
		- PRED   = { }
		- SUCC   = { }

392 :	"dbContext"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , dbContext , if , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { boundCRS , NN_NO_CHECK , return , }
		- PRED   = { }
		- SUCC   = { }

393 :	"return"
		- NEIGH  = { boundCRS , NN_NO_CHECK , return , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

393 :	"NN_NO_CHECK"
		- NEIGH  = { boundCRS , NN_NO_CHECK , return , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

393 :	"boundCRS"
		- NEIGH  = { boundCRS , NN_NO_CHECK , return , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

397 :	"geodCRS"
		- NEIGH  = { thisAsCRS , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { extractGeographicCRS , geogCRS , }

397 :	"util"
		- NEIGH  = { thisAsCRS , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { extractGeographicCRS , geogCRS , }

397 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { thisAsCRS , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { extractGeographicCRS , geogCRS , }

397 :	"<"
		- NEIGH  = { thisAsCRS , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { extractGeographicCRS , geogCRS , }

397 :	"GeodeticCRS"
		- NEIGH  = { thisAsCRS , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { extractGeographicCRS , geogCRS , }

397 :	">"
		- NEIGH  = { thisAsCRS , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { extractGeographicCRS , geogCRS , }

397 :	"thisAsCRS"
		- NEIGH  = { thisAsCRS , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { extractGeographicCRS , geogCRS , }

398 :	"geogCRS"
		- NEIGH  = { extractGeographicCRS , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisAsCRS , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , geodCRS , }
		- SUCC   = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

398 :	"extractGeographicCRS"
		- NEIGH  = { extractGeographicCRS , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisAsCRS , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , geodCRS , }
		- SUCC   = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

399 :	"hubCRS"
		- NEIGH  = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , geogCRS , }
		- SUCC   = { geogCRS , ! , && , geodCRS , if , }

399 :	"util"
		- NEIGH  = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , geogCRS , }
		- SUCC   = { geogCRS , ! , && , geodCRS , if , }

399 :	"nn_static_pointer_cast"
		- NEIGH  = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , geogCRS , }
		- SUCC   = { geogCRS , ! , && , geodCRS , if , }

399 :	"<"
		- NEIGH  = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , geogCRS , }
		- SUCC   = { geogCRS , ! , && , geodCRS , if , }

399 :	"CRS"
		- NEIGH  = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , geogCRS , }
		- SUCC   = { geogCRS , ! , && , geodCRS , if , }

399 :	">"
		- NEIGH  = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , geogCRS , }
		- SUCC   = { geogCRS , ! , && , geodCRS , if , }

399 :	"GeographicCRS"
		- NEIGH  = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , geogCRS , }
		- SUCC   = { geogCRS , ! , && , geodCRS , if , }

399 :	"EPSG_4326"
		- NEIGH  = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , geogCRS , }
		- SUCC   = { geogCRS , ! , && , geodCRS , if , }

400 :	"if"
		- NEIGH  = { geogCRS , ! , && , geodCRS , if , }
		- PARENT = { }
		- CHILD  = { EPSG_4326 , || , > , geogCRS , CRS , nn_static_pointer_cast , hubCRS , if , dbContext , GeographicCRS , EQUIVALENT , EPSG_4978 , IComparable , Criterion , < , util , get , ! , GeodeticCRS , _isEquivalentTo , geodCRS , }
		- PRED   = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- SUCC   = { dbContext , ! , if , }

400 :	"geodCRS"
		- NEIGH  = { geogCRS , ! , && , geodCRS , if , }
		- PARENT = { }
		- CHILD  = { EPSG_4326 , || , > , geogCRS , CRS , nn_static_pointer_cast , hubCRS , if , dbContext , GeographicCRS , EQUIVALENT , EPSG_4978 , IComparable , Criterion , < , util , get , ! , GeodeticCRS , _isEquivalentTo , geodCRS , }
		- PRED   = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- SUCC   = { dbContext , ! , if , }

400 :	"&&"
		- NEIGH  = { geogCRS , ! , && , geodCRS , if , }
		- PARENT = { }
		- CHILD  = { EPSG_4326 , || , > , geogCRS , CRS , nn_static_pointer_cast , hubCRS , if , dbContext , GeographicCRS , EQUIVALENT , EPSG_4978 , IComparable , Criterion , < , util , get , ! , GeodeticCRS , _isEquivalentTo , geodCRS , }
		- PRED   = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- SUCC   = { dbContext , ! , if , }

400 :	"!"
		- NEIGH  = { geogCRS , ! , && , geodCRS , if , }
		- PARENT = { }
		- CHILD  = { EPSG_4326 , || , > , geogCRS , CRS , nn_static_pointer_cast , hubCRS , if , dbContext , GeographicCRS , EQUIVALENT , EPSG_4978 , IComparable , Criterion , < , util , get , ! , GeodeticCRS , _isEquivalentTo , geodCRS , }
		- PRED   = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- SUCC   = { dbContext , ! , if , }

400 :	"geogCRS"
		- NEIGH  = { geogCRS , ! , && , geodCRS , if , }
		- PARENT = { }
		- CHILD  = { EPSG_4326 , || , > , geogCRS , CRS , nn_static_pointer_cast , hubCRS , if , dbContext , GeographicCRS , EQUIVALENT , EPSG_4978 , IComparable , Criterion , < , util , get , ! , GeodeticCRS , _isEquivalentTo , geodCRS , }
		- PRED   = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- SUCC   = { dbContext , ! , if , }

401 :	"if"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

401 :	"geodCRS"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

401 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

401 :	"GeographicCRS"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

401 :	"EPSG_4978"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

401 :	"get"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

402 :	"util"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

402 :	"IComparable"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

402 :	"Criterion"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

402 :	"EQUIVALENT"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

403 :	"dbContext"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

404 :	"return"
		- NEIGH  = { thisAsCRS , return , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

404 :	"thisAsCRS"
		- NEIGH  = { thisAsCRS , return , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

406 :	"hubCRS"
		- NEIGH  = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- SUCC   = { }

406 :	"util"
		- NEIGH  = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- SUCC   = { }

406 :	"nn_static_pointer_cast"
		- NEIGH  = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- SUCC   = { }

406 :	"<"
		- NEIGH  = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- SUCC   = { }

406 :	"CRS"
		- NEIGH  = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- SUCC   = { }

406 :	">"
		- NEIGH  = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- SUCC   = { }

406 :	"GeodeticCRS"
		- NEIGH  = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- SUCC   = { }

406 :	"EPSG_4978"
		- NEIGH  = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- SUCC   = { }

407 :	"if"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

407 :	"!"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

407 :	"geogCRS"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

407 :	"||"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

408 :	"geogCRS"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

408 :	"_isEquivalentTo"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

409 :	"GeographicCRS"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

409 :	"EPSG_4326"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

409 :	"get"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

410 :	"util"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

410 :	"IComparable"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

410 :	"Criterion"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

410 :	"EQUIVALENT"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

410 :	"dbContext"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

411 :	"return"
		- NEIGH  = { thisAsCRS , return , }
		- PARENT = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

411 :	"thisAsCRS"
		- NEIGH  = { thisAsCRS , return , }
		- PARENT = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

413 :	"geodCRS"
		- NEIGH  = { geogCRS , geodCRS , }
		- PARENT = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

413 :	"geogCRS"
		- NEIGH  = { geogCRS , geodCRS , }
		- PARENT = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

416 :	"if"
		- NEIGH  = { dbContext , ! , if , }
		- PARENT = { }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { geogCRS , ! , && , geodCRS , if , }
		- SUCC   = { l_domains , domains , & , }

416 :	"!"
		- NEIGH  = { dbContext , ! , if , }
		- PARENT = { }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { geogCRS , ! , && , geodCRS , if , }
		- SUCC   = { l_domains , domains , & , }

416 :	"dbContext"
		- NEIGH  = { dbContext , ! , if , }
		- PARENT = { }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { geogCRS , ! , && , geodCRS , if , }
		- SUCC   = { l_domains , domains , & , }

417 :	"return"
		- NEIGH  = { thisAsCRS , return , }
		- PARENT = { dbContext , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

417 :	"thisAsCRS"
		- NEIGH  = { thisAsCRS , return , }
		- PARENT = { dbContext , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

420 :	"&"
		- NEIGH  = { l_domains , domains , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , ! , if , }
		- SUCC   = { extent , ExtentPtr , metadata , }

420 :	"l_domains"
		- NEIGH  = { l_domains , domains , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , ! , if , }
		- SUCC   = { extent , ExtentPtr , metadata , }

420 :	"domains"
		- NEIGH  = { l_domains , domains , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , ! , if , }
		- SUCC   = { extent , ExtentPtr , metadata , }

421 :	"metadata"
		- NEIGH  = { extent , ExtentPtr , metadata , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_domains , domains , & , }
		- SUCC   = { empty , ! , l_domains , if , }

421 :	"ExtentPtr"
		- NEIGH  = { extent , ExtentPtr , metadata , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_domains , domains , & , }
		- SUCC   = { empty , ! , l_domains , if , }

421 :	"extent"
		- NEIGH  = { extent , ExtentPtr , metadata , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_domains , domains , & , }
		- SUCC   = { empty , ! , l_domains , if , }

422 :	"if"
		- NEIGH  = { empty , ! , l_domains , if , }
		- PARENT = { }
		- CHILD  = { l_domains , domainOfValidity , extent , }
		- PRED   = { extent , ExtentPtr , metadata , }
		- SUCC   = { crs_authority , string , std , }

422 :	"!"
		- NEIGH  = { empty , ! , l_domains , if , }
		- PARENT = { }
		- CHILD  = { l_domains , domainOfValidity , extent , }
		- PRED   = { extent , ExtentPtr , metadata , }
		- SUCC   = { crs_authority , string , std , }

422 :	"l_domains"
		- NEIGH  = { empty , ! , l_domains , if , }
		- PARENT = { }
		- CHILD  = { l_domains , domainOfValidity , extent , }
		- PRED   = { extent , ExtentPtr , metadata , }
		- SUCC   = { crs_authority , string , std , }

422 :	"empty"
		- NEIGH  = { empty , ! , l_domains , if , }
		- PARENT = { }
		- CHILD  = { l_domains , domainOfValidity , extent , }
		- PRED   = { extent , ExtentPtr , metadata , }
		- SUCC   = { crs_authority , string , std , }

423 :	"extent"
		- NEIGH  = { l_domains , domainOfValidity , extent , }
		- PARENT = { empty , ! , l_domains , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

423 :	"l_domains"
		- NEIGH  = { l_domains , domainOfValidity , extent , }
		- PARENT = { empty , ! , l_domains , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

423 :	"domainOfValidity"
		- NEIGH  = { l_domains , domainOfValidity , extent , }
		- PARENT = { empty , ! , l_domains , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

426 :	"std"
		- NEIGH  = { crs_authority , string , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , l_domains , if , }
		- SUCC   = { identifiers , l_identifiers , & , }

426 :	"string"
		- NEIGH  = { crs_authority , string , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , l_domains , if , }
		- SUCC   = { identifiers , l_identifiers , & , }

426 :	"crs_authority"
		- NEIGH  = { crs_authority , string , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , l_domains , if , }
		- SUCC   = { identifiers , l_identifiers , & , }

427 :	"&"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { crs_authority , string , std , }
		- SUCC   = { empty , l_identifiers , ! , if , }

427 :	"l_identifiers"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { crs_authority , string , std , }
		- SUCC   = { empty , l_identifiers , ! , if , }

427 :	"identifiers"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { crs_authority , string , std , }
		- SUCC   = { empty , l_identifiers , ! , if , }

431 :	"if"
		- NEIGH  = { empty , l_identifiers , ! , if , }
		- PARENT = { }
		- CHILD  = { codeSpace , l_identifiers , * , crs_authority , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { crs_authority , getAllowedAuthorities , dbContext , authorities , }

431 :	"!"
		- NEIGH  = { empty , l_identifiers , ! , if , }
		- PARENT = { }
		- CHILD  = { codeSpace , l_identifiers , * , crs_authority , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { crs_authority , getAllowedAuthorities , dbContext , authorities , }

431 :	"l_identifiers"
		- NEIGH  = { empty , l_identifiers , ! , if , }
		- PARENT = { }
		- CHILD  = { codeSpace , l_identifiers , * , crs_authority , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { crs_authority , getAllowedAuthorities , dbContext , authorities , }

431 :	"empty"
		- NEIGH  = { empty , l_identifiers , ! , if , }
		- PARENT = { }
		- CHILD  = { codeSpace , l_identifiers , * , crs_authority , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { crs_authority , getAllowedAuthorities , dbContext , authorities , }

432 :	"crs_authority"
		- NEIGH  = { codeSpace , l_identifiers , * , crs_authority , }
		- PARENT = { empty , l_identifiers , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

432 :	"*"
		- NEIGH  = { codeSpace , l_identifiers , * , crs_authority , }
		- PARENT = { empty , l_identifiers , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

432 :	"l_identifiers"
		- NEIGH  = { codeSpace , l_identifiers , * , crs_authority , }
		- PARENT = { empty , l_identifiers , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

432 :	"codeSpace"
		- NEIGH  = { codeSpace , l_identifiers , * , crs_authority , }
		- PARENT = { empty , l_identifiers , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

435 :	"authorities"
		- NEIGH  = { crs_authority , getAllowedAuthorities , dbContext , authorities , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_identifiers , ! , if , }
		- SUCC   = { empty , authorities , if , }

435 :	"dbContext"
		- NEIGH  = { crs_authority , getAllowedAuthorities , dbContext , authorities , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_identifiers , ! , if , }
		- SUCC   = { empty , authorities , if , }

435 :	"getAllowedAuthorities"
		- NEIGH  = { crs_authority , getAllowedAuthorities , dbContext , authorities , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_identifiers , ! , if , }
		- SUCC   = { empty , authorities , if , }

435 :	"crs_authority"
		- NEIGH  = { crs_authority , getAllowedAuthorities , dbContext , authorities , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_identifiers , ! , if , }
		- SUCC   = { empty , authorities , if , }

436 :	"if"
		- NEIGH  = { empty , authorities , if , }
		- PARENT = { }
		- CHILD  = { emplace_back , authorities , }
		- PRED   = { crs_authority , getAllowedAuthorities , dbContext , authorities , }
		- SUCC   = { authorities , authority , & , for , }

436 :	"authorities"
		- NEIGH  = { empty , authorities , if , }
		- PARENT = { }
		- CHILD  = { emplace_back , authorities , }
		- PRED   = { crs_authority , getAllowedAuthorities , dbContext , authorities , }
		- SUCC   = { authorities , authority , & , for , }

436 :	"empty"
		- NEIGH  = { empty , authorities , if , }
		- PARENT = { }
		- CHILD  = { emplace_back , authorities , }
		- PRED   = { crs_authority , getAllowedAuthorities , dbContext , authorities , }
		- SUCC   = { authorities , authority , & , for , }

437 :	"authorities"
		- NEIGH  = { emplace_back , authorities , }
		- PARENT = { empty , authorities , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

437 :	"emplace_back"
		- NEIGH  = { emplace_back , authorities , }
		- PARENT = { empty , authorities , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

439 :	"for"
		- NEIGH  = { authorities , authority , & , for , }
		- PARENT = { }
		- CHILD  = { exception , catch , op , for , & , hubCRS , createOperations , CoordinateOperationFactory , extent , CoordinateOperationContext , list , string , authority , std , == , ctxt , operation , dbContext , NN_NO_CHECK , setAllowUseIntermediateCRS , create , authFactory , allowIntermediateCRSUse , io , geodCRS , AuthorityFactory , }
		- PRED   = { empty , authorities , if , }
		- SUCC   = { thisAsCRS , return , }

439 :	"&"
		- NEIGH  = { authorities , authority , & , for , }
		- PARENT = { }
		- CHILD  = { exception , catch , op , for , & , hubCRS , createOperations , CoordinateOperationFactory , extent , CoordinateOperationContext , list , string , authority , std , == , ctxt , operation , dbContext , NN_NO_CHECK , setAllowUseIntermediateCRS , create , authFactory , allowIntermediateCRSUse , io , geodCRS , AuthorityFactory , }
		- PRED   = { empty , authorities , if , }
		- SUCC   = { thisAsCRS , return , }

439 :	"authority"
		- NEIGH  = { authorities , authority , & , for , }
		- PARENT = { }
		- CHILD  = { exception , catch , op , for , & , hubCRS , createOperations , CoordinateOperationFactory , extent , CoordinateOperationContext , list , string , authority , std , == , ctxt , operation , dbContext , NN_NO_CHECK , setAllowUseIntermediateCRS , create , authFactory , allowIntermediateCRSUse , io , geodCRS , AuthorityFactory , }
		- PRED   = { empty , authorities , if , }
		- SUCC   = { thisAsCRS , return , }

439 :	"authorities"
		- NEIGH  = { authorities , authority , & , for , }
		- PARENT = { }
		- CHILD  = { exception , catch , op , for , & , hubCRS , createOperations , CoordinateOperationFactory , extent , CoordinateOperationContext , list , string , authority , std , == , ctxt , operation , dbContext , NN_NO_CHECK , setAllowUseIntermediateCRS , create , authFactory , allowIntermediateCRSUse , io , geodCRS , AuthorityFactory , }
		- PRED   = { empty , authorities , if , }
		- SUCC   = { thisAsCRS , return , }

442 :	"authFactory"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }

442 :	"io"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }

442 :	"AuthorityFactory"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }

442 :	"create"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }

443 :	"NN_NO_CHECK"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }

443 :	"dbContext"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }

444 :	"authority"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }

444 :	"=="
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }

444 :	"std"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }

444 :	"string"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }

444 :	"authority"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }

445 :	"ctxt"
		- NEIGH  = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }

445 :	"operation"
		- NEIGH  = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }

445 :	"CoordinateOperationContext"
		- NEIGH  = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }

445 :	"create"
		- NEIGH  = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }

446 :	"authFactory"
		- NEIGH  = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }

446 :	"extent"
		- NEIGH  = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }

447 :	"ctxt"
		- NEIGH  = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }
		- SUCC   = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }

447 :	"setAllowUseIntermediateCRS"
		- NEIGH  = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }
		- SUCC   = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }

447 :	"allowIntermediateCRSUse"
		- NEIGH  = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }
		- SUCC   = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }

450 :	"list"
		- NEIGH  = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- SUCC   = { list , op , & , for , }

451 :	"operation"
		- NEIGH  = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- SUCC   = { list , op , & , for , }

451 :	"CoordinateOperationFactory"
		- NEIGH  = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- SUCC   = { list , op , & , for , }

451 :	"create"
		- NEIGH  = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- SUCC   = { list , op , & , for , }

452 :	"createOperations"
		- NEIGH  = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- SUCC   = { list , op , & , for , }

452 :	"NN_NO_CHECK"
		- NEIGH  = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- SUCC   = { list , op , & , for , }

452 :	"geodCRS"
		- NEIGH  = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- SUCC   = { list , op , & , for , }

452 :	"hubCRS"
		- NEIGH  = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- SUCC   = { list , op , & , for , }

452 :	"ctxt"
		- NEIGH  = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- SUCC   = { list , op , & , for , }

453 :	"for"
		- NEIGH  = { list , op , & , for , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { starts_with , ! , operation , if , op , nn_dynamic_pointer_cast , Transformation , > , && , util , < , nameStr , transf , }
		- PRED   = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- SUCC   = { & , exception , std , catch , }

453 :	"&"
		- NEIGH  = { list , op , & , for , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { starts_with , ! , operation , if , op , nn_dynamic_pointer_cast , Transformation , > , && , util , < , nameStr , transf , }
		- PRED   = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- SUCC   = { & , exception , std , catch , }

453 :	"op"
		- NEIGH  = { list , op , & , for , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { starts_with , ! , operation , if , op , nn_dynamic_pointer_cast , Transformation , > , && , util , < , nameStr , transf , }
		- PRED   = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- SUCC   = { & , exception , std , catch , }

453 :	"list"
		- NEIGH  = { list , op , & , for , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { starts_with , ! , operation , if , op , nn_dynamic_pointer_cast , Transformation , > , && , util , < , nameStr , transf , }
		- PRED   = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- SUCC   = { & , exception , std , catch , }

454 :	"transf"
		- NEIGH  = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

455 :	"util"
		- NEIGH  = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

455 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

455 :	"<"
		- NEIGH  = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

455 :	"operation"
		- NEIGH  = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

455 :	"Transformation"
		- NEIGH  = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

455 :	">"
		- NEIGH  = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

456 :	"op"
		- NEIGH  = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

457 :	"if"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { if , operation , concatenated , & , hubCRS , thisAsCRS , create , > , dynamic_cast , < , exception , util , op , ConcatenatedOperation , return , std , BoundCRS , catch , CRS , * , NN_NO_CHECK , getTOWGS84Parameters , get , nn_static_pointer_cast , transf , }
		- PRED   = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

457 :	"transf"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { if , operation , concatenated , & , hubCRS , thisAsCRS , create , > , dynamic_cast , < , exception , util , op , ConcatenatedOperation , return , std , BoundCRS , catch , CRS , * , NN_NO_CHECK , getTOWGS84Parameters , get , nn_static_pointer_cast , transf , }
		- PRED   = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

457 :	"&&"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { if , operation , concatenated , & , hubCRS , thisAsCRS , create , > , dynamic_cast , < , exception , util , op , ConcatenatedOperation , return , std , BoundCRS , catch , CRS , * , NN_NO_CHECK , getTOWGS84Parameters , get , nn_static_pointer_cast , transf , }
		- PRED   = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

457 :	"!"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { if , operation , concatenated , & , hubCRS , thisAsCRS , create , > , dynamic_cast , < , exception , util , op , ConcatenatedOperation , return , std , BoundCRS , catch , CRS , * , NN_NO_CHECK , getTOWGS84Parameters , get , nn_static_pointer_cast , transf , }
		- PRED   = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

457 :	"starts_with"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { if , operation , concatenated , & , hubCRS , thisAsCRS , create , > , dynamic_cast , < , exception , util , op , ConcatenatedOperation , return , std , BoundCRS , catch , CRS , * , NN_NO_CHECK , getTOWGS84Parameters , get , nn_static_pointer_cast , transf , }
		- PRED   = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

457 :	"transf"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { if , operation , concatenated , & , hubCRS , thisAsCRS , create , > , dynamic_cast , < , exception , util , op , ConcatenatedOperation , return , std , BoundCRS , catch , CRS , * , NN_NO_CHECK , getTOWGS84Parameters , get , nn_static_pointer_cast , transf , }
		- PRED   = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

457 :	"nameStr"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { if , operation , concatenated , & , hubCRS , thisAsCRS , create , > , dynamic_cast , < , exception , util , op , ConcatenatedOperation , return , std , BoundCRS , catch , CRS , * , NN_NO_CHECK , getTOWGS84Parameters , get , nn_static_pointer_cast , transf , }
		- PRED   = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

459 :	"transf"
		- NEIGH  = { getTOWGS84Parameters , transf , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { & , exception , std , catch , }

459 :	"getTOWGS84Parameters"
		- NEIGH  = { getTOWGS84Parameters , transf , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { & , exception , std , catch , }

460 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { continue , }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }

460 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { continue , }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }

460 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { continue , }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }

460 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { continue , }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }

461 :	"continue"
		- NEIGH  = { continue , }
		- PARENT = { & , exception , std , catch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

463 :	"return"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

463 :	"util"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

463 :	"nn_static_pointer_cast"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

463 :	"<"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

463 :	"CRS"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

463 :	">"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

463 :	"BoundCRS"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

463 :	"create"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

464 :	"thisAsCRS"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

464 :	"hubCRS"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

464 :	"NN_NO_CHECK"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

464 :	"transf"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

466 :	"concatenated"
		- NEIGH  = { get , op , > , ConcatenatedOperation , operation , < , * , dynamic_cast , concatenated , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { concatenated , if , }

467 :	"dynamic_cast"
		- NEIGH  = { get , op , > , ConcatenatedOperation , operation , < , * , dynamic_cast , concatenated , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { concatenated , if , }

467 :	"<"
		- NEIGH  = { get , op , > , ConcatenatedOperation , operation , < , * , dynamic_cast , concatenated , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { concatenated , if , }

467 :	"operation"
		- NEIGH  = { get , op , > , ConcatenatedOperation , operation , < , * , dynamic_cast , concatenated , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { concatenated , if , }

467 :	"ConcatenatedOperation"
		- NEIGH  = { get , op , > , ConcatenatedOperation , operation , < , * , dynamic_cast , concatenated , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { concatenated , if , }

467 :	"*"
		- NEIGH  = { get , op , > , ConcatenatedOperation , operation , < , * , dynamic_cast , concatenated , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { concatenated , if , }

467 :	">"
		- NEIGH  = { get , op , > , ConcatenatedOperation , operation , < , * , dynamic_cast , concatenated , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { concatenated , if , }

468 :	"op"
		- NEIGH  = { get , op , > , ConcatenatedOperation , operation , < , * , dynamic_cast , concatenated , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { concatenated , if , }

468 :	"get"
		- NEIGH  = { get , op , > , ConcatenatedOperation , operation , < , * , dynamic_cast , concatenated , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { concatenated , if , }

469 :	"if"
		- NEIGH  = { concatenated , if , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { size , if , operations , == , subops , concatenated , & , }
		- PRED   = { get , op , > , ConcatenatedOperation , operation , < , * , dynamic_cast , concatenated , }
		- SUCC   = { }

469 :	"concatenated"
		- NEIGH  = { concatenated , if , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { size , if , operations , == , subops , concatenated , & , }
		- PRED   = { get , op , > , ConcatenatedOperation , operation , < , * , dynamic_cast , concatenated , }
		- SUCC   = { }

473 :	"&"
		- NEIGH  = { operations , subops , concatenated , & , }
		- PARENT = { concatenated , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , subops , if , }

473 :	"subops"
		- NEIGH  = { operations , subops , concatenated , & , }
		- PARENT = { concatenated , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , subops , if , }

473 :	"concatenated"
		- NEIGH  = { operations , subops , concatenated , & , }
		- PARENT = { concatenated , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , subops , if , }

473 :	"operations"
		- NEIGH  = { operations , subops , concatenated , & , }
		- PARENT = { concatenated , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , subops , if , }

474 :	"if"
		- NEIGH  = { == , size , subops , if , }
		- PARENT = { concatenated , if , }
		- CHILD  = { thisAsCRS , DerivedCRS , || , isLongitudeRotation , firstOpIsConversion , get , * , subops , && , > , if , operation , Conversion , Transformation , < , dynamic_cast , firstOpIsTransformation , }
		- PRED   = { operations , subops , concatenated , & , }
		- SUCC   = { }

474 :	"subops"
		- NEIGH  = { == , size , subops , if , }
		- PARENT = { concatenated , if , }
		- CHILD  = { thisAsCRS , DerivedCRS , || , isLongitudeRotation , firstOpIsConversion , get , * , subops , && , > , if , operation , Conversion , Transformation , < , dynamic_cast , firstOpIsTransformation , }
		- PRED   = { operations , subops , concatenated , & , }
		- SUCC   = { }

474 :	"size"
		- NEIGH  = { == , size , subops , if , }
		- PARENT = { concatenated , if , }
		- CHILD  = { thisAsCRS , DerivedCRS , || , isLongitudeRotation , firstOpIsConversion , get , * , subops , && , > , if , operation , Conversion , Transformation , < , dynamic_cast , firstOpIsTransformation , }
		- PRED   = { operations , subops , concatenated , & , }
		- SUCC   = { }

474 :	"=="
		- NEIGH  = { == , size , subops , if , }
		- PARENT = { concatenated , if , }
		- CHILD  = { thisAsCRS , DerivedCRS , || , isLongitudeRotation , firstOpIsConversion , get , * , subops , && , > , if , operation , Conversion , Transformation , < , dynamic_cast , firstOpIsTransformation , }
		- PRED   = { operations , subops , concatenated , & , }
		- SUCC   = { }

475 :	"firstOpIsTransformation"
		- NEIGH  = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }

476 :	"dynamic_cast"
		- NEIGH  = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }

476 :	"<"
		- NEIGH  = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }

476 :	"operation"
		- NEIGH  = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }

476 :	"Transformation"
		- NEIGH  = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }

476 :	"*"
		- NEIGH  = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }

476 :	">"
		- NEIGH  = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }

477 :	"subops"
		- NEIGH  = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }

477 :	"get"
		- NEIGH  = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }

478 :	"firstOpIsConversion"
		- NEIGH  = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- SUCC   = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }

479 :	"dynamic_cast"
		- NEIGH  = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- SUCC   = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }

479 :	"<"
		- NEIGH  = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- SUCC   = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }

479 :	"operation"
		- NEIGH  = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- SUCC   = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }

479 :	"Conversion"
		- NEIGH  = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- SUCC   = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }

479 :	"*"
		- NEIGH  = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- SUCC   = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }

479 :	">"
		- NEIGH  = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- SUCC   = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }

480 :	"subops"
		- NEIGH  = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- SUCC   = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }

480 :	"get"
		- NEIGH  = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- SUCC   = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }

481 :	"if"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

481 :	"firstOpIsTransformation"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

481 :	"&&"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

482 :	"firstOpIsTransformation"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

483 :	"isLongitudeRotation"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

483 :	"||"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

484 :	"dynamic_cast"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

484 :	"<"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

484 :	"DerivedCRS"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

484 :	"*"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

484 :	">"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

484 :	"thisAsCRS"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

484 :	"get"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

484 :	"&&"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

485 :	"firstOpIsConversion"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

486 :	"transf"
		- NEIGH  = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

486 :	"util"
		- NEIGH  = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

486 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

486 :	"<"
		- NEIGH  = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

487 :	"operation"
		- NEIGH  = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

487 :	"Transformation"
		- NEIGH  = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

487 :	">"
		- NEIGH  = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

487 :	"subops"
		- NEIGH  = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

488 :	"if"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { hubCRS , thisAsCRS , create , > , < , util , & , exception , return , std , BoundCRS , catch , CRS , NN_NO_CHECK , getTOWGS84Parameters , nn_static_pointer_cast , transf , }
		- PRED   = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

488 :	"transf"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { hubCRS , thisAsCRS , create , > , < , util , & , exception , return , std , BoundCRS , catch , CRS , NN_NO_CHECK , getTOWGS84Parameters , nn_static_pointer_cast , transf , }
		- PRED   = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

488 :	"&&"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { hubCRS , thisAsCRS , create , > , < , util , & , exception , return , std , BoundCRS , catch , CRS , NN_NO_CHECK , getTOWGS84Parameters , nn_static_pointer_cast , transf , }
		- PRED   = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

489 :	"!"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { hubCRS , thisAsCRS , create , > , < , util , & , exception , return , std , BoundCRS , catch , CRS , NN_NO_CHECK , getTOWGS84Parameters , nn_static_pointer_cast , transf , }
		- PRED   = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

489 :	"starts_with"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { hubCRS , thisAsCRS , create , > , < , util , & , exception , return , std , BoundCRS , catch , CRS , NN_NO_CHECK , getTOWGS84Parameters , nn_static_pointer_cast , transf , }
		- PRED   = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

489 :	"transf"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { hubCRS , thisAsCRS , create , > , < , util , & , exception , return , std , BoundCRS , catch , CRS , NN_NO_CHECK , getTOWGS84Parameters , nn_static_pointer_cast , transf , }
		- PRED   = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

489 :	"nameStr"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { hubCRS , thisAsCRS , create , > , < , util , & , exception , return , std , BoundCRS , catch , CRS , NN_NO_CHECK , getTOWGS84Parameters , nn_static_pointer_cast , transf , }
		- PRED   = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

492 :	"transf"
		- NEIGH  = { getTOWGS84Parameters , transf , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { & , exception , std , catch , }

492 :	"getTOWGS84Parameters"
		- NEIGH  = { getTOWGS84Parameters , transf , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { & , exception , std , catch , }

493 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { continue , }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }

493 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { continue , }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }

493 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { continue , }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }

493 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { continue , }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }

494 :	"continue"
		- NEIGH  = { continue , }
		- PARENT = { & , exception , std , catch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

496 :	"return"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

496 :	"util"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

496 :	"nn_static_pointer_cast"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

496 :	"<"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

496 :	"CRS"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

496 :	">"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

497 :	"BoundCRS"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

497 :	"create"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

497 :	"thisAsCRS"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

497 :	"hubCRS"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

498 :	"NN_NO_CHECK"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

498 :	"transf"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

505 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { list , op , & , for , }
		- SUCC   = { }

505 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { list , op , & , for , }
		- SUCC   = { }

505 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { list , op , & , for , }
		- SUCC   = { }

505 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { list , op , & , for , }
		- SUCC   = { }

508 :	"return"
		- NEIGH  = { thisAsCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorities , authority , & , for , }
		- SUCC   = { }

508 :	"thisAsCRS"
		- NEIGH  = { thisAsCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorities , authority , & , for , }
		- SUCC   = { }

518 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

518 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

518 :	"stripVerticalComponent"
		- NEIGH  = { stripVerticalComponent , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

519 :	"self"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

519 :	"NN_NO_CHECK"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

520 :	"std"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

520 :	"dynamic_pointer_cast"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

520 :	"<"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

520 :	"CRS"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

520 :	">"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

520 :	"shared_from_this"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

520 :	"as_nullable"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

522 :	"geogCRS"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { geogCRS , if , }

522 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { geogCRS , if , }

522 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { geogCRS , if , }

522 :	"GeographicCRS"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { geogCRS , if , }

522 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { geogCRS , if , }

522 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { geogCRS , if , }

522 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { geogCRS , if , }

523 :	"if"
		- NEIGH  = { geogCRS , if , }
		- PARENT = { }
		- CHILD  = { == , if , coordinateSystem , geogCRS , size , axisList , & , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }

523 :	"geogCRS"
		- NEIGH  = { geogCRS , if , }
		- PARENT = { }
		- CHILD  = { == , if , coordinateSystem , geogCRS , size , axisList , & , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }

524 :	"&"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

524 :	"axisList"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

524 :	"geogCRS"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

524 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

524 :	"axisList"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

525 :	"if"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { datum , NAME_KEY , common , set , geogCRS , CRS , cs , util , < , > , nameStr , nn_static_pointer_cast , return , axisList , datumEnsemble , IdentifiedObject , EllipsoidalCS , PropertyMap , GeographicCRS , create , }
		- PRED   = { coordinateSystem , geogCRS , axisList , & , }
		- SUCC   = { }

525 :	"axisList"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { datum , NAME_KEY , common , set , geogCRS , CRS , cs , util , < , > , nameStr , nn_static_pointer_cast , return , axisList , datumEnsemble , IdentifiedObject , EllipsoidalCS , PropertyMap , GeographicCRS , create , }
		- PRED   = { coordinateSystem , geogCRS , axisList , & , }
		- SUCC   = { }

525 :	"size"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { datum , NAME_KEY , common , set , geogCRS , CRS , cs , util , < , > , nameStr , nn_static_pointer_cast , return , axisList , datumEnsemble , IdentifiedObject , EllipsoidalCS , PropertyMap , GeographicCRS , create , }
		- PRED   = { coordinateSystem , geogCRS , axisList , & , }
		- SUCC   = { }

525 :	"=="
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { datum , NAME_KEY , common , set , geogCRS , CRS , cs , util , < , > , nameStr , nn_static_pointer_cast , return , axisList , datumEnsemble , IdentifiedObject , EllipsoidalCS , PropertyMap , GeographicCRS , create , }
		- PRED   = { coordinateSystem , geogCRS , axisList , & , }
		- SUCC   = { }

526 :	"cs"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }

526 :	"cs"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }

526 :	"EllipsoidalCS"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }

526 :	"create"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }

526 :	"util"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }

526 :	"PropertyMap"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }

527 :	"axisList"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }

527 :	"axisList"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }

528 :	"return"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

528 :	"util"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

528 :	"nn_static_pointer_cast"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

528 :	"<"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

528 :	"CRS"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

528 :	">"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

528 :	"GeographicCRS"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

528 :	"create"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

529 :	"util"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

529 :	"PropertyMap"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

529 :	"set"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

529 :	"common"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

529 :	"IdentifiedObject"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

529 :	"NAME_KEY"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

530 :	"nameStr"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

531 :	"geogCRS"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

531 :	"datum"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

531 :	"geogCRS"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

531 :	"datumEnsemble"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

531 :	"cs"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

534 :	"projCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

534 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

534 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

534 :	"ProjectedCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

534 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

534 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

534 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

535 :	"if"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { == , if , coordinateSystem , size , axisList , projCRS , & , }
		- PRED   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { self , return , }

535 :	"projCRS"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { == , if , coordinateSystem , size , axisList , projCRS , & , }
		- PRED   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { self , return , }

536 :	"&"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

536 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

536 :	"projCRS"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

536 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

536 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

537 :	"if"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { projCRS , if , }
		- CHILD  = { derivingConversion , baseCRS , NAME_KEY , common , set , CRS , projCRS , cs , util , < , return , axisList , create , IdentifiedObject , PropertyMap , ProjectedCRS , > , nameStr , nn_static_pointer_cast , CartesianCS , }
		- PRED   = { coordinateSystem , axisList , projCRS , & , }
		- SUCC   = { }

537 :	"axisList"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { projCRS , if , }
		- CHILD  = { derivingConversion , baseCRS , NAME_KEY , common , set , CRS , projCRS , cs , util , < , return , axisList , create , IdentifiedObject , PropertyMap , ProjectedCRS , > , nameStr , nn_static_pointer_cast , CartesianCS , }
		- PRED   = { coordinateSystem , axisList , projCRS , & , }
		- SUCC   = { }

537 :	"size"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { projCRS , if , }
		- CHILD  = { derivingConversion , baseCRS , NAME_KEY , common , set , CRS , projCRS , cs , util , < , return , axisList , create , IdentifiedObject , PropertyMap , ProjectedCRS , > , nameStr , nn_static_pointer_cast , CartesianCS , }
		- PRED   = { coordinateSystem , axisList , projCRS , & , }
		- SUCC   = { }

537 :	"=="
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { projCRS , if , }
		- CHILD  = { derivingConversion , baseCRS , NAME_KEY , common , set , CRS , projCRS , cs , util , < , return , axisList , create , IdentifiedObject , PropertyMap , ProjectedCRS , > , nameStr , nn_static_pointer_cast , CartesianCS , }
		- PRED   = { coordinateSystem , axisList , projCRS , & , }
		- SUCC   = { }

538 :	"cs"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }

538 :	"cs"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }

538 :	"CartesianCS"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }

538 :	"create"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }

538 :	"util"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }

538 :	"PropertyMap"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }

538 :	"axisList"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }

539 :	"axisList"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }

540 :	"return"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

540 :	"util"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

540 :	"nn_static_pointer_cast"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

540 :	"<"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

540 :	"CRS"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

540 :	">"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

540 :	"ProjectedCRS"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

540 :	"create"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

541 :	"util"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

541 :	"PropertyMap"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

541 :	"set"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

541 :	"common"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

541 :	"IdentifiedObject"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

541 :	"NAME_KEY"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

542 :	"nameStr"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

543 :	"projCRS"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

543 :	"baseCRS"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

543 :	"projCRS"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

543 :	"derivingConversion"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

543 :	"cs"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

546 :	"return"
		- NEIGH  = { self , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

546 :	"self"
		- NEIGH  = { self , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

554 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

554 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

554 :	"shallowClone"
		- NEIGH  = { shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

554 :	"return"
		- NEIGH  = { _shallowClone , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

554 :	"_shallowClone"
		- NEIGH  = { _shallowClone , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

562 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

562 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

562 :	"alterName"
		- NEIGH  = { alterName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

562 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

562 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

562 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

562 :	"newName"
		- NEIGH  = { newName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

563 :	"crs"
		- NEIGH  = { shallowClone , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { newName , newNameMod , }

563 :	"shallowClone"
		- NEIGH  = { shallowClone , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { newName , newNameMod , }

564 :	"newNameMod"
		- NEIGH  = { newName , newNameMod , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shallowClone , crs , }
		- SUCC   = { PropertyMap , util , props , }

564 :	"newName"
		- NEIGH  = { newName , newNameMod , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shallowClone , crs , }
		- SUCC   = { PropertyMap , util , props , }

565 :	"props"
		- NEIGH  = { PropertyMap , util , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { newName , newNameMod , }
		- SUCC   = { newNameMod , ends_with , if , }

565 :	"util"
		- NEIGH  = { PropertyMap , util , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { newName , newNameMod , }
		- SUCC   = { newNameMod , ends_with , if , }

565 :	"PropertyMap"
		- NEIGH  = { PropertyMap , util , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { newName , newNameMod , }
		- SUCC   = { newNameMod , ends_with , if , }

566 :	"if"
		- NEIGH  = { newNameMod , ends_with , if , }
		- PARENT = { }
		- CHILD  = { IdentifiedObject , common , props , - , resize , size , DEPRECATED_KEY , strlen , set , newNameMod , }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }

566 :	"ends_with"
		- NEIGH  = { newNameMod , ends_with , if , }
		- PARENT = { }
		- CHILD  = { IdentifiedObject , common , props , - , resize , size , DEPRECATED_KEY , strlen , set , newNameMod , }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }

566 :	"newNameMod"
		- NEIGH  = { newNameMod , ends_with , if , }
		- PARENT = { }
		- CHILD  = { IdentifiedObject , common , props , - , resize , size , DEPRECATED_KEY , strlen , set , newNameMod , }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }

567 :	"newNameMod"
		- NEIGH  = { - , size , strlen , resize , newNameMod , }
		- PARENT = { newNameMod , ends_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }

567 :	"resize"
		- NEIGH  = { - , size , strlen , resize , newNameMod , }
		- PARENT = { newNameMod , ends_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }

567 :	"newNameMod"
		- NEIGH  = { - , size , strlen , resize , newNameMod , }
		- PARENT = { newNameMod , ends_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }

567 :	"size"
		- NEIGH  = { - , size , strlen , resize , newNameMod , }
		- PARENT = { newNameMod , ends_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }

567 :	"-"
		- NEIGH  = { - , size , strlen , resize , newNameMod , }
		- PARENT = { newNameMod , ends_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }

567 :	"strlen"
		- NEIGH  = { - , size , strlen , resize , newNameMod , }
		- PARENT = { newNameMod , ends_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }

568 :	"props"
		- NEIGH  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PARENT = { newNameMod , ends_with , if , }
		- CHILD  = { }
		- PRED   = { - , size , strlen , resize , newNameMod , }
		- SUCC   = { }

568 :	"set"
		- NEIGH  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PARENT = { newNameMod , ends_with , if , }
		- CHILD  = { }
		- PRED   = { - , size , strlen , resize , newNameMod , }
		- SUCC   = { }

568 :	"common"
		- NEIGH  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PARENT = { newNameMod , ends_with , if , }
		- CHILD  = { }
		- PRED   = { - , size , strlen , resize , newNameMod , }
		- SUCC   = { }

568 :	"IdentifiedObject"
		- NEIGH  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PARENT = { newNameMod , ends_with , if , }
		- CHILD  = { }
		- PRED   = { - , size , strlen , resize , newNameMod , }
		- SUCC   = { }

568 :	"DEPRECATED_KEY"
		- NEIGH  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PARENT = { newNameMod , ends_with , if , }
		- CHILD  = { }
		- PRED   = { - , size , strlen , resize , newNameMod , }
		- SUCC   = { }

570 :	"props"
		- NEIGH  = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { newNameMod , ends_with , if , }
		- SUCC   = { props , setProperties , crs , }

570 :	"set"
		- NEIGH  = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { newNameMod , ends_with , if , }
		- SUCC   = { props , setProperties , crs , }

570 :	"common"
		- NEIGH  = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { newNameMod , ends_with , if , }
		- SUCC   = { props , setProperties , crs , }

570 :	"IdentifiedObject"
		- NEIGH  = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { newNameMod , ends_with , if , }
		- SUCC   = { props , setProperties , crs , }

570 :	"NAME_KEY"
		- NEIGH  = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { newNameMod , ends_with , if , }
		- SUCC   = { props , setProperties , crs , }

570 :	"newNameMod"
		- NEIGH  = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { newNameMod , ends_with , if , }
		- SUCC   = { props , setProperties , crs , }

571 :	"crs"
		- NEIGH  = { props , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }
		- SUCC   = { crs , return , }

571 :	"setProperties"
		- NEIGH  = { props , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }
		- SUCC   = { crs , return , }

571 :	"props"
		- NEIGH  = { props , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }
		- SUCC   = { crs , return , }

572 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { props , setProperties , crs , }
		- SUCC   = { }

572 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { props , setProperties , crs , }
		- SUCC   = { }

581 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

581 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

581 :	"alterId"
		- NEIGH  = { alterId , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

581 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

581 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

581 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

581 :	"authName"
		- NEIGH  = { authName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

582 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

582 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

582 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

582 :	"code"
		- NEIGH  = { code , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

583 :	"crs"
		- NEIGH  = { shallowClone , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PropertyMap , util , props , }

583 :	"shallowClone"
		- NEIGH  = { shallowClone , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PropertyMap , util , props , }

584 :	"props"
		- NEIGH  = { PropertyMap , util , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shallowClone , crs , }
		- SUCC   = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }

584 :	"util"
		- NEIGH  = { PropertyMap , util , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shallowClone , crs , }
		- SUCC   = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }

584 :	"PropertyMap"
		- NEIGH  = { PropertyMap , util , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shallowClone , crs , }
		- SUCC   = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }

585 :	"props"
		- NEIGH  = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , setProperties , crs , }

585 :	"set"
		- NEIGH  = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , setProperties , crs , }

585 :	"metadata"
		- NEIGH  = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , setProperties , crs , }

585 :	"Identifier"
		- NEIGH  = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , setProperties , crs , }

585 :	"CODESPACE_KEY"
		- NEIGH  = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , setProperties , crs , }

585 :	"authName"
		- NEIGH  = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , setProperties , crs , }

586 :	"set"
		- NEIGH  = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , setProperties , crs , }

586 :	"metadata"
		- NEIGH  = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , setProperties , crs , }

586 :	"Identifier"
		- NEIGH  = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , setProperties , crs , }

586 :	"CODE_KEY"
		- NEIGH  = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , setProperties , crs , }

586 :	"code"
		- NEIGH  = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , setProperties , crs , }

587 :	"crs"
		- NEIGH  = { props , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- SUCC   = { crs , return , }

587 :	"setProperties"
		- NEIGH  = { props , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- SUCC   = { crs , return , }

587 :	"props"
		- NEIGH  = { props , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- SUCC   = { crs , return , }

588 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { props , setProperties , crs , }
		- SUCC   = { }

588 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { props , setProperties , crs , }
		- SUCC   = { }

597 :	"mustAxisOrderBeSwitchedForVisualizationInternal"
		- NEIGH  = { mustAxisOrderBeSwitchedForVisualizationInternal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

598 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

598 :	"vector"
		- NEIGH  = { vector , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

598 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

598 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

598 :	"CoordinateSystemAxisNNPtr"
		- NEIGH  = { CoordinateSystemAxisNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

598 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

598 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

598 :	"axisList"
		- NEIGH  = { axisList , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

599 :	"&"
		- NEIGH  = { axisList , dir0 , direction , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , dir1 , direction , & , }

599 :	"dir0"
		- NEIGH  = { axisList , dir0 , direction , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , dir1 , direction , & , }

599 :	"axisList"
		- NEIGH  = { axisList , dir0 , direction , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , dir1 , direction , & , }

599 :	"direction"
		- NEIGH  = { axisList , dir0 , direction , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , dir1 , direction , & , }

600 :	"&"
		- NEIGH  = { axisList , dir1 , direction , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , dir0 , direction , & , }
		- SUCC   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

600 :	"dir1"
		- NEIGH  = { axisList , dir1 , direction , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , dir0 , direction , & , }
		- SUCC   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

600 :	"axisList"
		- NEIGH  = { axisList , dir1 , direction , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , dir0 , direction , & , }
		- SUCC   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

600 :	"direction"
		- NEIGH  = { axisList , dir1 , direction , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , dir0 , direction , & , }
		- SUCC   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

601 :	"if"
		- NEIGH  = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }

601 :	"&"
		- NEIGH  = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }

601 :	"dir0"
		- NEIGH  = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }

601 :	"=="
		- NEIGH  = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }

601 :	"&"
		- NEIGH  = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }

601 :	"cs"
		- NEIGH  = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }

601 :	"AxisDirection"
		- NEIGH  = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }

601 :	"NORTH"
		- NEIGH  = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }

601 :	"&&"
		- NEIGH  = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }

602 :	"&"
		- NEIGH  = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }

602 :	"dir1"
		- NEIGH  = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }

602 :	"=="
		- NEIGH  = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }

602 :	"&"
		- NEIGH  = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }

602 :	"cs"
		- NEIGH  = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }

602 :	"AxisDirection"
		- NEIGH  = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }

602 :	"EAST"
		- NEIGH  = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }

603 :	"return"
		- NEIGH  = { return , }
		- PARENT = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

607 :	"if"
		- NEIGH  = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- SUCC   = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

607 :	"&"
		- NEIGH  = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- SUCC   = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

607 :	"dir0"
		- NEIGH  = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- SUCC   = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

607 :	"=="
		- NEIGH  = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- SUCC   = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

607 :	"&"
		- NEIGH  = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- SUCC   = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

607 :	"cs"
		- NEIGH  = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- SUCC   = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

607 :	"AxisDirection"
		- NEIGH  = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- SUCC   = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

607 :	"SOUTH"
		- NEIGH  = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- SUCC   = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

607 :	"&&"
		- NEIGH  = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- SUCC   = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

608 :	"&"
		- NEIGH  = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- SUCC   = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

608 :	"dir1"
		- NEIGH  = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- SUCC   = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

608 :	"=="
		- NEIGH  = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- SUCC   = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

608 :	"&"
		- NEIGH  = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- SUCC   = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

608 :	"cs"
		- NEIGH  = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- SUCC   = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

608 :	"AxisDirection"
		- NEIGH  = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- SUCC   = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

608 :	"SOUTH"
		- NEIGH  = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- SUCC   = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

609 :	"&"
		- NEIGH  = { meridian , axisList , meridian0 , & , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { meridian , axisList , meridian1 , & , }

609 :	"meridian0"
		- NEIGH  = { meridian , axisList , meridian0 , & , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { meridian , axisList , meridian1 , & , }

609 :	"axisList"
		- NEIGH  = { meridian , axisList , meridian0 , & , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { meridian , axisList , meridian1 , & , }

609 :	"meridian"
		- NEIGH  = { meridian , axisList , meridian0 , & , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { meridian , axisList , meridian1 , & , }

610 :	"&"
		- NEIGH  = { meridian , axisList , meridian1 , & , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian0 , & , }
		- SUCC   = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }

610 :	"meridian1"
		- NEIGH  = { meridian , axisList , meridian1 , & , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian0 , & , }
		- SUCC   = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }

610 :	"axisList"
		- NEIGH  = { meridian , axisList , meridian1 , & , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian0 , & , }
		- SUCC   = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }

610 :	"meridian"
		- NEIGH  = { meridian , axisList , meridian1 , & , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian0 , & , }
		- SUCC   = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }

611 :	"return"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

611 :	"meridian0"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

611 :	"!="
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

611 :	"&&"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

611 :	"meridian1"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

611 :	"!="
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

611 :	"&&"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

612 :	"std"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

612 :	"abs"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

612 :	"meridian0"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

612 :	"longitude"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

612 :	"convertToUnit"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

613 :	"common"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

613 :	"UnitOfMeasure"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

613 :	"DEGREE"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

613 :	"-"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

614 :	"<"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

614 :	"&&"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

615 :	"std"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

615 :	"abs"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

615 :	"meridian1"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

615 :	"longitude"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

615 :	"convertToUnit"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

616 :	"common"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

616 :	"UnitOfMeasure"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

616 :	"DEGREE"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

616 :	"-"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

617 :	"<"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

621 :	"if"
		- NEIGH  = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- SUCC   = { return , }

621 :	"&"
		- NEIGH  = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- SUCC   = { return , }

621 :	"dir0"
		- NEIGH  = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- SUCC   = { return , }

621 :	"=="
		- NEIGH  = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- SUCC   = { return , }

621 :	"&"
		- NEIGH  = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- SUCC   = { return , }

621 :	"cs"
		- NEIGH  = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- SUCC   = { return , }

621 :	"AxisDirection"
		- NEIGH  = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- SUCC   = { return , }

621 :	"NORTH"
		- NEIGH  = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- SUCC   = { return , }

621 :	"&&"
		- NEIGH  = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- SUCC   = { return , }

622 :	"&"
		- NEIGH  = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- SUCC   = { return , }

622 :	"dir1"
		- NEIGH  = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- SUCC   = { return , }

622 :	"=="
		- NEIGH  = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- SUCC   = { return , }

622 :	"&"
		- NEIGH  = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- SUCC   = { return , }

622 :	"cs"
		- NEIGH  = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- SUCC   = { return , }

622 :	"AxisDirection"
		- NEIGH  = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- SUCC   = { return , }

622 :	"NORTH"
		- NEIGH  = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- SUCC   = { return , }

623 :	"&"
		- NEIGH  = { meridian , axisList , meridian0 , & , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { meridian , axisList , meridian1 , & , }

623 :	"meridian0"
		- NEIGH  = { meridian , axisList , meridian0 , & , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { meridian , axisList , meridian1 , & , }

623 :	"axisList"
		- NEIGH  = { meridian , axisList , meridian0 , & , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { meridian , axisList , meridian1 , & , }

623 :	"meridian"
		- NEIGH  = { meridian , axisList , meridian0 , & , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { meridian , axisList , meridian1 , & , }

624 :	"&"
		- NEIGH  = { meridian , axisList , meridian1 , & , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian0 , & , }
		- SUCC   = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }

624 :	"meridian1"
		- NEIGH  = { meridian , axisList , meridian1 , & , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian0 , & , }
		- SUCC   = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }

624 :	"axisList"
		- NEIGH  = { meridian , axisList , meridian1 , & , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian0 , & , }
		- SUCC   = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }

624 :	"meridian"
		- NEIGH  = { meridian , axisList , meridian1 , & , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian0 , & , }
		- SUCC   = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }

625 :	"return"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

625 :	"meridian0"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

625 :	"!="
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

625 :	"&&"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

625 :	"meridian1"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

625 :	"!="
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

625 :	"&&"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

626 :	"std"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

626 :	"abs"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

626 :	"meridian0"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

626 :	"longitude"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

626 :	"convertToUnit"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

627 :	"common"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

627 :	"UnitOfMeasure"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

627 :	"DEGREE"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

627 :	"-"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

628 :	"<"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

628 :	"&&"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

629 :	"std"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

629 :	"abs"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

629 :	"meridian1"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

629 :	"longitude"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

629 :	"convertToUnit"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

630 :	"common"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

630 :	"UnitOfMeasure"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

630 :	"DEGREE"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

630 :	"-"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

631 :	"<"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

634 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- SUCC   = { }

638 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

638 :	"mustAxisOrderBeSwitchedForVisualization"
		- NEIGH  = { mustAxisOrderBeSwitchedForVisualization , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

640 :	"CompoundCRS"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { compoundCRS , if , }

640 :	"*"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { compoundCRS , if , }

640 :	"compoundCRS"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { compoundCRS , if , }

640 :	"dynamic_cast"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { compoundCRS , if , }

640 :	"<"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { compoundCRS , if , }

640 :	"CompoundCRS"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { compoundCRS , if , }

640 :	"*"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { compoundCRS , if , }

640 :	">"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { compoundCRS , if , }

640 :	"this"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { compoundCRS , if , }

641 :	"if"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , componentReferenceSystems , & , comps , compoundCRS , }
		- PRED   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- SUCC   = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }

641 :	"compoundCRS"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , componentReferenceSystems , & , comps , compoundCRS , }
		- PRED   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- SUCC   = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }

642 :	"&"
		- NEIGH  = { componentReferenceSystems , comps , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , comps , ! , if , }

642 :	"comps"
		- NEIGH  = { componentReferenceSystems , comps , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , comps , ! , if , }

642 :	"compoundCRS"
		- NEIGH  = { componentReferenceSystems , comps , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , comps , ! , if , }

642 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , comps , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , comps , ! , if , }

643 :	"if"
		- NEIGH  = { empty , comps , ! , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { mustAxisOrderBeSwitchedForVisualization , comps , return , }
		- PRED   = { componentReferenceSystems , comps , compoundCRS , & , }
		- SUCC   = { }

643 :	"!"
		- NEIGH  = { empty , comps , ! , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { mustAxisOrderBeSwitchedForVisualization , comps , return , }
		- PRED   = { componentReferenceSystems , comps , compoundCRS , & , }
		- SUCC   = { }

643 :	"comps"
		- NEIGH  = { empty , comps , ! , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { mustAxisOrderBeSwitchedForVisualization , comps , return , }
		- PRED   = { componentReferenceSystems , comps , compoundCRS , & , }
		- SUCC   = { }

643 :	"empty"
		- NEIGH  = { empty , comps , ! , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { mustAxisOrderBeSwitchedForVisualization , comps , return , }
		- PRED   = { componentReferenceSystems , comps , compoundCRS , & , }
		- SUCC   = { }

644 :	"return"
		- NEIGH  = { mustAxisOrderBeSwitchedForVisualization , comps , return , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

644 :	"comps"
		- NEIGH  = { mustAxisOrderBeSwitchedForVisualization , comps , return , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

644 :	"mustAxisOrderBeSwitchedForVisualization"
		- NEIGH  = { mustAxisOrderBeSwitchedForVisualization , comps , return , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

648 :	"GeographicCRS"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

648 :	"*"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

648 :	"geogCRS"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

648 :	"dynamic_cast"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

648 :	"<"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

648 :	"GeographicCRS"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

648 :	"*"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

648 :	">"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

648 :	"this"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

649 :	"if"
		- NEIGH  = { geogCRS , if , }
		- PARENT = { }
		- CHILD  = { axisList , coordinateSystem , geogCRS , mustAxisOrderBeSwitchedForVisualizationInternal , return , }
		- PRED   = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- SUCC   = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }

649 :	"geogCRS"
		- NEIGH  = { geogCRS , if , }
		- PARENT = { }
		- CHILD  = { axisList , coordinateSystem , geogCRS , mustAxisOrderBeSwitchedForVisualizationInternal , return , }
		- PRED   = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- SUCC   = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }

650 :	"return"
		- NEIGH  = { axisList , coordinateSystem , geogCRS , mustAxisOrderBeSwitchedForVisualizationInternal , return , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

650 :	"mustAxisOrderBeSwitchedForVisualizationInternal"
		- NEIGH  = { axisList , coordinateSystem , geogCRS , mustAxisOrderBeSwitchedForVisualizationInternal , return , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

651 :	"geogCRS"
		- NEIGH  = { axisList , coordinateSystem , geogCRS , mustAxisOrderBeSwitchedForVisualizationInternal , return , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

651 :	"coordinateSystem"
		- NEIGH  = { axisList , coordinateSystem , geogCRS , mustAxisOrderBeSwitchedForVisualizationInternal , return , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

651 :	"axisList"
		- NEIGH  = { axisList , coordinateSystem , geogCRS , mustAxisOrderBeSwitchedForVisualizationInternal , return , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

654 :	"ProjectedCRS"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

654 :	"*"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

654 :	"projCRS"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

654 :	"dynamic_cast"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

654 :	"<"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

654 :	"ProjectedCRS"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

654 :	"*"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

654 :	">"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

654 :	"this"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

655 :	"if"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { axisList , coordinateSystem , projCRS , mustAxisOrderBeSwitchedForVisualizationInternal , return , }
		- PRED   = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- SUCC   = { return , }

655 :	"projCRS"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { axisList , coordinateSystem , projCRS , mustAxisOrderBeSwitchedForVisualizationInternal , return , }
		- PRED   = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- SUCC   = { return , }

656 :	"return"
		- NEIGH  = { axisList , coordinateSystem , projCRS , mustAxisOrderBeSwitchedForVisualizationInternal , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

656 :	"mustAxisOrderBeSwitchedForVisualizationInternal"
		- NEIGH  = { axisList , coordinateSystem , projCRS , mustAxisOrderBeSwitchedForVisualizationInternal , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

657 :	"projCRS"
		- NEIGH  = { axisList , coordinateSystem , projCRS , mustAxisOrderBeSwitchedForVisualizationInternal , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

657 :	"coordinateSystem"
		- NEIGH  = { axisList , coordinateSystem , projCRS , mustAxisOrderBeSwitchedForVisualizationInternal , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

657 :	"axisList"
		- NEIGH  = { axisList , coordinateSystem , projCRS , mustAxisOrderBeSwitchedForVisualizationInternal , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

660 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

669 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

669 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

669 :	"normalizeForVisualization"
		- NEIGH  = { normalizeForVisualization , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

670 :	"props"
		- NEIGH  = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }

670 :	"util"
		- NEIGH  = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }

670 :	"PropertyMap"
		- NEIGH  = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }

670 :	"set"
		- NEIGH  = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }

671 :	"common"
		- NEIGH  = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }

671 :	"IdentifiedObject"
		- NEIGH  = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }

671 :	"NAME_KEY"
		- NEIGH  = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }

672 :	"nameStr"
		- NEIGH  = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }

672 :	"+"
		- NEIGH  = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }

674 :	"CompoundCRS"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- SUCC   = { compoundCRS , if , }

674 :	"*"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- SUCC   = { compoundCRS , if , }

674 :	"compoundCRS"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- SUCC   = { compoundCRS , if , }

674 :	"dynamic_cast"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- SUCC   = { compoundCRS , if , }

674 :	"<"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- SUCC   = { compoundCRS , if , }

674 :	"CompoundCRS"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- SUCC   = { compoundCRS , if , }

674 :	"*"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- SUCC   = { compoundCRS , if , }

674 :	">"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- SUCC   = { compoundCRS , if , }

674 :	"this"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- SUCC   = { compoundCRS , if , }

675 :	"if"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , componentReferenceSystems , & , comps , compoundCRS , }
		- PRED   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- SUCC   = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }

675 :	"compoundCRS"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , componentReferenceSystems , & , comps , compoundCRS , }
		- PRED   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- SUCC   = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }

676 :	"&"
		- NEIGH  = { componentReferenceSystems , comps , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , comps , ! , if , }

676 :	"comps"
		- NEIGH  = { componentReferenceSystems , comps , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , comps , ! , if , }

676 :	"compoundCRS"
		- NEIGH  = { componentReferenceSystems , comps , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , comps , ! , if , }

676 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , comps , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , comps , ! , if , }

677 :	"if"
		- NEIGH  = { empty , comps , ! , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { props , return , ++ , nn_static_pointer_cast , size , CRS , i , normalizeForVisualization , for , comps , vector , > , emplace_back , CompoundCRS , newComps , create , CRSNNPtr , util , < , size_t , std , }
		- PRED   = { componentReferenceSystems , comps , compoundCRS , & , }
		- SUCC   = { }

677 :	"!"
		- NEIGH  = { empty , comps , ! , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { props , return , ++ , nn_static_pointer_cast , size , CRS , i , normalizeForVisualization , for , comps , vector , > , emplace_back , CompoundCRS , newComps , create , CRSNNPtr , util , < , size_t , std , }
		- PRED   = { componentReferenceSystems , comps , compoundCRS , & , }
		- SUCC   = { }

677 :	"comps"
		- NEIGH  = { empty , comps , ! , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { props , return , ++ , nn_static_pointer_cast , size , CRS , i , normalizeForVisualization , for , comps , vector , > , emplace_back , CompoundCRS , newComps , create , CRSNNPtr , util , < , size_t , std , }
		- PRED   = { componentReferenceSystems , comps , compoundCRS , & , }
		- SUCC   = { }

677 :	"empty"
		- NEIGH  = { empty , comps , ! , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { props , return , ++ , nn_static_pointer_cast , size , CRS , i , normalizeForVisualization , for , comps , vector , > , emplace_back , CompoundCRS , newComps , create , CRSNNPtr , util , < , size_t , std , }
		- PRED   = { componentReferenceSystems , comps , compoundCRS , & , }
		- SUCC   = { }

678 :	"std"
		- NEIGH  = { newComps , > , CRSNNPtr , < , vector , std , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { normalizeForVisualization , emplace_back , comps , newComps , }

678 :	"vector"
		- NEIGH  = { newComps , > , CRSNNPtr , < , vector , std , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { normalizeForVisualization , emplace_back , comps , newComps , }

678 :	"<"
		- NEIGH  = { newComps , > , CRSNNPtr , < , vector , std , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { normalizeForVisualization , emplace_back , comps , newComps , }

678 :	"CRSNNPtr"
		- NEIGH  = { newComps , > , CRSNNPtr , < , vector , std , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { normalizeForVisualization , emplace_back , comps , newComps , }

678 :	">"
		- NEIGH  = { newComps , > , CRSNNPtr , < , vector , std , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { normalizeForVisualization , emplace_back , comps , newComps , }

678 :	"newComps"
		- NEIGH  = { newComps , > , CRSNNPtr , < , vector , std , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { normalizeForVisualization , emplace_back , comps , newComps , }

679 :	"newComps"
		- NEIGH  = { normalizeForVisualization , emplace_back , comps , newComps , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { newComps , > , CRSNNPtr , < , vector , std , }
		- SUCC   = { ++ , size_t , i , comps , < , size , for , }

679 :	"emplace_back"
		- NEIGH  = { normalizeForVisualization , emplace_back , comps , newComps , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { newComps , > , CRSNNPtr , < , vector , std , }
		- SUCC   = { ++ , size_t , i , comps , < , size , for , }

679 :	"comps"
		- NEIGH  = { normalizeForVisualization , emplace_back , comps , newComps , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { newComps , > , CRSNNPtr , < , vector , std , }
		- SUCC   = { ++ , size_t , i , comps , < , size , for , }

679 :	"normalizeForVisualization"
		- NEIGH  = { normalizeForVisualization , emplace_back , comps , newComps , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { newComps , > , CRSNNPtr , < , vector , std , }
		- SUCC   = { ++ , size_t , i , comps , < , size , for , }

680 :	"for"
		- NEIGH  = { ++ , size_t , i , comps , < , size , for , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { i , emplace_back , comps , newComps , }
		- PRED   = { normalizeForVisualization , emplace_back , comps , newComps , }
		- SUCC   = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }

680 :	"size_t"
		- NEIGH  = { ++ , size_t , i , comps , < , size , for , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { i , emplace_back , comps , newComps , }
		- PRED   = { normalizeForVisualization , emplace_back , comps , newComps , }
		- SUCC   = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }

680 :	"i"
		- NEIGH  = { ++ , size_t , i , comps , < , size , for , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { i , emplace_back , comps , newComps , }
		- PRED   = { normalizeForVisualization , emplace_back , comps , newComps , }
		- SUCC   = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }

680 :	"i"
		- NEIGH  = { ++ , size_t , i , comps , < , size , for , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { i , emplace_back , comps , newComps , }
		- PRED   = { normalizeForVisualization , emplace_back , comps , newComps , }
		- SUCC   = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }

680 :	"<"
		- NEIGH  = { ++ , size_t , i , comps , < , size , for , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { i , emplace_back , comps , newComps , }
		- PRED   = { normalizeForVisualization , emplace_back , comps , newComps , }
		- SUCC   = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }

680 :	"comps"
		- NEIGH  = { ++ , size_t , i , comps , < , size , for , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { i , emplace_back , comps , newComps , }
		- PRED   = { normalizeForVisualization , emplace_back , comps , newComps , }
		- SUCC   = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }

680 :	"size"
		- NEIGH  = { ++ , size_t , i , comps , < , size , for , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { i , emplace_back , comps , newComps , }
		- PRED   = { normalizeForVisualization , emplace_back , comps , newComps , }
		- SUCC   = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }

680 :	"i"
		- NEIGH  = { ++ , size_t , i , comps , < , size , for , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { i , emplace_back , comps , newComps , }
		- PRED   = { normalizeForVisualization , emplace_back , comps , newComps , }
		- SUCC   = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }

680 :	"++"
		- NEIGH  = { ++ , size_t , i , comps , < , size , for , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { i , emplace_back , comps , newComps , }
		- PRED   = { normalizeForVisualization , emplace_back , comps , newComps , }
		- SUCC   = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }

681 :	"newComps"
		- NEIGH  = { i , emplace_back , comps , newComps , }
		- PARENT = { ++ , size_t , i , comps , < , size , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

681 :	"emplace_back"
		- NEIGH  = { i , emplace_back , comps , newComps , }
		- PARENT = { ++ , size_t , i , comps , < , size , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

681 :	"comps"
		- NEIGH  = { i , emplace_back , comps , newComps , }
		- PARENT = { ++ , size_t , i , comps , < , size , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

681 :	"i"
		- NEIGH  = { i , emplace_back , comps , newComps , }
		- PARENT = { ++ , size_t , i , comps , < , size , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

683 :	"return"
		- NEIGH  = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { ++ , size_t , i , comps , < , size , for , }
		- SUCC   = { }

683 :	"util"
		- NEIGH  = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { ++ , size_t , i , comps , < , size , for , }
		- SUCC   = { }

683 :	"nn_static_pointer_cast"
		- NEIGH  = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { ++ , size_t , i , comps , < , size , for , }
		- SUCC   = { }

683 :	"<"
		- NEIGH  = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { ++ , size_t , i , comps , < , size , for , }
		- SUCC   = { }

683 :	"CRS"
		- NEIGH  = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { ++ , size_t , i , comps , < , size , for , }
		- SUCC   = { }

683 :	">"
		- NEIGH  = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { ++ , size_t , i , comps , < , size , for , }
		- SUCC   = { }

684 :	"CompoundCRS"
		- NEIGH  = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { ++ , size_t , i , comps , < , size , for , }
		- SUCC   = { }

684 :	"create"
		- NEIGH  = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { ++ , size_t , i , comps , < , size , for , }
		- SUCC   = { }

684 :	"props"
		- NEIGH  = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { ++ , size_t , i , comps , < , size , for , }
		- SUCC   = { }

684 :	"newComps"
		- NEIGH  = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { ++ , size_t , i , comps , < , size , for , }
		- SUCC   = { }

688 :	"GeographicCRS"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

688 :	"*"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

688 :	"geogCRS"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

688 :	"dynamic_cast"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

688 :	"<"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

688 :	"GeographicCRS"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

688 :	"*"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

688 :	">"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

688 :	"this"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

689 :	"if"
		- NEIGH  = { geogCRS , if , }
		- PARENT = { }
		- CHILD  = { mustAxisOrderBeSwitchedForVisualizationInternal , if , coordinateSystem , geogCRS , axisList , & , }
		- PRED   = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- SUCC   = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }

689 :	"geogCRS"
		- NEIGH  = { geogCRS , if , }
		- PARENT = { }
		- CHILD  = { mustAxisOrderBeSwitchedForVisualizationInternal , if , coordinateSystem , geogCRS , axisList , & , }
		- PRED   = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- SUCC   = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }

690 :	"&"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }

690 :	"axisList"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }

690 :	"geogCRS"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }

690 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }

690 :	"axisList"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }

691 :	"if"
		- NEIGH  = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { datum , props , > , geogCRS , CRS , cs , util , < , size , nn_static_pointer_cast , return , datumEnsemble , EllipsoidalCS , == , PropertyMap , GeographicCRS , create , axisList , }
		- PRED   = { coordinateSystem , geogCRS , axisList , & , }
		- SUCC   = { }

691 :	"mustAxisOrderBeSwitchedForVisualizationInternal"
		- NEIGH  = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { datum , props , > , geogCRS , CRS , cs , util , < , size , nn_static_pointer_cast , return , datumEnsemble , EllipsoidalCS , == , PropertyMap , GeographicCRS , create , axisList , }
		- PRED   = { coordinateSystem , geogCRS , axisList , & , }
		- SUCC   = { }

691 :	"axisList"
		- NEIGH  = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { datum , props , > , geogCRS , CRS , cs , util , < , size , nn_static_pointer_cast , return , datumEnsemble , EllipsoidalCS , == , PropertyMap , GeographicCRS , create , axisList , }
		- PRED   = { coordinateSystem , geogCRS , axisList , & , }
		- SUCC   = { }

692 :	"cs"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

692 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

692 :	"size"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

692 :	"=="
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

693 :	"cs"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

693 :	"EllipsoidalCS"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

693 :	"create"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

693 :	"util"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

693 :	"PropertyMap"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

694 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

694 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

695 :	"cs"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

695 :	"EllipsoidalCS"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

695 :	"create"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

695 :	"util"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

695 :	"PropertyMap"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

696 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

696 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

697 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

698 :	"return"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

698 :	"util"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

698 :	"nn_static_pointer_cast"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

698 :	"<"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

698 :	"CRS"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

698 :	">"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

698 :	"GeographicCRS"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

698 :	"create"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

699 :	"props"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

699 :	"geogCRS"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

699 :	"datum"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

699 :	"geogCRS"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

699 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

699 :	"cs"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

703 :	"ProjectedCRS"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

703 :	"*"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

703 :	"projCRS"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

703 :	"dynamic_cast"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

703 :	"<"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

703 :	"ProjectedCRS"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

703 :	"*"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

703 :	">"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

703 :	"this"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

704 :	"if"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { mustAxisOrderBeSwitchedForVisualizationInternal , if , coordinateSystem , axisList , projCRS , & , }
		- PRED   = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- SUCC   = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

704 :	"projCRS"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { mustAxisOrderBeSwitchedForVisualizationInternal , if , coordinateSystem , axisList , projCRS , & , }
		- PRED   = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- SUCC   = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

705 :	"&"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }

705 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }

705 :	"projCRS"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }

705 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }

705 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }

706 :	"if"
		- NEIGH  = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- PARENT = { projCRS , if , }
		- CHILD  = { derivingConversion , baseCRS , props , ProjectedCRS , > , CRS , projCRS , cs , util , < , return , == , PropertyMap , create , size , nn_static_pointer_cast , CartesianCS , axisList , }
		- PRED   = { coordinateSystem , axisList , projCRS , & , }
		- SUCC   = { }

706 :	"mustAxisOrderBeSwitchedForVisualizationInternal"
		- NEIGH  = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- PARENT = { projCRS , if , }
		- CHILD  = { derivingConversion , baseCRS , props , ProjectedCRS , > , CRS , projCRS , cs , util , < , return , == , PropertyMap , create , size , nn_static_pointer_cast , CartesianCS , axisList , }
		- PRED   = { coordinateSystem , axisList , projCRS , & , }
		- SUCC   = { }

706 :	"axisList"
		- NEIGH  = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- PARENT = { projCRS , if , }
		- CHILD  = { derivingConversion , baseCRS , props , ProjectedCRS , > , CRS , projCRS , cs , util , < , return , == , PropertyMap , create , size , nn_static_pointer_cast , CartesianCS , axisList , }
		- PRED   = { coordinateSystem , axisList , projCRS , & , }
		- SUCC   = { }

707 :	"cs"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , props , baseCRS , nn_static_pointer_cast , CRS , return , }

708 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , props , baseCRS , nn_static_pointer_cast , CRS , return , }

708 :	"size"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , props , baseCRS , nn_static_pointer_cast , CRS , return , }

708 :	"=="
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , props , baseCRS , nn_static_pointer_cast , CRS , return , }

709 :	"cs"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , props , baseCRS , nn_static_pointer_cast , CRS , return , }

709 :	"CartesianCS"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , props , baseCRS , nn_static_pointer_cast , CRS , return , }

709 :	"create"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , props , baseCRS , nn_static_pointer_cast , CRS , return , }

709 :	"util"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , props , baseCRS , nn_static_pointer_cast , CRS , return , }

709 :	"PropertyMap"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , props , baseCRS , nn_static_pointer_cast , CRS , return , }

709 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , props , baseCRS , nn_static_pointer_cast , CRS , return , }

710 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , props , baseCRS , nn_static_pointer_cast , CRS , return , }

711 :	"cs"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , props , baseCRS , nn_static_pointer_cast , CRS , return , }

711 :	"CartesianCS"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , props , baseCRS , nn_static_pointer_cast , CRS , return , }

711 :	"create"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , props , baseCRS , nn_static_pointer_cast , CRS , return , }

711 :	"util"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , props , baseCRS , nn_static_pointer_cast , CRS , return , }

711 :	"PropertyMap"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , props , baseCRS , nn_static_pointer_cast , CRS , return , }

711 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , props , baseCRS , nn_static_pointer_cast , CRS , return , }

712 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , props , baseCRS , nn_static_pointer_cast , CRS , return , }

712 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , props , baseCRS , nn_static_pointer_cast , CRS , return , }

713 :	"return"
		- NEIGH  = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , props , baseCRS , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

713 :	"util"
		- NEIGH  = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , props , baseCRS , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

713 :	"nn_static_pointer_cast"
		- NEIGH  = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , props , baseCRS , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

713 :	"<"
		- NEIGH  = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , props , baseCRS , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

713 :	"CRS"
		- NEIGH  = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , props , baseCRS , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

713 :	">"
		- NEIGH  = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , props , baseCRS , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

713 :	"ProjectedCRS"
		- NEIGH  = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , props , baseCRS , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

713 :	"create"
		- NEIGH  = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , props , baseCRS , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

714 :	"props"
		- NEIGH  = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , props , baseCRS , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

714 :	"projCRS"
		- NEIGH  = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , props , baseCRS , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

714 :	"baseCRS"
		- NEIGH  = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , props , baseCRS , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

714 :	"projCRS"
		- NEIGH  = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , props , baseCRS , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

714 :	"derivingConversion"
		- NEIGH  = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , props , baseCRS , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

714 :	"cs"
		- NEIGH  = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , props , baseCRS , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

718 :	"return"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

718 :	"NN_NO_CHECK"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

719 :	"std"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

719 :	"static_pointer_cast"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

719 :	"<"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

719 :	"CRS"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

719 :	">"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

719 :	"shared_from_this"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

719 :	"as_nullable"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

771 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

771 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

771 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

771 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

771 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

771 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

771 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

771 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

772 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

772 :	"identify"
		- NEIGH  = { identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

772 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

772 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

772 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

772 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

773 :	"return"
		- NEIGH  = { authorityFactory , _identify , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

773 :	"_identify"
		- NEIGH  = { authorityFactory , _identify , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

773 :	"authorityFactory"
		- NEIGH  = { authorityFactory , _identify , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

780 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

780 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

780 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

780 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

780 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

781 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

781 :	"getNonDeprecated"
		- NEIGH  = { getNonDeprecated , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

781 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

781 :	"DatabaseContextNNPtr"
		- NEIGH  = { DatabaseContextNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

781 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

781 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

782 :	"std"
		- NEIGH  = { res , > , CRSNNPtr , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

782 :	"list"
		- NEIGH  = { res , > , CRSNNPtr , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

782 :	"<"
		- NEIGH  = { res , > , CRSNNPtr , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

782 :	"CRSNNPtr"
		- NEIGH  = { res , > , CRSNNPtr , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

782 :	">"
		- NEIGH  = { res , > , CRSNNPtr , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

782 :	"res"
		- NEIGH  = { res , > , CRSNNPtr , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

783 :	"&"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , CRSNNPtr , < , list , std , }
		- SUCC   = { empty , l_identifiers , if , }

783 :	"l_identifiers"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , CRSNNPtr , < , list , std , }
		- SUCC   = { empty , l_identifiers , if , }

783 :	"identifiers"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , CRSNNPtr , < , list , std , }
		- SUCC   = { empty , l_identifiers , if , }

784 :	"if"
		- NEIGH  = { empty , l_identifiers , if , }
		- PARENT = { }
		- CHILD  = { res , return , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { tableName , * , }

784 :	"l_identifiers"
		- NEIGH  = { empty , l_identifiers , if , }
		- PARENT = { }
		- CHILD  = { res , return , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { tableName , * , }

784 :	"empty"
		- NEIGH  = { empty , l_identifiers , if , }
		- PARENT = { }
		- CHILD  = { res , return , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { tableName , * , }

785 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { empty , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

785 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { empty , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

787 :	"*"
		- NEIGH  = { tableName , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_identifiers , if , }
		- SUCC   = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }

787 :	"tableName"
		- NEIGH  = { tableName , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_identifiers , if , }
		- SUCC   = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }

788 :	"if"
		- NEIGH  = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- PARENT = { }
		- CHILD  = { > , tableName , ProjectedCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { tableName , * , }
		- SUCC   = { ! , tableName , if , }

788 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- PARENT = { }
		- CHILD  = { > , tableName , ProjectedCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { tableName , * , }
		- SUCC   = { ! , tableName , if , }

788 :	"<"
		- NEIGH  = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- PARENT = { }
		- CHILD  = { > , tableName , ProjectedCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { tableName , * , }
		- SUCC   = { ! , tableName , if , }

788 :	"GeodeticCRS"
		- NEIGH  = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- PARENT = { }
		- CHILD  = { > , tableName , ProjectedCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { tableName , * , }
		- SUCC   = { ! , tableName , if , }

788 :	"*"
		- NEIGH  = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- PARENT = { }
		- CHILD  = { > , tableName , ProjectedCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { tableName , * , }
		- SUCC   = { ! , tableName , if , }

788 :	">"
		- NEIGH  = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- PARENT = { }
		- CHILD  = { > , tableName , ProjectedCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { tableName , * , }
		- SUCC   = { ! , tableName , if , }

788 :	"this"
		- NEIGH  = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- PARENT = { }
		- CHILD  = { > , tableName , ProjectedCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { tableName , * , }
		- SUCC   = { ! , tableName , if , }

789 :	"tableName"
		- NEIGH  = { tableName , }
		- PARENT = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

790 :	"if"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- CHILD  = { > , VerticalCRS , < , this , * , dynamic_cast , if , tableName , }
		- PRED   = { }
		- SUCC   = { }

790 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- CHILD  = { > , VerticalCRS , < , this , * , dynamic_cast , if , tableName , }
		- PRED   = { }
		- SUCC   = { }

790 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- CHILD  = { > , VerticalCRS , < , this , * , dynamic_cast , if , tableName , }
		- PRED   = { }
		- SUCC   = { }

790 :	"ProjectedCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- CHILD  = { > , VerticalCRS , < , this , * , dynamic_cast , if , tableName , }
		- PRED   = { }
		- SUCC   = { }

790 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- CHILD  = { > , VerticalCRS , < , this , * , dynamic_cast , if , tableName , }
		- PRED   = { }
		- SUCC   = { }

790 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- CHILD  = { > , VerticalCRS , < , this , * , dynamic_cast , if , tableName , }
		- PRED   = { }
		- SUCC   = { }

790 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- CHILD  = { > , VerticalCRS , < , this , * , dynamic_cast , if , tableName , }
		- PRED   = { }
		- SUCC   = { }

791 :	"tableName"
		- NEIGH  = { tableName , }
		- PARENT = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

792 :	"if"
		- NEIGH  = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- CHILD  = { > , tableName , CompoundCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { }
		- SUCC   = { }

792 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- CHILD  = { > , tableName , CompoundCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { }
		- SUCC   = { }

792 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- CHILD  = { > , tableName , CompoundCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { }
		- SUCC   = { }

792 :	"VerticalCRS"
		- NEIGH  = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- CHILD  = { > , tableName , CompoundCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { }
		- SUCC   = { }

792 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- CHILD  = { > , tableName , CompoundCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { }
		- SUCC   = { }

792 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- CHILD  = { > , tableName , CompoundCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { }
		- SUCC   = { }

792 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- CHILD  = { > , tableName , CompoundCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { }
		- SUCC   = { }

793 :	"tableName"
		- NEIGH  = { tableName , }
		- PARENT = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

794 :	"if"
		- NEIGH  = { > , this , dynamic_cast , * , CompoundCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- CHILD  = { tableName , }
		- PRED   = { }
		- SUCC   = { }

794 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , CompoundCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- CHILD  = { tableName , }
		- PRED   = { }
		- SUCC   = { }

794 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , CompoundCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- CHILD  = { tableName , }
		- PRED   = { }
		- SUCC   = { }

794 :	"CompoundCRS"
		- NEIGH  = { > , this , dynamic_cast , * , CompoundCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- CHILD  = { tableName , }
		- PRED   = { }
		- SUCC   = { }

794 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , CompoundCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- CHILD  = { tableName , }
		- PRED   = { }
		- SUCC   = { }

794 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , CompoundCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- CHILD  = { tableName , }
		- PRED   = { }
		- SUCC   = { }

794 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , CompoundCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- CHILD  = { tableName , }
		- PRED   = { }
		- SUCC   = { }

795 :	"tableName"
		- NEIGH  = { tableName , }
		- PARENT = { > , this , dynamic_cast , * , CompoundCRS , < , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

797 :	"if"
		- NEIGH  = { ! , tableName , if , }
		- PARENT = { }
		- CHILD  = { res , return , }
		- PRED   = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- SUCC   = { l_identifiers , id , & , }

797 :	"!"
		- NEIGH  = { ! , tableName , if , }
		- PARENT = { }
		- CHILD  = { res , return , }
		- PRED   = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- SUCC   = { l_identifiers , id , & , }

797 :	"tableName"
		- NEIGH  = { ! , tableName , if , }
		- PARENT = { }
		- CHILD  = { res , return , }
		- PRED   = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- SUCC   = { l_identifiers , id , & , }

798 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { ! , tableName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

798 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { ! , tableName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

800 :	"&"
		- NEIGH  = { l_identifiers , id , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , tableName , if , }
		- SUCC   = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }

800 :	"id"
		- NEIGH  = { l_identifiers , id , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , tableName , if , }
		- SUCC   = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }

800 :	"l_identifiers"
		- NEIGH  = { l_identifiers , id , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , tableName , if , }
		- SUCC   = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }

801 :	"tmpRes"
		- NEIGH  = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_identifiers , id , & , }
		- SUCC   = { tmpRes , pair , & , for , }

802 :	"dbContext"
		- NEIGH  = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_identifiers , id , & , }
		- SUCC   = { tmpRes , pair , & , for , }

802 :	"getNonDeprecated"
		- NEIGH  = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_identifiers , id , & , }
		- SUCC   = { tmpRes , pair , & , for , }

802 :	"tableName"
		- NEIGH  = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_identifiers , id , & , }
		- SUCC   = { tmpRes , pair , & , for , }

802 :	"*"
		- NEIGH  = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_identifiers , id , & , }
		- SUCC   = { tmpRes , pair , & , for , }

802 :	"id"
		- NEIGH  = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_identifiers , id , & , }
		- SUCC   = { tmpRes , pair , & , for , }

802 :	"codeSpace"
		- NEIGH  = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_identifiers , id , & , }
		- SUCC   = { tmpRes , pair , & , for , }

802 :	"id"
		- NEIGH  = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_identifiers , id , & , }
		- SUCC   = { tmpRes , pair , & , for , }

802 :	"code"
		- NEIGH  = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_identifiers , id , & , }
		- SUCC   = { tmpRes , pair , & , for , }

803 :	"for"
		- NEIGH  = { tmpRes , pair , & , for , }
		- PARENT = { }
		- CHILD  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PRED   = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- SUCC   = { res , return , }

803 :	"&"
		- NEIGH  = { tmpRes , pair , & , for , }
		- PARENT = { }
		- CHILD  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PRED   = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- SUCC   = { res , return , }

803 :	"pair"
		- NEIGH  = { tmpRes , pair , & , for , }
		- PARENT = { }
		- CHILD  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PRED   = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- SUCC   = { res , return , }

803 :	"tmpRes"
		- NEIGH  = { tmpRes , pair , & , for , }
		- PARENT = { }
		- CHILD  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PRED   = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- SUCC   = { res , return , }

804 :	"res"
		- NEIGH  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PARENT = { tmpRes , pair , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

804 :	"emplace_back"
		- NEIGH  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PARENT = { tmpRes , pair , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

804 :	"io"
		- NEIGH  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PARENT = { tmpRes , pair , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

804 :	"AuthorityFactory"
		- NEIGH  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PARENT = { tmpRes , pair , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

804 :	"create"
		- NEIGH  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PARENT = { tmpRes , pair , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

804 :	"dbContext"
		- NEIGH  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PARENT = { tmpRes , pair , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

804 :	"pair"
		- NEIGH  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PARENT = { tmpRes , pair , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

804 :	"first"
		- NEIGH  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PARENT = { tmpRes , pair , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

805 :	"createCoordinateReferenceSystem"
		- NEIGH  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PARENT = { tmpRes , pair , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

805 :	"pair"
		- NEIGH  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PARENT = { tmpRes , pair , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

805 :	"second"
		- NEIGH  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PARENT = { tmpRes , pair , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

807 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tmpRes , pair , & , for , }
		- SUCC   = { }

807 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tmpRes , pair , & , for , }
		- SUCC   = { }

825 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

825 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

825 :	"promoteTo3D"
		- NEIGH  = { promoteTo3D , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

825 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

825 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

825 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

825 :	"newName"
		- NEIGH  = { newName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

826 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

826 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

826 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

826 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

828 :	"geogCRS"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

828 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

828 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

828 :	"GeographicCRS"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

828 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

828 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

828 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

829 :	"if"
		- NEIGH  = { geogCRS , if , }
		- PARENT = { }
		- CHILD  = { == , if , coordinateSystem , geogCRS , size , axisList , & , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }

829 :	"geogCRS"
		- NEIGH  = { geogCRS , if , }
		- PARENT = { }
		- CHILD  = { == , if , coordinateSystem , geogCRS , size , axisList , & , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }

830 :	"&"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

830 :	"axisList"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

830 :	"geogCRS"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

830 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

830 :	"axisList"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

831 :	"if"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { datumEnsemble , geogCRS , nameStr , ! , GeographicCRS , > , newName , CRS , datum , < , axisList , METRE , EllipsoidalCS , common , nn_static_pointer_cast , UnitOfMeasure , AxisAbbreviation , if , AxisDirection , dbContext , Ellipsoidal_height , AxisName , identifiers , NAME_KEY , h , create , cs , upAxis , return , size , CoordinateSystemAxis , && , util , UP , IdentifiedObject , PropertyMap , empty , == , set , l_identifiers , & , }
		- PRED   = { coordinateSystem , geogCRS , axisList , & , }
		- SUCC   = { }

831 :	"axisList"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { datumEnsemble , geogCRS , nameStr , ! , GeographicCRS , > , newName , CRS , datum , < , axisList , METRE , EllipsoidalCS , common , nn_static_pointer_cast , UnitOfMeasure , AxisAbbreviation , if , AxisDirection , dbContext , Ellipsoidal_height , AxisName , identifiers , NAME_KEY , h , create , cs , upAxis , return , size , CoordinateSystemAxis , && , util , UP , IdentifiedObject , PropertyMap , empty , == , set , l_identifiers , & , }
		- PRED   = { coordinateSystem , geogCRS , axisList , & , }
		- SUCC   = { }

831 :	"size"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { datumEnsemble , geogCRS , nameStr , ! , GeographicCRS , > , newName , CRS , datum , < , axisList , METRE , EllipsoidalCS , common , nn_static_pointer_cast , UnitOfMeasure , AxisAbbreviation , if , AxisDirection , dbContext , Ellipsoidal_height , AxisName , identifiers , NAME_KEY , h , create , cs , upAxis , return , size , CoordinateSystemAxis , && , util , UP , IdentifiedObject , PropertyMap , empty , == , set , l_identifiers , & , }
		- PRED   = { coordinateSystem , geogCRS , axisList , & , }
		- SUCC   = { }

831 :	"=="
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { datumEnsemble , geogCRS , nameStr , ! , GeographicCRS , > , newName , CRS , datum , < , axisList , METRE , EllipsoidalCS , common , nn_static_pointer_cast , UnitOfMeasure , AxisAbbreviation , if , AxisDirection , dbContext , Ellipsoidal_height , AxisName , identifiers , NAME_KEY , h , create , cs , upAxis , return , size , CoordinateSystemAxis , && , util , UP , IdentifiedObject , PropertyMap , empty , == , set , l_identifiers , & , }
		- PRED   = { coordinateSystem , geogCRS , axisList , & , }
		- SUCC   = { }

832 :	"&"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , l_identifiers , == , && , dbContext , if , }

832 :	"l_identifiers"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , l_identifiers , == , && , dbContext , if , }

832 :	"identifiers"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , l_identifiers , == , && , dbContext , if , }

836 :	"if"
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , GEOGRAPHIC_3D_CRS , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }

836 :	"dbContext"
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , GEOGRAPHIC_3D_CRS , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }

836 :	"&&"
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , GEOGRAPHIC_3D_CRS , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }

836 :	"l_identifiers"
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , GEOGRAPHIC_3D_CRS , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }

836 :	"size"
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , GEOGRAPHIC_3D_CRS , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }

836 :	"=="
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , GEOGRAPHIC_3D_CRS , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }

837 :	"authFactory"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

837 :	"io"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

837 :	"AuthorityFactory"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

837 :	"create"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

838 :	"NN_NO_CHECK"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

838 :	"dbContext"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

838 :	"*"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

838 :	"l_identifiers"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

838 :	"codeSpace"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

839 :	"res"
		- NEIGH  = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

839 :	"authFactory"
		- NEIGH  = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

839 :	"createObjectsFromName"
		- NEIGH  = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

840 :	"nameStr"
		- NEIGH  = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

841 :	"io"
		- NEIGH  = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

841 :	"AuthorityFactory"
		- NEIGH  = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

841 :	"ObjectType"
		- NEIGH  = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

841 :	"GEOGRAPHIC_3D_CRS"
		- NEIGH  = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

843 :	"if"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { get , > , < , dynamic_cast , * , NN_NO_CHECK , is2DPartOf3D , firstRes , geogCRS , if , front , res , GeographicCRS , & , }
		- PRED   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- SUCC   = { }

843 :	"!"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { get , > , < , dynamic_cast , * , NN_NO_CHECK , is2DPartOf3D , firstRes , geogCRS , if , front , res , GeographicCRS , & , }
		- PRED   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- SUCC   = { }

843 :	"res"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { get , > , < , dynamic_cast , * , NN_NO_CHECK , is2DPartOf3D , firstRes , geogCRS , if , front , res , GeographicCRS , & , }
		- PRED   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- SUCC   = { }

843 :	"empty"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { get , > , < , dynamic_cast , * , NN_NO_CHECK , is2DPartOf3D , firstRes , geogCRS , if , front , res , GeographicCRS , & , }
		- PRED   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- SUCC   = { }

844 :	"&"
		- NEIGH  = { front , res , firstRes , & , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }

844 :	"firstRes"
		- NEIGH  = { front , res , firstRes , & , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }

844 :	"res"
		- NEIGH  = { front , res , firstRes , & , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }

844 :	"front"
		- NEIGH  = { front , res , firstRes , & , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }

845 :	"if"
		- NEIGH  = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { }

845 :	"geogCRS"
		- NEIGH  = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { }

845 :	"is2DPartOf3D"
		- NEIGH  = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { }

845 :	"NN_NO_CHECK"
		- NEIGH  = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { }

846 :	"dynamic_cast"
		- NEIGH  = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { }

846 :	"<"
		- NEIGH  = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { }

846 :	"GeographicCRS"
		- NEIGH  = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { }

846 :	"*"
		- NEIGH  = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { }

846 :	">"
		- NEIGH  = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { }

846 :	"firstRes"
		- NEIGH  = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { }

846 :	"get"
		- NEIGH  = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { }

847 :	"return"
		- NEIGH  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PARENT = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

847 :	"NN_NO_CHECK"
		- NEIGH  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PARENT = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

848 :	"util"
		- NEIGH  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PARENT = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

848 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PARENT = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

848 :	"<"
		- NEIGH  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PARENT = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

848 :	"CRS"
		- NEIGH  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PARENT = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

848 :	">"
		- NEIGH  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PARENT = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

848 :	"firstRes"
		- NEIGH  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PARENT = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

853 :	"upAxis"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

853 :	"cs"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

853 :	"CoordinateSystemAxis"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

853 :	"create"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

854 :	"util"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

854 :	"PropertyMap"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

854 :	"set"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

854 :	"IdentifiedObject"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

854 :	"NAME_KEY"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

855 :	"cs"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

855 :	"AxisName"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

855 :	"Ellipsoidal_height"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

856 :	"cs"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

856 :	"AxisAbbreviation"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

856 :	"h"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

856 :	"cs"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

856 :	"AxisDirection"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

856 :	"UP"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

857 :	"common"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

857 :	"UnitOfMeasure"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

857 :	"METRE"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

858 :	"cs"
		- NEIGH  = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }

858 :	"cs"
		- NEIGH  = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }

858 :	"EllipsoidalCS"
		- NEIGH  = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }

858 :	"create"
		- NEIGH  = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }

859 :	"util"
		- NEIGH  = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }

859 :	"PropertyMap"
		- NEIGH  = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }

859 :	"axisList"
		- NEIGH  = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }

859 :	"axisList"
		- NEIGH  = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }

859 :	"upAxis"
		- NEIGH  = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }

860 :	"return"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

860 :	"util"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

860 :	"nn_static_pointer_cast"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

860 :	"<"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

860 :	"CRS"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

860 :	">"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

860 :	"GeographicCRS"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

860 :	"create"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

861 :	"util"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

861 :	"PropertyMap"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

861 :	"set"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

861 :	"common"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

861 :	"IdentifiedObject"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

861 :	"NAME_KEY"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

862 :	"!"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

862 :	"newName"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

862 :	"empty"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

862 :	"newName"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

862 :	"nameStr"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

863 :	"geogCRS"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

863 :	"datum"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

863 :	"geogCRS"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

863 :	"datumEnsemble"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

863 :	"cs"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

867 :	"projCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

867 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

867 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

867 :	"ProjectedCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

867 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

867 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

867 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

868 :	"if"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { == , if , coordinateSystem , size , axisList , projCRS , & , }
		- PRED   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }

868 :	"projCRS"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { == , if , coordinateSystem , size , axisList , projCRS , & , }
		- PRED   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }

869 :	"&"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

869 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

869 :	"projCRS"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

869 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

869 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

870 :	"if"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { projCRS , if , }
		- CHILD  = { NN_NO_CHECK , nameStr , empty , ! , newName , CRS , < , derivingConversion , axisList , ProjectedCRS , return , CartesianCS , nn_dynamic_pointer_cast , METRE , common , create , h , AxisDirection , dbContext , Ellipsoidal_height , AxisName , NAME_KEY , UP , IdentifiedObject , PropertyMap , cs , upAxis , promoteTo3D , CoordinateSystemAxis , util , > , projCRS , set , GeodeticCRS , string , std , nn_static_pointer_cast , UnitOfMeasure , AxisAbbreviation , baseCRS , base3DCRS , }
		- PRED   = { coordinateSystem , axisList , projCRS , & , }
		- SUCC   = { }

870 :	"axisList"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { projCRS , if , }
		- CHILD  = { NN_NO_CHECK , nameStr , empty , ! , newName , CRS , < , derivingConversion , axisList , ProjectedCRS , return , CartesianCS , nn_dynamic_pointer_cast , METRE , common , create , h , AxisDirection , dbContext , Ellipsoidal_height , AxisName , NAME_KEY , UP , IdentifiedObject , PropertyMap , cs , upAxis , promoteTo3D , CoordinateSystemAxis , util , > , projCRS , set , GeodeticCRS , string , std , nn_static_pointer_cast , UnitOfMeasure , AxisAbbreviation , baseCRS , base3DCRS , }
		- PRED   = { coordinateSystem , axisList , projCRS , & , }
		- SUCC   = { }

870 :	"size"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { projCRS , if , }
		- CHILD  = { NN_NO_CHECK , nameStr , empty , ! , newName , CRS , < , derivingConversion , axisList , ProjectedCRS , return , CartesianCS , nn_dynamic_pointer_cast , METRE , common , create , h , AxisDirection , dbContext , Ellipsoidal_height , AxisName , NAME_KEY , UP , IdentifiedObject , PropertyMap , cs , upAxis , promoteTo3D , CoordinateSystemAxis , util , > , projCRS , set , GeodeticCRS , string , std , nn_static_pointer_cast , UnitOfMeasure , AxisAbbreviation , baseCRS , base3DCRS , }
		- PRED   = { coordinateSystem , axisList , projCRS , & , }
		- SUCC   = { }

870 :	"=="
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { projCRS , if , }
		- CHILD  = { NN_NO_CHECK , nameStr , empty , ! , newName , CRS , < , derivingConversion , axisList , ProjectedCRS , return , CartesianCS , nn_dynamic_pointer_cast , METRE , common , create , h , AxisDirection , dbContext , Ellipsoidal_height , AxisName , NAME_KEY , UP , IdentifiedObject , PropertyMap , cs , upAxis , promoteTo3D , CoordinateSystemAxis , util , > , projCRS , set , GeodeticCRS , string , std , nn_static_pointer_cast , UnitOfMeasure , AxisAbbreviation , baseCRS , base3DCRS , }
		- PRED   = { coordinateSystem , axisList , projCRS , & , }
		- SUCC   = { }

871 :	"base3DCRS"
		- NEIGH  = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }

872 :	"projCRS"
		- NEIGH  = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }

872 :	"baseCRS"
		- NEIGH  = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }

872 :	"promoteTo3D"
		- NEIGH  = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }

872 :	"std"
		- NEIGH  = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }

872 :	"string"
		- NEIGH  = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }

872 :	"dbContext"
		- NEIGH  = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }

873 :	"upAxis"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

873 :	"cs"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

873 :	"CoordinateSystemAxis"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

873 :	"create"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

874 :	"util"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

874 :	"PropertyMap"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

874 :	"set"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

874 :	"IdentifiedObject"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

874 :	"NAME_KEY"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

875 :	"cs"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

875 :	"AxisName"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

875 :	"Ellipsoidal_height"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

876 :	"cs"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

876 :	"AxisAbbreviation"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

876 :	"h"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

876 :	"cs"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

876 :	"AxisDirection"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

876 :	"UP"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

877 :	"common"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

877 :	"UnitOfMeasure"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

877 :	"METRE"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

878 :	"cs"
		- NEIGH  = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }

878 :	"cs"
		- NEIGH  = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }

878 :	"CartesianCS"
		- NEIGH  = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }

878 :	"create"
		- NEIGH  = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }

878 :	"util"
		- NEIGH  = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }

878 :	"PropertyMap"
		- NEIGH  = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }

878 :	"axisList"
		- NEIGH  = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }

879 :	"axisList"
		- NEIGH  = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }

879 :	"upAxis"
		- NEIGH  = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }

880 :	"return"
		- NEIGH  = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

880 :	"util"
		- NEIGH  = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

880 :	"nn_static_pointer_cast"
		- NEIGH  = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

880 :	"<"
		- NEIGH  = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

880 :	"CRS"
		- NEIGH  = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

880 :	">"
		- NEIGH  = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

880 :	"ProjectedCRS"
		- NEIGH  = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

880 :	"create"
		- NEIGH  = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

881 :	"util"
		- NEIGH  = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

881 :	"PropertyMap"
		- NEIGH  = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

881 :	"set"
		- NEIGH  = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

881 :	"common"
		- NEIGH  = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

881 :	"IdentifiedObject"
		- NEIGH  = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

881 :	"NAME_KEY"
		- NEIGH  = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

882 :	"!"
		- NEIGH  = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

882 :	"newName"
		- NEIGH  = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

882 :	"empty"
		- NEIGH  = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

882 :	"newName"
		- NEIGH  = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

882 :	"nameStr"
		- NEIGH  = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

883 :	"NN_NO_CHECK"
		- NEIGH  = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

884 :	"util"
		- NEIGH  = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

884 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

884 :	"<"
		- NEIGH  = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

884 :	"GeodeticCRS"
		- NEIGH  = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

884 :	">"
		- NEIGH  = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

884 :	"base3DCRS"
		- NEIGH  = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

885 :	"projCRS"
		- NEIGH  = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

885 :	"derivingConversion"
		- NEIGH  = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

885 :	"cs"
		- NEIGH  = { cs , derivingConversion , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , IdentifiedObject , PropertyMap , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

889 :	"boundCRS"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { boundCRS , if , }

889 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { boundCRS , if , }

889 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { boundCRS , if , }

889 :	"BoundCRS"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { boundCRS , if , }

889 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { boundCRS , if , }

889 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { boundCRS , if , }

889 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { boundCRS , if , }

890 :	"if"
		- NEIGH  = { boundCRS , if , }
		- PARENT = { }
		- CHILD  = { hubCRS , dbContext , newName , transformation , promoteTo3D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PRED   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- SUCC   = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

890 :	"boundCRS"
		- NEIGH  = { boundCRS , if , }
		- PARENT = { }
		- CHILD  = { hubCRS , dbContext , newName , transformation , promoteTo3D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PRED   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- SUCC   = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

891 :	"return"
		- NEIGH  = { hubCRS , dbContext , newName , transformation , promoteTo3D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

891 :	"BoundCRS"
		- NEIGH  = { hubCRS , dbContext , newName , transformation , promoteTo3D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

891 :	"create"
		- NEIGH  = { hubCRS , dbContext , newName , transformation , promoteTo3D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

892 :	"boundCRS"
		- NEIGH  = { hubCRS , dbContext , newName , transformation , promoteTo3D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

892 :	"baseCRS"
		- NEIGH  = { hubCRS , dbContext , newName , transformation , promoteTo3D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

892 :	"promoteTo3D"
		- NEIGH  = { hubCRS , dbContext , newName , transformation , promoteTo3D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

892 :	"newName"
		- NEIGH  = { hubCRS , dbContext , newName , transformation , promoteTo3D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

892 :	"dbContext"
		- NEIGH  = { hubCRS , dbContext , newName , transformation , promoteTo3D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

893 :	"boundCRS"
		- NEIGH  = { hubCRS , dbContext , newName , transformation , promoteTo3D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

893 :	"hubCRS"
		- NEIGH  = { hubCRS , dbContext , newName , transformation , promoteTo3D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

893 :	"boundCRS"
		- NEIGH  = { hubCRS , dbContext , newName , transformation , promoteTo3D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

893 :	"transformation"
		- NEIGH  = { hubCRS , dbContext , newName , transformation , promoteTo3D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

896 :	"return"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { }

896 :	"NN_NO_CHECK"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { }

897 :	"std"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { }

897 :	"static_pointer_cast"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { }

897 :	"<"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { }

897 :	"CRS"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { }

897 :	">"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { }

897 :	"shared_from_this"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { }

897 :	"as_nullable"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { }

912 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

912 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

912 :	"demoteTo2D"
		- NEIGH  = { demoteTo2D , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

912 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

912 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

912 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

912 :	"newName"
		- NEIGH  = { newName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

913 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

913 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

913 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

913 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

914 :	"geogCRS"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

914 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

914 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

914 :	"GeographicCRS"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

914 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

914 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

914 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

915 :	"if"
		- NEIGH  = { geogCRS , if , }
		- PARENT = { }
		- CHILD  = { newName , dbContext , geogCRS , demoteTo2D , return , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }

915 :	"geogCRS"
		- NEIGH  = { geogCRS , if , }
		- PARENT = { }
		- CHILD  = { newName , dbContext , geogCRS , demoteTo2D , return , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }

916 :	"return"
		- NEIGH  = { newName , dbContext , geogCRS , demoteTo2D , return , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

916 :	"geogCRS"
		- NEIGH  = { newName , dbContext , geogCRS , demoteTo2D , return , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

916 :	"demoteTo2D"
		- NEIGH  = { newName , dbContext , geogCRS , demoteTo2D , return , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

916 :	"newName"
		- NEIGH  = { newName , dbContext , geogCRS , demoteTo2D , return , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

916 :	"dbContext"
		- NEIGH  = { newName , dbContext , geogCRS , demoteTo2D , return , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

919 :	"projCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

919 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

919 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

919 :	"ProjectedCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

919 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

919 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

919 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

920 :	"if"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { dbContext , newName , projCRS , demoteTo2D , return , }
		- PRED   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }

920 :	"projCRS"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { dbContext , newName , projCRS , demoteTo2D , return , }
		- PRED   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }

921 :	"return"
		- NEIGH  = { dbContext , newName , projCRS , demoteTo2D , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

921 :	"projCRS"
		- NEIGH  = { dbContext , newName , projCRS , demoteTo2D , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

921 :	"demoteTo2D"
		- NEIGH  = { dbContext , newName , projCRS , demoteTo2D , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

921 :	"newName"
		- NEIGH  = { dbContext , newName , projCRS , demoteTo2D , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

921 :	"dbContext"
		- NEIGH  = { dbContext , newName , projCRS , demoteTo2D , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

924 :	"boundCRS"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { boundCRS , if , }

924 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { boundCRS , if , }

924 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { boundCRS , if , }

924 :	"BoundCRS"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { boundCRS , if , }

924 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { boundCRS , if , }

924 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { boundCRS , if , }

924 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { boundCRS , if , }

925 :	"if"
		- NEIGH  = { boundCRS , if , }
		- PARENT = { }
		- CHILD  = { transformation , hubCRS , dbContext , newName , demoteTo2D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PRED   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- SUCC   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }

925 :	"boundCRS"
		- NEIGH  = { boundCRS , if , }
		- PARENT = { }
		- CHILD  = { transformation , hubCRS , dbContext , newName , demoteTo2D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PRED   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- SUCC   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }

926 :	"return"
		- NEIGH  = { transformation , hubCRS , dbContext , newName , demoteTo2D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

926 :	"BoundCRS"
		- NEIGH  = { transformation , hubCRS , dbContext , newName , demoteTo2D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

926 :	"create"
		- NEIGH  = { transformation , hubCRS , dbContext , newName , demoteTo2D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

927 :	"boundCRS"
		- NEIGH  = { transformation , hubCRS , dbContext , newName , demoteTo2D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

927 :	"baseCRS"
		- NEIGH  = { transformation , hubCRS , dbContext , newName , demoteTo2D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

927 :	"demoteTo2D"
		- NEIGH  = { transformation , hubCRS , dbContext , newName , demoteTo2D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

927 :	"newName"
		- NEIGH  = { transformation , hubCRS , dbContext , newName , demoteTo2D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

927 :	"dbContext"
		- NEIGH  = { transformation , hubCRS , dbContext , newName , demoteTo2D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

928 :	"boundCRS"
		- NEIGH  = { transformation , hubCRS , dbContext , newName , demoteTo2D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

928 :	"hubCRS"
		- NEIGH  = { transformation , hubCRS , dbContext , newName , demoteTo2D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

928 :	"boundCRS"
		- NEIGH  = { transformation , hubCRS , dbContext , newName , demoteTo2D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

928 :	"transformation"
		- NEIGH  = { transformation , hubCRS , dbContext , newName , demoteTo2D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

931 :	"compoundCRS"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { compoundCRS , if , }

931 :	"dynamic_cast"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { compoundCRS , if , }

931 :	"<"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { compoundCRS , if , }

931 :	"CompoundCRS"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { compoundCRS , if , }

931 :	"*"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { compoundCRS , if , }

931 :	">"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { compoundCRS , if , }

931 :	"this"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { compoundCRS , if , }

932 :	"if"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { >= , size , components , if , componentReferenceSystems , compoundCRS , & , }
		- PRED   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- SUCC   = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

932 :	"compoundCRS"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { >= , size , components , if , componentReferenceSystems , compoundCRS , & , }
		- PRED   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- SUCC   = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

933 :	"&"
		- NEIGH  = { componentReferenceSystems , components , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { >= , size , components , if , }

933 :	"components"
		- NEIGH  = { componentReferenceSystems , components , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { >= , size , components , if , }

933 :	"compoundCRS"
		- NEIGH  = { componentReferenceSystems , components , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { >= , size , components , if , }

933 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , components , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { >= , size , components , if , }

934 :	"if"
		- NEIGH  = { >= , size , components , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { components , return , }
		- PRED   = { componentReferenceSystems , components , compoundCRS , & , }
		- SUCC   = { }

934 :	"components"
		- NEIGH  = { >= , size , components , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { components , return , }
		- PRED   = { componentReferenceSystems , components , compoundCRS , & , }
		- SUCC   = { }

934 :	"size"
		- NEIGH  = { >= , size , components , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { components , return , }
		- PRED   = { componentReferenceSystems , components , compoundCRS , & , }
		- SUCC   = { }

934 :	">="
		- NEIGH  = { >= , size , components , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { components , return , }
		- PRED   = { componentReferenceSystems , components , compoundCRS , & , }
		- SUCC   = { }

935 :	"return"
		- NEIGH  = { components , return , }
		- PARENT = { >= , size , components , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

935 :	"components"
		- NEIGH  = { components , return , }
		- PARENT = { >= , size , components , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

939 :	"return"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

939 :	"NN_NO_CHECK"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

940 :	"std"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

940 :	"static_pointer_cast"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

940 :	"<"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

940 :	"CRS"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

940 :	">"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

940 :	"shared_from_this"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

940 :	"as_nullable"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

947 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

947 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

947 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

947 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

947 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

947 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

947 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

947 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

948 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

948 :	"_identify"
		- NEIGH  = { _identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

948 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

948 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

948 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

949 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

957 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

957 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

958 :	"datum"
		- NEIGH  = { DatumPtr , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , DatumEnsemblePtr , datum , }

958 :	"DatumPtr"
		- NEIGH  = { DatumPtr , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , DatumEnsemblePtr , datum , }

958 :	"datum"
		- NEIGH  = { DatumPtr , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , DatumEnsemblePtr , datum , }

959 :	"datum"
		- NEIGH  = { datumEnsemble , DatumEnsemblePtr , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { DatumPtr , datum , }
		- SUCC   = { coordinateSystem , CoordinateSystemNNPtr , cs , }

959 :	"DatumEnsemblePtr"
		- NEIGH  = { datumEnsemble , DatumEnsemblePtr , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { DatumPtr , datum , }
		- SUCC   = { coordinateSystem , CoordinateSystemNNPtr , cs , }

959 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , DatumEnsemblePtr , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { DatumPtr , datum , }
		- SUCC   = { coordinateSystem , CoordinateSystemNNPtr , cs , }

960 :	"cs"
		- NEIGH  = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumEnsemble , DatumEnsemblePtr , datum , }
		- SUCC   = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }

960 :	"CoordinateSystemNNPtr"
		- NEIGH  = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumEnsemble , DatumEnsemblePtr , datum , }
		- SUCC   = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }

960 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumEnsemble , DatumEnsemblePtr , datum , }
		- SUCC   = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }

962 :	"Private"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

962 :	"datum"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

962 :	"DatumPtr"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

962 :	"&"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

962 :	"datumIn"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

963 :	"datum"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

963 :	"DatumEnsemblePtr"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

963 :	"&"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

963 :	"datumEnsembleIn"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

964 :	"cs"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

964 :	"CoordinateSystemNNPtr"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

964 :	"&"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

964 :	"csIn"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

965 :	"datum"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

965 :	"datumIn"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

965 :	"datumEnsemble"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

965 :	"datumEnsembleIn"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

966 :	"coordinateSystem"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

966 :	"csIn"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

967 :	"if"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { Exception , util , throw , }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

967 :	"datum"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { Exception , util , throw , }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

967 :	"+"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { Exception , util , throw , }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

967 :	"datumEnsemble"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { Exception , util , throw , }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

967 :	"!="
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { Exception , util , throw , }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

968 :	"throw"
		- NEIGH  = { Exception , util , throw , }
		- PARENT = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

968 :	"util"
		- NEIGH  = { Exception , util , throw , }
		- PARENT = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

968 :	"Exception"
		- NEIGH  = { Exception , util , throw , }
		- PARENT = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

976 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

976 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

976 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

976 :	"DatumPtr"
		- NEIGH  = { DatumPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

976 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

976 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

977 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

977 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

977 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

977 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

978 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

978 :	"CoordinateSystemNNPtr"
		- NEIGH  = { CoordinateSystemNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

978 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

978 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

979 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

979 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

979 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

979 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

979 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

979 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

979 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

979 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

979 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

983 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

983 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

983 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

983 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

983 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

984 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

984 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

984 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

984 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

984 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

984 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

984 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

984 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

984 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

984 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

984 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

989 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

989 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1000 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1000 :	"DatumPtr"
		- NEIGH  = { DatumPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1000 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1000 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1000 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1000 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1000 :	"return"
		- NEIGH  = { datum , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1000 :	"d"
		- NEIGH  = { datum , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1000 :	"datum"
		- NEIGH  = { datum , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1010 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1010 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1010 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1010 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1010 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1010 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1011 :	"return"
		- NEIGH  = { datumEnsemble , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1011 :	"d"
		- NEIGH  = { datumEnsemble , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1011 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1020 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1020 :	"CoordinateSystemNNPtr"
		- NEIGH  = { CoordinateSystemNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1020 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1020 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1020 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1020 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1021 :	"return"
		- NEIGH  = { coordinateSystem , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1021 :	"d"
		- NEIGH  = { coordinateSystem , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1021 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1026 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1026 :	"baseIsEquivalentTo"
		- NEIGH  = { baseIsEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1027 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1027 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1027 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1027 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1027 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1027 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1027 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1027 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1028 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1028 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1028 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1028 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1029 :	"otherSingleCRS"
		- NEIGH  = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

1029 :	"dynamic_cast"
		- NEIGH  = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

1029 :	"<"
		- NEIGH  = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

1029 :	"SingleCRS"
		- NEIGH  = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

1029 :	"*"
		- NEIGH  = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

1029 :	">"
		- NEIGH  = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

1029 :	"other"
		- NEIGH  = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

1030 :	"if"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { datum , d , thisDatum , & , }

1030 :	"otherSingleCRS"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { datum , d , thisDatum , & , }

1030 :	"=="
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { datum , d , thisDatum , & , }

1030 :	"||"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { datum , d , thisDatum , & , }

1031 :	"criterion"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { datum , d , thisDatum , & , }

1031 :	"=="
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { datum , d , thisDatum , & , }

1031 :	"util"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { datum , d , thisDatum , & , }

1031 :	"IComparable"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { datum , d , thisDatum , & , }

1031 :	"Criterion"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { datum , d , thisDatum , & , }

1031 :	"STRICT"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { datum , d , thisDatum , & , }

1031 :	"&&"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { datum , d , thisDatum , & , }

1032 :	"!"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { datum , d , thisDatum , & , }

1032 :	"ObjectUsage"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { datum , d , thisDatum , & , }

1032 :	"_isEquivalentTo"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { datum , d , thisDatum , & , }

1032 :	"other"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { datum , d , thisDatum , & , }

1032 :	"criterion"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { datum , d , thisDatum , & , }

1032 :	"dbContext"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { datum , d , thisDatum , & , }

1033 :	"return"
		- NEIGH  = { return , }
		- PARENT = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1035 :	"&"
		- NEIGH  = { datum , d , thisDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- SUCC   = { otherSingleCRS , datum , d , otherDatum , & , }

1035 :	"thisDatum"
		- NEIGH  = { datum , d , thisDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- SUCC   = { otherSingleCRS , datum , d , otherDatum , & , }

1035 :	"d"
		- NEIGH  = { datum , d , thisDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- SUCC   = { otherSingleCRS , datum , d , otherDatum , & , }

1035 :	"datum"
		- NEIGH  = { datum , d , thisDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- SUCC   = { otherSingleCRS , datum , d , otherDatum , & , }

1036 :	"&"
		- NEIGH  = { otherSingleCRS , datum , d , otherDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum , d , thisDatum , & , }
		- SUCC   = { thisDatum , if , }

1036 :	"otherDatum"
		- NEIGH  = { otherSingleCRS , datum , d , otherDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum , d , thisDatum , & , }
		- SUCC   = { thisDatum , if , }

1036 :	"otherSingleCRS"
		- NEIGH  = { otherSingleCRS , datum , d , otherDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum , d , thisDatum , & , }
		- SUCC   = { thisDatum , if , }

1036 :	"d"
		- NEIGH  = { otherSingleCRS , datum , d , otherDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum , d , thisDatum , & , }
		- SUCC   = { thisDatum , if , }

1036 :	"datum"
		- NEIGH  = { otherSingleCRS , datum , d , otherDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum , d , thisDatum , & , }
		- SUCC   = { thisDatum , if , }

1037 :	"if"
		- NEIGH  = { thisDatum , if , }
		- PARENT = { }
		- CHILD  = { dbContext , criterion , get , otherDatum , _isEquivalentTo , thisDatum , ! , if , }
		- PRED   = { otherSingleCRS , datum , d , otherDatum , & , }
		- SUCC   = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }

1037 :	"thisDatum"
		- NEIGH  = { thisDatum , if , }
		- PARENT = { }
		- CHILD  = { dbContext , criterion , get , otherDatum , _isEquivalentTo , thisDatum , ! , if , }
		- PRED   = { otherSingleCRS , datum , d , otherDatum , & , }
		- SUCC   = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }

1038 :	"if"
		- NEIGH  = { dbContext , criterion , get , otherDatum , _isEquivalentTo , thisDatum , ! , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1038 :	"!"
		- NEIGH  = { dbContext , criterion , get , otherDatum , _isEquivalentTo , thisDatum , ! , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1038 :	"thisDatum"
		- NEIGH  = { dbContext , criterion , get , otherDatum , _isEquivalentTo , thisDatum , ! , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1038 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , criterion , get , otherDatum , _isEquivalentTo , thisDatum , ! , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1038 :	"otherDatum"
		- NEIGH  = { dbContext , criterion , get , otherDatum , _isEquivalentTo , thisDatum , ! , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1038 :	"get"
		- NEIGH  = { dbContext , criterion , get , otherDatum , _isEquivalentTo , thisDatum , ! , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1038 :	"criterion"
		- NEIGH  = { dbContext , criterion , get , otherDatum , _isEquivalentTo , thisDatum , ! , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1039 :	"dbContext"
		- NEIGH  = { dbContext , criterion , get , otherDatum , _isEquivalentTo , thisDatum , ! , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1040 :	"return"
		- NEIGH  = { return , }
		- PARENT = { dbContext , criterion , get , otherDatum , _isEquivalentTo , thisDatum , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1043 :	"if"
		- NEIGH  = { otherDatum , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1043 :	"otherDatum"
		- NEIGH  = { otherDatum , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1044 :	"return"
		- NEIGH  = { return , }
		- PARENT = { otherDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1049 :	"return"
		- NEIGH  = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisDatum , if , }
		- SUCC   = { }

1049 :	"d"
		- NEIGH  = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisDatum , if , }
		- SUCC   = { }

1049 :	"coordinateSystem"
		- NEIGH  = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisDatum , if , }
		- SUCC   = { }

1049 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisDatum , if , }
		- SUCC   = { }

1050 :	"otherSingleCRS"
		- NEIGH  = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisDatum , if , }
		- SUCC   = { }

1050 :	"d"
		- NEIGH  = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisDatum , if , }
		- SUCC   = { }

1050 :	"coordinateSystem"
		- NEIGH  = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisDatum , if , }
		- SUCC   = { }

1050 :	"get"
		- NEIGH  = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisDatum , if , }
		- SUCC   = { }

1050 :	"criterion"
		- NEIGH  = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisDatum , if , }
		- SUCC   = { }

1051 :	"dbContext"
		- NEIGH  = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisDatum , if , }
		- SUCC   = { }

1051 :	"&&"
		- NEIGH  = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisDatum , if , }
		- SUCC   = { }

1052 :	"getExtensionProj4"
		- NEIGH  = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisDatum , if , }
		- SUCC   = { }

1052 :	"=="
		- NEIGH  = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisDatum , if , }
		- SUCC   = { }

1052 :	"otherSingleCRS"
		- NEIGH  = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisDatum , if , }
		- SUCC   = { }

1052 :	"getExtensionProj4"
		- NEIGH  = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisDatum , if , }
		- SUCC   = { }

1058 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1058 :	"exportDatumOrDatumEnsembleToWkt"
		- NEIGH  = { exportDatumOrDatumEnsembleToWkt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1059 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1059 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1059 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1059 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1061 :	"&"
		- NEIGH  = { datum , d , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datum , if , }

1061 :	"l_datum"
		- NEIGH  = { datum , d , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datum , if , }

1061 :	"d"
		- NEIGH  = { datum , d , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datum , if , }

1061 :	"datum"
		- NEIGH  = { datum , d , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datum , if , }

1062 :	"if"
		- NEIGH  = { l_datum , if , }
		- PARENT = { }
		- CHILD  = { assert , datumEnsemble , d , & , formatter , l_datumEnsemble , _exportToWKT , l_datum , }
		- PRED   = { datum , d , l_datum , & , }
		- SUCC   = { }

1062 :	"l_datum"
		- NEIGH  = { l_datum , if , }
		- PARENT = { }
		- CHILD  = { assert , datumEnsemble , d , & , formatter , l_datumEnsemble , _exportToWKT , l_datum , }
		- PRED   = { datum , d , l_datum , & , }
		- SUCC   = { }

1063 :	"l_datum"
		- NEIGH  = { formatter , _exportToWKT , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1063 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1063 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1065 :	"&"
		- NEIGH  = { datumEnsemble , d , l_datumEnsemble , & , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datumEnsemble , assert , }

1065 :	"l_datumEnsemble"
		- NEIGH  = { datumEnsemble , d , l_datumEnsemble , & , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datumEnsemble , assert , }

1065 :	"d"
		- NEIGH  = { datumEnsemble , d , l_datumEnsemble , & , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datumEnsemble , assert , }

1065 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , d , l_datumEnsemble , & , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datumEnsemble , assert , }

1066 :	"assert"
		- NEIGH  = { l_datumEnsemble , assert , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { datumEnsemble , d , l_datumEnsemble , & , }
		- SUCC   = { formatter , _exportToWKT , l_datumEnsemble , }

1066 :	"l_datumEnsemble"
		- NEIGH  = { l_datumEnsemble , assert , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { datumEnsemble , d , l_datumEnsemble , & , }
		- SUCC   = { formatter , _exportToWKT , l_datumEnsemble , }

1067 :	"l_datumEnsemble"
		- NEIGH  = { formatter , _exportToWKT , l_datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , assert , }
		- SUCC   = { }

1067 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , l_datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , assert , }
		- SUCC   = { }

1067 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , l_datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , assert , }
		- SUCC   = { }

1075 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1075 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1076 :	"std"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum_ , GeodeticReferenceFramePtr , datum , }

1076 :	"vector"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum_ , GeodeticReferenceFramePtr , datum , }

1076 :	"<"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum_ , GeodeticReferenceFramePtr , datum , }

1076 :	"operation"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum_ , GeodeticReferenceFramePtr , datum , }

1076 :	"PointMotionOperationNNPtr"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum_ , GeodeticReferenceFramePtr , datum , }

1076 :	">"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum_ , GeodeticReferenceFramePtr , datum , }

1076 :	"velocityModel"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum_ , GeodeticReferenceFramePtr , datum , }

1077 :	"datum"
		- NEIGH  = { datum_ , GeodeticReferenceFramePtr , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- SUCC   = { datum , datum_ , datumIn , & , GeodeticReferenceFramePtr , Private , }

1077 :	"GeodeticReferenceFramePtr"
		- NEIGH  = { datum_ , GeodeticReferenceFramePtr , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- SUCC   = { datum , datum_ , datumIn , & , GeodeticReferenceFramePtr , Private , }

1077 :	"datum_"
		- NEIGH  = { datum_ , GeodeticReferenceFramePtr , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- SUCC   = { datum , datum_ , datumIn , & , GeodeticReferenceFramePtr , Private , }

1079 :	"Private"
		- NEIGH  = { datum , datum_ , datumIn , & , GeodeticReferenceFramePtr , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , GeodeticReferenceFramePtr , datum , }
		- SUCC   = { }

1079 :	"datum"
		- NEIGH  = { datum , datum_ , datumIn , & , GeodeticReferenceFramePtr , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , GeodeticReferenceFramePtr , datum , }
		- SUCC   = { }

1079 :	"GeodeticReferenceFramePtr"
		- NEIGH  = { datum , datum_ , datumIn , & , GeodeticReferenceFramePtr , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , GeodeticReferenceFramePtr , datum , }
		- SUCC   = { }

1079 :	"&"
		- NEIGH  = { datum , datum_ , datumIn , & , GeodeticReferenceFramePtr , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , GeodeticReferenceFramePtr , datum , }
		- SUCC   = { }

1079 :	"datumIn"
		- NEIGH  = { datum , datum_ , datumIn , & , GeodeticReferenceFramePtr , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , GeodeticReferenceFramePtr , datum , }
		- SUCC   = { }

1080 :	"datum_"
		- NEIGH  = { datum , datum_ , datumIn , & , GeodeticReferenceFramePtr , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , GeodeticReferenceFramePtr , datum , }
		- SUCC   = { }

1080 :	"datumIn"
		- NEIGH  = { datum , datum_ , datumIn , & , GeodeticReferenceFramePtr , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , GeodeticReferenceFramePtr , datum , }
		- SUCC   = { }

1085 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1085 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1085 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1086 :	"checkEnsembleForGeodeticCRS"
		- NEIGH  = { checkEnsembleForGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1086 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1086 :	"GeodeticReferenceFramePtr"
		- NEIGH  = { GeodeticReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1086 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1086 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1087 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1087 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1087 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1087 :	"ensemble"
		- NEIGH  = { ensemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1088 :	"*"
		- NEIGH  = { msg , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumIn , if , }

1088 :	"msg"
		- NEIGH  = { msg , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumIn , if , }

1089 :	"if"
		- NEIGH  = { datumIn , if , }
		- PARENT = { }
		- CHILD  = { msg , ! , ensemble , if , }
		- PRED   = { msg , * , }
		- SUCC   = { msg , Exception , util , throw , }

1089 :	"datumIn"
		- NEIGH  = { datumIn , if , }
		- PARENT = { }
		- CHILD  = { msg , ! , ensemble , if , }
		- PRED   = { msg , * , }
		- SUCC   = { msg , Exception , util , throw , }

1090 :	"if"
		- NEIGH  = { ! , ensemble , if , }
		- PARENT = { datumIn , if , }
		- CHILD  = { ensemble , return , }
		- PRED   = { }
		- SUCC   = { msg , }

1090 :	"!"
		- NEIGH  = { ! , ensemble , if , }
		- PARENT = { datumIn , if , }
		- CHILD  = { ensemble , return , }
		- PRED   = { }
		- SUCC   = { msg , }

1090 :	"ensemble"
		- NEIGH  = { ! , ensemble , if , }
		- PARENT = { datumIn , if , }
		- CHILD  = { ensemble , return , }
		- PRED   = { }
		- SUCC   = { msg , }

1091 :	"return"
		- NEIGH  = { ensemble , return , }
		- PARENT = { ! , ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1091 :	"ensemble"
		- NEIGH  = { ensemble , return , }
		- PARENT = { ! , ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1093 :	"msg"
		- NEIGH  = { msg , }
		- PARENT = { datumIn , if , }
		- CHILD  = { }
		- PRED   = { ! , ensemble , if , }
		- SUCC   = { }

1094 :	"if"
		- NEIGH  = { ensemble , if , }
		- PARENT = { datumIn , if , }
		- CHILD  = { if , get , * , grfFirst , empty , msg , datums , ! , < , dynamic_cast , > , assert , datum , ensemble , GeodeticReferenceFrame , & , }
		- PRED   = { }
		- SUCC   = { }

1094 :	"ensemble"
		- NEIGH  = { ensemble , if , }
		- PARENT = { datumIn , if , }
		- CHILD  = { if , get , * , grfFirst , empty , msg , datums , ! , < , dynamic_cast , > , assert , datum , ensemble , GeodeticReferenceFrame , & , }
		- PRED   = { }
		- SUCC   = { }

1095 :	"&"
		- NEIGH  = { ensemble , datums , & , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , datums , ! , assert , }

1095 :	"datums"
		- NEIGH  = { ensemble , datums , & , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , datums , ! , assert , }

1095 :	"ensemble"
		- NEIGH  = { ensemble , datums , & , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , datums , ! , assert , }

1095 :	"datums"
		- NEIGH  = { ensemble , datums , & , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , datums , ! , assert , }

1096 :	"assert"
		- NEIGH  = { empty , datums , ! , assert , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { ensemble , datums , & , }
		- SUCC   = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }

1096 :	"!"
		- NEIGH  = { empty , datums , ! , assert , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { ensemble , datums , & , }
		- SUCC   = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }

1096 :	"datums"
		- NEIGH  = { empty , datums , ! , assert , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { ensemble , datums , & , }
		- SUCC   = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }

1096 :	"empty"
		- NEIGH  = { empty , datums , ! , assert , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { ensemble , datums , & , }
		- SUCC   = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }

1097 :	"grfFirst"
		- NEIGH  = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

1098 :	"dynamic_cast"
		- NEIGH  = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

1098 :	"<"
		- NEIGH  = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

1098 :	"datum"
		- NEIGH  = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

1098 :	"GeodeticReferenceFrame"
		- NEIGH  = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

1098 :	"*"
		- NEIGH  = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

1098 :	">"
		- NEIGH  = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

1098 :	"datums"
		- NEIGH  = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

1098 :	"get"
		- NEIGH  = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

1099 :	"if"
		- NEIGH  = { grfFirst , if , }
		- PARENT = { ensemble , if , }
		- CHILD  = { ensemble , return , }
		- PRED   = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }
		- SUCC   = { msg , }

1099 :	"grfFirst"
		- NEIGH  = { grfFirst , if , }
		- PARENT = { ensemble , if , }
		- CHILD  = { ensemble , return , }
		- PRED   = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }
		- SUCC   = { msg , }

1100 :	"return"
		- NEIGH  = { ensemble , return , }
		- PARENT = { grfFirst , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1100 :	"ensemble"
		- NEIGH  = { ensemble , return , }
		- PARENT = { grfFirst , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1102 :	"msg"
		- NEIGH  = { msg , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { grfFirst , if , }
		- SUCC   = { }

1104 :	"throw"
		- NEIGH  = { msg , Exception , util , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumIn , if , }
		- SUCC   = { }

1104 :	"util"
		- NEIGH  = { msg , Exception , util , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumIn , if , }
		- SUCC   = { }

1104 :	"Exception"
		- NEIGH  = { msg , Exception , util , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumIn , if , }
		- SUCC   = { }

1104 :	"msg"
		- NEIGH  = { msg , Exception , util , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumIn , if , }
		- SUCC   = { }

1111 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1111 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1111 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1111 :	"GeodeticReferenceFramePtr"
		- NEIGH  = { GeodeticReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1111 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1111 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1112 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1112 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1112 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1112 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1113 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1113 :	"EllipsoidalCSNNPtr"
		- NEIGH  = { EllipsoidalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1113 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1113 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1114 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1114 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1114 :	"checkEnsembleForGeodeticCRS"
		- NEIGH  = { checkEnsembleForGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1114 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1114 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1115 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1116 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1116 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1116 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1116 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1116 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1116 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1116 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1120 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1120 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1120 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1120 :	"GeodeticReferenceFramePtr"
		- NEIGH  = { GeodeticReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1120 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1120 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1121 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1121 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1121 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1121 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1122 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1122 :	"SphericalCSNNPtr"
		- NEIGH  = { SphericalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1122 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1122 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1123 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1123 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1123 :	"checkEnsembleForGeodeticCRS"
		- NEIGH  = { checkEnsembleForGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1123 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1123 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1124 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1125 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1125 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1125 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1125 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1125 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1125 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1125 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1129 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1129 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1129 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1129 :	"GeodeticReferenceFramePtr"
		- NEIGH  = { GeodeticReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1129 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1129 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1130 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1130 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1130 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1130 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1131 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1131 :	"CartesianCSNNPtr"
		- NEIGH  = { CartesianCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1131 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1131 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1132 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1132 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1132 :	"checkEnsembleForGeodeticCRS"
		- NEIGH  = { checkEnsembleForGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1132 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1132 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1133 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1134 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1134 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1134 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1134 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1134 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1134 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1134 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1138 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1138 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1138 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1138 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1138 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1139 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1139 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1139 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1139 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1139 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1139 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1139 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1139 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1139 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1139 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1139 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1144 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1144 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1149 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1149 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1149 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1150 :	"crs"
		- NEIGH  = { < , this , * , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1150 :	"GeodeticCRS"
		- NEIGH  = { < , this , * , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1150 :	"nn_make_shared"
		- NEIGH  = { < , this , * , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1150 :	"<"
		- NEIGH  = { < , this , * , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1150 :	"GeodeticCRS"
		- NEIGH  = { < , this , * , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1150 :	">"
		- NEIGH  = { < , this , * , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1150 :	"*"
		- NEIGH  = { < , this , * , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1150 :	"this"
		- NEIGH  = { < , this , * , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1151 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , this , * , GeodeticCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

1151 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , this , * , GeodeticCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

1151 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , this , * , GeodeticCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

1152 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

1152 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

1162 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1162 :	"GeodeticReferenceFramePtr"
		- NEIGH  = { GeodeticReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1162 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1162 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1162 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1162 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1163 :	"return"
		- NEIGH  = { datum_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1163 :	"d"
		- NEIGH  = { datum_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1163 :	"datum_"
		- NEIGH  = { datum_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1169 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1169 :	"GeodeticReferenceFrame"
		- NEIGH  = { GeodeticReferenceFrame , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1169 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1169 :	"oneDatum"
		- NEIGH  = { oneDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1169 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1169 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1169 :	"crs"
		- NEIGH  = { crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1170 :	"&"
		- NEIGH  = { datumEnsemble , crs , l_datumEnsemble , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datumEnsemble , assert , }

1170 :	"l_datumEnsemble"
		- NEIGH  = { datumEnsemble , crs , l_datumEnsemble , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datumEnsemble , assert , }

1170 :	"crs"
		- NEIGH  = { datumEnsemble , crs , l_datumEnsemble , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datumEnsemble , assert , }

1170 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , crs , l_datumEnsemble , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datumEnsemble , assert , }

1171 :	"assert"
		- NEIGH  = { l_datumEnsemble , assert , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumEnsemble , crs , l_datumEnsemble , & , }
		- SUCC   = { l_datumEnsemble , l_datums , datums , & , }

1171 :	"l_datumEnsemble"
		- NEIGH  = { l_datumEnsemble , assert , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumEnsemble , crs , l_datumEnsemble , & , }
		- SUCC   = { l_datumEnsemble , l_datums , datums , & , }

1172 :	"&"
		- NEIGH  = { l_datumEnsemble , l_datums , datums , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , assert , }
		- SUCC   = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }

1172 :	"l_datums"
		- NEIGH  = { l_datumEnsemble , l_datums , datums , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , assert , }
		- SUCC   = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }

1172 :	"l_datumEnsemble"
		- NEIGH  = { l_datumEnsemble , l_datums , datums , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , assert , }
		- SUCC   = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }

1172 :	"datums"
		- NEIGH  = { l_datumEnsemble , l_datums , datums , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , assert , }
		- SUCC   = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }

1173 :	"return"
		- NEIGH  = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , l_datums , datums , & , }
		- SUCC   = { }

1173 :	"static_cast"
		- NEIGH  = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , l_datums , datums , & , }
		- SUCC   = { }

1173 :	"<"
		- NEIGH  = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , l_datums , datums , & , }
		- SUCC   = { }

1173 :	"datum"
		- NEIGH  = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , l_datums , datums , & , }
		- SUCC   = { }

1173 :	"GeodeticReferenceFrame"
		- NEIGH  = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , l_datums , datums , & , }
		- SUCC   = { }

1173 :	"*"
		- NEIGH  = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , l_datums , datums , & , }
		- SUCC   = { }

1173 :	">"
		- NEIGH  = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , l_datums , datums , & , }
		- SUCC   = { }

1173 :	"l_datums"
		- NEIGH  = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , l_datums , datums , & , }
		- SUCC   = { }

1173 :	"get"
		- NEIGH  = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , l_datums , datums , & , }
		- SUCC   = { }

1184 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1184 :	"PrimeMeridianNNPtr"
		- NEIGH  = { PrimeMeridianNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1184 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1184 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1184 :	"primeMeridian"
		- NEIGH  = { primeMeridian , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1184 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1185 :	"if"
		- NEIGH  = { datum_ , d , if , }
		- PARENT = { }
		- CHILD  = { primeMeridian , datum_ , d , return , }
		- PRED   = { }
		- SUCC   = { this , primeMeridian , oneDatum , return , }

1185 :	"d"
		- NEIGH  = { datum_ , d , if , }
		- PARENT = { }
		- CHILD  = { primeMeridian , datum_ , d , return , }
		- PRED   = { }
		- SUCC   = { this , primeMeridian , oneDatum , return , }

1185 :	"datum_"
		- NEIGH  = { datum_ , d , if , }
		- PARENT = { }
		- CHILD  = { primeMeridian , datum_ , d , return , }
		- PRED   = { }
		- SUCC   = { this , primeMeridian , oneDatum , return , }

1186 :	"return"
		- NEIGH  = { primeMeridian , datum_ , d , return , }
		- PARENT = { datum_ , d , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1186 :	"d"
		- NEIGH  = { primeMeridian , datum_ , d , return , }
		- PARENT = { datum_ , d , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1186 :	"datum_"
		- NEIGH  = { primeMeridian , datum_ , d , return , }
		- PARENT = { datum_ , d , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1186 :	"primeMeridian"
		- NEIGH  = { primeMeridian , datum_ , d , return , }
		- PARENT = { datum_ , d , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1188 :	"return"
		- NEIGH  = { this , primeMeridian , oneDatum , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , d , if , }
		- SUCC   = { }

1188 :	"oneDatum"
		- NEIGH  = { this , primeMeridian , oneDatum , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , d , if , }
		- SUCC   = { }

1188 :	"this"
		- NEIGH  = { this , primeMeridian , oneDatum , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , d , if , }
		- SUCC   = { }

1188 :	"primeMeridian"
		- NEIGH  = { this , primeMeridian , oneDatum , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , d , if , }
		- SUCC   = { }

1198 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1198 :	"EllipsoidNNPtr"
		- NEIGH  = { EllipsoidNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1198 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1198 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1198 :	"ellipsoid"
		- NEIGH  = { ellipsoid , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1198 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1199 :	"if"
		- NEIGH  = { datum_ , d , if , }
		- PARENT = { }
		- CHILD  = { datum_ , d , ellipsoid , return , }
		- PRED   = { }
		- SUCC   = { this , oneDatum , ellipsoid , return , }

1199 :	"d"
		- NEIGH  = { datum_ , d , if , }
		- PARENT = { }
		- CHILD  = { datum_ , d , ellipsoid , return , }
		- PRED   = { }
		- SUCC   = { this , oneDatum , ellipsoid , return , }

1199 :	"datum_"
		- NEIGH  = { datum_ , d , if , }
		- PARENT = { }
		- CHILD  = { datum_ , d , ellipsoid , return , }
		- PRED   = { }
		- SUCC   = { this , oneDatum , ellipsoid , return , }

1200 :	"return"
		- NEIGH  = { datum_ , d , ellipsoid , return , }
		- PARENT = { datum_ , d , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1200 :	"d"
		- NEIGH  = { datum_ , d , ellipsoid , return , }
		- PARENT = { datum_ , d , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1200 :	"datum_"
		- NEIGH  = { datum_ , d , ellipsoid , return , }
		- PARENT = { datum_ , d , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1200 :	"ellipsoid"
		- NEIGH  = { datum_ , d , ellipsoid , return , }
		- PARENT = { datum_ , d , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1202 :	"return"
		- NEIGH  = { this , oneDatum , ellipsoid , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , d , if , }
		- SUCC   = { }

1202 :	"oneDatum"
		- NEIGH  = { this , oneDatum , ellipsoid , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , d , if , }
		- SUCC   = { }

1202 :	"this"
		- NEIGH  = { this , oneDatum , ellipsoid , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , d , if , }
		- SUCC   = { }

1202 :	"ellipsoid"
		- NEIGH  = { this , oneDatum , ellipsoid , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , d , if , }
		- SUCC   = { }

1211 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1211 :	"vector"
		- NEIGH  = { vector , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1211 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1211 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1211 :	"PointMotionOperationNNPtr"
		- NEIGH  = { PointMotionOperationNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1211 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1211 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1212 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1212 :	"velocityModel"
		- NEIGH  = { velocityModel , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1212 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1213 :	"return"
		- NEIGH  = { velocityModel , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1213 :	"d"
		- NEIGH  = { velocityModel , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1213 :	"velocityModel"
		- NEIGH  = { velocityModel , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1227 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1227 :	"isGeocentric"
		- NEIGH  = { isGeocentric , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1227 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1228 :	"&"
		- NEIGH  = { coordinateSystem , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , cs , & , }

1228 :	"cs"
		- NEIGH  = { coordinateSystem , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , cs , & , }

1228 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , cs , & , }

1229 :	"&"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }

1229 :	"axisList"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }

1229 :	"cs"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }

1229 :	"axisList"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }

1230 :	"return"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1230 :	"axisList"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1230 :	"size"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1230 :	"=="
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1230 :	"&&"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1231 :	"dynamic_cast"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1231 :	"<"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1231 :	"cs"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1231 :	"CartesianCS"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1231 :	"*"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1231 :	">"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1231 :	"cs"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1231 :	"get"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1231 :	"!="
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1231 :	"&&"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1232 :	"&"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1232 :	"axisList"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1232 :	"direction"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1232 :	"=="
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1232 :	"&"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1232 :	"cs"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1232 :	"AxisDirection"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1232 :	"GEOCENTRIC_X"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1232 :	"&&"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1233 :	"&"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1233 :	"axisList"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1233 :	"direction"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1233 :	"=="
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1233 :	"&"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1233 :	"cs"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1233 :	"AxisDirection"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1233 :	"GEOCENTRIC_Y"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1233 :	"&&"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1234 :	"&"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1234 :	"axisList"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1234 :	"direction"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1234 :	"=="
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1234 :	"&"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1234 :	"cs"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1234 :	"AxisDirection"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1234 :	"GEOCENTRIC_Z"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1248 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1249 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1249 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1249 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1249 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1249 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1249 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1250 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1250 :	"GeodeticReferenceFrameNNPtr"
		- NEIGH  = { GeodeticReferenceFrameNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1250 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1250 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1251 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1251 :	"SphericalCSNNPtr"
		- NEIGH  = { SphericalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1251 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1251 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1252 :	"return"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1252 :	"create"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1252 :	"properties"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1252 :	"datum"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1252 :	"as_nullable"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1252 :	"cs"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1269 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1270 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1270 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1270 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1270 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1270 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1270 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1271 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1271 :	"GeodeticReferenceFramePtr"
		- NEIGH  = { GeodeticReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1271 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1271 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1272 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1272 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1272 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1272 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1273 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1273 :	"SphericalCSNNPtr"
		- NEIGH  = { SphericalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1273 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1273 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1274 :	"crs"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1275 :	"GeodeticCRS"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1275 :	"nn_make_shared"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1275 :	"<"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1275 :	"GeodeticCRS"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1275 :	">"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1275 :	"datum"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1275 :	"datumEnsemble"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1275 :	"cs"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1276 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

1276 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

1276 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

1277 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }

1277 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }

1277 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }

1278 :	"properties"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1278 :	"getStringValue"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1279 :	"crs"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1279 :	"CRS"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1279 :	"getPrivate"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1279 :	"extensionProj4_"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1281 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { }

1281 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { }

1295 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1296 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1296 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1296 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1296 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1296 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1296 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1297 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1297 :	"GeodeticReferenceFrameNNPtr"
		- NEIGH  = { GeodeticReferenceFrameNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1297 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1297 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1298 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1298 :	"CartesianCSNNPtr"
		- NEIGH  = { CartesianCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1298 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1298 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1299 :	"return"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1299 :	"create"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1299 :	"properties"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1299 :	"datum"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1299 :	"as_nullable"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1299 :	"cs"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1316 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1317 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1317 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1317 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1317 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1317 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1317 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1318 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1318 :	"GeodeticReferenceFramePtr"
		- NEIGH  = { GeodeticReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1318 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1318 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1319 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1319 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1319 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1319 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1320 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1320 :	"CartesianCSNNPtr"
		- NEIGH  = { CartesianCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1320 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1320 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1321 :	"crs"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1322 :	"GeodeticCRS"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1322 :	"nn_make_shared"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1322 :	"<"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1322 :	"GeodeticCRS"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1322 :	">"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1322 :	"datum"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1322 :	"datumEnsemble"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1322 :	"cs"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1323 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

1323 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

1323 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

1324 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }

1324 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }

1324 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }

1325 :	"properties"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1325 :	"getStringValue"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1326 :	"crs"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1326 :	"CRS"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1326 :	"getPrivate"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1326 :	"extensionProj4_"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1327 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { }

1327 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { }

1333 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1333 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1333 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1333 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1333 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1333 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1334 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }

1334 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }

1334 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }

1334 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }

1334 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }

1334 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }

1334 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }

1334 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }

1335 :	"isGeographic"
		- NEIGH  = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }

1336 :	"dynamic_cast"
		- NEIGH  = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }

1336 :	"<"
		- NEIGH  = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }

1336 :	"GeographicCRS"
		- NEIGH  = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }

1336 :	"*"
		- NEIGH  = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }

1336 :	">"
		- NEIGH  = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }

1336 :	"this"
		- NEIGH  = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }

1336 :	"!="
		- NEIGH  = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }

1337 :	"formatter"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1337 :	"startNode"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1337 :	"isWKT2"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1338 :	"formatter"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1338 :	"use2019Keywords"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1338 :	"&&"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1338 :	"isGeographic"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1339 :	"io"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1339 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1339 :	"GEOGCRS"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1340 :	"io"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1340 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1340 :	"GEODCRS"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1341 :	"isGeocentric"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1341 :	"io"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1341 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1341 :	"GEOCCS"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1342 :	"io"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1342 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1342 :	"GEOGCS"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1343 :	"!"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1343 :	"identifiers"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1343 :	"empty"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1344 :	"l_name"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- SUCC   = { coordinateSystem , cs , & , }

1344 :	"nameStr"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- SUCC   = { coordinateSystem , cs , & , }

1345 :	"&"
		- NEIGH  = { coordinateSystem , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { axisList , cs , & , }

1345 :	"cs"
		- NEIGH  = { coordinateSystem , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { axisList , cs , & , }

1345 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { axisList , cs , & , }

1346 :	"&"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { outputAxis , formatter , oldAxisOutputRule , }

1346 :	"axisList"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { outputAxis , formatter , oldAxisOutputRule , }

1346 :	"cs"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { outputAxis , formatter , oldAxisOutputRule , }

1346 :	"axisList"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { outputAxis , formatter , oldAxisOutputRule , }

1348 :	"oldAxisOutputRule"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { useESRIDialect , formatter , if , }

1348 :	"formatter"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { useESRIDialect , formatter , if , }

1348 :	"outputAxis"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { useESRIDialect , formatter , if , }

1350 :	"if"
		- NEIGH  = { useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { WKTFormatter , NO , OutputAxisRule , io , oldAxisOutputRule , ! , formatter , isStrict , && , isWKT2 , isGeographic , == , axisList , l_name , size , != , if , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }

1350 :	"formatter"
		- NEIGH  = { useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { WKTFormatter , NO , OutputAxisRule , io , oldAxisOutputRule , ! , formatter , isStrict , && , isWKT2 , isGeographic , == , axisList , l_name , size , != , if , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }

1350 :	"useESRIDialect"
		- NEIGH  = { useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { WKTFormatter , NO , OutputAxisRule , io , oldAxisOutputRule , ! , formatter , isStrict , && , isWKT2 , isGeographic , == , axisList , l_name , size , != , if , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }

1351 :	"if"
		- NEIGH  = { size , != , axisList , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { == , l_name , if , }

1351 :	"axisList"
		- NEIGH  = { size , != , axisList , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { == , l_name , if , }

1351 :	"size"
		- NEIGH  = { size , != , axisList , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { == , l_name , if , }

1351 :	"!="
		- NEIGH  = { size , != , axisList , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { == , l_name , if , }

1352 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { size , != , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1352 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { size , != , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1352 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { size , != , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1356 :	"if"
		- NEIGH  = { == , l_name , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { ! , if , databaseContext , formatter , dbContext , & , aliasFound , l_name , }
		- PRED   = { size , != , axisList , if , }
		- SUCC   = { }

1356 :	"l_name"
		- NEIGH  = { == , l_name , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { ! , if , databaseContext , formatter , dbContext , & , aliasFound , l_name , }
		- PRED   = { size , != , axisList , if , }
		- SUCC   = { }

1356 :	"=="
		- NEIGH  = { == , l_name , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { ! , if , databaseContext , formatter , dbContext , & , aliasFound , l_name , }
		- PRED   = { size , != , axisList , if , }
		- SUCC   = { }

1357 :	"l_name"
		- NEIGH  = { l_name , }
		- PARENT = { == , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1359 :	"aliasFound"
		- NEIGH  = { aliasFound , }
		- PARENT = { == , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { databaseContext , formatter , dbContext , & , }

1360 :	"&"
		- NEIGH  = { databaseContext , formatter , dbContext , & , }
		- PARENT = { == , l_name , if , }
		- CHILD  = { }
		- PRED   = { aliasFound , }
		- SUCC   = { dbContext , if , }

1360 :	"dbContext"
		- NEIGH  = { databaseContext , formatter , dbContext , & , }
		- PARENT = { == , l_name , if , }
		- CHILD  = { }
		- PRED   = { aliasFound , }
		- SUCC   = { dbContext , if , }

1360 :	"formatter"
		- NEIGH  = { databaseContext , formatter , dbContext , & , }
		- PARENT = { == , l_name , if , }
		- CHILD  = { }
		- PRED   = { aliasFound , }
		- SUCC   = { dbContext , if , }

1360 :	"databaseContext"
		- NEIGH  = { databaseContext , formatter , dbContext , & , }
		- PARENT = { == , l_name , if , }
		- CHILD  = { }
		- PRED   = { aliasFound , }
		- SUCC   = { dbContext , if , }

1361 :	"if"
		- NEIGH  = { dbContext , if , }
		- PARENT = { == , l_name , if , }
		- CHILD  = { empty , l_name , dbContext , ! , if , getAliasFromOfficialName , l_alias , }
		- PRED   = { databaseContext , formatter , dbContext , & , }
		- SUCC   = { aliasFound , ! , if , }

1361 :	"dbContext"
		- NEIGH  = { dbContext , if , }
		- PARENT = { == , l_name , if , }
		- CHILD  = { empty , l_name , dbContext , ! , if , getAliasFromOfficialName , l_alias , }
		- PRED   = { databaseContext , formatter , dbContext , & , }
		- SUCC   = { aliasFound , ! , if , }

1362 :	"l_alias"
		- NEIGH  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , l_alias , if , }

1362 :	"dbContext"
		- NEIGH  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , l_alias , if , }

1362 :	"getAliasFromOfficialName"
		- NEIGH  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , l_alias , if , }

1363 :	"l_name"
		- NEIGH  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , l_alias , if , }

1364 :	"if"
		- NEIGH  = { empty , ! , l_alias , if , }
		- PARENT = { dbContext , if , }
		- CHILD  = { aliasFound , l_alias , l_name , }
		- PRED   = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- SUCC   = { }

1364 :	"!"
		- NEIGH  = { empty , ! , l_alias , if , }
		- PARENT = { dbContext , if , }
		- CHILD  = { aliasFound , l_alias , l_name , }
		- PRED   = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- SUCC   = { }

1364 :	"l_alias"
		- NEIGH  = { empty , ! , l_alias , if , }
		- PARENT = { dbContext , if , }
		- CHILD  = { aliasFound , l_alias , l_name , }
		- PRED   = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- SUCC   = { }

1364 :	"empty"
		- NEIGH  = { empty , ! , l_alias , if , }
		- PARENT = { dbContext , if , }
		- CHILD  = { aliasFound , l_alias , l_name , }
		- PRED   = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- SUCC   = { }

1365 :	"l_name"
		- NEIGH  = { l_alias , l_name , }
		- PARENT = { empty , ! , l_alias , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { aliasFound , }

1365 :	"l_alias"
		- NEIGH  = { l_alias , l_name , }
		- PARENT = { empty , ! , l_alias , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { aliasFound , }

1366 :	"aliasFound"
		- NEIGH  = { aliasFound , }
		- PARENT = { empty , ! , l_alias , if , }
		- CHILD  = { }
		- PRED   = { l_alias , l_name , }
		- SUCC   = { }

1369 :	"if"
		- NEIGH  = { aliasFound , ! , if , }
		- PARENT = { == , l_name , if , }
		- CHILD  = { starts_with , ! , if , io , WKTFormatter , morphNameToESRI , l_name , }
		- PRED   = { dbContext , if , }
		- SUCC   = { }

1369 :	"!"
		- NEIGH  = { aliasFound , ! , if , }
		- PARENT = { == , l_name , if , }
		- CHILD  = { starts_with , ! , if , io , WKTFormatter , morphNameToESRI , l_name , }
		- PRED   = { dbContext , if , }
		- SUCC   = { }

1369 :	"aliasFound"
		- NEIGH  = { aliasFound , ! , if , }
		- PARENT = { == , l_name , if , }
		- CHILD  = { starts_with , ! , if , io , WKTFormatter , morphNameToESRI , l_name , }
		- PRED   = { dbContext , if , }
		- SUCC   = { }

1370 :	"l_name"
		- NEIGH  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PARENT = { aliasFound , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_name , starts_with , ! , if , }

1370 :	"io"
		- NEIGH  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PARENT = { aliasFound , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_name , starts_with , ! , if , }

1370 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PARENT = { aliasFound , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_name , starts_with , ! , if , }

1370 :	"morphNameToESRI"
		- NEIGH  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PARENT = { aliasFound , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_name , starts_with , ! , if , }

1370 :	"l_name"
		- NEIGH  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PARENT = { aliasFound , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_name , starts_with , ! , if , }

1371 :	"if"
		- NEIGH  = { l_name , starts_with , ! , if , }
		- PARENT = { aliasFound , ! , if , }
		- CHILD  = { + , l_name , }
		- PRED   = { WKTFormatter , morphNameToESRI , io , l_name , }
		- SUCC   = { }

1371 :	"!"
		- NEIGH  = { l_name , starts_with , ! , if , }
		- PARENT = { aliasFound , ! , if , }
		- CHILD  = { + , l_name , }
		- PRED   = { WKTFormatter , morphNameToESRI , io , l_name , }
		- SUCC   = { }

1371 :	"starts_with"
		- NEIGH  = { l_name , starts_with , ! , if , }
		- PARENT = { aliasFound , ! , if , }
		- CHILD  = { + , l_name , }
		- PRED   = { WKTFormatter , morphNameToESRI , io , l_name , }
		- SUCC   = { }

1371 :	"l_name"
		- NEIGH  = { l_name , starts_with , ! , if , }
		- PARENT = { aliasFound , ! , if , }
		- CHILD  = { + , l_name , }
		- PRED   = { WKTFormatter , morphNameToESRI , io , l_name , }
		- SUCC   = { }

1372 :	"l_name"
		- NEIGH  = { + , l_name , }
		- PARENT = { l_name , starts_with , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1372 :	"+"
		- NEIGH  = { + , l_name , }
		- PARENT = { l_name , starts_with , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1372 :	"l_name"
		- NEIGH  = { + , l_name , }
		- PARENT = { l_name , starts_with , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1376 :	"if"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1376 :	"!"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1376 :	"isWKT2"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1376 :	"&&"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1376 :	"formatter"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1376 :	"isStrict"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1376 :	"&&"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1376 :	"isGeographic"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1376 :	"&&"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1377 :	"axisList"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1377 :	"size"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1377 :	"!="
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1377 :	"&&"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1378 :	"oldAxisOutputRule"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1378 :	"!="
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1378 :	"io"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1378 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1378 :	"OutputAxisRule"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1378 :	"NO"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1379 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1379 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1379 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1383 :	"if"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

1383 :	"!"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

1383 :	"isWKT2"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

1383 :	"&&"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

1383 :	"!"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

1383 :	"formatter"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

1383 :	"useESRIDialect"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

1383 :	"&&"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

1383 :	"isDeprecated"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

1384 :	"l_name"
		- NEIGH  = { += , l_name , }
		- PARENT = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1384 :	"+="
		- NEIGH  = { += , l_name , }
		- PARENT = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1386 :	"formatter"
		- NEIGH  = { l_name , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { axisList , unit , & , }

1386 :	"addQuotedString"
		- NEIGH  = { l_name , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { axisList , unit , & , }

1386 :	"l_name"
		- NEIGH  = { l_name , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { axisList , unit , & , }

1388 :	"&"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_name , addQuotedString , formatter , }
		- SUCC   = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }

1388 :	"unit"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_name , addQuotedString , formatter , }
		- SUCC   = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }

1388 :	"axisList"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_name , addQuotedString , formatter , }
		- SUCC   = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }

1388 :	"unit"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_name , addQuotedString , formatter , }
		- SUCC   = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }

1389 :	"formatter"
		- NEIGH  = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , }

1389 :	"pushAxisAngularUnit"
		- NEIGH  = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , }

1389 :	"common"
		- NEIGH  = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , }

1389 :	"UnitOfMeasure"
		- NEIGH  = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , }

1389 :	"create"
		- NEIGH  = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , }

1389 :	"unit"
		- NEIGH  = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , }

1390 :	"exportDatumOrDatumEnsembleToWkt"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }
		- SUCC   = { _exportToWKT , formatter , primeMeridian , }

1390 :	"formatter"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }
		- SUCC   = { _exportToWKT , formatter , primeMeridian , }

1391 :	"primeMeridian"
		- NEIGH  = { _exportToWKT , formatter , primeMeridian , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , }
		- SUCC   = { popAxisAngularUnit , formatter , }

1391 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , formatter , primeMeridian , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , }
		- SUCC   = { popAxisAngularUnit , formatter , }

1391 :	"formatter"
		- NEIGH  = { _exportToWKT , formatter , primeMeridian , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , }
		- SUCC   = { popAxisAngularUnit , formatter , }

1392 :	"formatter"
		- NEIGH  = { popAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { _exportToWKT , formatter , primeMeridian , }
		- SUCC   = { isWKT2 , ! , if , }

1392 :	"popAxisAngularUnit"
		- NEIGH  = { popAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { _exportToWKT , formatter , primeMeridian , }
		- SUCC   = { isWKT2 , ! , if , }

1393 :	"if"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , }
		- PRED   = { popAxisAngularUnit , formatter , }
		- SUCC   = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }

1393 :	"!"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , }
		- PRED   = { popAxisAngularUnit , formatter , }
		- SUCC   = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }

1393 :	"isWKT2"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , }
		- PRED   = { popAxisAngularUnit , formatter , }
		- SUCC   = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }

1394 :	"unit"
		- NEIGH  = { formatter , _exportToWKT , unit , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1394 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , unit , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1394 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , unit , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1397 :	"if"
		- NEIGH  = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { formatter , _exportToWKT , cs , }

1397 :	"oldAxisOutputRule"
		- NEIGH  = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { formatter , _exportToWKT , cs , }

1397 :	"=="
		- NEIGH  = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { formatter , _exportToWKT , cs , }

1398 :	"io"
		- NEIGH  = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { formatter , _exportToWKT , cs , }

1398 :	"WKTFormatter"
		- NEIGH  = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { formatter , _exportToWKT , cs , }

1398 :	"OutputAxisRule"
		- NEIGH  = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { formatter , _exportToWKT , cs , }

1398 :	"WKT1_GDAL_EPSG_STYLE"
		- NEIGH  = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { formatter , _exportToWKT , cs , }

1398 :	"&&"
		- NEIGH  = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { formatter , _exportToWKT , cs , }

1399 :	"isGeocentric"
		- NEIGH  = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { formatter , _exportToWKT , cs , }

1400 :	"formatter"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1400 :	"setOutputAxis"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1400 :	"io"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1400 :	"WKTFormatter"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1400 :	"OutputAxisRule"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1400 :	"YES"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1402 :	"cs"
		- NEIGH  = { formatter , _exportToWKT , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

1402 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

1402 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

1403 :	"formatter"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , cs , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

1403 :	"setOutputAxis"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , cs , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

1403 :	"oldAxisOutputRule"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , cs , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

1405 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { useESRIDialect , formatter , && , isWKT2 , ! , if , }

1405 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { useESRIDialect , formatter , && , isWKT2 , ! , if , }

1405 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { useESRIDialect , formatter , && , isWKT2 , ! , if , }

1407 :	"if"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { endNode , formatter , }

1407 :	"!"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { endNode , formatter , }

1407 :	"isWKT2"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { endNode , formatter , }

1407 :	"&&"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { endNode , formatter , }

1407 :	"!"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { endNode , formatter , }

1407 :	"formatter"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { endNode , formatter , }

1407 :	"useESRIDialect"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { endNode , formatter , }

1408 :	"&"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

1408 :	"extensionProj4"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

1408 :	"CRS"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

1408 :	"getPrivate"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

1408 :	"extensionProj4_"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

1409 :	"if"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { endNode , extensionProj4 , WKTConstants , io , EXTENSION , startNode , addQuotedString , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { }

1409 :	"!"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { endNode , extensionProj4 , WKTConstants , io , EXTENSION , startNode , addQuotedString , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { }

1409 :	"extensionProj4"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { endNode , extensionProj4 , WKTConstants , io , EXTENSION , startNode , addQuotedString , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { }

1409 :	"empty"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { endNode , extensionProj4 , WKTConstants , io , EXTENSION , startNode , addQuotedString , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { }

1410 :	"formatter"
		- NEIGH  = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

1410 :	"startNode"
		- NEIGH  = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

1410 :	"io"
		- NEIGH  = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

1410 :	"WKTConstants"
		- NEIGH  = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

1410 :	"EXTENSION"
		- NEIGH  = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

1411 :	"formatter"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- SUCC   = { extensionProj4 , addQuotedString , formatter , }

1411 :	"addQuotedString"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- SUCC   = { extensionProj4 , addQuotedString , formatter , }

1412 :	"formatter"
		- NEIGH  = { extensionProj4 , addQuotedString , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

1412 :	"addQuotedString"
		- NEIGH  = { extensionProj4 , addQuotedString , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

1412 :	"extensionProj4"
		- NEIGH  = { extensionProj4 , addQuotedString , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

1413 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { extensionProj4 , addQuotedString , formatter , }
		- SUCC   = { }

1413 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { extensionProj4 , addQuotedString , formatter , }
		- SUCC   = { }

1417 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { }

1417 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { }

1424 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1424 :	"addGeocentricUnitConversionIntoPROJString"
		- NEIGH  = { addGeocentricUnitConversionIntoPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1425 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1425 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1425 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1425 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1427 :	"&"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , unit , & , }

1427 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , unit , & , }

1427 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , unit , & , }

1427 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , unit , & , }

1428 :	"&"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }

1428 :	"unit"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }

1428 :	"axisList"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }

1428 :	"unit"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }

1429 :	"if"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { toSI , unit , empty , & , projUnit , getCRSExport , addParam , conversionToSI , addStep , formatter , ! , exportToPROJString , if , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { }

1429 :	"!"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { toSI , unit , empty , & , projUnit , getCRSExport , addParam , conversionToSI , addStep , formatter , ! , exportToPROJString , if , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { }

1429 :	"unit"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { toSI , unit , empty , & , projUnit , getCRSExport , addParam , conversionToSI , addStep , formatter , ! , exportToPROJString , if , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { }

1429 :	"_isEquivalentTo"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { toSI , unit , empty , & , projUnit , getCRSExport , addParam , conversionToSI , addStep , formatter , ! , exportToPROJString , if , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { }

1429 :	"common"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { toSI , unit , empty , & , projUnit , getCRSExport , addParam , conversionToSI , addStep , formatter , ! , exportToPROJString , if , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { }

1429 :	"UnitOfMeasure"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { toSI , unit , empty , & , projUnit , getCRSExport , addParam , conversionToSI , addStep , formatter , ! , exportToPROJString , if , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { }

1429 :	"METRE"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { toSI , unit , empty , & , projUnit , getCRSExport , addParam , conversionToSI , addStep , formatter , ! , exportToPROJString , if , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { }

1430 :	"util"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { toSI , unit , empty , & , projUnit , getCRSExport , addParam , conversionToSI , addStep , formatter , ! , exportToPROJString , if , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { }

1430 :	"IComparable"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { toSI , unit , empty , & , projUnit , getCRSExport , addParam , conversionToSI , addStep , formatter , ! , exportToPROJString , if , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { }

1430 :	"Criterion"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { toSI , unit , empty , & , projUnit , getCRSExport , addParam , conversionToSI , addStep , formatter , ! , exportToPROJString , if , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { }

1430 :	"EQUIVALENT"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { toSI , unit , empty , & , projUnit , getCRSExport , addParam , conversionToSI , addStep , formatter , ! , exportToPROJString , if , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { }

1431 :	"if"
		- NEIGH  = { getCRSExport , formatter , if , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { addStep , formatter , }

1431 :	"formatter"
		- NEIGH  = { getCRSExport , formatter , if , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { addStep , formatter , }

1431 :	"getCRSExport"
		- NEIGH  = { getCRSExport , formatter , if , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { addStep , formatter , }

1432 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1432 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1432 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1436 :	"formatter"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { getCRSExport , formatter , if , }
		- SUCC   = { addParam , formatter , }

1436 :	"addStep"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { getCRSExport , formatter , if , }
		- SUCC   = { addParam , formatter , }

1437 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { addParam , formatter , }

1437 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { addParam , formatter , }

1438 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { addParam , formatter , }
		- SUCC   = { exportToPROJString , unit , projUnit , }

1438 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { addParam , formatter , }
		- SUCC   = { exportToPROJString , unit , projUnit , }

1440 :	"projUnit"
		- NEIGH  = { exportToPROJString , unit , projUnit , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { addParam , formatter , }
		- SUCC   = { empty , projUnit , ! , if , }

1440 :	"unit"
		- NEIGH  = { exportToPROJString , unit , projUnit , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { addParam , formatter , }
		- SUCC   = { empty , projUnit , ! , if , }

1440 :	"exportToPROJString"
		- NEIGH  = { exportToPROJString , unit , projUnit , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { addParam , formatter , }
		- SUCC   = { empty , projUnit , ! , if , }

1441 :	"if"
		- NEIGH  = { empty , projUnit , ! , if , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { projUnit , return , addParam , formatter , }
		- PRED   = { exportToPROJString , unit , projUnit , }
		- SUCC   = { conversionToSI , unit , toSI , & , }

1441 :	"!"
		- NEIGH  = { empty , projUnit , ! , if , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { projUnit , return , addParam , formatter , }
		- PRED   = { exportToPROJString , unit , projUnit , }
		- SUCC   = { conversionToSI , unit , toSI , & , }

1441 :	"projUnit"
		- NEIGH  = { empty , projUnit , ! , if , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { projUnit , return , addParam , formatter , }
		- PRED   = { exportToPROJString , unit , projUnit , }
		- SUCC   = { conversionToSI , unit , toSI , & , }

1441 :	"empty"
		- NEIGH  = { empty , projUnit , ! , if , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { projUnit , return , addParam , formatter , }
		- PRED   = { exportToPROJString , unit , projUnit , }
		- SUCC   = { conversionToSI , unit , toSI , & , }

1442 :	"formatter"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projUnit , addParam , formatter , }

1442 :	"addParam"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projUnit , addParam , formatter , }

1442 :	"projUnit"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projUnit , addParam , formatter , }

1443 :	"formatter"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , ! , if , }
		- CHILD  = { }
		- PRED   = { projUnit , addParam , formatter , }
		- SUCC   = { return , }

1443 :	"addParam"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , ! , if , }
		- CHILD  = { }
		- PRED   = { projUnit , addParam , formatter , }
		- SUCC   = { return , }

1443 :	"projUnit"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , ! , if , }
		- CHILD  = { }
		- PRED   = { projUnit , addParam , formatter , }
		- SUCC   = { return , }

1444 :	"return"
		- NEIGH  = { return , }
		- PARENT = { empty , projUnit , ! , if , }
		- CHILD  = { }
		- PRED   = { projUnit , addParam , formatter , }
		- SUCC   = { }

1448 :	"&"
		- NEIGH  = { conversionToSI , unit , toSI , & , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { empty , projUnit , ! , if , }
		- SUCC   = { toSI , addParam , formatter , }

1448 :	"toSI"
		- NEIGH  = { conversionToSI , unit , toSI , & , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { empty , projUnit , ! , if , }
		- SUCC   = { toSI , addParam , formatter , }

1448 :	"unit"
		- NEIGH  = { conversionToSI , unit , toSI , & , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { empty , projUnit , ! , if , }
		- SUCC   = { toSI , addParam , formatter , }

1448 :	"conversionToSI"
		- NEIGH  = { conversionToSI , unit , toSI , & , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { empty , projUnit , ! , if , }
		- SUCC   = { toSI , addParam , formatter , }

1449 :	"formatter"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { conversionToSI , unit , toSI , & , }
		- SUCC   = { toSI , addParam , formatter , }

1449 :	"addParam"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { conversionToSI , unit , toSI , & , }
		- SUCC   = { toSI , addParam , formatter , }

1449 :	"toSI"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { conversionToSI , unit , toSI , & , }
		- SUCC   = { toSI , addParam , formatter , }

1450 :	"formatter"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { toSI , addParam , formatter , }
		- SUCC   = { }

1450 :	"addParam"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { toSI , addParam , formatter , }
		- SUCC   = { }

1450 :	"toSI"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { toSI , addParam , formatter , }
		- SUCC   = { }

1451 :	"if"
		- NEIGH  = { getCRSExport , formatter , if , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

1451 :	"formatter"
		- NEIGH  = { getCRSExport , formatter , if , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

1451 :	"getCRSExport"
		- NEIGH  = { getCRSExport , formatter , if , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

1452 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1452 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1460 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1460 :	"_exportToPROJString"
		- NEIGH  = { _exportToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1461 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1461 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1461 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1461 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1463 :	"&"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

1463 :	"extensionProj4"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

1463 :	"CRS"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

1463 :	"getPrivate"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

1463 :	"extensionProj4_"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

1464 :	"if"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { isGeocentric , ! , if , }

1464 :	"!"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { isGeocentric , ! , if , }

1464 :	"extensionProj4"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { isGeocentric , ! , if , }

1464 :	"empty"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { isGeocentric , ! , if , }

1465 :	"formatter"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

1465 :	"ingestPROJString"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

1466 :	"replaceAll"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

1466 :	"extensionProj4"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

1467 :	"formatter"
		- NEIGH  = { addNoDefs , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- SUCC   = { return , }

1467 :	"addNoDefs"
		- NEIGH  = { addNoDefs , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- SUCC   = { return , }

1468 :	"return"
		- NEIGH  = { return , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { addNoDefs , formatter , }
		- SUCC   = { }

1471 :	"if"
		- NEIGH  = { isGeocentric , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

1471 :	"!"
		- NEIGH  = { isGeocentric , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

1471 :	"isGeocentric"
		- NEIGH  = { isGeocentric , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

1472 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isGeocentric , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1472 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isGeocentric , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1472 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isGeocentric , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1477 :	"if"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { }
		- CHILD  = { addStep , formatter , }
		- PRED   = { isGeocentric , ! , if , }
		- SUCC   = { formatter , addDatumInfoToPROJString , }

1477 :	"!"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { }
		- CHILD  = { addStep , formatter , }
		- PRED   = { isGeocentric , ! , if , }
		- SUCC   = { formatter , addDatumInfoToPROJString , }

1477 :	"formatter"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { }
		- CHILD  = { addStep , formatter , }
		- PRED   = { isGeocentric , ! , if , }
		- SUCC   = { formatter , addDatumInfoToPROJString , }

1477 :	"getCRSExport"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { }
		- CHILD  = { addStep , formatter , }
		- PRED   = { isGeocentric , ! , if , }
		- SUCC   = { formatter , addDatumInfoToPROJString , }

1478 :	"formatter"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1478 :	"addStep"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1480 :	"formatter"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1480 :	"addStep"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1482 :	"addDatumInfoToPROJString"
		- NEIGH  = { formatter , addDatumInfoToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , getCRSExport , formatter , if , }
		- SUCC   = { formatter , addGeocentricUnitConversionIntoPROJString , }

1482 :	"formatter"
		- NEIGH  = { formatter , addDatumInfoToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , getCRSExport , formatter , if , }
		- SUCC   = { formatter , addGeocentricUnitConversionIntoPROJString , }

1483 :	"addGeocentricUnitConversionIntoPROJString"
		- NEIGH  = { formatter , addGeocentricUnitConversionIntoPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , addDatumInfoToPROJString , }
		- SUCC   = { }

1483 :	"formatter"
		- NEIGH  = { formatter , addGeocentricUnitConversionIntoPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , addDatumInfoToPROJString , }
		- SUCC   = { }

1490 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1490 :	"addDatumInfoToPROJString"
		- NEIGH  = { addDatumInfoToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1491 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1491 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1491 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1491 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1493 :	"&"
		- NEIGH  = { getTOWGS84Parameters , formatter , TOWGS84Params , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumWritten , }

1493 :	"TOWGS84Params"
		- NEIGH  = { getTOWGS84Parameters , formatter , TOWGS84Params , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumWritten , }

1493 :	"formatter"
		- NEIGH  = { getTOWGS84Parameters , formatter , TOWGS84Params , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumWritten , }

1493 :	"getTOWGS84Parameters"
		- NEIGH  = { getTOWGS84Parameters , formatter , TOWGS84Params , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumWritten , }

1494 :	"datumWritten"
		- NEIGH  = { datumWritten , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , formatter , TOWGS84Params , & , }
		- SUCC   = { getHDatumExtension , formatter , nadgrids , & , }

1495 :	"&"
		- NEIGH  = { getHDatumExtension , formatter , nadgrids , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumWritten , }
		- SUCC   = { datum , l_datum , & , }

1495 :	"nadgrids"
		- NEIGH  = { getHDatumExtension , formatter , nadgrids , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumWritten , }
		- SUCC   = { datum , l_datum , & , }

1495 :	"formatter"
		- NEIGH  = { getHDatumExtension , formatter , nadgrids , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumWritten , }
		- SUCC   = { datum , l_datum , & , }

1495 :	"getHDatumExtension"
		- NEIGH  = { getHDatumExtension , formatter , nadgrids , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumWritten , }
		- SUCC   = { datum , l_datum , & , }

1496 :	"&"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getHDatumExtension , formatter , nadgrids , & , }
		- SUCC   = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }

1496 :	"l_datum"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getHDatumExtension , formatter , nadgrids , & , }
		- SUCC   = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }

1496 :	"datum"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getHDatumExtension , formatter , nadgrids , & , }
		- SUCC   = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }

1497 :	"if"
		- NEIGH  = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { ! , datumWritten , if , }

1497 :	"formatter"
		- NEIGH  = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { ! , datumWritten , if , }

1497 :	"getCRSExport"
		- NEIGH  = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { ! , datumWritten , if , }

1497 :	"&&"
		- NEIGH  = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { ! , datumWritten , if , }

1497 :	"l_datum"
		- NEIGH  = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { ! , datumWritten , if , }

1497 :	"&&"
		- NEIGH  = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { ! , datumWritten , if , }

1497 :	"TOWGS84Params"
		- NEIGH  = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { ! , datumWritten , if , }

1497 :	"empty"
		- NEIGH  = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { ! , datumWritten , if , }

1497 :	"&&"
		- NEIGH  = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { ! , datumWritten , if , }

1498 :	"nadgrids"
		- NEIGH  = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { ! , datumWritten , if , }

1498 :	"empty"
		- NEIGH  = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { ! , datumWritten , if , }

1499 :	"if"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- CHILD  = { EQUIVALENT , IComparable , EPSG_6267 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , if , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1499 :	"l_datum"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- CHILD  = { EQUIVALENT , IComparable , EPSG_6267 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , if , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1499 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- CHILD  = { EQUIVALENT , IComparable , EPSG_6267 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , if , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1500 :	"datum"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- CHILD  = { EQUIVALENT , IComparable , EPSG_6267 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , if , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1500 :	"GeodeticReferenceFrame"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- CHILD  = { EQUIVALENT , IComparable , EPSG_6267 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , if , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1500 :	"EPSG_6326"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- CHILD  = { EQUIVALENT , IComparable , EPSG_6267 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , if , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1500 :	"get"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- CHILD  = { EQUIVALENT , IComparable , EPSG_6267 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , if , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1501 :	"util"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- CHILD  = { EQUIVALENT , IComparable , EPSG_6267 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , if , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1501 :	"IComparable"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- CHILD  = { EQUIVALENT , IComparable , EPSG_6267 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , if , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1501 :	"Criterion"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- CHILD  = { EQUIVALENT , IComparable , EPSG_6267 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , if , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1501 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- CHILD  = { EQUIVALENT , IComparable , EPSG_6267 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , if , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1502 :	"datumWritten"
		- NEIGH  = { datumWritten , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addParam , formatter , }

1503 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { datumWritten , }
		- SUCC   = { }

1503 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { datumWritten , }
		- SUCC   = { }

1504 :	"if"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1504 :	"l_datum"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1504 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1505 :	"datum"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1505 :	"GeodeticReferenceFrame"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1505 :	"EPSG_6267"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1505 :	"get"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1506 :	"util"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1506 :	"IComparable"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1506 :	"Criterion"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1506 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1507 :	"datumWritten"
		- NEIGH  = { datumWritten , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addParam , formatter , }

1508 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { datumWritten , }
		- SUCC   = { }

1508 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { datumWritten , }
		- SUCC   = { }

1509 :	"if"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { getLegacyCRSToCRSContext , formatter , if , datumWritten , }
		- PRED   = { }
		- SUCC   = { }

1509 :	"l_datum"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { getLegacyCRSToCRSContext , formatter , if , datumWritten , }
		- PRED   = { }
		- SUCC   = { }

1509 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { getLegacyCRSToCRSContext , formatter , if , datumWritten , }
		- PRED   = { }
		- SUCC   = { }

1510 :	"datum"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { getLegacyCRSToCRSContext , formatter , if , datumWritten , }
		- PRED   = { }
		- SUCC   = { }

1510 :	"GeodeticReferenceFrame"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { getLegacyCRSToCRSContext , formatter , if , datumWritten , }
		- PRED   = { }
		- SUCC   = { }

1510 :	"EPSG_6269"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { getLegacyCRSToCRSContext , formatter , if , datumWritten , }
		- PRED   = { }
		- SUCC   = { }

1510 :	"get"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { getLegacyCRSToCRSContext , formatter , if , datumWritten , }
		- PRED   = { }
		- SUCC   = { }

1511 :	"util"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { getLegacyCRSToCRSContext , formatter , if , datumWritten , }
		- PRED   = { }
		- SUCC   = { }

1511 :	"IComparable"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { getLegacyCRSToCRSContext , formatter , if , datumWritten , }
		- PRED   = { }
		- SUCC   = { }

1511 :	"Criterion"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { getLegacyCRSToCRSContext , formatter , if , datumWritten , }
		- PRED   = { }
		- SUCC   = { }

1511 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { getLegacyCRSToCRSContext , formatter , if , datumWritten , }
		- PRED   = { }
		- SUCC   = { }

1512 :	"datumWritten"
		- NEIGH  = { datumWritten , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { getLegacyCRSToCRSContext , formatter , if , }

1513 :	"if"
		- NEIGH  = { getLegacyCRSToCRSContext , formatter , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { datumWritten , }
		- SUCC   = { }

1513 :	"formatter"
		- NEIGH  = { getLegacyCRSToCRSContext , formatter , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { datumWritten , }
		- SUCC   = { }

1513 :	"getLegacyCRSToCRSContext"
		- NEIGH  = { getLegacyCRSToCRSContext , formatter , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { datumWritten , }
		- SUCC   = { }

1515 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { getLegacyCRSToCRSContext , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1515 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { getLegacyCRSToCRSContext , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1517 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { getLegacyCRSToCRSContext , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1517 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { getLegacyCRSToCRSContext , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1521 :	"if"
		- NEIGH  = { ! , datumWritten , if , }
		- PARENT = { }
		- CHILD  = { primeMeridian , formatter , _exportToPROJString , ellipsoid , }
		- PRED   = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- SUCC   = { == , size , TOWGS84Params , if , }

1521 :	"!"
		- NEIGH  = { ! , datumWritten , if , }
		- PARENT = { }
		- CHILD  = { primeMeridian , formatter , _exportToPROJString , ellipsoid , }
		- PRED   = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- SUCC   = { == , size , TOWGS84Params , if , }

1521 :	"datumWritten"
		- NEIGH  = { ! , datumWritten , if , }
		- PARENT = { }
		- CHILD  = { primeMeridian , formatter , _exportToPROJString , ellipsoid , }
		- PRED   = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- SUCC   = { == , size , TOWGS84Params , if , }

1522 :	"ellipsoid"
		- NEIGH  = { formatter , _exportToPROJString , ellipsoid , }
		- PARENT = { ! , datumWritten , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { _exportToPROJString , formatter , primeMeridian , }

1522 :	"_exportToPROJString"
		- NEIGH  = { formatter , _exportToPROJString , ellipsoid , }
		- PARENT = { ! , datumWritten , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { _exportToPROJString , formatter , primeMeridian , }

1522 :	"formatter"
		- NEIGH  = { formatter , _exportToPROJString , ellipsoid , }
		- PARENT = { ! , datumWritten , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { _exportToPROJString , formatter , primeMeridian , }

1523 :	"primeMeridian"
		- NEIGH  = { _exportToPROJString , formatter , primeMeridian , }
		- PARENT = { ! , datumWritten , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , ellipsoid , }
		- SUCC   = { }

1523 :	"_exportToPROJString"
		- NEIGH  = { _exportToPROJString , formatter , primeMeridian , }
		- PARENT = { ! , datumWritten , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , ellipsoid , }
		- SUCC   = { }

1523 :	"formatter"
		- NEIGH  = { _exportToPROJString , formatter , primeMeridian , }
		- PARENT = { ! , datumWritten , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , ellipsoid , }
		- SUCC   = { }

1525 :	"if"
		- NEIGH  = { == , size , TOWGS84Params , if , }
		- PARENT = { }
		- CHILD  = { addParam , TOWGS84Params , formatter , }
		- PRED   = { ! , datumWritten , if , }
		- SUCC   = { empty , ! , nadgrids , if , }

1525 :	"TOWGS84Params"
		- NEIGH  = { == , size , TOWGS84Params , if , }
		- PARENT = { }
		- CHILD  = { addParam , TOWGS84Params , formatter , }
		- PRED   = { ! , datumWritten , if , }
		- SUCC   = { empty , ! , nadgrids , if , }

1525 :	"size"
		- NEIGH  = { == , size , TOWGS84Params , if , }
		- PARENT = { }
		- CHILD  = { addParam , TOWGS84Params , formatter , }
		- PRED   = { ! , datumWritten , if , }
		- SUCC   = { empty , ! , nadgrids , if , }

1525 :	"=="
		- NEIGH  = { == , size , TOWGS84Params , if , }
		- PARENT = { }
		- CHILD  = { addParam , TOWGS84Params , formatter , }
		- PRED   = { ! , datumWritten , if , }
		- SUCC   = { empty , ! , nadgrids , if , }

1526 :	"formatter"
		- NEIGH  = { addParam , TOWGS84Params , formatter , }
		- PARENT = { == , size , TOWGS84Params , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1526 :	"addParam"
		- NEIGH  = { addParam , TOWGS84Params , formatter , }
		- PARENT = { == , size , TOWGS84Params , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1526 :	"TOWGS84Params"
		- NEIGH  = { addParam , TOWGS84Params , formatter , }
		- PARENT = { == , size , TOWGS84Params , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1528 :	"if"
		- NEIGH  = { empty , ! , nadgrids , if , }
		- PARENT = { }
		- CHILD  = { addParam , nadgrids , formatter , }
		- PRED   = { == , size , TOWGS84Params , if , }
		- SUCC   = { }

1528 :	"!"
		- NEIGH  = { empty , ! , nadgrids , if , }
		- PARENT = { }
		- CHILD  = { addParam , nadgrids , formatter , }
		- PRED   = { == , size , TOWGS84Params , if , }
		- SUCC   = { }

1528 :	"nadgrids"
		- NEIGH  = { empty , ! , nadgrids , if , }
		- PARENT = { }
		- CHILD  = { addParam , nadgrids , formatter , }
		- PRED   = { == , size , TOWGS84Params , if , }
		- SUCC   = { }

1528 :	"empty"
		- NEIGH  = { empty , ! , nadgrids , if , }
		- PARENT = { }
		- CHILD  = { addParam , nadgrids , formatter , }
		- PRED   = { == , size , TOWGS84Params , if , }
		- SUCC   = { }

1529 :	"formatter"
		- NEIGH  = { addParam , nadgrids , formatter , }
		- PARENT = { empty , ! , nadgrids , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1529 :	"addParam"
		- NEIGH  = { addParam , nadgrids , formatter , }
		- PARENT = { empty , ! , nadgrids , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1529 :	"nadgrids"
		- NEIGH  = { addParam , nadgrids , formatter , }
		- PARENT = { empty , ! , nadgrids , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1537 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1537 :	"_exportToJSON"
		- NEIGH  = { _exportToJSON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1538 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1538 :	"JSONFormatter"
		- NEIGH  = { JSONFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1538 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1538 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1540 :	"&"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

1540 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

1540 :	"formatter"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

1540 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

1541 :	"objectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

1542 :	"formatter"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

1542 :	"MakeObjectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

1542 :	"!"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

1542 :	"identifiers"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

1542 :	"empty"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

1544 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

1544 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

1545 :	"l_name"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

1545 :	"nameStr"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

1546 :	"if"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { datum , l_datum , & , }

1546 :	"l_name"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { datum , l_datum , & , }

1546 :	"empty"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { datum , l_datum , & , }

1547 :	"writer"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1547 :	"Add"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1549 :	"writer"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1549 :	"Add"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1549 :	"l_name"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1552 :	"&"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { l_datum , if , }

1552 :	"l_datum"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { l_datum , if , }

1552 :	"datum"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { l_datum , if , }

1553 :	"if"
		- NEIGH  = { l_datum , if , }
		- PARENT = { }
		- CHILD  = { setOmitTypeInImmediateChild , _exportToJSON , l_datum , datumEnsemble , AddObjKey , formatter , writer , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { AddObjKey , writer , }

1553 :	"l_datum"
		- NEIGH  = { l_datum , if , }
		- PARENT = { }
		- CHILD  = { setOmitTypeInImmediateChild , _exportToJSON , l_datum , datumEnsemble , AddObjKey , formatter , writer , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { AddObjKey , writer , }

1554 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToJSON , l_datum , }

1554 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToJSON , l_datum , }

1555 :	"l_datum"
		- NEIGH  = { formatter , _exportToJSON , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { }

1555 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { }

1555 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { }

1557 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

1557 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

1558 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datumEnsemble , }

1558 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datumEnsemble , }

1559 :	"datumEnsemble"
		- NEIGH  = { formatter , _exportToJSON , datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { }

1559 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { }

1559 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { }

1562 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datum , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

1562 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datum , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

1563 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

1563 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

1564 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

1564 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

1564 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

1566 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

1566 :	"baseExportToJSON"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

1566 :	"formatter"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

1573 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1573 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1573 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1574 :	"getStandardCriterion"
		- NEIGH  = { getStandardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1574 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1574 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1574 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1574 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1575 :	"return"
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1575 :	"criterion"
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1575 :	"=="
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1575 :	"util"
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1575 :	"IComparable"
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1575 :	"Criterion"
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1576 :	"EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS"
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1577 :	"util"
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1577 :	"IComparable"
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1577 :	"Criterion"
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1577 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1578 :	"criterion"
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1585 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1585 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1586 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1586 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1586 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1586 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1586 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1586 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1586 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1586 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1587 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1587 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1587 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1587 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1588 :	"standardCriterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }

1588 :	"getStandardCriterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }

1588 :	"criterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }

1589 :	"otherGeodCRS"
		- NEIGH  = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { dbContext , standardCriterion , other , baseIsEquivalentTo , && , SingleCRS , != , otherGeodCRS , return , }

1589 :	"dynamic_cast"
		- NEIGH  = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { dbContext , standardCriterion , other , baseIsEquivalentTo , && , SingleCRS , != , otherGeodCRS , return , }

1589 :	"<"
		- NEIGH  = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { dbContext , standardCriterion , other , baseIsEquivalentTo , && , SingleCRS , != , otherGeodCRS , return , }

1589 :	"GeodeticCRS"
		- NEIGH  = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { dbContext , standardCriterion , other , baseIsEquivalentTo , && , SingleCRS , != , otherGeodCRS , return , }

1589 :	"*"
		- NEIGH  = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { dbContext , standardCriterion , other , baseIsEquivalentTo , && , SingleCRS , != , otherGeodCRS , return , }

1589 :	">"
		- NEIGH  = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { dbContext , standardCriterion , other , baseIsEquivalentTo , && , SingleCRS , != , otherGeodCRS , return , }

1589 :	"other"
		- NEIGH  = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { dbContext , standardCriterion , other , baseIsEquivalentTo , && , SingleCRS , != , otherGeodCRS , return , }

1591 :	"return"
		- NEIGH  = { dbContext , standardCriterion , other , baseIsEquivalentTo , && , SingleCRS , != , otherGeodCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }
		- SUCC   = { }

1591 :	"otherGeodCRS"
		- NEIGH  = { dbContext , standardCriterion , other , baseIsEquivalentTo , && , SingleCRS , != , otherGeodCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }
		- SUCC   = { }

1591 :	"!="
		- NEIGH  = { dbContext , standardCriterion , other , baseIsEquivalentTo , && , SingleCRS , != , otherGeodCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }
		- SUCC   = { }

1591 :	"&&"
		- NEIGH  = { dbContext , standardCriterion , other , baseIsEquivalentTo , && , SingleCRS , != , otherGeodCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }
		- SUCC   = { }

1592 :	"SingleCRS"
		- NEIGH  = { dbContext , standardCriterion , other , baseIsEquivalentTo , && , SingleCRS , != , otherGeodCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }
		- SUCC   = { }

1592 :	"baseIsEquivalentTo"
		- NEIGH  = { dbContext , standardCriterion , other , baseIsEquivalentTo , && , SingleCRS , != , otherGeodCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }
		- SUCC   = { }

1592 :	"other"
		- NEIGH  = { dbContext , standardCriterion , other , baseIsEquivalentTo , && , SingleCRS , != , otherGeodCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }
		- SUCC   = { }

1592 :	"standardCriterion"
		- NEIGH  = { dbContext , standardCriterion , other , baseIsEquivalentTo , && , SingleCRS , != , otherGeodCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }
		- SUCC   = { }

1592 :	"dbContext"
		- NEIGH  = { dbContext , standardCriterion , other , baseIsEquivalentTo , && , SingleCRS , != , otherGeodCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }
		- SUCC   = { }

1599 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1599 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1599 :	"createMapNameEPSGCode"
		- NEIGH  = { createMapNameEPSGCode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1599 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1599 :	"name"
		- NEIGH  = { name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1599 :	"code"
		- NEIGH  = { code , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1600 :	"return"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1600 :	"util"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1600 :	"PropertyMap"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1601 :	"set"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1601 :	"common"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1601 :	"IdentifiedObject"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1601 :	"NAME_KEY"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1601 :	"name"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1602 :	"set"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1602 :	"metadata"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1602 :	"Identifier"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1602 :	"CODESPACE_KEY"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1602 :	"metadata"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1602 :	"Identifier"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1602 :	"EPSG"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1603 :	"set"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1603 :	"metadata"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1603 :	"Identifier"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1603 :	"CODE_KEY"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1603 :	"code"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1609 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1609 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1609 :	"createEPSG_4978"
		- NEIGH  = { createEPSG_4978 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1610 :	"return"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1610 :	"create"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1611 :	"createMapNameEPSGCode"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1612 :	"datum"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1612 :	"GeodeticReferenceFrame"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1612 :	"EPSG_6326"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1613 :	"cs"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1613 :	"CartesianCS"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1613 :	"createGeocentric"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1613 :	"common"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1613 :	"UnitOfMeasure"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1613 :	"METRE"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1620 :	"hasCodeCompatibleOfAuthorityFactory"
		- NEIGH  = { hasCodeCompatibleOfAuthorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1621 :	"common"
		- NEIGH  = { common , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1621 :	"IdentifiedObject"
		- NEIGH  = { IdentifiedObject , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1621 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1621 :	"obj"
		- NEIGH  = { obj , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1622 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1622 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1622 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1622 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1623 :	"&"
		- NEIGH  = { identifiers , obj , ids , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authorityFactory , getAuthority , && , empty , ids , ! , if , }

1623 :	"ids"
		- NEIGH  = { identifiers , obj , ids , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authorityFactory , getAuthority , && , empty , ids , ! , if , }

1623 :	"obj"
		- NEIGH  = { identifiers , obj , ids , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authorityFactory , getAuthority , && , empty , ids , ! , if , }

1623 :	"identifiers"
		- NEIGH  = { identifiers , obj , ids , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authorityFactory , getAuthority , && , empty , ids , ! , if , }

1624 :	"if"
		- NEIGH  = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { identifiers , obj , ids , & , }
		- SUCC   = { ids , id , & , for , }

1624 :	"!"
		- NEIGH  = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { identifiers , obj , ids , & , }
		- SUCC   = { ids , id , & , for , }

1624 :	"ids"
		- NEIGH  = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { identifiers , obj , ids , & , }
		- SUCC   = { ids , id , & , for , }

1624 :	"empty"
		- NEIGH  = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { identifiers , obj , ids , & , }
		- SUCC   = { ids , id , & , for , }

1624 :	"&&"
		- NEIGH  = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { identifiers , obj , ids , & , }
		- SUCC   = { ids , id , & , for , }

1624 :	"authorityFactory"
		- NEIGH  = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { identifiers , obj , ids , & , }
		- SUCC   = { ids , id , & , for , }

1624 :	"getAuthority"
		- NEIGH  = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { identifiers , obj , ids , & , }
		- SUCC   = { ids , id , & , for , }

1624 :	"empty"
		- NEIGH  = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { identifiers , obj , ids , & , }
		- SUCC   = { ids , id , & , for , }

1625 :	"return"
		- NEIGH  = { return , }
		- PARENT = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1627 :	"for"
		- NEIGH  = { ids , id , & , for , }
		- PARENT = { }
		- CHILD  = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- PRED   = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- SUCC   = { return , }

1627 :	"&"
		- NEIGH  = { ids , id , & , for , }
		- PARENT = { }
		- CHILD  = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- PRED   = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- SUCC   = { return , }

1627 :	"id"
		- NEIGH  = { ids , id , & , for , }
		- PARENT = { }
		- CHILD  = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- PRED   = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- SUCC   = { return , }

1627 :	"ids"
		- NEIGH  = { ids , id , & , for , }
		- PARENT = { }
		- CHILD  = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- PRED   = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- SUCC   = { return , }

1628 :	"if"
		- NEIGH  = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- PARENT = { ids , id , & , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1628 :	"*"
		- NEIGH  = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- PARENT = { ids , id , & , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1628 :	"id"
		- NEIGH  = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- PARENT = { ids , id , & , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1628 :	"codeSpace"
		- NEIGH  = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- PARENT = { ids , id , & , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1628 :	"=="
		- NEIGH  = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- PARENT = { ids , id , & , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1628 :	"authorityFactory"
		- NEIGH  = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- PARENT = { ids , id , & , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1628 :	"getAuthority"
		- NEIGH  = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- PARENT = { ids , id , & , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1629 :	"return"
		- NEIGH  = { return , }
		- PARENT = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1632 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ids , id , & , for , }
		- SUCC   = { }

1635 :	"hasCodeCompatibleOfAuthorityFactory"
		- NEIGH  = { hasCodeCompatibleOfAuthorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1636 :	"metadata"
		- NEIGH  = { metadata , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1636 :	"IdentifierNNPtr"
		- NEIGH  = { IdentifierNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1636 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1636 :	"id"
		- NEIGH  = { id , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1637 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1637 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1637 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1637 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1638 :	"if"
		- NEIGH  = { empty , getAuthority , authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { authorityFactory , getAuthority , id , == , codeSpace , * , return , }

1638 :	"authorityFactory"
		- NEIGH  = { empty , getAuthority , authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { authorityFactory , getAuthority , id , == , codeSpace , * , return , }

1638 :	"getAuthority"
		- NEIGH  = { empty , getAuthority , authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { authorityFactory , getAuthority , id , == , codeSpace , * , return , }

1638 :	"empty"
		- NEIGH  = { empty , getAuthority , authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { authorityFactory , getAuthority , id , == , codeSpace , * , return , }

1639 :	"return"
		- NEIGH  = { return , }
		- PARENT = { empty , getAuthority , authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1641 :	"return"
		- NEIGH  = { authorityFactory , getAuthority , id , == , codeSpace , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , getAuthority , authorityFactory , if , }
		- SUCC   = { }

1641 :	"*"
		- NEIGH  = { authorityFactory , getAuthority , id , == , codeSpace , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , getAuthority , authorityFactory , if , }
		- SUCC   = { }

1641 :	"id"
		- NEIGH  = { authorityFactory , getAuthority , id , == , codeSpace , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , getAuthority , authorityFactory , if , }
		- SUCC   = { }

1641 :	"codeSpace"
		- NEIGH  = { authorityFactory , getAuthority , id , == , codeSpace , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , getAuthority , authorityFactory , if , }
		- SUCC   = { }

1641 :	"=="
		- NEIGH  = { authorityFactory , getAuthority , id , == , codeSpace , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , getAuthority , authorityFactory , if , }
		- SUCC   = { }

1641 :	"authorityFactory"
		- NEIGH  = { authorityFactory , getAuthority , id , == , codeSpace , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , getAuthority , authorityFactory , if , }
		- SUCC   = { }

1641 :	"getAuthority"
		- NEIGH  = { authorityFactory , getAuthority , id , == , codeSpace , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , getAuthority , authorityFactory , if , }
		- SUCC   = { }

1691 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1691 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1691 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1691 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1691 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1691 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1691 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1691 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1692 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1692 :	"identify"
		- NEIGH  = { identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1692 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1692 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1692 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1692 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1693 :	"std"
		- NEIGH  = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

1693 :	"pair"
		- NEIGH  = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

1693 :	"<"
		- NEIGH  = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

1693 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

1693 :	">"
		- NEIGH  = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

1693 :	"Pair"
		- NEIGH  = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

1694 :	"std"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

1694 :	"list"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

1694 :	"<"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

1694 :	"Pair"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

1694 :	">"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

1694 :	"res"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

1695 :	"&"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }

1695 :	"thisName"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }

1695 :	"nameStr"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }

1697 :	"io"
		- NEIGH  = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { getPrivate , CRS , implicitCS_ , l_implicitCS , }

1697 :	"DatabaseContextPtr"
		- NEIGH  = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { getPrivate , CRS , implicitCS_ , l_implicitCS , }

1697 :	"dbContext"
		- NEIGH  = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { getPrivate , CRS , implicitCS_ , l_implicitCS , }

1698 :	"authorityFactory"
		- NEIGH  = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { getPrivate , CRS , implicitCS_ , l_implicitCS , }

1698 :	"authorityFactory"
		- NEIGH  = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { getPrivate , CRS , implicitCS_ , l_implicitCS , }

1698 :	"databaseContext"
		- NEIGH  = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { getPrivate , CRS , implicitCS_ , l_implicitCS , }

1698 :	"as_nullable"
		- NEIGH  = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { getPrivate , CRS , implicitCS_ , l_implicitCS , }

1700 :	"l_implicitCS"
		- NEIGH  = { getPrivate , CRS , implicitCS_ , l_implicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }

1700 :	"CRS"
		- NEIGH  = { getPrivate , CRS , implicitCS_ , l_implicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }

1700 :	"getPrivate"
		- NEIGH  = { getPrivate , CRS , implicitCS_ , l_implicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }

1700 :	"implicitCS_"
		- NEIGH  = { getPrivate , CRS , implicitCS_ , l_implicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }

1701 :	"crsCriterion"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , CRS , implicitCS_ , l_implicitCS , }
		- SUCC   = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }

1702 :	"l_implicitCS"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , CRS , implicitCS_ , l_implicitCS , }
		- SUCC   = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }

1703 :	"util"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , CRS , implicitCS_ , l_implicitCS , }
		- SUCC   = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }

1703 :	"IComparable"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , CRS , implicitCS_ , l_implicitCS , }
		- SUCC   = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }

1703 :	"Criterion"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , CRS , implicitCS_ , l_implicitCS , }
		- SUCC   = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }

1703 :	"EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , CRS , implicitCS_ , l_implicitCS , }
		- SUCC   = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }

1704 :	"util"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , CRS , implicitCS_ , l_implicitCS , }
		- SUCC   = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }

1704 :	"IComparable"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , CRS , implicitCS_ , l_implicitCS , }
		- SUCC   = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }

1704 :	"Criterion"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , CRS , implicitCS_ , l_implicitCS , }
		- SUCC   = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }

1704 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , CRS , implicitCS_ , l_implicitCS , }
		- SUCC   = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }

1706 :	"GeographicCRSNNPtr"
		- NEIGH  = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- SUCC   = { candidatesCRS , crs , & , for , }

1706 :	"candidatesCRS"
		- NEIGH  = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- SUCC   = { candidatesCRS , crs , & , for , }

1706 :	"GeographicCRS"
		- NEIGH  = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- SUCC   = { candidatesCRS , crs , & , for , }

1706 :	"EPSG_4326"
		- NEIGH  = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- SUCC   = { candidatesCRS , crs , & , for , }

1707 :	"GeographicCRS"
		- NEIGH  = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- SUCC   = { candidatesCRS , crs , & , for , }

1707 :	"EPSG_4267"
		- NEIGH  = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- SUCC   = { candidatesCRS , crs , & , for , }

1708 :	"GeographicCRS"
		- NEIGH  = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- SUCC   = { candidatesCRS , crs , & , for , }

1708 :	"EPSG_4269"
		- NEIGH  = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- SUCC   = { candidatesCRS , crs , & , for , }

1709 :	"for"
		- NEIGH  = { candidatesCRS , crs , & , for , }
		- PARENT = { }
		- CHILD  = { || , && , if , dbContext , crsCriterion , get , authorityFactory , == , metadata , nameStr , ! , _isEquivalentTo , crs , c_str , thisName , isEq , isEquivalentName , nameEqual , nameEquivalent , Identifier , }
		- PRED   = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- SUCC   = { string , geodetic_crs_type , std , }

1709 :	"&"
		- NEIGH  = { candidatesCRS , crs , & , for , }
		- PARENT = { }
		- CHILD  = { || , && , if , dbContext , crsCriterion , get , authorityFactory , == , metadata , nameStr , ! , _isEquivalentTo , crs , c_str , thisName , isEq , isEquivalentName , nameEqual , nameEquivalent , Identifier , }
		- PRED   = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- SUCC   = { string , geodetic_crs_type , std , }

1709 :	"crs"
		- NEIGH  = { candidatesCRS , crs , & , for , }
		- PARENT = { }
		- CHILD  = { || , && , if , dbContext , crsCriterion , get , authorityFactory , == , metadata , nameStr , ! , _isEquivalentTo , crs , c_str , thisName , isEq , isEquivalentName , nameEqual , nameEquivalent , Identifier , }
		- PRED   = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- SUCC   = { string , geodetic_crs_type , std , }

1709 :	"candidatesCRS"
		- NEIGH  = { candidatesCRS , crs , & , for , }
		- PARENT = { }
		- CHILD  = { || , && , if , dbContext , crsCriterion , get , authorityFactory , == , metadata , nameStr , ! , _isEquivalentTo , crs , c_str , thisName , isEq , isEquivalentName , nameEqual , nameEquivalent , Identifier , }
		- PRED   = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- SUCC   = { string , geodetic_crs_type , std , }

1710 :	"nameEquivalent"
		- NEIGH  = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , nameStr , == , thisName , nameEqual , }

1710 :	"metadata"
		- NEIGH  = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , nameStr , == , thisName , nameEqual , }

1710 :	"Identifier"
		- NEIGH  = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , nameStr , == , thisName , nameEqual , }

1710 :	"isEquivalentName"
		- NEIGH  = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , nameStr , == , thisName , nameEqual , }

1711 :	"thisName"
		- NEIGH  = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , nameStr , == , thisName , nameEqual , }

1711 :	"c_str"
		- NEIGH  = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , nameStr , == , thisName , nameEqual , }

1711 :	"crs"
		- NEIGH  = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , nameStr , == , thisName , nameEqual , }

1711 :	"nameStr"
		- NEIGH  = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , nameStr , == , thisName , nameEqual , }

1711 :	"c_str"
		- NEIGH  = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , nameStr , == , thisName , nameEqual , }

1712 :	"nameEqual"
		- NEIGH  = { crs , nameStr , == , thisName , nameEqual , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- SUCC   = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }

1712 :	"thisName"
		- NEIGH  = { crs , nameStr , == , thisName , nameEqual , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- SUCC   = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }

1712 :	"=="
		- NEIGH  = { crs , nameStr , == , thisName , nameEqual , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- SUCC   = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }

1712 :	"crs"
		- NEIGH  = { crs , nameStr , == , thisName , nameEqual , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- SUCC   = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }

1712 :	"nameStr"
		- NEIGH  = { crs , nameStr , == , thisName , nameEqual , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- SUCC   = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }

1713 :	"isEq"
		- NEIGH  = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { crs , nameStr , == , thisName , nameEqual , }
		- SUCC   = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }

1713 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { crs , nameStr , == , thisName , nameEqual , }
		- SUCC   = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }

1713 :	"crs"
		- NEIGH  = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { crs , nameStr , == , thisName , nameEqual , }
		- SUCC   = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }

1713 :	"get"
		- NEIGH  = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { crs , nameStr , == , thisName , nameEqual , }
		- SUCC   = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }

1713 :	"crsCriterion"
		- NEIGH  = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { crs , nameStr , == , thisName , nameEqual , }
		- SUCC   = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }

1713 :	"dbContext"
		- NEIGH  = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { crs , nameStr , == , thisName , nameEqual , }
		- SUCC   = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }

1714 :	"if"
		- NEIGH  = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { authorityFactory , if , nameEqual , return , ! , crs , GeodeticCRS , isEq , util , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }
		- SUCC   = { }

1714 :	"nameEquivalent"
		- NEIGH  = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { authorityFactory , if , nameEqual , return , ! , crs , GeodeticCRS , isEq , util , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }
		- SUCC   = { }

1714 :	"&&"
		- NEIGH  = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { authorityFactory , if , nameEqual , return , ! , crs , GeodeticCRS , isEq , util , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }
		- SUCC   = { }

1714 :	"isEq"
		- NEIGH  = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { authorityFactory , if , nameEqual , return , ! , crs , GeodeticCRS , isEq , util , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }
		- SUCC   = { }

1714 :	"&&"
		- NEIGH  = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { authorityFactory , if , nameEqual , return , ! , crs , GeodeticCRS , isEq , util , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }
		- SUCC   = { }

1714 :	"!"
		- NEIGH  = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { authorityFactory , if , nameEqual , return , ! , crs , GeodeticCRS , isEq , util , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }
		- SUCC   = { }

1714 :	"authorityFactory"
		- NEIGH  = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { authorityFactory , if , nameEqual , return , ! , crs , GeodeticCRS , isEq , util , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }
		- SUCC   = { }

1714 :	"||"
		- NEIGH  = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { authorityFactory , if , nameEqual , return , ! , crs , GeodeticCRS , isEq , util , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }
		- SUCC   = { }

1714 :	"nameEqual"
		- NEIGH  = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { authorityFactory , if , nameEqual , return , ! , crs , GeodeticCRS , isEq , util , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }
		- SUCC   = { }

1715 :	"res"
		- NEIGH  = { nameEqual , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1715 :	"emplace_back"
		- NEIGH  = { nameEqual , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1715 :	"util"
		- NEIGH  = { nameEqual , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1715 :	"nn_static_pointer_cast"
		- NEIGH  = { nameEqual , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1715 :	"<"
		- NEIGH  = { nameEqual , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1715 :	"GeodeticCRS"
		- NEIGH  = { nameEqual , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1715 :	">"
		- NEIGH  = { nameEqual , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1715 :	"crs"
		- NEIGH  = { nameEqual , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1716 :	"nameEqual"
		- NEIGH  = { nameEqual , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1717 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { }
		- PRED   = { nameEqual , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- SUCC   = { }

1717 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { }
		- PRED   = { nameEqual , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- SUCC   = { }

1718 :	"if"
		- NEIGH  = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { authorityFactory , if , return , ! , GeodeticCRS , crs , util , isEq , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { }
		- SUCC   = { }

1718 :	"nameEqual"
		- NEIGH  = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { authorityFactory , if , return , ! , GeodeticCRS , crs , util , isEq , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { }
		- SUCC   = { }

1718 :	"&&"
		- NEIGH  = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { authorityFactory , if , return , ! , GeodeticCRS , crs , util , isEq , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { }
		- SUCC   = { }

1718 :	"!"
		- NEIGH  = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { authorityFactory , if , return , ! , GeodeticCRS , crs , util , isEq , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { }
		- SUCC   = { }

1718 :	"isEq"
		- NEIGH  = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { authorityFactory , if , return , ! , GeodeticCRS , crs , util , isEq , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { }
		- SUCC   = { }

1718 :	"&&"
		- NEIGH  = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { authorityFactory , if , return , ! , GeodeticCRS , crs , util , isEq , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { }
		- SUCC   = { }

1718 :	"!"
		- NEIGH  = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { authorityFactory , if , return , ! , GeodeticCRS , crs , util , isEq , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { }
		- SUCC   = { }

1718 :	"authorityFactory"
		- NEIGH  = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { authorityFactory , if , return , ! , GeodeticCRS , crs , util , isEq , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { }
		- SUCC   = { }

1719 :	"res"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1719 :	"emplace_back"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1719 :	"util"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1719 :	"nn_static_pointer_cast"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1719 :	"<"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1719 :	"GeodeticCRS"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1719 :	">"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1719 :	"crs"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1721 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { }
		- PRED   = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- SUCC   = { }

1721 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { }
		- PRED   = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- SUCC   = { }

1722 :	"if"
		- NEIGH  = { ! , authorityFactory , && , isEq , if , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { return , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

1722 :	"isEq"
		- NEIGH  = { ! , authorityFactory , && , isEq , if , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { return , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

1722 :	"&&"
		- NEIGH  = { ! , authorityFactory , && , isEq , if , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { return , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

1722 :	"!"
		- NEIGH  = { ! , authorityFactory , && , isEq , if , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { return , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

1722 :	"authorityFactory"
		- NEIGH  = { ! , authorityFactory , && , isEq , if , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { return , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

1723 :	"res"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { ! , authorityFactory , && , isEq , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1723 :	"emplace_back"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { ! , authorityFactory , && , isEq , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1723 :	"util"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { ! , authorityFactory , && , isEq , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1723 :	"nn_static_pointer_cast"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { ! , authorityFactory , && , isEq , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1723 :	"<"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { ! , authorityFactory , && , isEq , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1723 :	"GeodeticCRS"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { ! , authorityFactory , && , isEq , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1723 :	">"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { ! , authorityFactory , && , isEq , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1723 :	"crs"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { ! , authorityFactory , && , isEq , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1725 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { ! , authorityFactory , && , isEq , if , }
		- CHILD  = { }
		- PRED   = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- SUCC   = { }

1725 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { ! , authorityFactory , && , isEq , if , }
		- CHILD  = { }
		- PRED   = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- SUCC   = { }

1729 :	"std"
		- NEIGH  = { string , geodetic_crs_type , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { candidatesCRS , crs , & , for , }
		- SUCC   = { isGeocentric , if , }

1729 :	"string"
		- NEIGH  = { string , geodetic_crs_type , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { candidatesCRS , crs , & , for , }
		- SUCC   = { isGeocentric , if , }

1729 :	"geodetic_crs_type"
		- NEIGH  = { string , geodetic_crs_type , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { candidatesCRS , crs , & , for , }
		- SUCC   = { isGeocentric , if , }

1730 :	"if"
		- NEIGH  = { isGeocentric , if , }
		- PARENT = { }
		- CHILD  = { if , > , < , geogCRS , GeographicCRS , this , * , dynamic_cast , geodetic_crs_type , }
		- PRED   = { string , geodetic_crs_type , std , }
		- SUCC   = { authorityFactory , if , }

1730 :	"isGeocentric"
		- NEIGH  = { isGeocentric , if , }
		- PARENT = { }
		- CHILD  = { if , > , < , geogCRS , GeographicCRS , this , * , dynamic_cast , geodetic_crs_type , }
		- PRED   = { string , geodetic_crs_type , std , }
		- SUCC   = { authorityFactory , if , }

1731 :	"geodetic_crs_type"
		- NEIGH  = { geodetic_crs_type , }
		- PARENT = { isGeocentric , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1733 :	"geogCRS"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { isGeocentric , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

1733 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { isGeocentric , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

1733 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { isGeocentric , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

1733 :	"GeographicCRS"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { isGeocentric , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

1733 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { isGeocentric , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

1733 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { isGeocentric , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

1733 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { isGeocentric , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

1734 :	"if"
		- NEIGH  = { geogCRS , if , }
		- PARENT = { isGeocentric , if , }
		- CHILD  = { size , == , axisList , coordinateSystem , if , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { }

1734 :	"geogCRS"
		- NEIGH  = { geogCRS , if , }
		- PARENT = { isGeocentric , if , }
		- CHILD  = { size , == , axisList , coordinateSystem , if , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { }

1735 :	"if"
		- NEIGH  = { size , == , axisList , coordinateSystem , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { geodetic_crs_type , }
		- PRED   = { }
		- SUCC   = { }

1735 :	"coordinateSystem"
		- NEIGH  = { size , == , axisList , coordinateSystem , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { geodetic_crs_type , }
		- PRED   = { }
		- SUCC   = { }

1735 :	"axisList"
		- NEIGH  = { size , == , axisList , coordinateSystem , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { geodetic_crs_type , }
		- PRED   = { }
		- SUCC   = { }

1735 :	"size"
		- NEIGH  = { size , == , axisList , coordinateSystem , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { geodetic_crs_type , }
		- PRED   = { }
		- SUCC   = { }

1735 :	"=="
		- NEIGH  = { size , == , axisList , coordinateSystem , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { geodetic_crs_type , }
		- PRED   = { }
		- SUCC   = { }

1736 :	"geodetic_crs_type"
		- NEIGH  = { geodetic_crs_type , }
		- PARENT = { size , == , axisList , coordinateSystem , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1738 :	"geodetic_crs_type"
		- NEIGH  = { geodetic_crs_type , }
		- PARENT = { size , == , axisList , coordinateSystem , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1743 :	"if"
		- NEIGH  = { authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { size , b , a , Pair , thisCS , >= , crsCriterion , unsignificantName , res , l_implicitCS , == , front , authorityFactory , empty , thisName , second , searchByEllipsoid , thisEllipsoid , if , ci_equal , dbContext , ellipsoid , geodetic_crs_type , || , && , this , sort , thisDatum , searchByDatum , coordinateSystem , datum , & , }
		- PRED   = { isGeocentric , if , }
		- SUCC   = { res , return , }

1743 :	"authorityFactory"
		- NEIGH  = { authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { size , b , a , Pair , thisCS , >= , crsCriterion , unsignificantName , res , l_implicitCS , == , front , authorityFactory , empty , thisName , second , searchByEllipsoid , thisEllipsoid , if , ci_equal , dbContext , ellipsoid , geodetic_crs_type , || , && , this , sort , thisDatum , searchByDatum , coordinateSystem , datum , & , }
		- PRED   = { isGeocentric , if , }
		- SUCC   = { res , return , }

1745 :	"&"
		- NEIGH  = { datum , thisDatum , & , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodetic_crs_type , res , authorityFactory , & , dbContext , crsCriterion , this , thisDatum , searchByDatum , }

1745 :	"thisDatum"
		- NEIGH  = { datum , thisDatum , & , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodetic_crs_type , res , authorityFactory , & , dbContext , crsCriterion , this , thisDatum , searchByDatum , }

1745 :	"datum"
		- NEIGH  = { datum , thisDatum , & , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodetic_crs_type , res , authorityFactory , & , dbContext , crsCriterion , this , thisDatum , searchByDatum , }

1747 :	"searchByDatum"
		- NEIGH  = { geodetic_crs_type , res , authorityFactory , & , dbContext , crsCriterion , this , thisDatum , searchByDatum , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { datum , thisDatum , & , }
		- SUCC   = { ellipsoid , thisEllipsoid , & , }

1747 :	"this"
		- NEIGH  = { geodetic_crs_type , res , authorityFactory , & , dbContext , crsCriterion , this , thisDatum , searchByDatum , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { datum , thisDatum , & , }
		- SUCC   = { ellipsoid , thisEllipsoid , & , }

1747 :	"&"
		- NEIGH  = { geodetic_crs_type , res , authorityFactory , & , dbContext , crsCriterion , this , thisDatum , searchByDatum , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { datum , thisDatum , & , }
		- SUCC   = { ellipsoid , thisEllipsoid , & , }

1747 :	"authorityFactory"
		- NEIGH  = { geodetic_crs_type , res , authorityFactory , & , dbContext , crsCriterion , this , thisDatum , searchByDatum , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { datum , thisDatum , & , }
		- SUCC   = { ellipsoid , thisEllipsoid , & , }

1747 :	"&"
		- NEIGH  = { geodetic_crs_type , res , authorityFactory , & , dbContext , crsCriterion , this , thisDatum , searchByDatum , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { datum , thisDatum , & , }
		- SUCC   = { ellipsoid , thisEllipsoid , & , }

1747 :	"res"
		- NEIGH  = { geodetic_crs_type , res , authorityFactory , & , dbContext , crsCriterion , this , thisDatum , searchByDatum , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { datum , thisDatum , & , }
		- SUCC   = { ellipsoid , thisEllipsoid , & , }

1747 :	"&"
		- NEIGH  = { geodetic_crs_type , res , authorityFactory , & , dbContext , crsCriterion , this , thisDatum , searchByDatum , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { datum , thisDatum , & , }
		- SUCC   = { ellipsoid , thisEllipsoid , & , }

1747 :	"thisDatum"
		- NEIGH  = { geodetic_crs_type , res , authorityFactory , & , dbContext , crsCriterion , this , thisDatum , searchByDatum , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { datum , thisDatum , & , }
		- SUCC   = { ellipsoid , thisEllipsoid , & , }

1748 :	"&"
		- NEIGH  = { geodetic_crs_type , res , authorityFactory , & , dbContext , crsCriterion , this , thisDatum , searchByDatum , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { datum , thisDatum , & , }
		- SUCC   = { ellipsoid , thisEllipsoid , & , }

1748 :	"geodetic_crs_type"
		- NEIGH  = { geodetic_crs_type , res , authorityFactory , & , dbContext , crsCriterion , this , thisDatum , searchByDatum , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { datum , thisDatum , & , }
		- SUCC   = { ellipsoid , thisEllipsoid , & , }

1748 :	"crsCriterion"
		- NEIGH  = { geodetic_crs_type , res , authorityFactory , & , dbContext , crsCriterion , this , thisDatum , searchByDatum , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { datum , thisDatum , & , }
		- SUCC   = { ellipsoid , thisEllipsoid , & , }

1748 :	"&"
		- NEIGH  = { geodetic_crs_type , res , authorityFactory , & , dbContext , crsCriterion , this , thisDatum , searchByDatum , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { datum , thisDatum , & , }
		- SUCC   = { ellipsoid , thisEllipsoid , & , }

1748 :	"dbContext"
		- NEIGH  = { geodetic_crs_type , res , authorityFactory , & , dbContext , crsCriterion , this , thisDatum , searchByDatum , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { datum , thisDatum , & , }
		- SUCC   = { ellipsoid , thisEllipsoid , & , }

1749 :	"for"
		- NEIGH  = { thisDatum , id , & , identifiers , for , }
		- PARENT = { }
		- CHILD  = { exception , & , catch , tempRes , for , code , std , codeSpace , authorityFactory , id , * , crs , geodetic_crs_type , createGeodeticCRSFromDatum , }
		- PRED   = { }
		- SUCC   = { }

1749 :	"&"
		- NEIGH  = { thisDatum , id , & , identifiers , for , }
		- PARENT = { }
		- CHILD  = { exception , & , catch , tempRes , for , code , std , codeSpace , authorityFactory , id , * , crs , geodetic_crs_type , createGeodeticCRSFromDatum , }
		- PRED   = { }
		- SUCC   = { }

1749 :	"id"
		- NEIGH  = { thisDatum , id , & , identifiers , for , }
		- PARENT = { }
		- CHILD  = { exception , & , catch , tempRes , for , code , std , codeSpace , authorityFactory , id , * , crs , geodetic_crs_type , createGeodeticCRSFromDatum , }
		- PRED   = { }
		- SUCC   = { }

1749 :	"thisDatum"
		- NEIGH  = { thisDatum , id , & , identifiers , for , }
		- PARENT = { }
		- CHILD  = { exception , & , catch , tempRes , for , code , std , codeSpace , authorityFactory , id , * , crs , geodetic_crs_type , createGeodeticCRSFromDatum , }
		- PRED   = { }
		- SUCC   = { }

1749 :	"identifiers"
		- NEIGH  = { thisDatum , id , & , identifiers , for , }
		- PARENT = { }
		- CHILD  = { exception , & , catch , tempRes , for , code , std , codeSpace , authorityFactory , id , * , crs , geodetic_crs_type , createGeodeticCRSFromDatum , }
		- PRED   = { }
		- SUCC   = { }

1751 :	"tempRes"
		- NEIGH  = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- PARENT = { thisDatum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1751 :	"authorityFactory"
		- NEIGH  = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- PARENT = { thisDatum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1751 :	"createGeodeticCRSFromDatum"
		- NEIGH  = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- PARENT = { thisDatum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1752 :	"*"
		- NEIGH  = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- PARENT = { thisDatum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1752 :	"id"
		- NEIGH  = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- PARENT = { thisDatum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1752 :	"codeSpace"
		- NEIGH  = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- PARENT = { thisDatum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1752 :	"id"
		- NEIGH  = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- PARENT = { thisDatum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1752 :	"code"
		- NEIGH  = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- PARENT = { thisDatum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1752 :	"geodetic_crs_type"
		- NEIGH  = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- PARENT = { thisDatum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1753 :	"for"
		- NEIGH  = { crs , tempRes , & , for , }
		- PARENT = { thisDatum , id , & , identifiers , for , }
		- CHILD  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PRED   = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- SUCC   = { & , exception , std , catch , }

1753 :	"&"
		- NEIGH  = { crs , tempRes , & , for , }
		- PARENT = { thisDatum , id , & , identifiers , for , }
		- CHILD  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PRED   = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- SUCC   = { & , exception , std , catch , }

1753 :	"crs"
		- NEIGH  = { crs , tempRes , & , for , }
		- PARENT = { thisDatum , id , & , identifiers , for , }
		- CHILD  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PRED   = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- SUCC   = { & , exception , std , catch , }

1753 :	"tempRes"
		- NEIGH  = { crs , tempRes , & , for , }
		- PARENT = { thisDatum , id , & , identifiers , for , }
		- CHILD  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PRED   = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- SUCC   = { & , exception , std , catch , }

1754 :	"if"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

1754 :	"_isEquivalentTo"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

1754 :	"crs"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

1754 :	"get"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

1754 :	"crsCriterion"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

1755 :	"dbContext"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

1756 :	"res"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1756 :	"emplace_back"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1756 :	"crs"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1759 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { thisDatum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { crs , tempRes , & , for , }
		- SUCC   = { }

1759 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { thisDatum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { crs , tempRes , & , for , }
		- SUCC   = { }

1759 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { thisDatum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { crs , tempRes , & , for , }
		- SUCC   = { }

1759 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { thisDatum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { crs , tempRes , & , for , }
		- SUCC   = { }

1764 :	"&"
		- NEIGH  = { ellipsoid , thisEllipsoid , & , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { geodetic_crs_type , res , authorityFactory , & , dbContext , crsCriterion , this , thisDatum , searchByDatum , }
		- SUCC   = { geodetic_crs_type , thisEllipsoid , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }

1764 :	"thisEllipsoid"
		- NEIGH  = { ellipsoid , thisEllipsoid , & , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { geodetic_crs_type , res , authorityFactory , & , dbContext , crsCriterion , this , thisDatum , searchByDatum , }
		- SUCC   = { geodetic_crs_type , thisEllipsoid , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }

1764 :	"ellipsoid"
		- NEIGH  = { ellipsoid , thisEllipsoid , & , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { geodetic_crs_type , res , authorityFactory , & , dbContext , crsCriterion , this , thisDatum , searchByDatum , }
		- SUCC   = { geodetic_crs_type , thisEllipsoid , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }

1765 :	"searchByEllipsoid"
		- NEIGH  = { geodetic_crs_type , thisEllipsoid , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisEllipsoid , & , }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

1765 :	"this"
		- NEIGH  = { geodetic_crs_type , thisEllipsoid , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisEllipsoid , & , }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

1765 :	"&"
		- NEIGH  = { geodetic_crs_type , thisEllipsoid , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisEllipsoid , & , }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

1765 :	"authorityFactory"
		- NEIGH  = { geodetic_crs_type , thisEllipsoid , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisEllipsoid , & , }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

1765 :	"&"
		- NEIGH  = { geodetic_crs_type , thisEllipsoid , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisEllipsoid , & , }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

1765 :	"res"
		- NEIGH  = { geodetic_crs_type , thisEllipsoid , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisEllipsoid , & , }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

1765 :	"&"
		- NEIGH  = { geodetic_crs_type , thisEllipsoid , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisEllipsoid , & , }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

1765 :	"thisDatum"
		- NEIGH  = { geodetic_crs_type , thisEllipsoid , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisEllipsoid , & , }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

1766 :	"&"
		- NEIGH  = { geodetic_crs_type , thisEllipsoid , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisEllipsoid , & , }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

1766 :	"thisEllipsoid"
		- NEIGH  = { geodetic_crs_type , thisEllipsoid , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisEllipsoid , & , }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

1766 :	"&"
		- NEIGH  = { geodetic_crs_type , thisEllipsoid , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisEllipsoid , & , }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

1766 :	"geodetic_crs_type"
		- NEIGH  = { geodetic_crs_type , thisEllipsoid , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisEllipsoid , & , }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

1767 :	"l_implicitCS"
		- NEIGH  = { geodetic_crs_type , thisEllipsoid , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisEllipsoid , & , }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

1767 :	"&"
		- NEIGH  = { geodetic_crs_type , thisEllipsoid , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisEllipsoid , & , }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

1767 :	"dbContext"
		- NEIGH  = { geodetic_crs_type , thisEllipsoid , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisEllipsoid , & , }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

1768 :	"ellipsoids"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ellipsoids , ellps , & , for , }

1769 :	"thisEllipsoid"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ellipsoids , ellps , & , for , }

1769 :	"identifiers"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ellipsoids , ellps , & , for , }

1769 :	"empty"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ellipsoids , ellps , & , for , }

1770 :	"authorityFactory"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ellipsoids , ellps , & , for , }

1770 :	"createEllipsoidFromExisting"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ellipsoids , ellps , & , for , }

1771 :	"thisEllipsoid"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ellipsoids , ellps , & , for , }

1772 :	"std"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ellipsoids , ellps , & , for , }

1772 :	"list"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ellipsoids , ellps , & , for , }

1772 :	"<"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ellipsoids , ellps , & , for , }

1772 :	"datum"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ellipsoids , ellps , & , for , }

1772 :	"EllipsoidNNPtr"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ellipsoids , ellps , & , for , }

1772 :	">"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ellipsoids , ellps , & , for , }

1772 :	"thisEllipsoid"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ellipsoids , ellps , & , for , }

1773 :	"for"
		- NEIGH  = { ellipsoids , ellps , & , for , }
		- PARENT = { }
		- CHILD  = { ellps , id , & , identifiers , for , }
		- PRED   = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- SUCC   = { }

1773 :	"&"
		- NEIGH  = { ellipsoids , ellps , & , for , }
		- PARENT = { }
		- CHILD  = { ellps , id , & , identifiers , for , }
		- PRED   = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- SUCC   = { }

1773 :	"ellps"
		- NEIGH  = { ellipsoids , ellps , & , for , }
		- PARENT = { }
		- CHILD  = { ellps , id , & , identifiers , for , }
		- PRED   = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- SUCC   = { }

1773 :	"ellipsoids"
		- NEIGH  = { ellipsoids , ellps , & , for , }
		- PARENT = { }
		- CHILD  = { ellps , id , & , identifiers , for , }
		- PRED   = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- SUCC   = { }

1774 :	"for"
		- NEIGH  = { ellps , id , & , identifiers , for , }
		- PARENT = { ellipsoids , ellps , & , for , }
		- CHILD  = { exception , createGeodeticCRSFromEllipsoid , & , catch , tempRes , for , crs , geodetic_crs_type , std , codeSpace , authorityFactory , id , * , code , }
		- PRED   = { }
		- SUCC   = { }

1774 :	"&"
		- NEIGH  = { ellps , id , & , identifiers , for , }
		- PARENT = { ellipsoids , ellps , & , for , }
		- CHILD  = { exception , createGeodeticCRSFromEllipsoid , & , catch , tempRes , for , crs , geodetic_crs_type , std , codeSpace , authorityFactory , id , * , code , }
		- PRED   = { }
		- SUCC   = { }

1774 :	"id"
		- NEIGH  = { ellps , id , & , identifiers , for , }
		- PARENT = { ellipsoids , ellps , & , for , }
		- CHILD  = { exception , createGeodeticCRSFromEllipsoid , & , catch , tempRes , for , crs , geodetic_crs_type , std , codeSpace , authorityFactory , id , * , code , }
		- PRED   = { }
		- SUCC   = { }

1774 :	"ellps"
		- NEIGH  = { ellps , id , & , identifiers , for , }
		- PARENT = { ellipsoids , ellps , & , for , }
		- CHILD  = { exception , createGeodeticCRSFromEllipsoid , & , catch , tempRes , for , crs , geodetic_crs_type , std , codeSpace , authorityFactory , id , * , code , }
		- PRED   = { }
		- SUCC   = { }

1774 :	"identifiers"
		- NEIGH  = { ellps , id , & , identifiers , for , }
		- PARENT = { ellipsoids , ellps , & , for , }
		- CHILD  = { exception , createGeodeticCRSFromEllipsoid , & , catch , tempRes , for , crs , geodetic_crs_type , std , codeSpace , authorityFactory , id , * , code , }
		- PRED   = { }
		- SUCC   = { }

1776 :	"tempRes"
		- NEIGH  = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1777 :	"authorityFactory"
		- NEIGH  = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1777 :	"createGeodeticCRSFromEllipsoid"
		- NEIGH  = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1778 :	"*"
		- NEIGH  = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1778 :	"id"
		- NEIGH  = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1778 :	"codeSpace"
		- NEIGH  = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1778 :	"id"
		- NEIGH  = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1778 :	"code"
		- NEIGH  = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1779 :	"geodetic_crs_type"
		- NEIGH  = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1780 :	"for"
		- NEIGH  = { crs , tempRes , & , for , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { || , l_implicitCS , EQUIVALENT , Criterion , IComparable , util , get , ! , crs , _isEquivalentTo , && , dbContext , if , coordinateSystem , datum , ellps , thisDatum , ellipsoid , crsDatum , primeMeridian , & , }
		- PRED   = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- SUCC   = { & , exception , std , catch , }

1780 :	"&"
		- NEIGH  = { crs , tempRes , & , for , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { || , l_implicitCS , EQUIVALENT , Criterion , IComparable , util , get , ! , crs , _isEquivalentTo , && , dbContext , if , coordinateSystem , datum , ellps , thisDatum , ellipsoid , crsDatum , primeMeridian , & , }
		- PRED   = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- SUCC   = { & , exception , std , catch , }

1780 :	"crs"
		- NEIGH  = { crs , tempRes , & , for , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { || , l_implicitCS , EQUIVALENT , Criterion , IComparable , util , get , ! , crs , _isEquivalentTo , && , dbContext , if , coordinateSystem , datum , ellps , thisDatum , ellipsoid , crsDatum , primeMeridian , & , }
		- PRED   = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- SUCC   = { & , exception , std , catch , }

1780 :	"tempRes"
		- NEIGH  = { crs , tempRes , & , for , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { || , l_implicitCS , EQUIVALENT , Criterion , IComparable , util , get , ! , crs , _isEquivalentTo , && , dbContext , if , coordinateSystem , datum , ellps , thisDatum , ellipsoid , crsDatum , primeMeridian , & , }
		- PRED   = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- SUCC   = { & , exception , std , catch , }

1781 :	"&"
		- NEIGH  = { datum , crs , crsDatum , & , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }

1781 :	"crsDatum"
		- NEIGH  = { datum , crs , crsDatum , & , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }

1781 :	"crs"
		- NEIGH  = { datum , crs , crsDatum , & , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }

1781 :	"datum"
		- NEIGH  = { datum , crs , crsDatum , & , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }

1782 :	"if"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1782 :	"crsDatum"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1782 :	"&&"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1783 :	"crsDatum"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1783 :	"ellipsoid"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1783 :	"_isEquivalentTo"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1784 :	"ellps"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1784 :	"get"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1785 :	"util"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1785 :	"IComparable"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1785 :	"Criterion"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1785 :	"EQUIVALENT"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1786 :	"dbContext"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1786 :	"&&"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1787 :	"crsDatum"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1787 :	"primeMeridian"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1787 :	"_isEquivalentTo"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1788 :	"thisDatum"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1788 :	"primeMeridian"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1788 :	"get"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1789 :	"util"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1789 :	"IComparable"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1789 :	"Criterion"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1789 :	"EQUIVALENT"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1790 :	"dbContext"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1790 :	"&&"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1791 :	"!"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1791 :	"l_implicitCS"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1791 :	"||"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1792 :	"coordinateSystem"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1792 :	"_isEquivalentTo"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1793 :	"crs"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1793 :	"coordinateSystem"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1793 :	"get"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1794 :	"util"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1794 :	"IComparable"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1794 :	"Criterion"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1794 :	"EQUIVALENT"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1795 :	"dbContext"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1796 :	"res"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1796 :	"emplace_back"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1796 :	"crs"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1799 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { crs , tempRes , & , for , }
		- SUCC   = { }

1799 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { crs , tempRes , & , for , }
		- SUCC   = { }

1799 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { crs , tempRes , & , for , }
		- SUCC   = { }

1799 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { crs , tempRes , & , for , }
		- SUCC   = { }

1805 :	"unsignificantName"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { geodetic_crs_type , thisEllipsoid , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- SUCC   = { unsignificantName , if , }

1805 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { geodetic_crs_type , thisEllipsoid , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- SUCC   = { unsignificantName , if , }

1805 :	"empty"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { geodetic_crs_type , thisEllipsoid , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- SUCC   = { unsignificantName , if , }

1805 :	"||"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { geodetic_crs_type , thisEllipsoid , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- SUCC   = { unsignificantName , if , }

1806 :	"ci_equal"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { geodetic_crs_type , thisEllipsoid , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- SUCC   = { unsignificantName , if , }

1806 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { geodetic_crs_type , thisEllipsoid , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- SUCC   = { unsignificantName , if , }

1806 :	"||"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { geodetic_crs_type , thisEllipsoid , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- SUCC   = { unsignificantName , if , }

1807 :	"ci_equal"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { geodetic_crs_type , thisEllipsoid , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- SUCC   = { unsignificantName , if , }

1807 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { geodetic_crs_type , thisEllipsoid , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- SUCC   = { unsignificantName , if , }

1809 :	"if"
		- NEIGH  = { unsignificantName , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { authorityFactory , this , thisDatum , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { ci_equal , || , empty , thisName , unsignificantName , }
		- SUCC   = { coordinateSystem , thisCS , & , }

1809 :	"unsignificantName"
		- NEIGH  = { unsignificantName , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { authorityFactory , this , thisDatum , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { ci_equal , || , empty , thisName , unsignificantName , }
		- SUCC   = { coordinateSystem , thisCS , & , }

1810 :	"if"
		- NEIGH  = { thisDatum , if , }
		- PARENT = { unsignificantName , if , }
		- CHILD  = { empty , thisDatum , ! , identifiers , if , }
		- PRED   = { }
		- SUCC   = { }

1810 :	"thisDatum"
		- NEIGH  = { thisDatum , if , }
		- PARENT = { unsignificantName , if , }
		- CHILD  = { empty , thisDatum , ! , identifiers , if , }
		- PRED   = { }
		- SUCC   = { }

1811 :	"if"
		- NEIGH  = { empty , thisDatum , ! , identifiers , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { searchByEllipsoid , searchByDatum , }
		- PRED   = { }
		- SUCC   = { }

1811 :	"!"
		- NEIGH  = { empty , thisDatum , ! , identifiers , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { searchByEllipsoid , searchByDatum , }
		- PRED   = { }
		- SUCC   = { }

1811 :	"thisDatum"
		- NEIGH  = { empty , thisDatum , ! , identifiers , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { searchByEllipsoid , searchByDatum , }
		- PRED   = { }
		- SUCC   = { }

1811 :	"identifiers"
		- NEIGH  = { empty , thisDatum , ! , identifiers , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { searchByEllipsoid , searchByDatum , }
		- PRED   = { }
		- SUCC   = { }

1811 :	"empty"
		- NEIGH  = { empty , thisDatum , ! , identifiers , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { searchByEllipsoid , searchByDatum , }
		- PRED   = { }
		- SUCC   = { }

1812 :	"searchByDatum"
		- NEIGH  = { searchByDatum , }
		- PARENT = { empty , thisDatum , ! , identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1814 :	"searchByEllipsoid"
		- NEIGH  = { searchByEllipsoid , }
		- PARENT = { empty , thisDatum , ! , identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1817 :	"if"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { unsignificantName , if , }
		- CHILD  = { thisDatum , ! , if , id , ++ , < , && , ipass , & , gotAbove25Pct , identifiers , for , }
		- PRED   = { }
		- SUCC   = { }

1817 :	"hasCodeCompatibleOfAuthorityFactory"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { unsignificantName , if , }
		- CHILD  = { thisDatum , ! , if , id , ++ , < , && , ipass , & , gotAbove25Pct , identifiers , for , }
		- PRED   = { }
		- SUCC   = { }

1817 :	"this"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { unsignificantName , if , }
		- CHILD  = { thisDatum , ! , if , id , ++ , < , && , ipass , & , gotAbove25Pct , identifiers , for , }
		- PRED   = { }
		- SUCC   = { }

1818 :	"authorityFactory"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { unsignificantName , if , }
		- CHILD  = { thisDatum , ! , if , id , ++ , < , && , ipass , & , gotAbove25Pct , identifiers , for , }
		- PRED   = { }
		- SUCC   = { }

1821 :	"for"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

1821 :	"&"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

1821 :	"id"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

1821 :	"identifiers"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

1822 :	"if"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , catch , emplace_back , res , dbContext , get , match , code , createGeodeticCRS , authorityFactory , id , databaseContext , * , crsCriterion , AuthorityFactory , create , std , codeSpace , exception , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

1822 :	"hasCodeCompatibleOfAuthorityFactory"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , catch , emplace_back , res , dbContext , get , match , code , createGeodeticCRS , authorityFactory , id , databaseContext , * , crsCriterion , AuthorityFactory , create , std , codeSpace , exception , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

1822 :	"id"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , catch , emplace_back , res , dbContext , get , match , code , createGeodeticCRS , authorityFactory , id , databaseContext , * , crsCriterion , AuthorityFactory , create , std , codeSpace , exception , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

1822 :	"authorityFactory"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , catch , emplace_back , res , dbContext , get , match , code , createGeodeticCRS , authorityFactory , id , databaseContext , * , crsCriterion , AuthorityFactory , create , std , codeSpace , exception , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

1824 :	"crs"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }

1824 :	"io"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }

1824 :	"AuthorityFactory"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }

1824 :	"create"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }

1825 :	"authorityFactory"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }

1825 :	"databaseContext"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }

1826 :	"*"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }

1826 :	"id"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }

1826 :	"codeSpace"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }

1827 :	"createGeodeticCRS"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }

1827 :	"id"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }

1827 :	"code"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }

1828 :	"match"
		- NEIGH  = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

1829 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

1829 :	"crs"
		- NEIGH  = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

1829 :	"get"
		- NEIGH  = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

1829 :	"crsCriterion"
		- NEIGH  = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

1829 :	"dbContext"
		- NEIGH  = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

1830 :	"res"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }
		- SUCC   = { res , return , }

1830 :	"emplace_back"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }
		- SUCC   = { res , return , }

1830 :	"crs"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }
		- SUCC   = { res , return , }

1830 :	"match"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }
		- SUCC   = { res , return , }

1831 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { match , crs , emplace_back , res , }
		- SUCC   = { & , exception , std , catch , }

1831 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { match , crs , emplace_back , res , }
		- SUCC   = { & , exception , std , catch , }

1832 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

1832 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

1832 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

1832 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

1837 :	"gotAbove25Pct"
		- NEIGH  = { gotAbove25Pct , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , ++ , ipass , for , }

1838 :	"for"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { res , ! , if , obj , & , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , GEODETIC_CRS , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { gotAbove25Pct , }
		- SUCC   = { && , thisDatum , ! , gotAbove25Pct , if , }

1838 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { res , ! , if , obj , & , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , GEODETIC_CRS , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { gotAbove25Pct , }
		- SUCC   = { && , thisDatum , ! , gotAbove25Pct , if , }

1838 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { res , ! , if , obj , & , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , GEODETIC_CRS , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { gotAbove25Pct , }
		- SUCC   = { && , thisDatum , ! , gotAbove25Pct , if , }

1838 :	"<"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { res , ! , if , obj , & , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , GEODETIC_CRS , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { gotAbove25Pct , }
		- SUCC   = { && , thisDatum , ! , gotAbove25Pct , if , }

1838 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { res , ! , if , obj , & , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , GEODETIC_CRS , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { gotAbove25Pct , }
		- SUCC   = { && , thisDatum , ! , gotAbove25Pct , if , }

1838 :	"++"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { res , ! , if , obj , & , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , GEODETIC_CRS , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { gotAbove25Pct , }
		- SUCC   = { && , thisDatum , ! , gotAbove25Pct , if , }

1839 :	"approximateMatch"
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }

1839 :	"ipass"
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }

1839 :	"=="
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }

1840 :	"objects"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

1840 :	"authorityFactory"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

1840 :	"createObjectsFromName"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

1841 :	"thisName"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

1841 :	"io"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

1841 :	"AuthorityFactory"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

1841 :	"ObjectType"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

1841 :	"GEODETIC_CRS"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

1842 :	"approximateMatch"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

1843 :	"for"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { crsCriterion , get , dbContext , if , util , < , crsNN , obj , assert , > , nn_dynamic_pointer_cast , NN_NO_CHECK , _isEquivalentTo , GeodeticCRS , crs , }
		- PRED   = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

1843 :	"&"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { crsCriterion , get , dbContext , if , util , < , crsNN , obj , assert , > , nn_dynamic_pointer_cast , NN_NO_CHECK , _isEquivalentTo , GeodeticCRS , crs , }
		- PRED   = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

1843 :	"obj"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { crsCriterion , get , dbContext , if , util , < , crsNN , obj , assert , > , nn_dynamic_pointer_cast , NN_NO_CHECK , _isEquivalentTo , GeodeticCRS , crs , }
		- PRED   = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

1843 :	"objects"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { crsCriterion , get , dbContext , if , util , < , crsNN , obj , assert , > , nn_dynamic_pointer_cast , NN_NO_CHECK , _isEquivalentTo , GeodeticCRS , crs , }
		- PRED   = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

1844 :	"crs"
		- NEIGH  = { obj , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

1844 :	"util"
		- NEIGH  = { obj , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

1844 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { obj , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

1844 :	"<"
		- NEIGH  = { obj , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

1844 :	"GeodeticCRS"
		- NEIGH  = { obj , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

1844 :	">"
		- NEIGH  = { obj , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

1844 :	"obj"
		- NEIGH  = { obj , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

1845 :	"assert"
		- NEIGH  = { crs , assert , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { obj , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , crs , }
		- SUCC   = { NN_NO_CHECK , crs , crsNN , }

1845 :	"crs"
		- NEIGH  = { crs , assert , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { obj , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , crs , }
		- SUCC   = { NN_NO_CHECK , crs , crsNN , }

1846 :	"crsNN"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }

1846 :	"NN_NO_CHECK"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }

1846 :	"crs"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }

1847 :	"if"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { gotAbove25Pct , crsNN , emplace_back , c_str , isEquivalentName , nameStr , metadata , res , Identifier , eqName , == , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

1847 :	"_isEquivalentTo"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { gotAbove25Pct , crsNN , emplace_back , c_str , isEquivalentName , nameStr , metadata , res , Identifier , eqName , == , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

1847 :	"crs"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { gotAbove25Pct , crsNN , emplace_back , c_str , isEquivalentName , nameStr , metadata , res , Identifier , eqName , == , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

1847 :	"get"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { gotAbove25Pct , crsNN , emplace_back , c_str , isEquivalentName , nameStr , metadata , res , Identifier , eqName , == , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

1847 :	"crsCriterion"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { gotAbove25Pct , crsNN , emplace_back , c_str , isEquivalentName , nameStr , metadata , res , Identifier , eqName , == , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

1847 :	"dbContext"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { gotAbove25Pct , crsNN , emplace_back , c_str , isEquivalentName , nameStr , metadata , res , Identifier , eqName , == , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

1848 :	"if"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }

1848 :	"crs"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }

1848 :	"nameStr"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }

1848 :	"=="
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }

1848 :	"thisName"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }

1849 :	"res"
		- NEIGH  = { clear , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

1849 :	"clear"
		- NEIGH  = { clear , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

1850 :	"res"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

1850 :	"emplace_back"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

1850 :	"crsNN"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

1851 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { crsNN , emplace_back , res , }
		- SUCC   = { }

1851 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { crsNN , emplace_back , res , }
		- SUCC   = { }

1853 :	"eqName"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

1854 :	"metadata"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

1854 :	"Identifier"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

1854 :	"isEquivalentName"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

1855 :	"thisName"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

1855 :	"c_str"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

1855 :	"crs"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

1855 :	"nameStr"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

1855 :	"c_str"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

1856 :	"res"
		- NEIGH  = { crsNN , eqName , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- SUCC   = { gotAbove25Pct , }

1856 :	"emplace_back"
		- NEIGH  = { crsNN , eqName , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- SUCC   = { gotAbove25Pct , }

1856 :	"crsNN"
		- NEIGH  = { crsNN , eqName , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- SUCC   = { gotAbove25Pct , }

1856 :	"eqName"
		- NEIGH  = { crsNN , eqName , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- SUCC   = { gotAbove25Pct , }

1857 :	"gotAbove25Pct"
		- NEIGH  = { gotAbove25Pct , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { crsNN , eqName , emplace_back , res , }
		- SUCC   = { }

1859 :	"res"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1859 :	"emplace_back"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1859 :	"crsNN"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1862 :	"if"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

1862 :	"!"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

1862 :	"res"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

1862 :	"empty"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

1863 :	"break"
		- NEIGH  = { break , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1866 :	"if"
		- NEIGH  = { && , thisDatum , ! , gotAbove25Pct , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { empty , thisDatum , ! , identifiers , if , }
		- PRED   = { < , ++ , ipass , for , }
		- SUCC   = { }

1866 :	"!"
		- NEIGH  = { && , thisDatum , ! , gotAbove25Pct , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { empty , thisDatum , ! , identifiers , if , }
		- PRED   = { < , ++ , ipass , for , }
		- SUCC   = { }

1866 :	"gotAbove25Pct"
		- NEIGH  = { && , thisDatum , ! , gotAbove25Pct , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { empty , thisDatum , ! , identifiers , if , }
		- PRED   = { < , ++ , ipass , for , }
		- SUCC   = { }

1866 :	"&&"
		- NEIGH  = { && , thisDatum , ! , gotAbove25Pct , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { empty , thisDatum , ! , identifiers , if , }
		- PRED   = { < , ++ , ipass , for , }
		- SUCC   = { }

1866 :	"thisDatum"
		- NEIGH  = { && , thisDatum , ! , gotAbove25Pct , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { empty , thisDatum , ! , identifiers , if , }
		- PRED   = { < , ++ , ipass , for , }
		- SUCC   = { }

1867 :	"if"
		- NEIGH  = { empty , thisDatum , ! , identifiers , if , }
		- PARENT = { && , thisDatum , ! , gotAbove25Pct , if , }
		- CHILD  = { searchByEllipsoid , searchByDatum , }
		- PRED   = { }
		- SUCC   = { }

1867 :	"!"
		- NEIGH  = { empty , thisDatum , ! , identifiers , if , }
		- PARENT = { && , thisDatum , ! , gotAbove25Pct , if , }
		- CHILD  = { searchByEllipsoid , searchByDatum , }
		- PRED   = { }
		- SUCC   = { }

1867 :	"thisDatum"
		- NEIGH  = { empty , thisDatum , ! , identifiers , if , }
		- PARENT = { && , thisDatum , ! , gotAbove25Pct , if , }
		- CHILD  = { searchByEllipsoid , searchByDatum , }
		- PRED   = { }
		- SUCC   = { }

1867 :	"identifiers"
		- NEIGH  = { empty , thisDatum , ! , identifiers , if , }
		- PARENT = { && , thisDatum , ! , gotAbove25Pct , if , }
		- CHILD  = { searchByEllipsoid , searchByDatum , }
		- PRED   = { }
		- SUCC   = { }

1867 :	"empty"
		- NEIGH  = { empty , thisDatum , ! , identifiers , if , }
		- PARENT = { && , thisDatum , ! , gotAbove25Pct , if , }
		- CHILD  = { searchByEllipsoid , searchByDatum , }
		- PRED   = { }
		- SUCC   = { }

1868 :	"searchByDatum"
		- NEIGH  = { searchByDatum , }
		- PARENT = { empty , thisDatum , ! , identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1870 :	"searchByEllipsoid"
		- NEIGH  = { searchByEllipsoid , }
		- PARENT = { empty , thisDatum , ! , identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1875 :	"&"
		- NEIGH  = { coordinateSystem , thisCS , & , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { unsignificantName , if , }
		- SUCC   = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }

1875 :	"thisCS"
		- NEIGH  = { coordinateSystem , thisCS , & , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { unsignificantName , if , }
		- SUCC   = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }

1875 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , thisCS , & , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { unsignificantName , if , }
		- SUCC   = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }

1877 :	"res"
		- NEIGH  = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

1877 :	"sort"
		- NEIGH  = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

1877 :	"&"
		- NEIGH  = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

1877 :	"thisName"
		- NEIGH  = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

1877 :	"&"
		- NEIGH  = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

1877 :	"thisDatum"
		- NEIGH  = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

1877 :	"&"
		- NEIGH  = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

1877 :	"thisCS"
		- NEIGH  = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

1877 :	"&"
		- NEIGH  = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

1877 :	"dbContext"
		- NEIGH  = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

1877 :	"Pair"
		- NEIGH  = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

1877 :	"&"
		- NEIGH  = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

1877 :	"a"
		- NEIGH  = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

1878 :	"Pair"
		- NEIGH  = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

1878 :	"&"
		- NEIGH  = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

1878 :	"b"
		- NEIGH  = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

1880 :	"if"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

1880 :	"a"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

1880 :	"second"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

1880 :	">"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

1880 :	"b"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

1880 :	"second"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

1881 :	"return"
		- NEIGH  = { return , }
		- PARENT = { > , second , a , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1883 :	"if"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

1883 :	"a"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

1883 :	"second"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

1883 :	"<"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

1883 :	"b"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

1883 :	"second"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

1884 :	"return"
		- NEIGH  = { return , }
		- PARENT = { < , second , a , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1888 :	"&"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

1888 :	"aName"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

1888 :	"a"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

1888 :	"first"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

1888 :	"nameStr"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

1889 :	"&"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

1889 :	"bName"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

1889 :	"b"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

1889 :	"first"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

1889 :	"nameStr"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

1890 :	"if"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

1890 :	"aName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

1890 :	"=="
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

1890 :	"thisName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

1890 :	"&&"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

1890 :	"bName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

1890 :	"!="
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

1890 :	"thisName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

1891 :	"return"
		- NEIGH  = { return , }
		- PARENT = { != , bName , && , == , aName , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1893 :	"if"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { datum , first , a , aDatum , & , }

1893 :	"bName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { datum , first , a , aDatum , & , }

1893 :	"=="
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { datum , first , a , aDatum , & , }

1893 :	"thisName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { datum , first , a , aDatum , & , }

1893 :	"&&"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { datum , first , a , aDatum , & , }

1893 :	"aName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { datum , first , a , aDatum , & , }

1893 :	"!="
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { datum , first , a , aDatum , & , }

1893 :	"thisName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { datum , first , a , aDatum , & , }

1894 :	"return"
		- NEIGH  = { return , }
		- PARENT = { != , aName , && , == , bName , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1898 :	"&"
		- NEIGH  = { datum , first , a , aDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { datum , first , b , bDatum , & , }

1898 :	"aDatum"
		- NEIGH  = { datum , first , a , aDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { datum , first , b , bDatum , & , }

1898 :	"a"
		- NEIGH  = { datum , first , a , aDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { datum , first , b , bDatum , & , }

1898 :	"first"
		- NEIGH  = { datum , first , a , aDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { datum , first , b , bDatum , & , }

1898 :	"datum"
		- NEIGH  = { datum , first , a , aDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { datum , first , b , bDatum , & , }

1899 :	"&"
		- NEIGH  = { datum , first , b , bDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum , first , a , aDatum , & , }
		- SUCC   = { && , bDatum , aDatum , thisDatum , if , }

1899 :	"bDatum"
		- NEIGH  = { datum , first , b , bDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum , first , a , aDatum , & , }
		- SUCC   = { && , bDatum , aDatum , thisDatum , if , }

1899 :	"b"
		- NEIGH  = { datum , first , b , bDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum , first , a , aDatum , & , }
		- SUCC   = { && , bDatum , aDatum , thisDatum , if , }

1899 :	"first"
		- NEIGH  = { datum , first , b , bDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum , first , a , aDatum , & , }
		- SUCC   = { && , bDatum , aDatum , thisDatum , if , }

1899 :	"datum"
		- NEIGH  = { datum , first , b , bDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum , first , a , aDatum , & , }
		- SUCC   = { && , bDatum , aDatum , thisDatum , if , }

1900 :	"if"
		- NEIGH  = { && , bDatum , aDatum , thisDatum , if , }
		- PARENT = { }
		- CHILD  = { && , bDatum , if , dbContext , IComparable , thisDatum , ! , _isEquivalentTo , Criterion , util , aDatum , get , thisEquivBDatum , EQUIVALENT , thisEquivADatum , }
		- PRED   = { datum , first , b , bDatum , & , }
		- SUCC   = { coordinateSystem , first , a , aCS , & , }

1900 :	"thisDatum"
		- NEIGH  = { && , bDatum , aDatum , thisDatum , if , }
		- PARENT = { }
		- CHILD  = { && , bDatum , if , dbContext , IComparable , thisDatum , ! , _isEquivalentTo , Criterion , util , aDatum , get , thisEquivBDatum , EQUIVALENT , thisEquivADatum , }
		- PRED   = { datum , first , b , bDatum , & , }
		- SUCC   = { coordinateSystem , first , a , aCS , & , }

1900 :	"&&"
		- NEIGH  = { && , bDatum , aDatum , thisDatum , if , }
		- PARENT = { }
		- CHILD  = { && , bDatum , if , dbContext , IComparable , thisDatum , ! , _isEquivalentTo , Criterion , util , aDatum , get , thisEquivBDatum , EQUIVALENT , thisEquivADatum , }
		- PRED   = { datum , first , b , bDatum , & , }
		- SUCC   = { coordinateSystem , first , a , aCS , & , }

1900 :	"aDatum"
		- NEIGH  = { && , bDatum , aDatum , thisDatum , if , }
		- PARENT = { }
		- CHILD  = { && , bDatum , if , dbContext , IComparable , thisDatum , ! , _isEquivalentTo , Criterion , util , aDatum , get , thisEquivBDatum , EQUIVALENT , thisEquivADatum , }
		- PRED   = { datum , first , b , bDatum , & , }
		- SUCC   = { coordinateSystem , first , a , aCS , & , }

1900 :	"&&"
		- NEIGH  = { && , bDatum , aDatum , thisDatum , if , }
		- PARENT = { }
		- CHILD  = { && , bDatum , if , dbContext , IComparable , thisDatum , ! , _isEquivalentTo , Criterion , util , aDatum , get , thisEquivBDatum , EQUIVALENT , thisEquivADatum , }
		- PRED   = { datum , first , b , bDatum , & , }
		- SUCC   = { coordinateSystem , first , a , aCS , & , }

1900 :	"bDatum"
		- NEIGH  = { && , bDatum , aDatum , thisDatum , if , }
		- PARENT = { }
		- CHILD  = { && , bDatum , if , dbContext , IComparable , thisDatum , ! , _isEquivalentTo , Criterion , util , aDatum , get , thisEquivBDatum , EQUIVALENT , thisEquivADatum , }
		- PRED   = { datum , first , b , bDatum , & , }
		- SUCC   = { coordinateSystem , first , a , aCS , & , }

1901 :	"thisEquivADatum"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }

1901 :	"thisDatum"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }

1901 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }

1902 :	"aDatum"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }

1902 :	"get"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }

1902 :	"util"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }

1902 :	"IComparable"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }

1902 :	"Criterion"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }

1902 :	"EQUIVALENT"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }

1903 :	"dbContext"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }

1904 :	"thisEquivBDatum"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- SUCC   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }

1904 :	"thisDatum"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- SUCC   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }

1904 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- SUCC   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }

1905 :	"bDatum"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- SUCC   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }

1905 :	"get"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- SUCC   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }

1905 :	"util"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- SUCC   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }

1905 :	"IComparable"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- SUCC   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }

1905 :	"Criterion"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- SUCC   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }

1905 :	"EQUIVALENT"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- SUCC   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }

1906 :	"dbContext"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- SUCC   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }

1908 :	"if"
		- NEIGH  = { && , thisEquivBDatum , ! , thisEquivADatum , if , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- SUCC   = { && , thisEquivBDatum , thisEquivADatum , ! , if , }

1908 :	"thisEquivADatum"
		- NEIGH  = { && , thisEquivBDatum , ! , thisEquivADatum , if , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- SUCC   = { && , thisEquivBDatum , thisEquivADatum , ! , if , }

1908 :	"&&"
		- NEIGH  = { && , thisEquivBDatum , ! , thisEquivADatum , if , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- SUCC   = { && , thisEquivBDatum , thisEquivADatum , ! , if , }

1908 :	"!"
		- NEIGH  = { && , thisEquivBDatum , ! , thisEquivADatum , if , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- SUCC   = { && , thisEquivBDatum , thisEquivADatum , ! , if , }

1908 :	"thisEquivBDatum"
		- NEIGH  = { && , thisEquivBDatum , ! , thisEquivADatum , if , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- SUCC   = { && , thisEquivBDatum , thisEquivADatum , ! , if , }

1909 :	"return"
		- NEIGH  = { return , }
		- PARENT = { && , thisEquivBDatum , ! , thisEquivADatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1911 :	"if"
		- NEIGH  = { && , thisEquivBDatum , thisEquivADatum , ! , if , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }
		- SUCC   = { }

1911 :	"!"
		- NEIGH  = { && , thisEquivBDatum , thisEquivADatum , ! , if , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }
		- SUCC   = { }

1911 :	"thisEquivADatum"
		- NEIGH  = { && , thisEquivBDatum , thisEquivADatum , ! , if , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }
		- SUCC   = { }

1911 :	"&&"
		- NEIGH  = { && , thisEquivBDatum , thisEquivADatum , ! , if , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }
		- SUCC   = { }

1911 :	"thisEquivBDatum"
		- NEIGH  = { && , thisEquivBDatum , thisEquivADatum , ! , if , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }
		- SUCC   = { }

1912 :	"return"
		- NEIGH  = { return , }
		- PARENT = { && , thisEquivBDatum , thisEquivADatum , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1917 :	"&"
		- NEIGH  = { coordinateSystem , first , a , aCS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , bDatum , aDatum , thisDatum , if , }
		- SUCC   = { coordinateSystem , first , b , bCS , & , }

1917 :	"aCS"
		- NEIGH  = { coordinateSystem , first , a , aCS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , bDatum , aDatum , thisDatum , if , }
		- SUCC   = { coordinateSystem , first , b , bCS , & , }

1917 :	"a"
		- NEIGH  = { coordinateSystem , first , a , aCS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , bDatum , aDatum , thisDatum , if , }
		- SUCC   = { coordinateSystem , first , b , bCS , & , }

1917 :	"first"
		- NEIGH  = { coordinateSystem , first , a , aCS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , bDatum , aDatum , thisDatum , if , }
		- SUCC   = { coordinateSystem , first , b , bCS , & , }

1917 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , first , a , aCS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , bDatum , aDatum , thisDatum , if , }
		- SUCC   = { coordinateSystem , first , b , bCS , & , }

1918 :	"&"
		- NEIGH  = { coordinateSystem , first , b , bCS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , a , aCS , & , }
		- SUCC   = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }

1918 :	"bCS"
		- NEIGH  = { coordinateSystem , first , b , bCS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , a , aCS , & , }
		- SUCC   = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }

1918 :	"b"
		- NEIGH  = { coordinateSystem , first , b , bCS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , a , aCS , & , }
		- SUCC   = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }

1918 :	"first"
		- NEIGH  = { coordinateSystem , first , b , bCS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , a , aCS , & , }
		- SUCC   = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }

1918 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , first , b , bCS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , a , aCS , & , }
		- SUCC   = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }

1919 :	"thisEquivACs"
		- NEIGH  = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , b , bCS , & , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }

1919 :	"thisCS"
		- NEIGH  = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , b , bCS , & , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }

1919 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , b , bCS , & , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }

1920 :	"aCS"
		- NEIGH  = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , b , bCS , & , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }

1920 :	"get"
		- NEIGH  = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , b , bCS , & , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }

1920 :	"util"
		- NEIGH  = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , b , bCS , & , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }

1920 :	"IComparable"
		- NEIGH  = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , b , bCS , & , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }

1920 :	"Criterion"
		- NEIGH  = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , b , bCS , & , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }

1920 :	"EQUIVALENT"
		- NEIGH  = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , b , bCS , & , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }

1921 :	"dbContext"
		- NEIGH  = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , b , bCS , & , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }

1922 :	"thisEquivBCs"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- SUCC   = { ! , thisEquivBCs , && , thisEquivACs , if , }

1922 :	"thisCS"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- SUCC   = { ! , thisEquivBCs , && , thisEquivACs , if , }

1922 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- SUCC   = { ! , thisEquivBCs , && , thisEquivACs , if , }

1923 :	"bCS"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- SUCC   = { ! , thisEquivBCs , && , thisEquivACs , if , }

1923 :	"get"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- SUCC   = { ! , thisEquivBCs , && , thisEquivACs , if , }

1923 :	"util"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- SUCC   = { ! , thisEquivBCs , && , thisEquivACs , if , }

1923 :	"IComparable"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- SUCC   = { ! , thisEquivBCs , && , thisEquivACs , if , }

1923 :	"Criterion"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- SUCC   = { ! , thisEquivBCs , && , thisEquivACs , if , }

1923 :	"EQUIVALENT"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- SUCC   = { ! , thisEquivBCs , && , thisEquivACs , if , }

1924 :	"dbContext"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- SUCC   = { ! , thisEquivBCs , && , thisEquivACs , if , }

1925 :	"if"
		- NEIGH  = { ! , thisEquivBCs , && , thisEquivACs , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- SUCC   = { thisEquivBCs , && , ! , thisEquivACs , if , }

1925 :	"thisEquivACs"
		- NEIGH  = { ! , thisEquivBCs , && , thisEquivACs , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- SUCC   = { thisEquivBCs , && , ! , thisEquivACs , if , }

1925 :	"&&"
		- NEIGH  = { ! , thisEquivBCs , && , thisEquivACs , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- SUCC   = { thisEquivBCs , && , ! , thisEquivACs , if , }

1925 :	"!"
		- NEIGH  = { ! , thisEquivBCs , && , thisEquivACs , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- SUCC   = { thisEquivBCs , && , ! , thisEquivACs , if , }

1925 :	"thisEquivBCs"
		- NEIGH  = { ! , thisEquivBCs , && , thisEquivACs , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- SUCC   = { thisEquivBCs , && , ! , thisEquivACs , if , }

1926 :	"return"
		- NEIGH  = { return , }
		- PARENT = { ! , thisEquivBCs , && , thisEquivACs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1928 :	"if"
		- NEIGH  = { thisEquivBCs , && , ! , thisEquivACs , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { ! , thisEquivBCs , && , thisEquivACs , if , }
		- SUCC   = { size , axisList , thisCS , thisCSAxisListSize , }

1928 :	"!"
		- NEIGH  = { thisEquivBCs , && , ! , thisEquivACs , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { ! , thisEquivBCs , && , thisEquivACs , if , }
		- SUCC   = { size , axisList , thisCS , thisCSAxisListSize , }

1928 :	"thisEquivACs"
		- NEIGH  = { thisEquivBCs , && , ! , thisEquivACs , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { ! , thisEquivBCs , && , thisEquivACs , if , }
		- SUCC   = { size , axisList , thisCS , thisCSAxisListSize , }

1928 :	"&&"
		- NEIGH  = { thisEquivBCs , && , ! , thisEquivACs , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { ! , thisEquivBCs , && , thisEquivACs , if , }
		- SUCC   = { size , axisList , thisCS , thisCSAxisListSize , }

1928 :	"thisEquivBCs"
		- NEIGH  = { thisEquivBCs , && , ! , thisEquivACs , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { ! , thisEquivBCs , && , thisEquivACs , if , }
		- SUCC   = { size , axisList , thisCS , thisCSAxisListSize , }

1929 :	"return"
		- NEIGH  = { return , }
		- PARENT = { thisEquivBCs , && , ! , thisEquivACs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1933 :	"thisCSAxisListSize"
		- NEIGH  = { size , axisList , thisCS , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisEquivBCs , && , ! , thisEquivACs , if , }
		- SUCC   = { axisList , size , aCS , aCSAxistListSize , }

1933 :	"thisCS"
		- NEIGH  = { size , axisList , thisCS , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisEquivBCs , && , ! , thisEquivACs , if , }
		- SUCC   = { axisList , size , aCS , aCSAxistListSize , }

1933 :	"axisList"
		- NEIGH  = { size , axisList , thisCS , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisEquivBCs , && , ! , thisEquivACs , if , }
		- SUCC   = { axisList , size , aCS , aCSAxistListSize , }

1933 :	"size"
		- NEIGH  = { size , axisList , thisCS , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisEquivBCs , && , ! , thisEquivACs , if , }
		- SUCC   = { axisList , size , aCS , aCSAxistListSize , }

1934 :	"aCSAxistListSize"
		- NEIGH  = { axisList , size , aCS , aCSAxistListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , axisList , thisCS , thisCSAxisListSize , }
		- SUCC   = { axisList , size , bCS , bCSAxistListSize , }

1934 :	"aCS"
		- NEIGH  = { axisList , size , aCS , aCSAxistListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , axisList , thisCS , thisCSAxisListSize , }
		- SUCC   = { axisList , size , bCS , bCSAxistListSize , }

1934 :	"axisList"
		- NEIGH  = { axisList , size , aCS , aCSAxistListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , axisList , thisCS , thisCSAxisListSize , }
		- SUCC   = { axisList , size , bCS , bCSAxistListSize , }

1934 :	"size"
		- NEIGH  = { axisList , size , aCS , aCSAxistListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , axisList , thisCS , thisCSAxisListSize , }
		- SUCC   = { axisList , size , bCS , bCSAxistListSize , }

1935 :	"bCSAxistListSize"
		- NEIGH  = { axisList , size , bCS , bCSAxistListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , size , aCS , aCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

1935 :	"bCS"
		- NEIGH  = { axisList , size , bCS , bCSAxistListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , size , aCS , aCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

1935 :	"axisList"
		- NEIGH  = { axisList , size , bCS , bCSAxistListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , size , aCS , aCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

1935 :	"size"
		- NEIGH  = { axisList , size , bCS , bCSAxistListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , size , aCS , aCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

1936 :	"if"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , size , bCS , bCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

1936 :	"thisCSAxisListSize"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , size , bCS , bCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

1936 :	"=="
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , size , bCS , bCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

1936 :	"aCSAxistListSize"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , size , bCS , bCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

1936 :	"&&"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , size , bCS , bCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

1937 :	"thisCSAxisListSize"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , size , bCS , bCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

1937 :	"!="
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , size , bCS , bCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

1937 :	"bCSAxistListSize"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , size , bCS , bCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

1938 :	"return"
		- NEIGH  = { return , }
		- PARENT = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1940 :	"if"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { && , bDatum , aDatum , if , }

1940 :	"thisCSAxisListSize"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { && , bDatum , aDatum , if , }

1940 :	"!="
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { && , bDatum , aDatum , if , }

1940 :	"aCSAxistListSize"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { && , bDatum , aDatum , if , }

1940 :	"&&"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { && , bDatum , aDatum , if , }

1941 :	"thisCSAxisListSize"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { && , bDatum , aDatum , if , }

1941 :	"=="
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { && , bDatum , aDatum , if , }

1941 :	"bCSAxistListSize"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { && , bDatum , aDatum , if , }

1942 :	"return"
		- NEIGH  = { return , }
		- PARENT = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1945 :	"if"
		- NEIGH  = { && , bDatum , aDatum , if , }
		- PARENT = { }
		- CHILD  = { && , b , bDatum , ellipsoid , bEllpsNameEqCRSName , a , c_str , metadata , nameStr , ! , aEllpsNameEqCRSName , aDatum , if , first , isEquivalentName , Identifier , }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { bName , < , aName , return , }

1945 :	"aDatum"
		- NEIGH  = { && , bDatum , aDatum , if , }
		- PARENT = { }
		- CHILD  = { && , b , bDatum , ellipsoid , bEllpsNameEqCRSName , a , c_str , metadata , nameStr , ! , aEllpsNameEqCRSName , aDatum , if , first , isEquivalentName , Identifier , }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { bName , < , aName , return , }

1945 :	"&&"
		- NEIGH  = { && , bDatum , aDatum , if , }
		- PARENT = { }
		- CHILD  = { && , b , bDatum , ellipsoid , bEllpsNameEqCRSName , a , c_str , metadata , nameStr , ! , aEllpsNameEqCRSName , aDatum , if , first , isEquivalentName , Identifier , }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { bName , < , aName , return , }

1945 :	"bDatum"
		- NEIGH  = { && , bDatum , aDatum , if , }
		- PARENT = { }
		- CHILD  = { && , b , bDatum , ellipsoid , bEllpsNameEqCRSName , a , c_str , metadata , nameStr , ! , aEllpsNameEqCRSName , aDatum , if , first , isEquivalentName , Identifier , }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { bName , < , aName , return , }

1948 :	"aEllpsNameEqCRSName"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

1949 :	"metadata"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

1949 :	"Identifier"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

1949 :	"isEquivalentName"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

1950 :	"aDatum"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

1950 :	"ellipsoid"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

1950 :	"nameStr"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

1950 :	"c_str"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

1951 :	"a"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

1951 :	"first"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

1951 :	"nameStr"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

1951 :	"c_str"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

1952 :	"bEllpsNameEqCRSName"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

1953 :	"metadata"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

1953 :	"Identifier"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

1953 :	"isEquivalentName"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

1954 :	"bDatum"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

1954 :	"ellipsoid"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

1954 :	"nameStr"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

1954 :	"c_str"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

1955 :	"b"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

1955 :	"first"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

1955 :	"nameStr"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

1955 :	"c_str"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

1956 :	"if"
		- NEIGH  = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { return , }
		- PRED   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- SUCC   = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }

1956 :	"aEllpsNameEqCRSName"
		- NEIGH  = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { return , }
		- PRED   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- SUCC   = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }

1956 :	"&&"
		- NEIGH  = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { return , }
		- PRED   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- SUCC   = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }

1956 :	"!"
		- NEIGH  = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { return , }
		- PRED   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- SUCC   = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }

1956 :	"bEllpsNameEqCRSName"
		- NEIGH  = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { return , }
		- PRED   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- SUCC   = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }

1957 :	"return"
		- NEIGH  = { return , }
		- PARENT = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1959 :	"if"
		- NEIGH  = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { return , }
		- PRED   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }
		- SUCC   = { }

1959 :	"bEllpsNameEqCRSName"
		- NEIGH  = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { return , }
		- PRED   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }
		- SUCC   = { }

1959 :	"&&"
		- NEIGH  = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { return , }
		- PRED   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }
		- SUCC   = { }

1959 :	"!"
		- NEIGH  = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { return , }
		- PRED   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }
		- SUCC   = { }

1959 :	"aEllpsNameEqCRSName"
		- NEIGH  = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { return , }
		- PRED   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }
		- SUCC   = { }

1960 :	"return"
		- NEIGH  = { return , }
		- PARENT = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1965 :	"return"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , bDatum , aDatum , if , }
		- SUCC   = { }

1965 :	"aName"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , bDatum , aDatum , if , }
		- SUCC   = { }

1965 :	"<"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , bDatum , aDatum , if , }
		- SUCC   = { }

1965 :	"bName"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , bDatum , aDatum , if , }
		- SUCC   = { }

1969 :	"if"
		- NEIGH  = { second , >= , size , == , front , && , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { & , for , res , > , pair , newRes , Pair , < , list , return , std , }
		- PRED   = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- SUCC   = { }

1969 :	"res"
		- NEIGH  = { second , >= , size , == , front , && , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { & , for , res , > , pair , newRes , Pair , < , list , return , std , }
		- PRED   = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- SUCC   = { }

1969 :	"size"
		- NEIGH  = { second , >= , size , == , front , && , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { & , for , res , > , pair , newRes , Pair , < , list , return , std , }
		- PRED   = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- SUCC   = { }

1969 :	">="
		- NEIGH  = { second , >= , size , == , front , && , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { & , for , res , > , pair , newRes , Pair , < , list , return , std , }
		- PRED   = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- SUCC   = { }

1969 :	"&&"
		- NEIGH  = { second , >= , size , == , front , && , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { & , for , res , > , pair , newRes , Pair , < , list , return , std , }
		- PRED   = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- SUCC   = { }

1969 :	"res"
		- NEIGH  = { second , >= , size , == , front , && , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { & , for , res , > , pair , newRes , Pair , < , list , return , std , }
		- PRED   = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- SUCC   = { }

1969 :	"front"
		- NEIGH  = { second , >= , size , == , front , && , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { & , for , res , > , pair , newRes , Pair , < , list , return , std , }
		- PRED   = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- SUCC   = { }

1969 :	"second"
		- NEIGH  = { second , >= , size , == , front , && , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { & , for , res , > , pair , newRes , Pair , < , list , return , std , }
		- PRED   = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- SUCC   = { }

1969 :	"=="
		- NEIGH  = { second , >= , size , == , front , && , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { & , for , res , > , pair , newRes , Pair , < , list , return , std , }
		- PRED   = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- SUCC   = { }

1970 :	"std"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

1970 :	"list"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

1970 :	"<"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

1970 :	"Pair"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

1970 :	">"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

1970 :	"newRes"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

1971 :	"for"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

1971 :	"&"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

1971 :	"pair"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

1971 :	"res"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

1972 :	"if"
		- NEIGH  = { == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

1972 :	"pair"
		- NEIGH  = { == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

1972 :	"second"
		- NEIGH  = { == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

1972 :	"=="
		- NEIGH  = { == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

1973 :	"newRes"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1973 :	"push_back"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1973 :	"pair"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1975 :	"break"
		- NEIGH  = { break , }
		- PARENT = { == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1978 :	"return"
		- NEIGH  = { newRes , return , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { }

1978 :	"newRes"
		- NEIGH  = { newRes , return , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { }

1981 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , if , }
		- SUCC   = { }

1981 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , if , }
		- SUCC   = { }

1988 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1988 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1988 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1988 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1988 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1988 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1988 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1988 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1989 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1989 :	"_identify"
		- NEIGH  = { _identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1989 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1989 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1989 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1989 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1990 :	"std"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

1990 :	"pair"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

1990 :	"<"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

1990 :	"CRSNNPtr"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

1990 :	">"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

1990 :	"Pair"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

1991 :	"std"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

1991 :	"list"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

1991 :	"<"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

1991 :	"Pair"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

1991 :	">"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

1991 :	"res"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

1992 :	"resTemp"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

1992 :	"identify"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

1992 :	"authorityFactory"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

1993 :	"for"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

1993 :	"&"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

1993 :	"pair"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

1993 :	"resTemp"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

1994 :	"res"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1994 :	"emplace_back"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1994 :	"pair"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1994 :	"first"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1994 :	"pair"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1994 :	"second"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1996 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pair , resTemp , & , for , }
		- SUCC   = { }

1996 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pair , resTemp , & , for , }
		- SUCC   = { }

2004 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2004 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2005 :	"cs"
		- NEIGH  = { EllipsoidalCSNNPtr , coordinateSystem_ , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { csIn , coordinateSystem_ , EllipsoidalCSNNPtr , & , cs , Private , }

2005 :	"EllipsoidalCSNNPtr"
		- NEIGH  = { EllipsoidalCSNNPtr , coordinateSystem_ , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { csIn , coordinateSystem_ , EllipsoidalCSNNPtr , & , cs , Private , }

2005 :	"coordinateSystem_"
		- NEIGH  = { EllipsoidalCSNNPtr , coordinateSystem_ , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { csIn , coordinateSystem_ , EllipsoidalCSNNPtr , & , cs , Private , }

2006 :	"Private"
		- NEIGH  = { csIn , coordinateSystem_ , EllipsoidalCSNNPtr , & , cs , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EllipsoidalCSNNPtr , coordinateSystem_ , cs , }
		- SUCC   = { }

2006 :	"cs"
		- NEIGH  = { csIn , coordinateSystem_ , EllipsoidalCSNNPtr , & , cs , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EllipsoidalCSNNPtr , coordinateSystem_ , cs , }
		- SUCC   = { }

2006 :	"EllipsoidalCSNNPtr"
		- NEIGH  = { csIn , coordinateSystem_ , EllipsoidalCSNNPtr , & , cs , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EllipsoidalCSNNPtr , coordinateSystem_ , cs , }
		- SUCC   = { }

2006 :	"&"
		- NEIGH  = { csIn , coordinateSystem_ , EllipsoidalCSNNPtr , & , cs , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EllipsoidalCSNNPtr , coordinateSystem_ , cs , }
		- SUCC   = { }

2006 :	"csIn"
		- NEIGH  = { csIn , coordinateSystem_ , EllipsoidalCSNNPtr , & , cs , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EllipsoidalCSNNPtr , coordinateSystem_ , cs , }
		- SUCC   = { }

2007 :	"coordinateSystem_"
		- NEIGH  = { csIn , coordinateSystem_ , EllipsoidalCSNNPtr , & , cs , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EllipsoidalCSNNPtr , coordinateSystem_ , cs , }
		- SUCC   = { }

2007 :	"csIn"
		- NEIGH  = { csIn , coordinateSystem_ , EllipsoidalCSNNPtr , & , cs , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EllipsoidalCSNNPtr , coordinateSystem_ , cs , }
		- SUCC   = { }

2013 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2013 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2013 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2013 :	"GeodeticReferenceFramePtr"
		- NEIGH  = { GeodeticReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2013 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2013 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2014 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2014 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2014 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2014 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2015 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2015 :	"EllipsoidalCSNNPtr"
		- NEIGH  = { EllipsoidalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2015 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2015 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2016 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2016 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2016 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2016 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2017 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2017 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2018 :	"checkEnsembleForGeodeticCRS"
		- NEIGH  = { checkEnsembleForGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2018 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2018 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2018 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2019 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2019 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2019 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2019 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2019 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2019 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2019 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2023 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2023 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2023 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2023 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2023 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2024 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2024 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2024 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2024 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2025 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2025 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2025 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2025 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2025 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2025 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2025 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2025 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2025 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2030 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2030 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2035 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2035 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2035 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2036 :	"crs"
		- NEIGH  = { this , * , < , GeographicCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2036 :	"GeographicCRS"
		- NEIGH  = { this , * , < , GeographicCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2036 :	"nn_make_shared"
		- NEIGH  = { this , * , < , GeographicCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2036 :	"<"
		- NEIGH  = { this , * , < , GeographicCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2036 :	"GeographicCRS"
		- NEIGH  = { this , * , < , GeographicCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2036 :	">"
		- NEIGH  = { this , * , < , GeographicCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2036 :	"*"
		- NEIGH  = { this , * , < , GeographicCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2036 :	"this"
		- NEIGH  = { this , * , < , GeographicCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2037 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , GeographicCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

2037 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , GeographicCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

2037 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , GeographicCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

2038 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

2038 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

2047 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2047 :	"EllipsoidalCSNNPtr"
		- NEIGH  = { EllipsoidalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2047 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2047 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2047 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2047 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2048 :	"return"
		- NEIGH  = { coordinateSystem_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2048 :	"d"
		- NEIGH  = { coordinateSystem_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2048 :	"coordinateSystem_"
		- NEIGH  = { coordinateSystem_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2063 :	"GeographicCRSNNPtr"
		- NEIGH  = { GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2064 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2064 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2064 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2064 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2064 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2064 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2065 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2065 :	"GeodeticReferenceFrameNNPtr"
		- NEIGH  = { GeodeticReferenceFrameNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2065 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2065 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2066 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2066 :	"EllipsoidalCSNNPtr"
		- NEIGH  = { EllipsoidalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2066 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2066 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2067 :	"return"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2067 :	"create"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2067 :	"properties"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2067 :	"datum"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2067 :	"as_nullable"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2067 :	"cs"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2086 :	"GeographicCRSNNPtr"
		- NEIGH  = { GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2087 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2087 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2087 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2087 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2087 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2087 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2088 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2088 :	"GeodeticReferenceFramePtr"
		- NEIGH  = { GeodeticReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2088 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2088 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2089 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2089 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2089 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2089 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2090 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2090 :	"EllipsoidalCSNNPtr"
		- NEIGH  = { EllipsoidalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2090 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2090 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2091 :	"GeographicCRSNNPtr"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2091 :	"crs"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2092 :	"GeographicCRS"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2092 :	"nn_make_shared"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2092 :	"<"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2092 :	"GeographicCRS"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2092 :	">"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2092 :	"datum"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2092 :	"datumEnsemble"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2092 :	"cs"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2093 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- SUCC   = { properties , setProperties , crs , }

2093 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- SUCC   = { properties , setProperties , crs , }

2093 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- SUCC   = { properties , setProperties , crs , }

2094 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }

2094 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }

2094 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }

2095 :	"properties"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

2095 :	"getStringValue"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

2096 :	"crs"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

2096 :	"CRS"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

2096 :	"getPrivate"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

2096 :	"extensionProj4_"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

2097 :	"crs"
		- NEIGH  = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { crs , return , }

2097 :	"CRS"
		- NEIGH  = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { crs , return , }

2097 :	"getPrivate"
		- NEIGH  = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { crs , return , }

2097 :	"setImplicitCS"
		- NEIGH  = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { crs , return , }

2097 :	"properties"
		- NEIGH  = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { crs , return , }

2098 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- SUCC   = { }

2098 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- SUCC   = { }

2108 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2108 :	"is2DPartOf3D"
		- NEIGH  = { is2DPartOf3D , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2108 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2108 :	"nn"
		- NEIGH  = { nn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2108 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2108 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2108 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2108 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2108 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2109 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2110 :	"&"
		- NEIGH  = { axisList , d , axis , coordinateSystem_ , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }

2110 :	"axis"
		- NEIGH  = { axisList , d , axis , coordinateSystem_ , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }

2110 :	"d"
		- NEIGH  = { axisList , d , axis , coordinateSystem_ , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }

2110 :	"coordinateSystem_"
		- NEIGH  = { axisList , d , axis , coordinateSystem_ , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }

2110 :	"axisList"
		- NEIGH  = { axisList , d , axis , coordinateSystem_ , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }

2111 :	"&"
		- NEIGH  = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , d , axis , coordinateSystem_ , & , }
		- SUCC   = { otherAxis , && , == , size , if , ! , axis , }

2111 :	"otherAxis"
		- NEIGH  = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , d , axis , coordinateSystem_ , & , }
		- SUCC   = { otherAxis , && , == , size , if , ! , axis , }

2111 :	"other"
		- NEIGH  = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , d , axis , coordinateSystem_ , & , }
		- SUCC   = { otherAxis , && , == , size , if , ! , axis , }

2111 :	"d"
		- NEIGH  = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , d , axis , coordinateSystem_ , & , }
		- SUCC   = { otherAxis , && , == , size , if , ! , axis , }

2111 :	"coordinateSystem_"
		- NEIGH  = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , d , axis , coordinateSystem_ , & , }
		- SUCC   = { otherAxis , && , == , size , if , ! , axis , }

2111 :	"axisList"
		- NEIGH  = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , d , axis , coordinateSystem_ , & , }
		- SUCC   = { otherAxis , && , == , size , if , ! , axis , }

2112 :	"if"
		- NEIGH  = { otherAxis , && , == , size , if , ! , axis , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- SUCC   = { axis , firstAxis , & , }

2112 :	"!"
		- NEIGH  = { otherAxis , && , == , size , if , ! , axis , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- SUCC   = { axis , firstAxis , & , }

2112 :	"axis"
		- NEIGH  = { otherAxis , && , == , size , if , ! , axis , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- SUCC   = { axis , firstAxis , & , }

2112 :	"size"
		- NEIGH  = { otherAxis , && , == , size , if , ! , axis , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- SUCC   = { axis , firstAxis , & , }

2112 :	"=="
		- NEIGH  = { otherAxis , && , == , size , if , ! , axis , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- SUCC   = { axis , firstAxis , & , }

2112 :	"&&"
		- NEIGH  = { otherAxis , && , == , size , if , ! , axis , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- SUCC   = { axis , firstAxis , & , }

2112 :	"otherAxis"
		- NEIGH  = { otherAxis , && , == , size , if , ! , axis , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- SUCC   = { axis , firstAxis , & , }

2112 :	"size"
		- NEIGH  = { otherAxis , && , == , size , if , ! , axis , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- SUCC   = { axis , firstAxis , & , }

2112 :	"=="
		- NEIGH  = { otherAxis , && , == , size , if , ! , axis , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- SUCC   = { axis , firstAxis , & , }

2113 :	"return"
		- NEIGH  = { return , }
		- PARENT = { otherAxis , && , == , size , if , ! , axis , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2115 :	"&"
		- NEIGH  = { axis , firstAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { otherAxis , && , == , size , if , ! , axis , }
		- SUCC   = { axis , secondAxis , & , }

2115 :	"firstAxis"
		- NEIGH  = { axis , firstAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { otherAxis , && , == , size , if , ! , axis , }
		- SUCC   = { axis , secondAxis , & , }

2115 :	"axis"
		- NEIGH  = { axis , firstAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { otherAxis , && , == , size , if , ! , axis , }
		- SUCC   = { axis , secondAxis , & , }

2116 :	"&"
		- NEIGH  = { axis , secondAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axis , firstAxis , & , }
		- SUCC   = { otherFirstAxis , otherAxis , & , }

2116 :	"secondAxis"
		- NEIGH  = { axis , secondAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axis , firstAxis , & , }
		- SUCC   = { otherFirstAxis , otherAxis , & , }

2116 :	"axis"
		- NEIGH  = { axis , secondAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axis , firstAxis , & , }
		- SUCC   = { otherFirstAxis , otherAxis , & , }

2117 :	"&"
		- NEIGH  = { otherFirstAxis , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axis , secondAxis , & , }
		- SUCC   = { otherSecondAxis , otherAxis , & , }

2117 :	"otherFirstAxis"
		- NEIGH  = { otherFirstAxis , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axis , secondAxis , & , }
		- SUCC   = { otherSecondAxis , otherAxis , & , }

2117 :	"otherAxis"
		- NEIGH  = { otherFirstAxis , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axis , secondAxis , & , }
		- SUCC   = { otherSecondAxis , otherAxis , & , }

2118 :	"&"
		- NEIGH  = { otherSecondAxis , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { otherFirstAxis , otherAxis , & , }
		- SUCC   = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }

2118 :	"otherSecondAxis"
		- NEIGH  = { otherSecondAxis , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { otherFirstAxis , otherAxis , & , }
		- SUCC   = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }

2118 :	"otherAxis"
		- NEIGH  = { otherSecondAxis , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { otherFirstAxis , otherAxis , & , }
		- SUCC   = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }

2119 :	"if"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

2119 :	"!"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

2119 :	"firstAxis"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

2119 :	"_isEquivalentTo"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

2120 :	"otherFirstAxis"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

2120 :	"get"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

2120 :	"util"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

2120 :	"IComparable"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

2120 :	"Criterion"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

2120 :	"EQUIVALENT"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

2120 :	"&&"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

2121 :	"secondAxis"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

2121 :	"_isEquivalentTo"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

2122 :	"otherSecondAxis"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

2122 :	"get"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

2123 :	"util"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

2123 :	"IComparable"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

2123 :	"Criterion"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

2123 :	"EQUIVALENT"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

2124 :	"return"
		- NEIGH  = { return , }
		- PARENT = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2126 :	"&"
		- NEIGH  = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- SUCC   = { datum_ , otherDatum , getPrivate , GeodeticCRS , other , & , }

2126 :	"thisDatum"
		- NEIGH  = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- SUCC   = { datum_ , otherDatum , getPrivate , GeodeticCRS , other , & , }

2126 :	"GeodeticCRS"
		- NEIGH  = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- SUCC   = { datum_ , otherDatum , getPrivate , GeodeticCRS , other , & , }

2126 :	"getPrivate"
		- NEIGH  = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- SUCC   = { datum_ , otherDatum , getPrivate , GeodeticCRS , other , & , }

2126 :	"datum_"
		- NEIGH  = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- SUCC   = { datum_ , otherDatum , getPrivate , GeodeticCRS , other , & , }

2127 :	"&"
		- NEIGH  = { datum_ , otherDatum , getPrivate , GeodeticCRS , other , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }
		- SUCC   = { otherDatum , && , thisDatum , if , }

2127 :	"otherDatum"
		- NEIGH  = { datum_ , otherDatum , getPrivate , GeodeticCRS , other , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }
		- SUCC   = { otherDatum , && , thisDatum , if , }

2127 :	"other"
		- NEIGH  = { datum_ , otherDatum , getPrivate , GeodeticCRS , other , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }
		- SUCC   = { otherDatum , && , thisDatum , if , }

2127 :	"GeodeticCRS"
		- NEIGH  = { datum_ , otherDatum , getPrivate , GeodeticCRS , other , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }
		- SUCC   = { otherDatum , && , thisDatum , if , }

2127 :	"getPrivate"
		- NEIGH  = { datum_ , otherDatum , getPrivate , GeodeticCRS , other , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }
		- SUCC   = { otherDatum , && , thisDatum , if , }

2127 :	"datum_"
		- NEIGH  = { datum_ , otherDatum , getPrivate , GeodeticCRS , other , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }
		- SUCC   = { otherDatum , && , thisDatum , if , }

2128 :	"if"
		- NEIGH  = { otherDatum , && , thisDatum , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- PRED   = { datum_ , otherDatum , getPrivate , GeodeticCRS , other , & , }
		- SUCC   = { return , }

2128 :	"thisDatum"
		- NEIGH  = { otherDatum , && , thisDatum , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- PRED   = { datum_ , otherDatum , getPrivate , GeodeticCRS , other , & , }
		- SUCC   = { return , }

2128 :	"&&"
		- NEIGH  = { otherDatum , && , thisDatum , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- PRED   = { datum_ , otherDatum , getPrivate , GeodeticCRS , other , & , }
		- SUCC   = { return , }

2128 :	"otherDatum"
		- NEIGH  = { otherDatum , && , thisDatum , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- PRED   = { datum_ , otherDatum , getPrivate , GeodeticCRS , other , & , }
		- SUCC   = { return , }

2129 :	"return"
		- NEIGH  = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- PARENT = { otherDatum , && , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2129 :	"thisDatum"
		- NEIGH  = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- PARENT = { otherDatum , && , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2129 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- PARENT = { otherDatum , && , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2130 :	"otherDatum"
		- NEIGH  = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- PARENT = { otherDatum , && , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2130 :	"get"
		- NEIGH  = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- PARENT = { otherDatum , && , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2130 :	"util"
		- NEIGH  = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- PARENT = { otherDatum , && , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2130 :	"IComparable"
		- NEIGH  = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- PARENT = { otherDatum , && , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2130 :	"Criterion"
		- NEIGH  = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- PARENT = { otherDatum , && , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2130 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- PARENT = { otherDatum , && , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2132 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { otherDatum , && , thisDatum , if , }
		- SUCC   = { }

2140 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2140 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2141 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2141 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2141 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2141 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2141 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2141 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2141 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2141 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2142 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2142 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2142 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2142 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2143 :	"otherGeogCRS"
		- NEIGH  = { other , dynamic_cast , * , GeographicCRS , < , > , otherGeogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , otherGeogCRS , if , }

2143 :	"dynamic_cast"
		- NEIGH  = { other , dynamic_cast , * , GeographicCRS , < , > , otherGeogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , otherGeogCRS , if , }

2143 :	"<"
		- NEIGH  = { other , dynamic_cast , * , GeographicCRS , < , > , otherGeogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , otherGeogCRS , if , }

2143 :	"GeographicCRS"
		- NEIGH  = { other , dynamic_cast , * , GeographicCRS , < , > , otherGeogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , otherGeogCRS , if , }

2143 :	"*"
		- NEIGH  = { other , dynamic_cast , * , GeographicCRS , < , > , otherGeogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , otherGeogCRS , if , }

2143 :	">"
		- NEIGH  = { other , dynamic_cast , * , GeographicCRS , < , > , otherGeogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , otherGeogCRS , if , }

2143 :	"other"
		- NEIGH  = { other , dynamic_cast , * , GeographicCRS , < , > , otherGeogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , otherGeogCRS , if , }

2144 :	"if"
		- NEIGH  = { == , otherGeogCRS , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , GeographicCRS , < , > , otherGeogCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

2144 :	"otherGeogCRS"
		- NEIGH  = { == , otherGeogCRS , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , GeographicCRS , < , > , otherGeogCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

2144 :	"=="
		- NEIGH  = { == , otherGeogCRS , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , GeographicCRS , < , > , otherGeogCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

2145 :	"return"
		- NEIGH  = { return , }
		- PARENT = { == , otherGeogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2147 :	"standardCriterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , otherGeogCRS , if , }
		- SUCC   = { if , standardCriterion , _isEquivalentTo , other , dbContext , GeodeticCRS , }

2147 :	"getStandardCriterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , otherGeogCRS , if , }
		- SUCC   = { if , standardCriterion , _isEquivalentTo , other , dbContext , GeodeticCRS , }

2147 :	"criterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , otherGeogCRS , if , }
		- SUCC   = { if , standardCriterion , _isEquivalentTo , other , dbContext , GeodeticCRS , }

2148 :	"if"
		- NEIGH  = { if , standardCriterion , _isEquivalentTo , other , dbContext , GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }

2148 :	"GeodeticCRS"
		- NEIGH  = { if , standardCriterion , _isEquivalentTo , other , dbContext , GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }

2148 :	"_isEquivalentTo"
		- NEIGH  = { if , standardCriterion , _isEquivalentTo , other , dbContext , GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }

2148 :	"other"
		- NEIGH  = { if , standardCriterion , _isEquivalentTo , other , dbContext , GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }

2148 :	"standardCriterion"
		- NEIGH  = { if , standardCriterion , _isEquivalentTo , other , dbContext , GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }

2148 :	"dbContext"
		- NEIGH  = { if , standardCriterion , _isEquivalentTo , other , dbContext , GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }

2149 :	"return"
		- NEIGH  = { return , }
		- PARENT = { if , standardCriterion , _isEquivalentTo , other , dbContext , GeodeticCRS , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2151 :	"if"
		- NEIGH  = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { if , standardCriterion , _isEquivalentTo , other , dbContext , GeodeticCRS , }
		- SUCC   = { coordinateSystem , axisOrder , }

2151 :	"criterion"
		- NEIGH  = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { if , standardCriterion , _isEquivalentTo , other , dbContext , GeodeticCRS , }
		- SUCC   = { coordinateSystem , axisOrder , }

2151 :	"!="
		- NEIGH  = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { if , standardCriterion , _isEquivalentTo , other , dbContext , GeodeticCRS , }
		- SUCC   = { coordinateSystem , axisOrder , }

2152 :	"util"
		- NEIGH  = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { if , standardCriterion , _isEquivalentTo , other , dbContext , GeodeticCRS , }
		- SUCC   = { coordinateSystem , axisOrder , }

2152 :	"IComparable"
		- NEIGH  = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { if , standardCriterion , _isEquivalentTo , other , dbContext , GeodeticCRS , }
		- SUCC   = { coordinateSystem , axisOrder , }

2152 :	"Criterion"
		- NEIGH  = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { if , standardCriterion , _isEquivalentTo , other , dbContext , GeodeticCRS , }
		- SUCC   = { coordinateSystem , axisOrder , }

2152 :	"EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS"
		- NEIGH  = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { if , standardCriterion , _isEquivalentTo , other , dbContext , GeodeticCRS , }
		- SUCC   = { coordinateSystem , axisOrder , }

2153 :	"return"
		- NEIGH  = { return , }
		- PARENT = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2155 :	"axisOrder"
		- NEIGH  = { coordinateSystem , axisOrder , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }
		- SUCC   = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }

2155 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , axisOrder , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }
		- SUCC   = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }

2155 :	"axisOrder"
		- NEIGH  = { coordinateSystem , axisOrder , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }
		- SUCC   = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }

2156 :	"if"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , GeodeticCRS , createLongitudeLatitude , dbContext , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , _isEquivalentTo , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { return , }

2156 :	"axisOrder"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , GeodeticCRS , createLongitudeLatitude , dbContext , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , _isEquivalentTo , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { return , }

2156 :	"=="
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , GeodeticCRS , createLongitudeLatitude , dbContext , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , _isEquivalentTo , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { return , }

2156 :	"cs"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , GeodeticCRS , createLongitudeLatitude , dbContext , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , _isEquivalentTo , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { return , }

2156 :	"EllipsoidalCS"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , GeodeticCRS , createLongitudeLatitude , dbContext , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , _isEquivalentTo , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { return , }

2156 :	"AxisOrder"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , GeodeticCRS , createLongitudeLatitude , dbContext , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , _isEquivalentTo , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { return , }

2156 :	"LONG_EAST_LAT_NORTH"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , GeodeticCRS , createLongitudeLatitude , dbContext , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , _isEquivalentTo , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { return , }

2156 :	"||"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , GeodeticCRS , createLongitudeLatitude , dbContext , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , _isEquivalentTo , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { return , }

2157 :	"axisOrder"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , GeodeticCRS , createLongitudeLatitude , dbContext , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , _isEquivalentTo , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { return , }

2157 :	"=="
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , GeodeticCRS , createLongitudeLatitude , dbContext , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , _isEquivalentTo , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { return , }

2157 :	"cs"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , GeodeticCRS , createLongitudeLatitude , dbContext , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , _isEquivalentTo , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { return , }

2157 :	"EllipsoidalCS"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , GeodeticCRS , createLongitudeLatitude , dbContext , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , _isEquivalentTo , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { return , }

2157 :	"AxisOrder"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , GeodeticCRS , createLongitudeLatitude , dbContext , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , _isEquivalentTo , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { return , }

2157 :	"LAT_NORTH_LONG_EAST"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , GeodeticCRS , createLongitudeLatitude , dbContext , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , _isEquivalentTo , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { return , }

2158 :	"&"
		- NEIGH  = { axisList , coordinateSystem , unit , & , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }

2158 :	"unit"
		- NEIGH  = { axisList , coordinateSystem , unit , & , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }

2158 :	"coordinateSystem"
		- NEIGH  = { axisList , coordinateSystem , unit , & , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }

2158 :	"axisList"
		- NEIGH  = { axisList , coordinateSystem , unit , & , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }

2158 :	"unit"
		- NEIGH  = { axisList , coordinateSystem , unit , & , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }

2159 :	"return"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2159 :	"GeographicCRS"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2159 :	"create"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2160 :	"util"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2160 :	"PropertyMap"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2160 :	"set"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2160 :	"common"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2160 :	"IdentifiedObject"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2160 :	"NAME_KEY"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2161 :	"nameStr"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2162 :	"datum"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2162 :	"datumEnsemble"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2163 :	"axisOrder"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2163 :	"=="
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2164 :	"cs"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2164 :	"EllipsoidalCS"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2164 :	"AxisOrder"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2164 :	"LONG_EAST_LAT_NORTH"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2165 :	"cs"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2165 :	"EllipsoidalCS"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2165 :	"createLatitudeLongitude"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2165 :	"unit"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2166 :	"cs"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2166 :	"EllipsoidalCS"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2166 :	"createLongitudeLatitude"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2166 :	"unit"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2167 :	"GeodeticCRS"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2167 :	"_isEquivalentTo"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2167 :	"other"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2167 :	"standardCriterion"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2167 :	"dbContext"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2169 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- SUCC   = { }

2175 :	"GeographicCRSNNPtr"
		- NEIGH  = { GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2175 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2175 :	"createEPSG_4267"
		- NEIGH  = { createEPSG_4267 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2176 :	"return"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2176 :	"create"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2176 :	"createMapNameEPSGCode"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2177 :	"datum"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2177 :	"GeodeticReferenceFrame"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2177 :	"EPSG_6267"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2178 :	"cs"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2178 :	"EllipsoidalCS"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2178 :	"createLatitudeLongitude"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2179 :	"common"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2179 :	"UnitOfMeasure"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2179 :	"DEGREE"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2184 :	"GeographicCRSNNPtr"
		- NEIGH  = { GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2184 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2184 :	"createEPSG_4269"
		- NEIGH  = { createEPSG_4269 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2185 :	"return"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2185 :	"create"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2185 :	"createMapNameEPSGCode"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2186 :	"datum"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2186 :	"GeodeticReferenceFrame"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2186 :	"EPSG_6269"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2187 :	"cs"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2187 :	"EllipsoidalCS"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2187 :	"createLatitudeLongitude"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2188 :	"common"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2188 :	"UnitOfMeasure"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2188 :	"DEGREE"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2193 :	"GeographicCRSNNPtr"
		- NEIGH  = { GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2193 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2193 :	"createEPSG_4326"
		- NEIGH  = { createEPSG_4326 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2194 :	"return"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2194 :	"create"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2194 :	"createMapNameEPSGCode"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2195 :	"datum"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2195 :	"GeodeticReferenceFrame"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2195 :	"EPSG_6326"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2196 :	"cs"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2196 :	"EllipsoidalCS"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2196 :	"createLatitudeLongitude"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2197 :	"common"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2197 :	"UnitOfMeasure"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2197 :	"DEGREE"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2202 :	"GeographicCRSNNPtr"
		- NEIGH  = { GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2202 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2202 :	"createOGC_CRS84"
		- NEIGH  = { createOGC_CRS84 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2203 :	"util"
		- NEIGH  = { propertiesCRS , PropertyMap , util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }

2203 :	"PropertyMap"
		- NEIGH  = { propertiesCRS , PropertyMap , util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }

2203 :	"propertiesCRS"
		- NEIGH  = { propertiesCRS , PropertyMap , util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }

2204 :	"propertiesCRS"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2205 :	"set"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2205 :	"metadata"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2205 :	"Identifier"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2205 :	"CODESPACE_KEY"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2205 :	"metadata"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2205 :	"Identifier"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2205 :	"OGC"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2206 :	"set"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2206 :	"metadata"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2206 :	"Identifier"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2206 :	"CODE_KEY"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2207 :	"set"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2207 :	"common"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2207 :	"IdentifiedObject"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2207 :	"NAME_KEY"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2208 :	"return"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2208 :	"create"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2208 :	"propertiesCRS"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2208 :	"datum"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2208 :	"GeodeticReferenceFrame"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2208 :	"EPSG_6326"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2209 :	"cs"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2209 :	"EllipsoidalCS"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2209 :	"createLongitudeLatitude"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2210 :	"common"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2210 :	"UnitOfMeasure"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2210 :	"DEGREE"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2215 :	"GeographicCRSNNPtr"
		- NEIGH  = { GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2215 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2215 :	"createEPSG_4979"
		- NEIGH  = { createEPSG_4979 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2216 :	"return"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2216 :	"create"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2217 :	"createMapNameEPSGCode"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2218 :	"datum"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2218 :	"GeodeticReferenceFrame"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2218 :	"EPSG_6326"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2219 :	"cs"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2219 :	"EllipsoidalCS"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2219 :	"createLatitudeLongitudeEllipsoidalHeight"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2220 :	"common"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2220 :	"UnitOfMeasure"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2220 :	"DEGREE"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2220 :	"common"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2220 :	"UnitOfMeasure"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2220 :	"METRE"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2225 :	"GeographicCRSNNPtr"
		- NEIGH  = { GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2225 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2225 :	"createEPSG_4807"
		- NEIGH  = { createEPSG_4807 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2226 :	"ellps"
		- NEIGH  = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }

2226 :	"datum"
		- NEIGH  = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }

2226 :	"Ellipsoid"
		- NEIGH  = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }

2226 :	"createFlattenedSphere"
		- NEIGH  = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }

2227 :	"createMapNameEPSGCode"
		- NEIGH  = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }

2228 :	"common"
		- NEIGH  = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }

2228 :	"Length"
		- NEIGH  = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }

2228 :	"common"
		- NEIGH  = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }

2228 :	"Scale"
		- NEIGH  = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }

2230 :	"cs"
		- NEIGH  = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- SUCC   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }

2230 :	"cs"
		- NEIGH  = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- SUCC   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }

2230 :	"EllipsoidalCS"
		- NEIGH  = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- SUCC   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }

2230 :	"createLatitudeLongitude"
		- NEIGH  = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- SUCC   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }

2231 :	"common"
		- NEIGH  = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- SUCC   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }

2231 :	"UnitOfMeasure"
		- NEIGH  = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- SUCC   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }

2231 :	"GRAD"
		- NEIGH  = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- SUCC   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }

2233 :	"datum"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2233 :	"datum"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2233 :	"GeodeticReferenceFrame"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2233 :	"create"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2234 :	"createMapNameEPSGCode"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2235 :	"ellps"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2235 :	"util"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2235 :	"optional"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2235 :	"<"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2235 :	"std"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2235 :	"string"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2235 :	">"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2235 :	"datum"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2235 :	"PrimeMeridian"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2235 :	"PARIS"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2237 :	"return"
		- NEIGH  = { cs , createMapNameEPSGCode , datum , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- SUCC   = { }

2237 :	"create"
		- NEIGH  = { cs , createMapNameEPSGCode , datum , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- SUCC   = { }

2237 :	"createMapNameEPSGCode"
		- NEIGH  = { cs , createMapNameEPSGCode , datum , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- SUCC   = { }

2237 :	"datum"
		- NEIGH  = { cs , createMapNameEPSGCode , datum , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- SUCC   = { }

2237 :	"cs"
		- NEIGH  = { cs , createMapNameEPSGCode , datum , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- SUCC   = { }

2253 :	"GeographicCRSNNPtr"
		- NEIGH  = { GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2254 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2254 :	"demoteTo2D"
		- NEIGH  = { demoteTo2D , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2254 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2254 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2254 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2254 :	"newName"
		- NEIGH  = { newName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2255 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2255 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2255 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2255 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2257 :	"&"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

2257 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

2257 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

2257 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

2258 :	"if"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { }
		- CHILD  = { datumEnsemble , datum , nameStr , == , empty , ! , identifiers , NAME_KEY , EllipsoidalCS , common , size , return , newName , axisList , IdentifiedObject , PropertyMap , && , util , cs , set , if , dbContext , GeographicCRS , create , l_identifiers , & , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

2258 :	"axisList"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { }
		- CHILD  = { datumEnsemble , datum , nameStr , == , empty , ! , identifiers , NAME_KEY , EllipsoidalCS , common , size , return , newName , axisList , IdentifiedObject , PropertyMap , && , util , cs , set , if , dbContext , GeographicCRS , create , l_identifiers , & , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

2258 :	"size"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { }
		- CHILD  = { datumEnsemble , datum , nameStr , == , empty , ! , identifiers , NAME_KEY , EllipsoidalCS , common , size , return , newName , axisList , IdentifiedObject , PropertyMap , && , util , cs , set , if , dbContext , GeographicCRS , create , l_identifiers , & , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

2258 :	"=="
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { }
		- CHILD  = { datumEnsemble , datum , nameStr , == , empty , ! , identifiers , NAME_KEY , EllipsoidalCS , common , size , return , newName , axisList , IdentifiedObject , PropertyMap , && , util , cs , set , if , dbContext , GeographicCRS , create , l_identifiers , & , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

2259 :	"&"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , l_identifiers , == , && , dbContext , if , }

2259 :	"l_identifiers"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , l_identifiers , == , && , dbContext , if , }

2259 :	"identifiers"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , l_identifiers , == , && , dbContext , if , }

2263 :	"if"
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , GEOGRAPHIC_2D_CRS , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

2263 :	"dbContext"
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , GEOGRAPHIC_2D_CRS , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

2263 :	"&&"
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , GEOGRAPHIC_2D_CRS , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

2263 :	"l_identifiers"
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , GEOGRAPHIC_2D_CRS , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

2263 :	"size"
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , GEOGRAPHIC_2D_CRS , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

2263 :	"=="
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , GEOGRAPHIC_2D_CRS , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

2264 :	"authFactory"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

2264 :	"io"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

2264 :	"AuthorityFactory"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

2264 :	"create"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

2265 :	"NN_NO_CHECK"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

2265 :	"dbContext"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

2265 :	"*"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

2265 :	"l_identifiers"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

2265 :	"codeSpace"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

2266 :	"res"
		- NEIGH  = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

2266 :	"authFactory"
		- NEIGH  = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

2266 :	"createObjectsFromName"
		- NEIGH  = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

2267 :	"nameStr"
		- NEIGH  = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

2268 :	"io"
		- NEIGH  = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

2268 :	"AuthorityFactory"
		- NEIGH  = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

2268 :	"ObjectType"
		- NEIGH  = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

2268 :	"GEOGRAPHIC_2D_CRS"
		- NEIGH  = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

2269 :	"if"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { NN_NO_CHECK , is2DPartOf3D , < , util , if , this , firstResAsGeogCRS , nn_dynamic_pointer_cast , front , && , > , res , firstRes , GeographicCRS , & , }
		- PRED   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- SUCC   = { }

2269 :	"!"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { NN_NO_CHECK , is2DPartOf3D , < , util , if , this , firstResAsGeogCRS , nn_dynamic_pointer_cast , front , && , > , res , firstRes , GeographicCRS , & , }
		- PRED   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- SUCC   = { }

2269 :	"res"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { NN_NO_CHECK , is2DPartOf3D , < , util , if , this , firstResAsGeogCRS , nn_dynamic_pointer_cast , front , && , > , res , firstRes , GeographicCRS , & , }
		- PRED   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- SUCC   = { }

2269 :	"empty"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { NN_NO_CHECK , is2DPartOf3D , < , util , if , this , firstResAsGeogCRS , nn_dynamic_pointer_cast , front , && , > , res , firstRes , GeographicCRS , & , }
		- PRED   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- SUCC   = { }

2270 :	"&"
		- NEIGH  = { front , res , firstRes , & , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }

2270 :	"firstRes"
		- NEIGH  = { front , res , firstRes , & , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }

2270 :	"res"
		- NEIGH  = { front , res , firstRes , & , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }

2270 :	"front"
		- NEIGH  = { front , res , firstRes , & , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }

2271 :	"firstResAsGeogCRS"
		- NEIGH  = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }

2272 :	"util"
		- NEIGH  = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }

2272 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }

2272 :	"<"
		- NEIGH  = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }

2272 :	"GeographicCRS"
		- NEIGH  = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }

2272 :	">"
		- NEIGH  = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }

2272 :	"firstRes"
		- NEIGH  = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }

2273 :	"if"
		- NEIGH  = { this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { firstResAsGeogCRS , NN_NO_CHECK , return , }
		- PRED   = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- SUCC   = { }

2273 :	"firstResAsGeogCRS"
		- NEIGH  = { this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { firstResAsGeogCRS , NN_NO_CHECK , return , }
		- PRED   = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- SUCC   = { }

2273 :	"&&"
		- NEIGH  = { this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { firstResAsGeogCRS , NN_NO_CHECK , return , }
		- PRED   = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- SUCC   = { }

2274 :	"firstResAsGeogCRS"
		- NEIGH  = { this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { firstResAsGeogCRS , NN_NO_CHECK , return , }
		- PRED   = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- SUCC   = { }

2274 :	"is2DPartOf3D"
		- NEIGH  = { this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { firstResAsGeogCRS , NN_NO_CHECK , return , }
		- PRED   = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- SUCC   = { }

2274 :	"NN_NO_CHECK"
		- NEIGH  = { this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { firstResAsGeogCRS , NN_NO_CHECK , return , }
		- PRED   = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- SUCC   = { }

2274 :	"this"
		- NEIGH  = { this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { firstResAsGeogCRS , NN_NO_CHECK , return , }
		- PRED   = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- SUCC   = { }

2275 :	"return"
		- NEIGH  = { firstResAsGeogCRS , NN_NO_CHECK , return , }
		- PARENT = { this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2275 :	"NN_NO_CHECK"
		- NEIGH  = { firstResAsGeogCRS , NN_NO_CHECK , return , }
		- PARENT = { this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2275 :	"firstResAsGeogCRS"
		- NEIGH  = { firstResAsGeogCRS , NN_NO_CHECK , return , }
		- PARENT = { this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2280 :	"cs"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }

2280 :	"cs"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }

2280 :	"EllipsoidalCS"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }

2280 :	"create"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }

2280 :	"util"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }

2280 :	"PropertyMap"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }

2280 :	"axisList"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }

2281 :	"axisList"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }

2282 :	"return"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2282 :	"GeographicCRS"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2282 :	"create"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2283 :	"util"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2283 :	"PropertyMap"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2283 :	"set"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2283 :	"common"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2283 :	"IdentifiedObject"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2283 :	"NAME_KEY"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2284 :	"!"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2284 :	"newName"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2284 :	"empty"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2284 :	"newName"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2284 :	"nameStr"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2285 :	"datum"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2285 :	"datumEnsemble"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2285 :	"cs"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2288 :	"return"
		- NEIGH  = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

2288 :	"NN_NO_CHECK"
		- NEIGH  = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

2288 :	"std"
		- NEIGH  = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

2288 :	"dynamic_pointer_cast"
		- NEIGH  = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

2288 :	"<"
		- NEIGH  = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

2288 :	"GeographicCRS"
		- NEIGH  = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

2288 :	">"
		- NEIGH  = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

2289 :	"shared_from_this"
		- NEIGH  = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

2289 :	"as_nullable"
		- NEIGH  = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

2295 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2295 :	"addAngularUnitConvertAndAxisSwap"
		- NEIGH  = { addAngularUnitConvertAndAxisSwap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2296 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2296 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2296 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2296 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2297 :	"&"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addStep , formatter , }

2297 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addStep , formatter , }

2297 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addStep , formatter , }

2297 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addStep , formatter , }

2299 :	"formatter"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { addParam , formatter , }

2299 :	"addStep"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { addParam , formatter , }

2300 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }

2300 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }

2301 :	"if"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { addParam , formatter , }
		- PRED   = { addParam , formatter , }
		- SUCC   = { axisList , unitHoriz , unit , & , }

2301 :	"axisList"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { addParam , formatter , }
		- PRED   = { addParam , formatter , }
		- SUCC   = { axisList , unitHoriz , unit , & , }

2301 :	"size"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { addParam , formatter , }
		- PRED   = { addParam , formatter , }
		- SUCC   = { axisList , unitHoriz , unit , & , }

2301 :	"=="
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { addParam , formatter , }
		- PRED   = { addParam , formatter , }
		- SUCC   = { axisList , unitHoriz , unit , & , }

2301 :	"&&"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { addParam , formatter , }
		- PRED   = { addParam , formatter , }
		- SUCC   = { axisList , unitHoriz , unit , & , }

2301 :	"!"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { addParam , formatter , }
		- PRED   = { addParam , formatter , }
		- SUCC   = { axisList , unitHoriz , unit , & , }

2301 :	"formatter"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { addParam , formatter , }
		- PRED   = { addParam , formatter , }
		- SUCC   = { axisList , unitHoriz , unit , & , }

2301 :	"omitZUnitConversion"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { addParam , formatter , }
		- PRED   = { addParam , formatter , }
		- SUCC   = { axisList , unitHoriz , unit , & , }

2302 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2302 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2305 :	"&"
		- NEIGH  = { axisList , unitHoriz , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- SUCC   = { exportToPROJString , unitHoriz , projUnit , }

2305 :	"unitHoriz"
		- NEIGH  = { axisList , unitHoriz , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- SUCC   = { exportToPROJString , unitHoriz , projUnit , }

2305 :	"axisList"
		- NEIGH  = { axisList , unitHoriz , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- SUCC   = { exportToPROJString , unitHoriz , projUnit , }

2305 :	"unit"
		- NEIGH  = { axisList , unitHoriz , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- SUCC   = { exportToPROJString , unitHoriz , projUnit , }

2306 :	"projUnit"
		- NEIGH  = { exportToPROJString , unitHoriz , projUnit , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unitHoriz , unit , & , }
		- SUCC   = { empty , projUnit , if , }

2306 :	"unitHoriz"
		- NEIGH  = { exportToPROJString , unitHoriz , projUnit , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unitHoriz , unit , & , }
		- SUCC   = { empty , projUnit , if , }

2306 :	"exportToPROJString"
		- NEIGH  = { exportToPROJString , unitHoriz , projUnit , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unitHoriz , unit , & , }
		- SUCC   = { empty , projUnit , if , }

2307 :	"if"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { }
		- CHILD  = { projUnit , conversionToSI , unitHoriz , addParam , formatter , }
		- PRED   = { exportToPROJString , unitHoriz , projUnit , }
		- SUCC   = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }

2307 :	"projUnit"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { }
		- CHILD  = { projUnit , conversionToSI , unitHoriz , addParam , formatter , }
		- PRED   = { exportToPROJString , unitHoriz , projUnit , }
		- SUCC   = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }

2307 :	"empty"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { }
		- CHILD  = { projUnit , conversionToSI , unitHoriz , addParam , formatter , }
		- PRED   = { exportToPROJString , unitHoriz , projUnit , }
		- SUCC   = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }

2308 :	"formatter"
		- NEIGH  = { conversionToSI , unitHoriz , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2308 :	"addParam"
		- NEIGH  = { conversionToSI , unitHoriz , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2308 :	"unitHoriz"
		- NEIGH  = { conversionToSI , unitHoriz , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2308 :	"conversionToSI"
		- NEIGH  = { conversionToSI , unitHoriz , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2310 :	"formatter"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2310 :	"addParam"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2310 :	"projUnit"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2313 :	"if"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { if , exportToPROJString , unit , axisList , projVUnit , empty , unitZ , & , }
		- PRED   = { empty , projUnit , if , }
		- SUCC   = { order , * , }

2313 :	"axisList"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { if , exportToPROJString , unit , axisList , projVUnit , empty , unitZ , & , }
		- PRED   = { empty , projUnit , if , }
		- SUCC   = { order , * , }

2313 :	"size"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { if , exportToPROJString , unit , axisList , projVUnit , empty , unitZ , & , }
		- PRED   = { empty , projUnit , if , }
		- SUCC   = { order , * , }

2313 :	"=="
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { if , exportToPROJString , unit , axisList , projVUnit , empty , unitZ , & , }
		- PRED   = { empty , projUnit , if , }
		- SUCC   = { order , * , }

2313 :	"&&"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { if , exportToPROJString , unit , axisList , projVUnit , empty , unitZ , & , }
		- PRED   = { empty , projUnit , if , }
		- SUCC   = { order , * , }

2313 :	"!"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { if , exportToPROJString , unit , axisList , projVUnit , empty , unitZ , & , }
		- PRED   = { empty , projUnit , if , }
		- SUCC   = { order , * , }

2313 :	"formatter"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { if , exportToPROJString , unit , axisList , projVUnit , empty , unitZ , & , }
		- PRED   = { empty , projUnit , if , }
		- SUCC   = { order , * , }

2313 :	"omitZUnitConversion"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { if , exportToPROJString , unit , axisList , projVUnit , empty , unitZ , & , }
		- PRED   = { empty , projUnit , if , }
		- SUCC   = { order , * , }

2314 :	"&"
		- NEIGH  = { axisList , unitZ , unit , & , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { exportToPROJString , unitZ , projVUnit , }

2314 :	"unitZ"
		- NEIGH  = { axisList , unitZ , unit , & , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { exportToPROJString , unitZ , projVUnit , }

2314 :	"axisList"
		- NEIGH  = { axisList , unitZ , unit , & , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { exportToPROJString , unitZ , projVUnit , }

2314 :	"unit"
		- NEIGH  = { axisList , unitZ , unit , & , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { exportToPROJString , unitZ , projVUnit , }

2315 :	"projVUnit"
		- NEIGH  = { exportToPROJString , unitZ , projVUnit , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { axisList , unitZ , unit , & , }
		- SUCC   = { empty , projVUnit , if , }

2315 :	"unitZ"
		- NEIGH  = { exportToPROJString , unitZ , projVUnit , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { axisList , unitZ , unit , & , }
		- SUCC   = { empty , projVUnit , if , }

2315 :	"exportToPROJString"
		- NEIGH  = { exportToPROJString , unitZ , projVUnit , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { axisList , unitZ , unit , & , }
		- SUCC   = { empty , projVUnit , if , }

2316 :	"if"
		- NEIGH  = { empty , projVUnit , if , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { conversionToSI , projVUnit , unitZ , addParam , formatter , }
		- PRED   = { exportToPROJString , unitZ , projVUnit , }
		- SUCC   = { }

2316 :	"projVUnit"
		- NEIGH  = { empty , projVUnit , if , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { conversionToSI , projVUnit , unitZ , addParam , formatter , }
		- PRED   = { exportToPROJString , unitZ , projVUnit , }
		- SUCC   = { }

2316 :	"empty"
		- NEIGH  = { empty , projVUnit , if , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { conversionToSI , projVUnit , unitZ , addParam , formatter , }
		- PRED   = { exportToPROJString , unitZ , projVUnit , }
		- SUCC   = { }

2317 :	"formatter"
		- NEIGH  = { conversionToSI , unitZ , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2317 :	"addParam"
		- NEIGH  = { conversionToSI , unitZ , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2317 :	"unitZ"
		- NEIGH  = { conversionToSI , unitZ , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2317 :	"conversionToSI"
		- NEIGH  = { conversionToSI , unitZ , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2319 :	"formatter"
		- NEIGH  = { projVUnit , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2319 :	"addParam"
		- NEIGH  = { projVUnit , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2319 :	"projVUnit"
		- NEIGH  = { projVUnit , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2323 :	"*"
		- NEIGH  = { order , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- SUCC   = { one , * , }

2323 :	"order"
		- NEIGH  = { order , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- SUCC   = { one , * , }

2324 :	"*"
		- NEIGH  = { one , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { order , * , }
		- SUCC   = { two , * , }

2324 :	"one"
		- NEIGH  = { one , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { order , * , }
		- SUCC   = { two , * , }

2325 :	"*"
		- NEIGH  = { two , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { one , * , }
		- SUCC   = { ++ , < , i , for , }

2325 :	"two"
		- NEIGH  = { two , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { one , * , }
		- SUCC   = { ++ , < , i , for , }

2326 :	"for"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { two , * , }
		- SUCC   = { || , one , != , && , two , order , if , }

2326 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { two , * , }
		- SUCC   = { || , one , != , && , two , order , if , }

2326 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { two , * , }
		- SUCC   = { || , one , != , && , two , order , if , }

2326 :	"<"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { two , * , }
		- SUCC   = { || , one , != , && , two , order , if , }

2326 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { two , * , }
		- SUCC   = { || , one , != , && , two , order , if , }

2326 :	"++"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { two , * , }
		- SUCC   = { || , one , != , && , two , order , if , }

2327 :	"&"
		- NEIGH  = { axisList , dir , direction , i , & , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WEST , AxisDirection , cs , == , dir , & , if , }

2327 :	"dir"
		- NEIGH  = { axisList , dir , direction , i , & , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WEST , AxisDirection , cs , == , dir , & , if , }

2327 :	"axisList"
		- NEIGH  = { axisList , dir , direction , i , & , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WEST , AxisDirection , cs , == , dir , & , if , }

2327 :	"i"
		- NEIGH  = { axisList , dir , direction , i , & , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WEST , AxisDirection , cs , == , dir , & , if , }

2327 :	"direction"
		- NEIGH  = { axisList , dir , direction , i , & , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WEST , AxisDirection , cs , == , dir , & , if , }

2328 :	"if"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

2328 :	"&"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

2328 :	"dir"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

2328 :	"=="
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

2328 :	"&"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

2328 :	"cs"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

2328 :	"AxisDirection"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

2328 :	"WEST"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

2329 :	"order"
		- NEIGH  = { i , order , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2329 :	"i"
		- NEIGH  = { i , order , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2330 :	"if"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , one , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2330 :	"&"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , one , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2330 :	"dir"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , one , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2330 :	"=="
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , one , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2330 :	"&"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , one , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2330 :	"cs"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , one , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2330 :	"AxisDirection"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , one , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2330 :	"EAST"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , one , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2331 :	"order"
		- NEIGH  = { one , i , order , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2331 :	"i"
		- NEIGH  = { one , i , order , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2331 :	"one"
		- NEIGH  = { one , i , order , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2332 :	"if"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2332 :	"&"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2332 :	"dir"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2332 :	"=="
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2332 :	"&"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2332 :	"cs"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2332 :	"AxisDirection"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2332 :	"SOUTH"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2333 :	"order"
		- NEIGH  = { i , order , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2333 :	"i"
		- NEIGH  = { i , order , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2334 :	"if"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { two , i , order , }
		- PRED   = { }
		- SUCC   = { }

2334 :	"&"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { two , i , order , }
		- PRED   = { }
		- SUCC   = { }

2334 :	"dir"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { two , i , order , }
		- PRED   = { }
		- SUCC   = { }

2334 :	"=="
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { two , i , order , }
		- PRED   = { }
		- SUCC   = { }

2334 :	"&"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { two , i , order , }
		- PRED   = { }
		- SUCC   = { }

2334 :	"cs"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { two , i , order , }
		- PRED   = { }
		- SUCC   = { }

2334 :	"AxisDirection"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { two , i , order , }
		- PRED   = { }
		- SUCC   = { }

2334 :	"NORTH"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { two , i , order , }
		- PRED   = { }
		- SUCC   = { }

2335 :	"order"
		- NEIGH  = { two , i , order , }
		- PARENT = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2335 :	"i"
		- NEIGH  = { two , i , order , }
		- PARENT = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2335 :	"two"
		- NEIGH  = { two , i , order , }
		- PARENT = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2338 :	"if"
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2338 :	"order"
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2338 :	"&&"
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2338 :	"order"
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2338 :	"&&"
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2338 :	"order"
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2338 :	"!="
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2338 :	"one"
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2338 :	"||"
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2338 :	"order"
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2338 :	"!="
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2338 :	"two"
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2339 :	"formatter"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { || , one , != , && , two , order , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { orderStr , }

2339 :	"addStep"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { || , one , != , && , two , order , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { orderStr , }

2340 :	"orderStr"
		- NEIGH  = { orderStr , }
		- PARENT = { || , one , != , && , two , order , if , }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { order , orderStr , sprintf , }

2341 :	"sprintf"
		- NEIGH  = { order , orderStr , sprintf , }
		- PARENT = { || , one , != , && , two , order , if , }
		- CHILD  = { }
		- PRED   = { orderStr , }
		- SUCC   = { orderStr , addParam , formatter , }

2341 :	"orderStr"
		- NEIGH  = { order , orderStr , sprintf , }
		- PARENT = { || , one , != , && , two , order , if , }
		- CHILD  = { }
		- PRED   = { orderStr , }
		- SUCC   = { orderStr , addParam , formatter , }

2341 :	"order"
		- NEIGH  = { order , orderStr , sprintf , }
		- PARENT = { || , one , != , && , two , order , if , }
		- CHILD  = { }
		- PRED   = { orderStr , }
		- SUCC   = { orderStr , addParam , formatter , }

2341 :	"order"
		- NEIGH  = { order , orderStr , sprintf , }
		- PARENT = { || , one , != , && , two , order , if , }
		- CHILD  = { }
		- PRED   = { orderStr , }
		- SUCC   = { orderStr , addParam , formatter , }

2342 :	"formatter"
		- NEIGH  = { orderStr , addParam , formatter , }
		- PARENT = { || , one , != , && , two , order , if , }
		- CHILD  = { }
		- PRED   = { order , orderStr , sprintf , }
		- SUCC   = { }

2342 :	"addParam"
		- NEIGH  = { orderStr , addParam , formatter , }
		- PARENT = { || , one , != , && , two , order , if , }
		- CHILD  = { }
		- PRED   = { order , orderStr , sprintf , }
		- SUCC   = { }

2342 :	"orderStr"
		- NEIGH  = { orderStr , addParam , formatter , }
		- PARENT = { || , one , != , && , two , order , if , }
		- CHILD  = { }
		- PRED   = { order , orderStr , sprintf , }
		- SUCC   = { }

2350 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2350 :	"_exportToPROJString"
		- NEIGH  = { _exportToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2351 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2351 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2351 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2351 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2353 :	"&"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

2353 :	"extensionProj4"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

2353 :	"CRS"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

2353 :	"getPrivate"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

2353 :	"extensionProj4_"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

2354 :	"if"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }

2354 :	"!"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }

2354 :	"extensionProj4"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }

2354 :	"empty"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }

2355 :	"formatter"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

2355 :	"ingestPROJString"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

2356 :	"replaceAll"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

2356 :	"extensionProj4"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

2357 :	"formatter"
		- NEIGH  = { addNoDefs , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- SUCC   = { return , }

2357 :	"addNoDefs"
		- NEIGH  = { addNoDefs , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- SUCC   = { return , }

2358 :	"return"
		- NEIGH  = { return , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { addNoDefs , formatter , }
		- SUCC   = { }

2361 :	"if"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2361 :	"!"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2361 :	"formatter"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2361 :	"omitProjLongLatIfPossible"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2361 :	"||"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2362 :	"primeMeridian"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2362 :	"longitude"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2362 :	"getSIValue"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2362 :	"!="
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2362 :	"||"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2363 :	"!"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2363 :	"formatter"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2363 :	"getTOWGS84Parameters"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2363 :	"empty"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2363 :	"||"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2364 :	"!"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2364 :	"formatter"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2364 :	"getHDatumExtension"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2364 :	"empty"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2366 :	"formatter"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { done , }

2366 :	"addStep"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { done , }

2367 :	"done"
		- NEIGH  = { done , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }

2368 :	"if"
		- NEIGH  = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , util , get , EPSG_6326 , if , l_datum , datum , GeodeticReferenceFrame , _isEquivalentTo , && , & , }
		- PRED   = { done , }
		- SUCC   = { done , ! , if , }

2368 :	"formatter"
		- NEIGH  = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , util , get , EPSG_6326 , if , l_datum , datum , GeodeticReferenceFrame , _isEquivalentTo , && , & , }
		- PRED   = { done , }
		- SUCC   = { done , ! , if , }

2368 :	"getLegacyCRSToCRSContext"
		- NEIGH  = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , util , get , EPSG_6326 , if , l_datum , datum , GeodeticReferenceFrame , _isEquivalentTo , && , & , }
		- PRED   = { done , }
		- SUCC   = { done , ! , if , }

2368 :	"&&"
		- NEIGH  = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , util , get , EPSG_6326 , if , l_datum , datum , GeodeticReferenceFrame , _isEquivalentTo , && , & , }
		- PRED   = { done , }
		- SUCC   = { done , ! , if , }

2369 :	"formatter"
		- NEIGH  = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , util , get , EPSG_6326 , if , l_datum , datum , GeodeticReferenceFrame , _isEquivalentTo , && , & , }
		- PRED   = { done , }
		- SUCC   = { done , ! , if , }

2369 :	"getHDatumExtension"
		- NEIGH  = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , util , get , EPSG_6326 , if , l_datum , datum , GeodeticReferenceFrame , _isEquivalentTo , && , & , }
		- PRED   = { done , }
		- SUCC   = { done , ! , if , }

2369 :	"empty"
		- NEIGH  = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , util , get , EPSG_6326 , if , l_datum , datum , GeodeticReferenceFrame , _isEquivalentTo , && , & , }
		- PRED   = { done , }
		- SUCC   = { done , ! , if , }

2369 :	"&&"
		- NEIGH  = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , util , get , EPSG_6326 , if , l_datum , datum , GeodeticReferenceFrame , _isEquivalentTo , && , & , }
		- PRED   = { done , }
		- SUCC   = { done , ! , if , }

2370 :	"formatter"
		- NEIGH  = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , util , get , EPSG_6326 , if , l_datum , datum , GeodeticReferenceFrame , _isEquivalentTo , && , & , }
		- PRED   = { done , }
		- SUCC   = { done , ! , if , }

2370 :	"getTOWGS84Parameters"
		- NEIGH  = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , util , get , EPSG_6326 , if , l_datum , datum , GeodeticReferenceFrame , _isEquivalentTo , && , & , }
		- PRED   = { done , }
		- SUCC   = { done , ! , if , }

2370 :	"empty"
		- NEIGH  = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , util , get , EPSG_6326 , if , l_datum , datum , GeodeticReferenceFrame , _isEquivalentTo , && , & , }
		- PRED   = { done , }
		- SUCC   = { done , ! , if , }

2371 :	"&"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }

2371 :	"l_datum"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }

2371 :	"datum"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }

2372 :	"if"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , util , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , formatter , _isEquivalentTo , && , get , Criterion , addParam , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { }

2372 :	"l_datum"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , util , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , formatter , _isEquivalentTo , && , get , Criterion , addParam , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { }

2372 :	"&&"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , util , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , formatter , _isEquivalentTo , && , get , Criterion , addParam , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { }

2373 :	"l_datum"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , util , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , formatter , _isEquivalentTo , && , get , Criterion , addParam , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { }

2373 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , util , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , formatter , _isEquivalentTo , && , get , Criterion , addParam , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { }

2374 :	"datum"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , util , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , formatter , _isEquivalentTo , && , get , Criterion , addParam , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { }

2374 :	"GeodeticReferenceFrame"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , util , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , formatter , _isEquivalentTo , && , get , Criterion , addParam , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { }

2374 :	"EPSG_6326"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , util , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , formatter , _isEquivalentTo , && , get , Criterion , addParam , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { }

2374 :	"get"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , util , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , formatter , _isEquivalentTo , && , get , Criterion , addParam , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { }

2375 :	"util"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , util , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , formatter , _isEquivalentTo , && , get , Criterion , addParam , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { }

2375 :	"IComparable"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , util , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , formatter , _isEquivalentTo , && , get , Criterion , addParam , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { }

2375 :	"Criterion"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , util , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , formatter , _isEquivalentTo , && , get , Criterion , addParam , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { }

2375 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , util , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , formatter , _isEquivalentTo , && , get , Criterion , addParam , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { }

2376 :	"done"
		- NEIGH  = { done , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addParam , formatter , }

2377 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- CHILD  = { }
		- PRED   = { done , }
		- SUCC   = { }

2377 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- CHILD  = { }
		- PRED   = { done , }
		- SUCC   = { }

2378 :	"if"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , if , EPSG_6269 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2378 :	"l_datum"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , if , EPSG_6269 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2378 :	"&&"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , if , EPSG_6269 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2379 :	"l_datum"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , if , EPSG_6269 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2379 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , if , EPSG_6269 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2380 :	"datum"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , if , EPSG_6269 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2380 :	"GeodeticReferenceFrame"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , if , EPSG_6269 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2380 :	"EPSG_6269"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , if , EPSG_6269 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2380 :	"get"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , if , EPSG_6269 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2381 :	"util"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , if , EPSG_6269 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2381 :	"IComparable"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , if , EPSG_6269 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2381 :	"Criterion"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , if , EPSG_6269 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2381 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , if , EPSG_6269 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2382 :	"done"
		- NEIGH  = { done , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , if , EPSG_6269 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addParam , formatter , }

2384 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , if , EPSG_6269 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , }
		- CHILD  = { }
		- PRED   = { done , }
		- SUCC   = { }

2384 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , if , EPSG_6269 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , }
		- CHILD  = { }
		- PRED   = { done , }
		- SUCC   = { }

2387 :	"if"
		- NEIGH  = { done , ! , if , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { formatter , addDatumInfoToPROJString , }
		- PRED   = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- SUCC   = { }

2387 :	"!"
		- NEIGH  = { done , ! , if , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { formatter , addDatumInfoToPROJString , }
		- PRED   = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- SUCC   = { }

2387 :	"done"
		- NEIGH  = { done , ! , if , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { formatter , addDatumInfoToPROJString , }
		- PRED   = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- SUCC   = { }

2388 :	"addDatumInfoToPROJString"
		- NEIGH  = { formatter , addDatumInfoToPROJString , }
		- PARENT = { done , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2388 :	"formatter"
		- NEIGH  = { formatter , addDatumInfoToPROJString , }
		- PARENT = { done , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2391 :	"if"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { }
		- CHILD  = { formatter , addAngularUnitConvertAndAxisSwap , }
		- PRED   = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- SUCC   = { }

2391 :	"!"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { }
		- CHILD  = { formatter , addAngularUnitConvertAndAxisSwap , }
		- PRED   = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- SUCC   = { }

2391 :	"formatter"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { }
		- CHILD  = { formatter , addAngularUnitConvertAndAxisSwap , }
		- PRED   = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- SUCC   = { }

2391 :	"getCRSExport"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { }
		- CHILD  = { formatter , addAngularUnitConvertAndAxisSwap , }
		- PRED   = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- SUCC   = { }

2392 :	"addAngularUnitConvertAndAxisSwap"
		- NEIGH  = { formatter , addAngularUnitConvertAndAxisSwap , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2392 :	"formatter"
		- NEIGH  = { formatter , addAngularUnitConvertAndAxisSwap , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2400 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2400 :	"_exportToJSON"
		- NEIGH  = { _exportToJSON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2401 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2401 :	"JSONFormatter"
		- NEIGH  = { JSONFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2401 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2401 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2403 :	"&"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

2403 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

2403 :	"formatter"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

2403 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

2404 :	"objectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

2405 :	"formatter"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

2405 :	"MakeObjectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

2405 :	"!"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

2405 :	"identifiers"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

2405 :	"empty"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

2407 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

2407 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

2408 :	"l_name"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

2408 :	"nameStr"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

2409 :	"if"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { datum , l_datum , & , }

2409 :	"l_name"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { datum , l_datum , & , }

2409 :	"empty"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { datum , l_datum , & , }

2410 :	"writer"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2410 :	"Add"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2412 :	"writer"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2412 :	"Add"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2412 :	"l_name"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2415 :	"&"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { l_datum , if , }

2415 :	"l_datum"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { l_datum , if , }

2415 :	"datum"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { l_datum , if , }

2416 :	"if"
		- NEIGH  = { l_datum , if , }
		- PARENT = { }
		- CHILD  = { setOmitTypeInImmediateChild , _exportToJSON , l_datum , datumEnsemble , AddObjKey , formatter , writer , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { AddObjKey , writer , }

2416 :	"l_datum"
		- NEIGH  = { l_datum , if , }
		- PARENT = { }
		- CHILD  = { setOmitTypeInImmediateChild , _exportToJSON , l_datum , datumEnsemble , AddObjKey , formatter , writer , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { AddObjKey , writer , }

2417 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToJSON , l_datum , }

2417 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToJSON , l_datum , }

2418 :	"l_datum"
		- NEIGH  = { formatter , _exportToJSON , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { }

2418 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { }

2418 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { }

2420 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

2420 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

2421 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datumEnsemble , }

2421 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datumEnsemble , }

2422 :	"datumEnsemble"
		- NEIGH  = { formatter , _exportToJSON , datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { }

2422 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { }

2422 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { }

2425 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datum , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

2425 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datum , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

2426 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

2426 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

2427 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

2427 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

2427 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

2429 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

2429 :	"baseExportToJSON"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

2429 :	"formatter"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

2436 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2436 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2437 :	"std"
		- NEIGH  = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }

2437 :	"vector"
		- NEIGH  = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }

2437 :	"<"
		- NEIGH  = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }

2437 :	"operation"
		- NEIGH  = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }

2437 :	"TransformationNNPtr"
		- NEIGH  = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }

2437 :	">"
		- NEIGH  = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }

2437 :	"geoidModel"
		- NEIGH  = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }

2438 :	"std"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- SUCC   = { }

2438 :	"vector"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- SUCC   = { }

2438 :	"<"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- SUCC   = { }

2438 :	"operation"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- SUCC   = { }

2438 :	"PointMotionOperationNNPtr"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- SUCC   = { }

2438 :	">"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- SUCC   = { }

2438 :	"velocityModel"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- SUCC   = { }

2445 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2445 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2445 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2446 :	"checkEnsembleForVerticalCRS"
		- NEIGH  = { checkEnsembleForVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2446 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2446 :	"VerticalReferenceFramePtr"
		- NEIGH  = { VerticalReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2446 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2446 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2447 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2447 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2447 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2447 :	"ensemble"
		- NEIGH  = { ensemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2448 :	"*"
		- NEIGH  = { msg , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumIn , if , }

2448 :	"msg"
		- NEIGH  = { msg , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumIn , if , }

2449 :	"if"
		- NEIGH  = { datumIn , if , }
		- PARENT = { }
		- CHILD  = { msg , ! , ensemble , if , }
		- PRED   = { msg , * , }
		- SUCC   = { msg , Exception , util , throw , }

2449 :	"datumIn"
		- NEIGH  = { datumIn , if , }
		- PARENT = { }
		- CHILD  = { msg , ! , ensemble , if , }
		- PRED   = { msg , * , }
		- SUCC   = { msg , Exception , util , throw , }

2450 :	"if"
		- NEIGH  = { ! , ensemble , if , }
		- PARENT = { datumIn , if , }
		- CHILD  = { ensemble , return , }
		- PRED   = { }
		- SUCC   = { msg , }

2450 :	"!"
		- NEIGH  = { ! , ensemble , if , }
		- PARENT = { datumIn , if , }
		- CHILD  = { ensemble , return , }
		- PRED   = { }
		- SUCC   = { msg , }

2450 :	"ensemble"
		- NEIGH  = { ! , ensemble , if , }
		- PARENT = { datumIn , if , }
		- CHILD  = { ensemble , return , }
		- PRED   = { }
		- SUCC   = { msg , }

2451 :	"return"
		- NEIGH  = { ensemble , return , }
		- PARENT = { ! , ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2451 :	"ensemble"
		- NEIGH  = { ensemble , return , }
		- PARENT = { ! , ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2453 :	"msg"
		- NEIGH  = { msg , }
		- PARENT = { datumIn , if , }
		- CHILD  = { }
		- PRED   = { ! , ensemble , if , }
		- SUCC   = { }

2454 :	"if"
		- NEIGH  = { ensemble , if , }
		- PARENT = { datumIn , if , }
		- CHILD  = { if , get , * , grfFirst , VerticalReferenceFrame , empty , msg , datums , ! , < , dynamic_cast , > , assert , datum , ensemble , & , }
		- PRED   = { }
		- SUCC   = { }

2454 :	"ensemble"
		- NEIGH  = { ensemble , if , }
		- PARENT = { datumIn , if , }
		- CHILD  = { if , get , * , grfFirst , VerticalReferenceFrame , empty , msg , datums , ! , < , dynamic_cast , > , assert , datum , ensemble , & , }
		- PRED   = { }
		- SUCC   = { }

2455 :	"&"
		- NEIGH  = { ensemble , datums , & , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , datums , ! , assert , }

2455 :	"datums"
		- NEIGH  = { ensemble , datums , & , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , datums , ! , assert , }

2455 :	"ensemble"
		- NEIGH  = { ensemble , datums , & , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , datums , ! , assert , }

2455 :	"datums"
		- NEIGH  = { ensemble , datums , & , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , datums , ! , assert , }

2456 :	"assert"
		- NEIGH  = { empty , datums , ! , assert , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { ensemble , datums , & , }
		- SUCC   = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }

2456 :	"!"
		- NEIGH  = { empty , datums , ! , assert , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { ensemble , datums , & , }
		- SUCC   = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }

2456 :	"datums"
		- NEIGH  = { empty , datums , ! , assert , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { ensemble , datums , & , }
		- SUCC   = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }

2456 :	"empty"
		- NEIGH  = { empty , datums , ! , assert , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { ensemble , datums , & , }
		- SUCC   = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }

2457 :	"grfFirst"
		- NEIGH  = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

2458 :	"dynamic_cast"
		- NEIGH  = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

2458 :	"<"
		- NEIGH  = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

2458 :	"datum"
		- NEIGH  = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

2458 :	"VerticalReferenceFrame"
		- NEIGH  = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

2458 :	"*"
		- NEIGH  = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

2458 :	">"
		- NEIGH  = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

2458 :	"datums"
		- NEIGH  = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

2458 :	"get"
		- NEIGH  = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

2459 :	"if"
		- NEIGH  = { grfFirst , if , }
		- PARENT = { ensemble , if , }
		- CHILD  = { ensemble , return , }
		- PRED   = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }
		- SUCC   = { msg , }

2459 :	"grfFirst"
		- NEIGH  = { grfFirst , if , }
		- PARENT = { ensemble , if , }
		- CHILD  = { ensemble , return , }
		- PRED   = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }
		- SUCC   = { msg , }

2460 :	"return"
		- NEIGH  = { ensemble , return , }
		- PARENT = { grfFirst , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2460 :	"ensemble"
		- NEIGH  = { ensemble , return , }
		- PARENT = { grfFirst , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2462 :	"msg"
		- NEIGH  = { msg , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { grfFirst , if , }
		- SUCC   = { }

2464 :	"throw"
		- NEIGH  = { msg , Exception , util , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumIn , if , }
		- SUCC   = { }

2464 :	"util"
		- NEIGH  = { msg , Exception , util , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumIn , if , }
		- SUCC   = { }

2464 :	"Exception"
		- NEIGH  = { msg , Exception , util , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumIn , if , }
		- SUCC   = { }

2464 :	"msg"
		- NEIGH  = { msg , Exception , util , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumIn , if , }
		- SUCC   = { }

2470 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2470 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2470 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2470 :	"VerticalReferenceFramePtr"
		- NEIGH  = { VerticalReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2470 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2470 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2471 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2471 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2471 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2471 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2472 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2472 :	"VerticalCSNNPtr"
		- NEIGH  = { VerticalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2472 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2472 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2473 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2473 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2473 :	"checkEnsembleForVerticalCRS"
		- NEIGH  = { checkEnsembleForVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2473 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2473 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2474 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2475 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2475 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2475 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2475 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2475 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2475 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2479 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2479 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2479 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2479 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2479 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2480 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2480 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2480 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2480 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2480 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2480 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2480 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2480 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2480 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2480 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2480 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2485 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2485 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2490 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2490 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2490 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2491 :	"crs"
		- NEIGH  = { this , * , < , VerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2491 :	"VerticalCRS"
		- NEIGH  = { this , * , < , VerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2491 :	"nn_make_shared"
		- NEIGH  = { this , * , < , VerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2491 :	"<"
		- NEIGH  = { this , * , < , VerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2491 :	"VerticalCRS"
		- NEIGH  = { this , * , < , VerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2491 :	">"
		- NEIGH  = { this , * , < , VerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2491 :	"*"
		- NEIGH  = { this , * , < , VerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2491 :	"this"
		- NEIGH  = { this , * , < , VerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2492 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , VerticalCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

2492 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , VerticalCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

2492 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , VerticalCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

2493 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

2493 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

2502 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2502 :	"VerticalReferenceFramePtr"
		- NEIGH  = { VerticalReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2502 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2502 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2503 :	"return"
		- NEIGH  = { > , VerticalReferenceFrame , SingleCRS , < , datum , getPrivate , static_pointer_cast , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2503 :	"std"
		- NEIGH  = { > , VerticalReferenceFrame , SingleCRS , < , datum , getPrivate , static_pointer_cast , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2503 :	"static_pointer_cast"
		- NEIGH  = { > , VerticalReferenceFrame , SingleCRS , < , datum , getPrivate , static_pointer_cast , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2503 :	"<"
		- NEIGH  = { > , VerticalReferenceFrame , SingleCRS , < , datum , getPrivate , static_pointer_cast , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2503 :	"datum"
		- NEIGH  = { > , VerticalReferenceFrame , SingleCRS , < , datum , getPrivate , static_pointer_cast , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2503 :	"VerticalReferenceFrame"
		- NEIGH  = { > , VerticalReferenceFrame , SingleCRS , < , datum , getPrivate , static_pointer_cast , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2503 :	">"
		- NEIGH  = { > , VerticalReferenceFrame , SingleCRS , < , datum , getPrivate , static_pointer_cast , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2504 :	"SingleCRS"
		- NEIGH  = { > , VerticalReferenceFrame , SingleCRS , < , datum , getPrivate , static_pointer_cast , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2504 :	"getPrivate"
		- NEIGH  = { > , VerticalReferenceFrame , SingleCRS , < , datum , getPrivate , static_pointer_cast , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2504 :	"datum"
		- NEIGH  = { > , VerticalReferenceFrame , SingleCRS , < , datum , getPrivate , static_pointer_cast , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2516 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2516 :	"vector"
		- NEIGH  = { vector , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2516 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2516 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2516 :	"TransformationNNPtr"
		- NEIGH  = { TransformationNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2516 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2516 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2517 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2517 :	"geoidModel"
		- NEIGH  = { geoidModel , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2517 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2518 :	"return"
		- NEIGH  = { geoidModel , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2518 :	"d"
		- NEIGH  = { geoidModel , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2518 :	"geoidModel"
		- NEIGH  = { geoidModel , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2527 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2527 :	"vector"
		- NEIGH  = { vector , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2527 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2527 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2527 :	"PointMotionOperationNNPtr"
		- NEIGH  = { PointMotionOperationNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2527 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2527 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2528 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2528 :	"velocityModel"
		- NEIGH  = { velocityModel , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2528 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2529 :	"return"
		- NEIGH  = { velocityModel , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2529 :	"d"
		- NEIGH  = { velocityModel , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2529 :	"velocityModel"
		- NEIGH  = { velocityModel , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2538 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2538 :	"VerticalCSNNPtr"
		- NEIGH  = { VerticalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2538 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2538 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2539 :	"return"
		- NEIGH  = { getPrivate , cs , SingleCRS , < , > , VerticalCS , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2539 :	"util"
		- NEIGH  = { getPrivate , cs , SingleCRS , < , > , VerticalCS , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2539 :	"nn_static_pointer_cast"
		- NEIGH  = { getPrivate , cs , SingleCRS , < , > , VerticalCS , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2539 :	"<"
		- NEIGH  = { getPrivate , cs , SingleCRS , < , > , VerticalCS , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2539 :	"cs"
		- NEIGH  = { getPrivate , cs , SingleCRS , < , > , VerticalCS , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2539 :	"VerticalCS"
		- NEIGH  = { getPrivate , cs , SingleCRS , < , > , VerticalCS , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2539 :	">"
		- NEIGH  = { getPrivate , cs , SingleCRS , < , > , VerticalCS , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2540 :	"SingleCRS"
		- NEIGH  = { getPrivate , cs , SingleCRS , < , > , VerticalCS , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2540 :	"getPrivate"
		- NEIGH  = { getPrivate , cs , SingleCRS , < , > , VerticalCS , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2540 :	"coordinateSystem"
		- NEIGH  = { getPrivate , cs , SingleCRS , < , > , VerticalCS , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2546 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2546 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2546 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2546 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2546 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2546 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2547 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }

2547 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }

2547 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }

2547 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }

2547 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }

2547 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }

2547 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }

2547 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }

2548 :	"formatter"
		- NEIGH  = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

2548 :	"startNode"
		- NEIGH  = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

2548 :	"isWKT2"
		- NEIGH  = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

2548 :	"io"
		- NEIGH  = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

2548 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

2548 :	"VERTCRS"
		- NEIGH  = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

2549 :	"formatter"
		- NEIGH  = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

2549 :	"useESRIDialect"
		- NEIGH  = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

2550 :	"io"
		- NEIGH  = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

2550 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

2550 :	"VERTCS"
		- NEIGH  = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

2551 :	"io"
		- NEIGH  = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

2551 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

2551 :	"VERT_CS"
		- NEIGH  = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

2552 :	"!"
		- NEIGH  = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

2552 :	"identifiers"
		- NEIGH  = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

2552 :	"empty"
		- NEIGH  = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

2553 :	"formatter"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , }

2553 :	"addQuotedString"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , }

2553 :	"nameStr"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , }

2554 :	"exportDatumOrDatumEnsembleToWkt"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { getPrivate , coordinateSystem , SingleCRS , cs , & , }

2554 :	"formatter"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { getPrivate , coordinateSystem , SingleCRS , cs , & , }

2555 :	"&"
		- NEIGH  = { getPrivate , coordinateSystem , SingleCRS , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , }
		- SUCC   = { axisList , cs , & , }

2555 :	"cs"
		- NEIGH  = { getPrivate , coordinateSystem , SingleCRS , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , }
		- SUCC   = { axisList , cs , & , }

2555 :	"SingleCRS"
		- NEIGH  = { getPrivate , coordinateSystem , SingleCRS , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , }
		- SUCC   = { axisList , cs , & , }

2555 :	"getPrivate"
		- NEIGH  = { getPrivate , coordinateSystem , SingleCRS , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , }
		- SUCC   = { axisList , cs , & , }

2555 :	"coordinateSystem"
		- NEIGH  = { getPrivate , coordinateSystem , SingleCRS , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , }
		- SUCC   = { axisList , cs , & , }

2556 :	"&"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , coordinateSystem , SingleCRS , cs , & , }
		- SUCC   = { useESRIDialect , formatter , if , }

2556 :	"axisList"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , coordinateSystem , SingleCRS , cs , & , }
		- SUCC   = { useESRIDialect , formatter , if , }

2556 :	"cs"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , coordinateSystem , SingleCRS , cs , & , }
		- SUCC   = { useESRIDialect , formatter , if , }

2556 :	"axisList"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , coordinateSystem , SingleCRS , cs , & , }
		- SUCC   = { useESRIDialect , formatter , if , }

2558 :	"if"
		- NEIGH  = { useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { cs , axisList , WKTConstants , endNode , add , formatter , direction , PARAMETER , - , io , startNode , UP , == , AxisDirection , addQuotedString , }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { isWKT2 , ! , if , }

2558 :	"formatter"
		- NEIGH  = { useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { cs , axisList , WKTConstants , endNode , add , formatter , direction , PARAMETER , - , io , startNode , UP , == , AxisDirection , addQuotedString , }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { isWKT2 , ! , if , }

2558 :	"useESRIDialect"
		- NEIGH  = { useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { cs , axisList , WKTConstants , endNode , add , formatter , direction , PARAMETER , - , io , startNode , UP , == , AxisDirection , addQuotedString , }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { isWKT2 , ! , if , }

2560 :	"formatter"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

2560 :	"startNode"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

2560 :	"io"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

2560 :	"WKTConstants"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

2560 :	"PARAMETER"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

2561 :	"formatter"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- SUCC   = { add , formatter , }

2561 :	"addQuotedString"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- SUCC   = { add , formatter , }

2562 :	"formatter"
		- NEIGH  = { add , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

2562 :	"add"
		- NEIGH  = { add , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

2563 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { add , formatter , }
		- SUCC   = { WKTConstants , io , startNode , PARAMETER , formatter , }

2563 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { add , formatter , }
		- SUCC   = { WKTConstants , io , startNode , PARAMETER , formatter , }

2565 :	"formatter"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

2565 :	"startNode"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

2565 :	"io"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

2565 :	"WKTConstants"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

2565 :	"PARAMETER"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

2566 :	"formatter"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- SUCC   = { UP , cs , formatter , direction , == , axisList , - , AxisDirection , add , }

2566 :	"addQuotedString"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- SUCC   = { UP , cs , formatter , direction , == , axisList , - , AxisDirection , add , }

2567 :	"formatter"
		- NEIGH  = { UP , cs , formatter , direction , == , axisList , - , AxisDirection , add , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

2567 :	"add"
		- NEIGH  = { UP , cs , formatter , direction , == , axisList , - , AxisDirection , add , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

2568 :	"axisList"
		- NEIGH  = { UP , cs , formatter , direction , == , axisList , - , AxisDirection , add , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

2568 :	"direction"
		- NEIGH  = { UP , cs , formatter , direction , == , axisList , - , AxisDirection , add , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

2568 :	"=="
		- NEIGH  = { UP , cs , formatter , direction , == , axisList , - , AxisDirection , add , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

2568 :	"cs"
		- NEIGH  = { UP , cs , formatter , direction , == , axisList , - , AxisDirection , add , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

2568 :	"AxisDirection"
		- NEIGH  = { UP , cs , formatter , direction , == , axisList , - , AxisDirection , add , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

2568 :	"UP"
		- NEIGH  = { UP , cs , formatter , direction , == , axisList , - , AxisDirection , add , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

2568 :	"-"
		- NEIGH  = { UP , cs , formatter , direction , == , axisList , - , AxisDirection , add , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

2569 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { UP , cs , formatter , direction , == , axisList , - , AxisDirection , add , }
		- SUCC   = { }

2569 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { UP , cs , formatter , direction , == , axisList , - , AxisDirection , add , }
		- SUCC   = { }

2572 :	"if"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , axisList , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { outputAxis , formatter , oldAxisOutputRule , }

2572 :	"!"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , axisList , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { outputAxis , formatter , oldAxisOutputRule , }

2572 :	"isWKT2"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , axisList , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { outputAxis , formatter , oldAxisOutputRule , }

2573 :	"axisList"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2573 :	"unit"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2573 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2573 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2576 :	"oldAxisOutputRule"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }

2576 :	"formatter"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }

2576 :	"outputAxis"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }

2577 :	"if"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , cs , }

2577 :	"oldAxisOutputRule"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , cs , }

2577 :	"=="
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , cs , }

2578 :	"io"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , cs , }

2578 :	"WKTFormatter"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , cs , }

2578 :	"OutputAxisRule"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , cs , }

2578 :	"WKT1_GDAL_EPSG_STYLE"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , cs , }

2579 :	"formatter"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2579 :	"setOutputAxis"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2579 :	"io"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2579 :	"WKTFormatter"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2579 :	"OutputAxisRule"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2579 :	"YES"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2581 :	"cs"
		- NEIGH  = { formatter , _exportToWKT , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

2581 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

2581 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

2582 :	"formatter"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , cs , }
		- SUCC   = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }

2582 :	"setOutputAxis"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , cs , }
		- SUCC   = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }

2582 :	"oldAxisOutputRule"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , cs , }
		- SUCC   = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }

2584 :	"if"
		- NEIGH  = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- PARENT = { }
		- CHILD  = { endNode , nameStr , WKTConstants , GEOIDMODEL , io , addQuotedString , formatID , d , formatter , model , geoidModel , startNode , & , }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

2584 :	"isWKT2"
		- NEIGH  = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- PARENT = { }
		- CHILD  = { endNode , nameStr , WKTConstants , GEOIDMODEL , io , addQuotedString , formatID , d , formatter , model , geoidModel , startNode , & , }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

2584 :	"&&"
		- NEIGH  = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- PARENT = { }
		- CHILD  = { endNode , nameStr , WKTConstants , GEOIDMODEL , io , addQuotedString , formatID , d , formatter , model , geoidModel , startNode , & , }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

2584 :	"formatter"
		- NEIGH  = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- PARENT = { }
		- CHILD  = { endNode , nameStr , WKTConstants , GEOIDMODEL , io , addQuotedString , formatID , d , formatter , model , geoidModel , startNode , & , }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

2584 :	"use2019Keywords"
		- NEIGH  = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- PARENT = { }
		- CHILD  = { endNode , nameStr , WKTConstants , GEOIDMODEL , io , addQuotedString , formatID , d , formatter , model , geoidModel , startNode , & , }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

2584 :	"&&"
		- NEIGH  = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- PARENT = { }
		- CHILD  = { endNode , nameStr , WKTConstants , GEOIDMODEL , io , addQuotedString , formatID , d , formatter , model , geoidModel , startNode , & , }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

2584 :	"!"
		- NEIGH  = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- PARENT = { }
		- CHILD  = { endNode , nameStr , WKTConstants , GEOIDMODEL , io , addQuotedString , formatID , d , formatter , model , geoidModel , startNode , & , }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

2584 :	"d"
		- NEIGH  = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- PARENT = { }
		- CHILD  = { endNode , nameStr , WKTConstants , GEOIDMODEL , io , addQuotedString , formatID , d , formatter , model , geoidModel , startNode , & , }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

2584 :	"geoidModel"
		- NEIGH  = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- PARENT = { }
		- CHILD  = { endNode , nameStr , WKTConstants , GEOIDMODEL , io , addQuotedString , formatID , d , formatter , model , geoidModel , startNode , & , }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

2584 :	"empty"
		- NEIGH  = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- PARENT = { }
		- CHILD  = { endNode , nameStr , WKTConstants , GEOIDMODEL , io , addQuotedString , formatID , d , formatter , model , geoidModel , startNode , & , }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

2585 :	"&"
		- NEIGH  = { geoidModel , d , model , & , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOIDMODEL , WKTConstants , io , startNode , formatter , }

2585 :	"model"
		- NEIGH  = { geoidModel , d , model , & , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOIDMODEL , WKTConstants , io , startNode , formatter , }

2585 :	"d"
		- NEIGH  = { geoidModel , d , model , & , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOIDMODEL , WKTConstants , io , startNode , formatter , }

2585 :	"geoidModel"
		- NEIGH  = { geoidModel , d , model , & , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOIDMODEL , WKTConstants , io , startNode , formatter , }

2586 :	"formatter"
		- NEIGH  = { GEOIDMODEL , WKTConstants , io , startNode , formatter , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { geoidModel , d , model , & , }
		- SUCC   = { nameStr , model , addQuotedString , formatter , }

2586 :	"startNode"
		- NEIGH  = { GEOIDMODEL , WKTConstants , io , startNode , formatter , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { geoidModel , d , model , & , }
		- SUCC   = { nameStr , model , addQuotedString , formatter , }

2586 :	"io"
		- NEIGH  = { GEOIDMODEL , WKTConstants , io , startNode , formatter , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { geoidModel , d , model , & , }
		- SUCC   = { nameStr , model , addQuotedString , formatter , }

2586 :	"WKTConstants"
		- NEIGH  = { GEOIDMODEL , WKTConstants , io , startNode , formatter , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { geoidModel , d , model , & , }
		- SUCC   = { nameStr , model , addQuotedString , formatter , }

2586 :	"GEOIDMODEL"
		- NEIGH  = { GEOIDMODEL , WKTConstants , io , startNode , formatter , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { geoidModel , d , model , & , }
		- SUCC   = { nameStr , model , addQuotedString , formatter , }

2587 :	"formatter"
		- NEIGH  = { nameStr , model , addQuotedString , formatter , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { GEOIDMODEL , WKTConstants , io , startNode , formatter , }
		- SUCC   = { formatter , formatID , model , }

2587 :	"addQuotedString"
		- NEIGH  = { nameStr , model , addQuotedString , formatter , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { GEOIDMODEL , WKTConstants , io , startNode , formatter , }
		- SUCC   = { formatter , formatID , model , }

2587 :	"model"
		- NEIGH  = { nameStr , model , addQuotedString , formatter , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { GEOIDMODEL , WKTConstants , io , startNode , formatter , }
		- SUCC   = { formatter , formatID , model , }

2587 :	"nameStr"
		- NEIGH  = { nameStr , model , addQuotedString , formatter , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { GEOIDMODEL , WKTConstants , io , startNode , formatter , }
		- SUCC   = { formatter , formatID , model , }

2588 :	"model"
		- NEIGH  = { formatter , formatID , model , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { nameStr , model , addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

2588 :	"formatID"
		- NEIGH  = { formatter , formatID , model , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { nameStr , model , addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

2588 :	"formatter"
		- NEIGH  = { formatter , formatID , model , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { nameStr , model , addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

2589 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , formatID , model , }
		- SUCC   = { }

2589 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , formatID , model , }
		- SUCC   = { }

2592 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- SUCC   = { endNode , formatter , }

2592 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- SUCC   = { endNode , formatter , }

2592 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- SUCC   = { endNode , formatter , }

2593 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

2593 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

2600 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2600 :	"_exportToPROJString"
		- NEIGH  = { _exportToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2601 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2601 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2601 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2601 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2603 :	"geoidgrids"
		- NEIGH  = { getVDatumExtension , formatter , geoidgrids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , geoidgrids , ! , if , }

2603 :	"formatter"
		- NEIGH  = { getVDatumExtension , formatter , geoidgrids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , geoidgrids , ! , if , }

2603 :	"getVDatumExtension"
		- NEIGH  = { getVDatumExtension , formatter , geoidgrids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , geoidgrids , ! , if , }

2604 :	"if"
		- NEIGH  = { empty , geoidgrids , ! , if , }
		- PARENT = { }
		- CHILD  = { geoidgrids , addParam , formatter , }
		- PRED   = { getVDatumExtension , formatter , geoidgrids , }
		- SUCC   = { coordinateSystem , axisList , & , }

2604 :	"!"
		- NEIGH  = { empty , geoidgrids , ! , if , }
		- PARENT = { }
		- CHILD  = { geoidgrids , addParam , formatter , }
		- PRED   = { getVDatumExtension , formatter , geoidgrids , }
		- SUCC   = { coordinateSystem , axisList , & , }

2604 :	"geoidgrids"
		- NEIGH  = { empty , geoidgrids , ! , if , }
		- PARENT = { }
		- CHILD  = { geoidgrids , addParam , formatter , }
		- PRED   = { getVDatumExtension , formatter , geoidgrids , }
		- SUCC   = { coordinateSystem , axisList , & , }

2604 :	"empty"
		- NEIGH  = { empty , geoidgrids , ! , if , }
		- PARENT = { }
		- CHILD  = { geoidgrids , addParam , formatter , }
		- PRED   = { getVDatumExtension , formatter , geoidgrids , }
		- SUCC   = { coordinateSystem , axisList , & , }

2605 :	"formatter"
		- NEIGH  = { geoidgrids , addParam , formatter , }
		- PARENT = { empty , geoidgrids , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2605 :	"addParam"
		- NEIGH  = { geoidgrids , addParam , formatter , }
		- PARENT = { empty , geoidgrids , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2605 :	"geoidgrids"
		- NEIGH  = { geoidgrids , addParam , formatter , }
		- PARENT = { empty , geoidgrids , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2608 :	"&"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , geoidgrids , ! , if , }
		- SUCC   = { empty , axisList , ! , if , }

2608 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , geoidgrids , ! , if , }
		- SUCC   = { empty , axisList , ! , if , }

2608 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , geoidgrids , ! , if , }
		- SUCC   = { empty , axisList , ! , if , }

2608 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , geoidgrids , ! , if , }
		- SUCC   = { empty , axisList , ! , if , }

2609 :	"if"
		- NEIGH  = { empty , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , if , exportToPROJString , axisList , unit , projUnit , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { }

2609 :	"!"
		- NEIGH  = { empty , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , if , exportToPROJString , axisList , unit , projUnit , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { }

2609 :	"axisList"
		- NEIGH  = { empty , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , if , exportToPROJString , axisList , unit , projUnit , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { }

2609 :	"empty"
		- NEIGH  = { empty , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , if , exportToPROJString , axisList , unit , projUnit , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { }

2610 :	"projUnit"
		- NEIGH  = { exportToPROJString , axisList , unit , projUnit , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , projUnit , if , }

2610 :	"axisList"
		- NEIGH  = { exportToPROJString , axisList , unit , projUnit , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , projUnit , if , }

2610 :	"unit"
		- NEIGH  = { exportToPROJString , axisList , unit , projUnit , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , projUnit , if , }

2610 :	"exportToPROJString"
		- NEIGH  = { exportToPROJString , axisList , unit , projUnit , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , projUnit , if , }

2611 :	"if"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { projUnit , conversionToSI , unit , axisList , addParam , formatter , }
		- PRED   = { exportToPROJString , axisList , unit , projUnit , }
		- SUCC   = { }

2611 :	"projUnit"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { projUnit , conversionToSI , unit , axisList , addParam , formatter , }
		- PRED   = { exportToPROJString , axisList , unit , projUnit , }
		- SUCC   = { }

2611 :	"empty"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { projUnit , conversionToSI , unit , axisList , addParam , formatter , }
		- PRED   = { exportToPROJString , axisList , unit , projUnit , }
		- SUCC   = { }

2612 :	"formatter"
		- NEIGH  = { conversionToSI , unit , axisList , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2612 :	"addParam"
		- NEIGH  = { conversionToSI , unit , axisList , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2613 :	"axisList"
		- NEIGH  = { conversionToSI , unit , axisList , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2613 :	"unit"
		- NEIGH  = { conversionToSI , unit , axisList , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2613 :	"conversionToSI"
		- NEIGH  = { conversionToSI , unit , axisList , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2615 :	"formatter"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2615 :	"addParam"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2615 :	"projUnit"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2624 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2624 :	"_exportToJSON"
		- NEIGH  = { _exportToJSON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2625 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2625 :	"JSONFormatter"
		- NEIGH  = { JSONFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2625 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2625 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2627 :	"&"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

2627 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

2627 :	"formatter"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

2627 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

2628 :	"objectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

2629 :	"formatter"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

2629 :	"MakeObjectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

2629 :	"!"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

2629 :	"identifiers"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

2629 :	"empty"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

2631 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

2631 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

2632 :	"l_name"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

2632 :	"nameStr"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

2633 :	"if"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { datum , l_datum , & , }

2633 :	"l_name"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { datum , l_datum , & , }

2633 :	"empty"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { datum , l_datum , & , }

2634 :	"writer"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2634 :	"Add"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2636 :	"writer"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2636 :	"Add"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2636 :	"l_name"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2639 :	"&"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { l_datum , if , }

2639 :	"l_datum"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { l_datum , if , }

2639 :	"datum"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { l_datum , if , }

2640 :	"if"
		- NEIGH  = { l_datum , if , }
		- PARENT = { }
		- CHILD  = { setOmitTypeInImmediateChild , _exportToJSON , l_datum , datumEnsemble , AddObjKey , formatter , writer , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { AddObjKey , writer , }

2640 :	"l_datum"
		- NEIGH  = { l_datum , if , }
		- PARENT = { }
		- CHILD  = { setOmitTypeInImmediateChild , _exportToJSON , l_datum , datumEnsemble , AddObjKey , formatter , writer , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { AddObjKey , writer , }

2641 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToJSON , l_datum , }

2641 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToJSON , l_datum , }

2642 :	"l_datum"
		- NEIGH  = { formatter , _exportToJSON , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { }

2642 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { }

2642 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { }

2644 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

2644 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

2645 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datumEnsemble , }

2645 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datumEnsemble , }

2646 :	"datumEnsemble"
		- NEIGH  = { formatter , _exportToJSON , datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { }

2646 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { }

2646 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { }

2649 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datum , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

2649 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datum , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

2650 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

2650 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

2651 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { empty , d , ! , geoidModel , if , }

2651 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { empty , d , ! , geoidModel , if , }

2651 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { empty , d , ! , geoidModel , if , }

2653 :	"if"
		- NEIGH  = { empty , d , ! , geoidModel , if , }
		- PARENT = { }
		- CHILD  = { if , nameStr , identifiers , geoidModel , MakeObjectContext , formatID , d , formatter , objectContext2 , Add , AddObjKey , writer , empty , model , & , }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

2653 :	"!"
		- NEIGH  = { empty , d , ! , geoidModel , if , }
		- PARENT = { }
		- CHILD  = { if , nameStr , identifiers , geoidModel , MakeObjectContext , formatID , d , formatter , objectContext2 , Add , AddObjKey , writer , empty , model , & , }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

2653 :	"d"
		- NEIGH  = { empty , d , ! , geoidModel , if , }
		- PARENT = { }
		- CHILD  = { if , nameStr , identifiers , geoidModel , MakeObjectContext , formatID , d , formatter , objectContext2 , Add , AddObjKey , writer , empty , model , & , }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

2653 :	"geoidModel"
		- NEIGH  = { empty , d , ! , geoidModel , if , }
		- PARENT = { }
		- CHILD  = { if , nameStr , identifiers , geoidModel , MakeObjectContext , formatID , d , formatter , objectContext2 , Add , AddObjKey , writer , empty , model , & , }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

2653 :	"empty"
		- NEIGH  = { empty , d , ! , geoidModel , if , }
		- PARENT = { }
		- CHILD  = { if , nameStr , identifiers , geoidModel , MakeObjectContext , formatID , d , formatter , objectContext2 , Add , AddObjKey , writer , empty , model , & , }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

2654 :	"&"
		- NEIGH  = { geoidModel , d , model , & , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { AddObjKey , writer , }

2654 :	"model"
		- NEIGH  = { geoidModel , d , model , & , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { AddObjKey , writer , }

2654 :	"d"
		- NEIGH  = { geoidModel , d , model , & , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { AddObjKey , writer , }

2654 :	"geoidModel"
		- NEIGH  = { geoidModel , d , model , & , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { AddObjKey , writer , }

2655 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { geoidModel , d , model , & , }
		- SUCC   = { MakeObjectContext , formatter , objectContext2 , }

2655 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { geoidModel , d , model , & , }
		- SUCC   = { MakeObjectContext , formatter , objectContext2 , }

2656 :	"objectContext2"
		- NEIGH  = { MakeObjectContext , formatter , objectContext2 , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

2656 :	"formatter"
		- NEIGH  = { MakeObjectContext , formatter , objectContext2 , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

2656 :	"MakeObjectContext"
		- NEIGH  = { MakeObjectContext , formatter , objectContext2 , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

2657 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { MakeObjectContext , formatter , objectContext2 , }
		- SUCC   = { nameStr , model , Add , writer , }

2657 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { MakeObjectContext , formatter , objectContext2 , }
		- SUCC   = { nameStr , model , Add , writer , }

2658 :	"writer"
		- NEIGH  = { nameStr , model , Add , writer , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , model , identifiers , if , }

2658 :	"Add"
		- NEIGH  = { nameStr , model , Add , writer , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , model , identifiers , if , }

2658 :	"model"
		- NEIGH  = { nameStr , model , Add , writer , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , model , identifiers , if , }

2658 :	"nameStr"
		- NEIGH  = { nameStr , model , Add , writer , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , model , identifiers , if , }

2660 :	"if"
		- NEIGH  = { empty , model , identifiers , if , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { if , interpolationCRS , model , interpCRS , & , }
		- PRED   = { nameStr , model , Add , writer , }
		- SUCC   = { formatter , formatID , model , }

2660 :	"model"
		- NEIGH  = { empty , model , identifiers , if , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { if , interpolationCRS , model , interpCRS , & , }
		- PRED   = { nameStr , model , Add , writer , }
		- SUCC   = { formatter , formatID , model , }

2660 :	"identifiers"
		- NEIGH  = { empty , model , identifiers , if , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { if , interpolationCRS , model , interpCRS , & , }
		- PRED   = { nameStr , model , Add , writer , }
		- SUCC   = { formatter , formatID , model , }

2660 :	"empty"
		- NEIGH  = { empty , model , identifiers , if , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { if , interpolationCRS , model , interpCRS , & , }
		- PRED   = { nameStr , model , Add , writer , }
		- SUCC   = { formatter , formatID , model , }

2661 :	"&"
		- NEIGH  = { interpolationCRS , model , interpCRS , & , }
		- PARENT = { empty , model , identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { interpCRS , if , }

2661 :	"interpCRS"
		- NEIGH  = { interpolationCRS , model , interpCRS , & , }
		- PARENT = { empty , model , identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { interpCRS , if , }

2661 :	"model"
		- NEIGH  = { interpolationCRS , model , interpCRS , & , }
		- PARENT = { empty , model , identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { interpCRS , if , }

2661 :	"interpolationCRS"
		- NEIGH  = { interpolationCRS , model , interpCRS , & , }
		- PARENT = { empty , model , identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { interpCRS , if , }

2662 :	"if"
		- NEIGH  = { interpCRS , if , }
		- PARENT = { empty , model , identifiers , if , }
		- CHILD  = { _exportToJSON , interpCRS , AddObjKey , formatter , writer , }
		- PRED   = { interpolationCRS , model , interpCRS , & , }
		- SUCC   = { }

2662 :	"interpCRS"
		- NEIGH  = { interpCRS , if , }
		- PARENT = { empty , model , identifiers , if , }
		- CHILD  = { _exportToJSON , interpCRS , AddObjKey , formatter , writer , }
		- PRED   = { interpolationCRS , model , interpCRS , & , }
		- SUCC   = { }

2663 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { interpCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToJSON , interpCRS , }

2663 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { interpCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToJSON , interpCRS , }

2664 :	"interpCRS"
		- NEIGH  = { formatter , _exportToJSON , interpCRS , }
		- PARENT = { interpCRS , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { }

2664 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , interpCRS , }
		- PARENT = { interpCRS , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { }

2664 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , interpCRS , }
		- PARENT = { interpCRS , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { }

2668 :	"model"
		- NEIGH  = { formatter , formatID , model , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { empty , model , identifiers , if , }
		- SUCC   = { }

2668 :	"formatID"
		- NEIGH  = { formatter , formatID , model , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { empty , model , identifiers , if , }
		- SUCC   = { }

2668 :	"formatter"
		- NEIGH  = { formatter , formatID , model , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { empty , model , identifiers , if , }
		- SUCC   = { }

2671 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , d , ! , geoidModel , if , }
		- SUCC   = { }

2671 :	"baseExportToJSON"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , d , ! , geoidModel , if , }
		- SUCC   = { }

2671 :	"formatter"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , d , ! , geoidModel , if , }
		- SUCC   = { }

2678 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2678 :	"addLinearUnitConvert"
		- NEIGH  = { addLinearUnitConvert , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2679 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2679 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2679 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2679 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2680 :	"&"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , axisList , ! , if , }

2680 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , axisList , ! , if , }

2680 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , axisList , ! , if , }

2680 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , axisList , ! , if , }

2682 :	"if"
		- NEIGH  = { empty , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { conversionToSI , unit , != , axisList , if , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { }

2682 :	"!"
		- NEIGH  = { empty , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { conversionToSI , unit , != , axisList , if , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { }

2682 :	"axisList"
		- NEIGH  = { empty , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { conversionToSI , unit , != , axisList , if , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { }

2682 :	"empty"
		- NEIGH  = { empty , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { conversionToSI , unit , != , axisList , if , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { }

2683 :	"if"
		- NEIGH  = { conversionToSI , unit , != , axisList , if , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { empty , if , exportToPROJString , unit , axisList , projVUnit , addParam , addStep , formatter , }
		- PRED   = { }
		- SUCC   = { }

2683 :	"axisList"
		- NEIGH  = { conversionToSI , unit , != , axisList , if , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { empty , if , exportToPROJString , unit , axisList , projVUnit , addParam , addStep , formatter , }
		- PRED   = { }
		- SUCC   = { }

2683 :	"unit"
		- NEIGH  = { conversionToSI , unit , != , axisList , if , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { empty , if , exportToPROJString , unit , axisList , projVUnit , addParam , addStep , formatter , }
		- PRED   = { }
		- SUCC   = { }

2683 :	"conversionToSI"
		- NEIGH  = { conversionToSI , unit , != , axisList , if , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { empty , if , exportToPROJString , unit , axisList , projVUnit , addParam , addStep , formatter , }
		- PRED   = { }
		- SUCC   = { }

2683 :	"!="
		- NEIGH  = { conversionToSI , unit , != , axisList , if , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { empty , if , exportToPROJString , unit , axisList , projVUnit , addParam , addStep , formatter , }
		- PRED   = { }
		- SUCC   = { }

2684 :	"formatter"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { conversionToSI , unit , != , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addParam , formatter , }

2684 :	"addStep"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { conversionToSI , unit , != , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addParam , formatter , }

2685 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { conversionToSI , unit , != , axisList , if , }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { unit , axisList , exportToPROJString , projVUnit , }

2685 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { conversionToSI , unit , != , axisList , if , }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { unit , axisList , exportToPROJString , projVUnit , }

2686 :	"projVUnit"
		- NEIGH  = { unit , axisList , exportToPROJString , projVUnit , }
		- PARENT = { conversionToSI , unit , != , axisList , if , }
		- CHILD  = { }
		- PRED   = { addParam , formatter , }
		- SUCC   = { empty , projVUnit , if , }

2686 :	"axisList"
		- NEIGH  = { unit , axisList , exportToPROJString , projVUnit , }
		- PARENT = { conversionToSI , unit , != , axisList , if , }
		- CHILD  = { }
		- PRED   = { addParam , formatter , }
		- SUCC   = { empty , projVUnit , if , }

2686 :	"unit"
		- NEIGH  = { unit , axisList , exportToPROJString , projVUnit , }
		- PARENT = { conversionToSI , unit , != , axisList , if , }
		- CHILD  = { }
		- PRED   = { addParam , formatter , }
		- SUCC   = { empty , projVUnit , if , }

2686 :	"exportToPROJString"
		- NEIGH  = { unit , axisList , exportToPROJString , projVUnit , }
		- PARENT = { conversionToSI , unit , != , axisList , if , }
		- CHILD  = { }
		- PRED   = { addParam , formatter , }
		- SUCC   = { empty , projVUnit , if , }

2687 :	"if"
		- NEIGH  = { empty , projVUnit , if , }
		- PARENT = { conversionToSI , unit , != , axisList , if , }
		- CHILD  = { conversionToSI , unit , axisList , projVUnit , addParam , formatter , }
		- PRED   = { unit , axisList , exportToPROJString , projVUnit , }
		- SUCC   = { }

2687 :	"projVUnit"
		- NEIGH  = { empty , projVUnit , if , }
		- PARENT = { conversionToSI , unit , != , axisList , if , }
		- CHILD  = { conversionToSI , unit , axisList , projVUnit , addParam , formatter , }
		- PRED   = { unit , axisList , exportToPROJString , projVUnit , }
		- SUCC   = { }

2687 :	"empty"
		- NEIGH  = { empty , projVUnit , if , }
		- PARENT = { conversionToSI , unit , != , axisList , if , }
		- CHILD  = { conversionToSI , unit , axisList , projVUnit , addParam , formatter , }
		- PRED   = { unit , axisList , exportToPROJString , projVUnit , }
		- SUCC   = { }

2688 :	"formatter"
		- NEIGH  = { conversionToSI , unit , axisList , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2688 :	"addParam"
		- NEIGH  = { conversionToSI , unit , axisList , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2689 :	"axisList"
		- NEIGH  = { conversionToSI , unit , axisList , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2689 :	"unit"
		- NEIGH  = { conversionToSI , unit , axisList , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2689 :	"conversionToSI"
		- NEIGH  = { conversionToSI , unit , axisList , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2691 :	"formatter"
		- NEIGH  = { projVUnit , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2691 :	"addParam"
		- NEIGH  = { projVUnit , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2691 :	"projVUnit"
		- NEIGH  = { projVUnit , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2710 :	"VerticalCRSNNPtr"
		- NEIGH  = { VerticalCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2711 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2711 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2711 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2711 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2711 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2711 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2712 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2712 :	"VerticalReferenceFrameNNPtr"
		- NEIGH  = { VerticalReferenceFrameNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2712 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2712 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2713 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2713 :	"VerticalCSNNPtr"
		- NEIGH  = { VerticalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2713 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2713 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2714 :	"return"
		- NEIGH  = { return , as_nullable , datumIn , properties , csIn , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2714 :	"create"
		- NEIGH  = { return , as_nullable , datumIn , properties , csIn , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2714 :	"properties"
		- NEIGH  = { return , as_nullable , datumIn , properties , csIn , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2714 :	"datumIn"
		- NEIGH  = { return , as_nullable , datumIn , properties , csIn , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2714 :	"as_nullable"
		- NEIGH  = { return , as_nullable , datumIn , properties , csIn , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2714 :	"csIn"
		- NEIGH  = { return , as_nullable , datumIn , properties , csIn , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2732 :	"VerticalCRSNNPtr"
		- NEIGH  = { VerticalCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2733 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2733 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2733 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2733 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2733 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2733 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2734 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2734 :	"VerticalReferenceFramePtr"
		- NEIGH  = { VerticalReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2734 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2734 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2735 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2735 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2735 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2735 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2736 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2736 :	"VerticalCSNNPtr"
		- NEIGH  = { VerticalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2736 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2736 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2737 :	"crs"
		- NEIGH  = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2737 :	"VerticalCRS"
		- NEIGH  = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2737 :	"nn_make_shared"
		- NEIGH  = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2737 :	"<"
		- NEIGH  = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2737 :	"VerticalCRS"
		- NEIGH  = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2737 :	">"
		- NEIGH  = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2737 :	"datumIn"
		- NEIGH  = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2737 :	"datumEnsembleIn"
		- NEIGH  = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2738 :	"csIn"
		- NEIGH  = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2739 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- SUCC   = { properties , setProperties , crs , }

2739 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- SUCC   = { properties , setProperties , crs , }

2739 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- SUCC   = { properties , setProperties , crs , }

2740 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { get , properties , geoidModelPtr , }

2740 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { get , properties , geoidModelPtr , }

2740 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { get , properties , geoidModelPtr , }

2741 :	"geoidModelPtr"
		- NEIGH  = { get , properties , geoidModelPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { geoidModelPtr , if , }

2741 :	"properties"
		- NEIGH  = { get , properties , geoidModelPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { geoidModelPtr , if , }

2741 :	"get"
		- NEIGH  = { get , properties , geoidModelPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { geoidModelPtr , if , }

2742 :	"if"
		- NEIGH  = { geoidModelPtr , if , }
		- PARENT = { }
		- CHILD  = { if , * , Transformation , geoidModelPtr , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PRED   = { get , properties , geoidModelPtr , }
		- SUCC   = { crs , return , }

2742 :	"geoidModelPtr"
		- NEIGH  = { geoidModelPtr , if , }
		- PARENT = { }
		- CHILD  = { if , * , Transformation , geoidModelPtr , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PRED   = { get , properties , geoidModelPtr , }
		- SUCC   = { crs , return , }

2743 :	"transf"
		- NEIGH  = { * , Transformation , geoidModelPtr , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { geoidModelPtr , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transf , if , }

2743 :	"util"
		- NEIGH  = { * , Transformation , geoidModelPtr , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { geoidModelPtr , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transf , if , }

2743 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { * , Transformation , geoidModelPtr , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { geoidModelPtr , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transf , if , }

2743 :	"<"
		- NEIGH  = { * , Transformation , geoidModelPtr , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { geoidModelPtr , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transf , if , }

2743 :	"operation"
		- NEIGH  = { * , Transformation , geoidModelPtr , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { geoidModelPtr , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transf , if , }

2743 :	"Transformation"
		- NEIGH  = { * , Transformation , geoidModelPtr , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { geoidModelPtr , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transf , if , }

2743 :	">"
		- NEIGH  = { * , Transformation , geoidModelPtr , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { geoidModelPtr , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transf , if , }

2744 :	"*"
		- NEIGH  = { * , Transformation , geoidModelPtr , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { geoidModelPtr , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transf , if , }

2744 :	"geoidModelPtr"
		- NEIGH  = { * , Transformation , geoidModelPtr , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { geoidModelPtr , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transf , if , }

2745 :	"if"
		- NEIGH  = { transf , if , }
		- PARENT = { geoidModelPtr , if , }
		- CHILD  = { transf , geoidModel , NN_NO_CHECK , emplace_back , d , crs , }
		- PRED   = { * , Transformation , geoidModelPtr , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

2745 :	"transf"
		- NEIGH  = { transf , if , }
		- PARENT = { geoidModelPtr , if , }
		- CHILD  = { transf , geoidModel , NN_NO_CHECK , emplace_back , d , crs , }
		- PRED   = { * , Transformation , geoidModelPtr , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

2746 :	"crs"
		- NEIGH  = { transf , geoidModel , NN_NO_CHECK , emplace_back , d , crs , }
		- PARENT = { transf , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2746 :	"d"
		- NEIGH  = { transf , geoidModel , NN_NO_CHECK , emplace_back , d , crs , }
		- PARENT = { transf , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2746 :	"geoidModel"
		- NEIGH  = { transf , geoidModel , NN_NO_CHECK , emplace_back , d , crs , }
		- PARENT = { transf , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2746 :	"emplace_back"
		- NEIGH  = { transf , geoidModel , NN_NO_CHECK , emplace_back , d , crs , }
		- PARENT = { transf , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2746 :	"NN_NO_CHECK"
		- NEIGH  = { transf , geoidModel , NN_NO_CHECK , emplace_back , d , crs , }
		- PARENT = { transf , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2746 :	"transf"
		- NEIGH  = { transf , geoidModel , NN_NO_CHECK , emplace_back , d , crs , }
		- PARENT = { transf , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2749 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geoidModelPtr , if , }
		- SUCC   = { }

2749 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geoidModelPtr , if , }
		- SUCC   = { }

2755 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2755 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2756 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2756 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2756 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2756 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2756 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2756 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2756 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2756 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2757 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2757 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2757 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2757 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2758 :	"otherVertCRS"
		- NEIGH  = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }

2758 :	"dynamic_cast"
		- NEIGH  = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }

2758 :	"<"
		- NEIGH  = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }

2758 :	"VerticalCRS"
		- NEIGH  = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }

2758 :	"*"
		- NEIGH  = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }

2758 :	">"
		- NEIGH  = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }

2758 :	"other"
		- NEIGH  = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }

2760 :	"return"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- SUCC   = { }

2760 :	"otherVertCRS"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- SUCC   = { }

2760 :	"!="
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- SUCC   = { }

2760 :	"&&"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- SUCC   = { }

2761 :	"SingleCRS"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- SUCC   = { }

2761 :	"baseIsEquivalentTo"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- SUCC   = { }

2761 :	"other"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- SUCC   = { }

2761 :	"criterion"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- SUCC   = { }

2761 :	"dbContext"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- SUCC   = { }

2792 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2792 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2792 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2792 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2792 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2792 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2792 :	"VerticalCRSNNPtr"
		- NEIGH  = { VerticalCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2792 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2793 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2793 :	"identify"
		- NEIGH  = { identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2793 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2793 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2793 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2793 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2794 :	"std"
		- NEIGH  = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2794 :	"pair"
		- NEIGH  = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2794 :	"<"
		- NEIGH  = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2794 :	"VerticalCRSNNPtr"
		- NEIGH  = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2794 :	">"
		- NEIGH  = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2794 :	"Pair"
		- NEIGH  = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2795 :	"std"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- SUCC   = { nameStr , thisName , & , }

2795 :	"list"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- SUCC   = { nameStr , thisName , & , }

2795 :	"<"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- SUCC   = { nameStr , thisName , & , }

2795 :	"Pair"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- SUCC   = { nameStr , thisName , & , }

2795 :	">"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- SUCC   = { nameStr , thisName , & , }

2795 :	"res"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- SUCC   = { nameStr , thisName , & , }

2797 :	"&"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { authorityFactory , if , }

2797 :	"thisName"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { authorityFactory , if , }

2797 :	"nameStr"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { authorityFactory , if , }

2799 :	"if"
		- NEIGH  = { authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { size , b , sort , res , hasCodeCompatibleOfAuthorityFactory , thisName , empty , a , databaseContext , if , dbContext , ci_equal , this , io , || , authorityFactory , & , unsignificantName , >= , Pair , DatabaseContextNNPtr , }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { res , return , }

2799 :	"authorityFactory"
		- NEIGH  = { authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { size , b , sort , res , hasCodeCompatibleOfAuthorityFactory , thisName , empty , a , databaseContext , if , dbContext , ci_equal , this , io , || , authorityFactory , & , unsignificantName , >= , Pair , DatabaseContextNNPtr , }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { res , return , }

2800 :	"io"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

2800 :	"DatabaseContextNNPtr"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

2800 :	"&"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

2800 :	"dbContext"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

2801 :	"authorityFactory"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

2801 :	"databaseContext"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

2803 :	"unsignificantName"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }

2803 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }

2803 :	"empty"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }

2803 :	"||"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }

2804 :	"ci_equal"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }

2804 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }

2804 :	"||"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }

2805 :	"ci_equal"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }

2805 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }

2806 :	"if"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { unsignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { ci_equal , || , empty , thisName , unsignificantName , }
		- SUCC   = { b , a , & , thisName , Pair , sort , res , }

2806 :	"hasCodeCompatibleOfAuthorityFactory"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { unsignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { ci_equal , || , empty , thisName , unsignificantName , }
		- SUCC   = { b , a , & , thisName , Pair , sort , res , }

2806 :	"this"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { unsignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { ci_equal , || , empty , thisName , unsignificantName , }
		- SUCC   = { b , a , & , thisName , Pair , sort , res , }

2806 :	"authorityFactory"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { unsignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { ci_equal , || , empty , thisName , unsignificantName , }
		- SUCC   = { b , a , & , thisName , Pair , sort , res , }

2809 :	"for"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

2809 :	"&"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

2809 :	"id"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

2809 :	"identifiers"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

2810 :	"if"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , res , catch , emplace_back , exception , util , get , IComparable , id , code , match , createVerticalCRS , Criterion , * , dbContext , AuthorityFactory , EQUIVALENT , create , std , codeSpace , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

2810 :	"hasCodeCompatibleOfAuthorityFactory"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , res , catch , emplace_back , exception , util , get , IComparable , id , code , match , createVerticalCRS , Criterion , * , dbContext , AuthorityFactory , EQUIVALENT , create , std , codeSpace , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

2810 :	"id"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , res , catch , emplace_back , exception , util , get , IComparable , id , code , match , createVerticalCRS , Criterion , * , dbContext , AuthorityFactory , EQUIVALENT , create , std , codeSpace , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

2810 :	"authorityFactory"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , res , catch , emplace_back , exception , util , get , IComparable , id , code , match , createVerticalCRS , Criterion , * , dbContext , AuthorityFactory , EQUIVALENT , create , std , codeSpace , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

2812 :	"crs"
		- NEIGH  = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }

2812 :	"io"
		- NEIGH  = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }

2812 :	"AuthorityFactory"
		- NEIGH  = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }

2812 :	"create"
		- NEIGH  = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }

2813 :	"dbContext"
		- NEIGH  = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }

2813 :	"*"
		- NEIGH  = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }

2813 :	"id"
		- NEIGH  = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }

2813 :	"codeSpace"
		- NEIGH  = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }

2814 :	"createVerticalCRS"
		- NEIGH  = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }

2814 :	"id"
		- NEIGH  = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }

2814 :	"code"
		- NEIGH  = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }

2815 :	"match"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

2815 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

2816 :	"crs"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

2816 :	"get"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

2816 :	"util"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

2816 :	"IComparable"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

2816 :	"Criterion"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

2816 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

2817 :	"dbContext"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

2818 :	"res"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- SUCC   = { res , return , }

2818 :	"emplace_back"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- SUCC   = { res , return , }

2818 :	"crs"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- SUCC   = { res , return , }

2818 :	"match"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- SUCC   = { res , return , }

2819 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { match , crs , emplace_back , res , }
		- SUCC   = { & , exception , std , catch , }

2819 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { match , crs , emplace_back , res , }
		- SUCC   = { & , exception , std , catch , }

2820 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

2820 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

2820 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

2820 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

2824 :	"if"
		- NEIGH  = { ! , unsignificantName , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { < , ++ , ipass , for , }
		- PRED   = { }
		- SUCC   = { }

2824 :	"!"
		- NEIGH  = { ! , unsignificantName , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { < , ++ , ipass , for , }
		- PRED   = { }
		- SUCC   = { }

2824 :	"unsignificantName"
		- NEIGH  = { ! , unsignificantName , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { < , ++ , ipass , for , }
		- PRED   = { }
		- SUCC   = { }

2825 :	"for"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , == , authorityFactory , VERTICAL_CRS , AuthorityFactory , for , approximateMatch , ObjectType , createObjectsFromName , io , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

2825 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , == , authorityFactory , VERTICAL_CRS , AuthorityFactory , for , approximateMatch , ObjectType , createObjectsFromName , io , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

2825 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , == , authorityFactory , VERTICAL_CRS , AuthorityFactory , for , approximateMatch , ObjectType , createObjectsFromName , io , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

2825 :	"<"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , == , authorityFactory , VERTICAL_CRS , AuthorityFactory , for , approximateMatch , ObjectType , createObjectsFromName , io , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

2825 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , == , authorityFactory , VERTICAL_CRS , AuthorityFactory , for , approximateMatch , ObjectType , createObjectsFromName , io , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

2825 :	"++"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , == , authorityFactory , VERTICAL_CRS , AuthorityFactory , for , approximateMatch , ObjectType , createObjectsFromName , io , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

2826 :	"approximateMatch"
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }

2826 :	"ipass"
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }

2826 :	"=="
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }

2827 :	"objects"
		- NEIGH  = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

2827 :	"authorityFactory"
		- NEIGH  = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

2827 :	"createObjectsFromName"
		- NEIGH  = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

2828 :	"thisName"
		- NEIGH  = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

2828 :	"io"
		- NEIGH  = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

2828 :	"AuthorityFactory"
		- NEIGH  = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

2828 :	"ObjectType"
		- NEIGH  = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

2828 :	"VERTICAL_CRS"
		- NEIGH  = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

2829 :	"approximateMatch"
		- NEIGH  = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

2830 :	"for"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , dbContext , if , NN_NO_CHECK , > , assert , util , < , crsNN , obj , VerticalCRS , nn_dynamic_pointer_cast , _isEquivalentTo , crs , }
		- PRED   = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

2830 :	"&"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , dbContext , if , NN_NO_CHECK , > , assert , util , < , crsNN , obj , VerticalCRS , nn_dynamic_pointer_cast , _isEquivalentTo , crs , }
		- PRED   = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

2830 :	"obj"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , dbContext , if , NN_NO_CHECK , > , assert , util , < , crsNN , obj , VerticalCRS , nn_dynamic_pointer_cast , _isEquivalentTo , crs , }
		- PRED   = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

2830 :	"objects"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , dbContext , if , NN_NO_CHECK , > , assert , util , < , crsNN , obj , VerticalCRS , nn_dynamic_pointer_cast , _isEquivalentTo , crs , }
		- PRED   = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

2831 :	"crs"
		- NEIGH  = { obj , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

2831 :	"util"
		- NEIGH  = { obj , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

2831 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { obj , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

2831 :	"<"
		- NEIGH  = { obj , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

2831 :	"VerticalCRS"
		- NEIGH  = { obj , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

2831 :	">"
		- NEIGH  = { obj , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

2831 :	"obj"
		- NEIGH  = { obj , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

2832 :	"assert"
		- NEIGH  = { crs , assert , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { obj , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , crs , }
		- SUCC   = { NN_NO_CHECK , crs , crsNN , }

2832 :	"crs"
		- NEIGH  = { crs , assert , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { obj , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , crs , }
		- SUCC   = { NN_NO_CHECK , crs , crsNN , }

2833 :	"crsNN"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

2833 :	"NN_NO_CHECK"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

2833 :	"crs"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

2834 :	"if"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

2834 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

2835 :	"crs"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

2835 :	"get"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

2835 :	"util"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

2835 :	"IComparable"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

2835 :	"Criterion"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

2835 :	"EQUIVALENT"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

2836 :	"dbContext"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

2837 :	"if"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

2837 :	"crs"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

2837 :	"nameStr"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

2837 :	"=="
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

2837 :	"thisName"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

2838 :	"res"
		- NEIGH  = { clear , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

2838 :	"clear"
		- NEIGH  = { clear , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

2839 :	"res"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

2839 :	"emplace_back"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

2839 :	"crsNN"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

2840 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { crsNN , emplace_back , res , }
		- SUCC   = { }

2840 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { crsNN , emplace_back , res , }
		- SUCC   = { }

2842 :	"res"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { }

2842 :	"emplace_back"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { }

2842 :	"crsNN"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { }

2844 :	"res"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2844 :	"emplace_back"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2844 :	"crsNN"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2847 :	"if"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

2847 :	"!"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

2847 :	"res"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

2847 :	"empty"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

2848 :	"break"
		- NEIGH  = { break , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2854 :	"res"
		- NEIGH  = { b , a , & , thisName , Pair , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { >= , size , res , if , }

2854 :	"sort"
		- NEIGH  = { b , a , & , thisName , Pair , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { >= , size , res , if , }

2854 :	"&"
		- NEIGH  = { b , a , & , thisName , Pair , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { >= , size , res , if , }

2854 :	"thisName"
		- NEIGH  = { b , a , & , thisName , Pair , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { >= , size , res , if , }

2854 :	"Pair"
		- NEIGH  = { b , a , & , thisName , Pair , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { >= , size , res , if , }

2854 :	"&"
		- NEIGH  = { b , a , & , thisName , Pair , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { >= , size , res , if , }

2854 :	"a"
		- NEIGH  = { b , a , & , thisName , Pair , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { >= , size , res , if , }

2854 :	"Pair"
		- NEIGH  = { b , a , & , thisName , Pair , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { >= , size , res , if , }

2854 :	"&"
		- NEIGH  = { b , a , & , thisName , Pair , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { >= , size , res , if , }

2854 :	"b"
		- NEIGH  = { b , a , & , thisName , Pair , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { >= , size , res , if , }

2856 :	"if"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

2856 :	"a"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

2856 :	"second"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

2856 :	">"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

2856 :	"b"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

2856 :	"second"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

2857 :	"return"
		- NEIGH  = { return , }
		- PARENT = { > , second , a , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2859 :	"if"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

2859 :	"a"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

2859 :	"second"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

2859 :	"<"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

2859 :	"b"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

2859 :	"second"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

2860 :	"return"
		- NEIGH  = { return , }
		- PARENT = { < , second , a , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2864 :	"&"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

2864 :	"aName"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

2864 :	"a"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

2864 :	"first"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

2864 :	"nameStr"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

2865 :	"&"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

2865 :	"bName"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

2865 :	"b"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

2865 :	"first"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

2865 :	"nameStr"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

2866 :	"if"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

2866 :	"aName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

2866 :	"=="
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

2866 :	"thisName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

2866 :	"&&"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

2866 :	"bName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

2866 :	"!="
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

2866 :	"thisName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

2867 :	"return"
		- NEIGH  = { return , }
		- PARENT = { != , bName , && , == , aName , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2869 :	"if"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

2869 :	"bName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

2869 :	"=="
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

2869 :	"thisName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

2869 :	"&&"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

2869 :	"aName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

2869 :	"!="
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

2869 :	"thisName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

2870 :	"return"
		- NEIGH  = { return , }
		- PARENT = { != , aName , && , == , bName , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2874 :	"return"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

2874 :	"aName"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

2874 :	"<"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

2874 :	"bName"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

2878 :	"if"
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { b , a , & , thisName , Pair , sort , res , }
		- SUCC   = { }

2878 :	"res"
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { b , a , & , thisName , Pair , sort , res , }
		- SUCC   = { }

2878 :	"size"
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { b , a , & , thisName , Pair , sort , res , }
		- SUCC   = { }

2878 :	">="
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { b , a , & , thisName , Pair , sort , res , }
		- SUCC   = { }

2879 :	"highestConfidence"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

2879 :	"res"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

2879 :	"front"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

2879 :	"second"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

2880 :	"std"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

2880 :	"list"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

2880 :	"<"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

2880 :	"Pair"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

2880 :	">"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

2880 :	"newRes"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

2881 :	"for"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

2881 :	"&"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

2881 :	"pair"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

2881 :	"res"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

2882 :	"if"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

2882 :	"pair"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

2882 :	"second"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

2882 :	"=="
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

2882 :	"highestConfidence"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

2883 :	"newRes"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2883 :	"push_back"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2883 :	"pair"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2885 :	"break"
		- NEIGH  = { break , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2888 :	"return"
		- NEIGH  = { newRes , return , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { }

2888 :	"newRes"
		- NEIGH  = { newRes , return , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { }

2892 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , if , }
		- SUCC   = { }

2892 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , if , }
		- SUCC   = { }

2899 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2899 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2899 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2899 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2899 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2899 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2899 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2899 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2900 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2900 :	"_identify"
		- NEIGH  = { _identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2900 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2900 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2900 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2900 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2901 :	"std"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2901 :	"pair"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2901 :	"<"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2901 :	"CRSNNPtr"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2901 :	">"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2901 :	"Pair"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2902 :	"std"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

2902 :	"list"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

2902 :	"<"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

2902 :	"Pair"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

2902 :	">"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

2902 :	"res"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

2903 :	"resTemp"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

2903 :	"identify"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

2903 :	"authorityFactory"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

2904 :	"for"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

2904 :	"&"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

2904 :	"pair"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

2904 :	"resTemp"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

2905 :	"res"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2905 :	"emplace_back"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2905 :	"pair"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2905 :	"first"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2905 :	"pair"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2905 :	"second"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2907 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pair , resTemp , & , for , }
		- SUCC   = { }

2907 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pair , resTemp , & , for , }
		- SUCC   = { }

2915 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2915 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2916 :	"SingleCRSNNPtr"
		- NEIGH  = { baseCRS_ , SingleCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion_ , ConversionNNPtr , operation , }

2916 :	"baseCRS_"
		- NEIGH  = { baseCRS_ , SingleCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion_ , ConversionNNPtr , operation , }

2917 :	"operation"
		- NEIGH  = { derivingConversion_ , ConversionNNPtr , operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , SingleCRSNNPtr , }
		- SUCC   = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }

2917 :	"ConversionNNPtr"
		- NEIGH  = { derivingConversion_ , ConversionNNPtr , operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , SingleCRSNNPtr , }
		- SUCC   = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }

2917 :	"derivingConversion_"
		- NEIGH  = { derivingConversion_ , ConversionNNPtr , operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , SingleCRSNNPtr , }
		- SUCC   = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }

2919 :	"Private"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2919 :	"SingleCRSNNPtr"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2919 :	"&"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2919 :	"baseCRSIn"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2920 :	"operation"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2920 :	"ConversionNNPtr"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2920 :	"&"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2920 :	"derivingConversionIn"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2921 :	"baseCRS_"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2921 :	"baseCRSIn"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2921 :	"derivingConversion_"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2921 :	"derivingConversionIn"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2925 :	"Private"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2925 :	"Private"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2925 :	"&"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2925 :	"other"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2926 :	"baseCRS_"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2926 :	"other"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2926 :	"baseCRS_"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2927 :	"derivingConversion_"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2927 :	"other"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2927 :	"derivingConversion_"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2927 :	"shallowClone"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2940 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2940 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2940 :	"SingleCRSNNPtr"
		- NEIGH  = { SingleCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2940 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2940 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2941 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2941 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2941 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2941 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2942 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2942 :	"CoordinateSystemNNPtr"
		- NEIGH  = { CoordinateSystemNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2942 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2944 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2949 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2949 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2949 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2949 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2949 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2949 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2951 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2951 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2951 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2951 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2951 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2951 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2951 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2951 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2956 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2956 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2956 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2956 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2956 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2959 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2959 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2961 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2961 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2961 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2961 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2961 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2961 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2961 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2961 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2961 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2967 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2967 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2976 :	"SingleCRSNNPtr"
		- NEIGH  = { SingleCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2976 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2976 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2976 :	"baseCRS"
		- NEIGH  = { baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2976 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2977 :	"return"
		- NEIGH  = { baseCRS_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2977 :	"d"
		- NEIGH  = { baseCRS_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2977 :	"baseCRS_"
		- NEIGH  = { baseCRS_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2986 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2986 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2986 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2986 :	"derivingConversion"
		- NEIGH  = { derivingConversion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2987 :	"return"
		- NEIGH  = { shallowClone , derivingConversion_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2987 :	"d"
		- NEIGH  = { shallowClone , derivingConversion_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2987 :	"derivingConversion_"
		- NEIGH  = { shallowClone , derivingConversion_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2987 :	"shallowClone"
		- NEIGH  = { shallowClone , derivingConversion_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2993 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2993 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2993 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2994 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2994 :	"derivingConversionRef"
		- NEIGH  = { derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2994 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2995 :	"return"
		- NEIGH  = { derivingConversion_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2995 :	"d"
		- NEIGH  = { derivingConversion_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2995 :	"derivingConversion_"
		- NEIGH  = { derivingConversion_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3001 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3001 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3002 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3002 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3002 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3002 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3002 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3002 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3002 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3002 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3003 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3003 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3003 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3003 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3004 :	"otherDerivedCRS"
		- NEIGH  = { > , dynamic_cast , * , DerivedCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

3004 :	"dynamic_cast"
		- NEIGH  = { > , dynamic_cast , * , DerivedCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

3004 :	"<"
		- NEIGH  = { > , dynamic_cast , * , DerivedCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

3004 :	"DerivedCRS"
		- NEIGH  = { > , dynamic_cast , * , DerivedCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

3004 :	"*"
		- NEIGH  = { > , dynamic_cast , * , DerivedCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

3004 :	">"
		- NEIGH  = { > , dynamic_cast , * , DerivedCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

3004 :	"other"
		- NEIGH  = { > , dynamic_cast , * , DerivedCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

3005 :	"standardCriterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedCRS , < , other , otherDerivedCRS , }
		- SUCC   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }

3005 :	"getStandardCriterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedCRS , < , other , otherDerivedCRS , }
		- SUCC   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }

3005 :	"criterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedCRS , < , other , otherDerivedCRS , }
		- SUCC   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }

3006 :	"if"
		- NEIGH  = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }

3006 :	"otherDerivedCRS"
		- NEIGH  = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }

3006 :	"=="
		- NEIGH  = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }

3006 :	"||"
		- NEIGH  = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }

3007 :	"!"
		- NEIGH  = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }

3007 :	"SingleCRS"
		- NEIGH  = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }

3007 :	"baseIsEquivalentTo"
		- NEIGH  = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }

3007 :	"other"
		- NEIGH  = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }

3007 :	"standardCriterion"
		- NEIGH  = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }

3007 :	"dbContext"
		- NEIGH  = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }

3008 :	"return"
		- NEIGH  = { return , }
		- PARENT = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3010 :	"return"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3010 :	"d"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3010 :	"baseCRS_"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3010 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3010 :	"otherDerivedCRS"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3010 :	"d"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3010 :	"baseCRS_"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3010 :	"get"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3011 :	"criterion"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3011 :	"dbContext"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3011 :	"&&"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3012 :	"d"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3012 :	"derivingConversion_"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3012 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3013 :	"otherDerivedCRS"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3013 :	"d"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3013 :	"derivingConversion_"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3013 :	"get"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3013 :	"standardCriterion"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3014 :	"dbContext"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3019 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3019 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3020 :	"derivingConversionRef"
		- NEIGH  = { shared_from_this , CRS , < , static_pointer_cast , derivingConversionRef , std , as_nullable , setWeakSourceTargetCRS , > , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3020 :	"setWeakSourceTargetCRS"
		- NEIGH  = { shared_from_this , CRS , < , static_pointer_cast , derivingConversionRef , std , as_nullable , setWeakSourceTargetCRS , > , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3021 :	"baseCRS"
		- NEIGH  = { shared_from_this , CRS , < , static_pointer_cast , derivingConversionRef , std , as_nullable , setWeakSourceTargetCRS , > , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3021 :	"as_nullable"
		- NEIGH  = { shared_from_this , CRS , < , static_pointer_cast , derivingConversionRef , std , as_nullable , setWeakSourceTargetCRS , > , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3022 :	"std"
		- NEIGH  = { shared_from_this , CRS , < , static_pointer_cast , derivingConversionRef , std , as_nullable , setWeakSourceTargetCRS , > , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3022 :	"static_pointer_cast"
		- NEIGH  = { shared_from_this , CRS , < , static_pointer_cast , derivingConversionRef , std , as_nullable , setWeakSourceTargetCRS , > , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3022 :	"<"
		- NEIGH  = { shared_from_this , CRS , < , static_pointer_cast , derivingConversionRef , std , as_nullable , setWeakSourceTargetCRS , > , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3022 :	"CRS"
		- NEIGH  = { shared_from_this , CRS , < , static_pointer_cast , derivingConversionRef , std , as_nullable , setWeakSourceTargetCRS , > , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3022 :	">"
		- NEIGH  = { shared_from_this , CRS , < , static_pointer_cast , derivingConversionRef , std , as_nullable , setWeakSourceTargetCRS , > , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3022 :	"shared_from_this"
		- NEIGH  = { shared_from_this , CRS , < , static_pointer_cast , derivingConversionRef , std , as_nullable , setWeakSourceTargetCRS , > , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3022 :	"as_nullable"
		- NEIGH  = { shared_from_this , CRS , < , static_pointer_cast , derivingConversionRef , std , as_nullable , setWeakSourceTargetCRS , > , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3027 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3027 :	"baseExportToWKT"
		- NEIGH  = { baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3027 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3027 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3027 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3027 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3028 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3028 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3028 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3028 :	"keyword"
		- NEIGH  = { keyword , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3029 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3029 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3029 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3029 :	"baseKeyword"
		- NEIGH  = { baseKeyword , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3030 :	"formatter"
		- NEIGH  = { empty , startNode , ! , keyword , identifiers , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3030 :	"startNode"
		- NEIGH  = { empty , startNode , ! , keyword , identifiers , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3030 :	"keyword"
		- NEIGH  = { empty , startNode , ! , keyword , identifiers , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3030 :	"!"
		- NEIGH  = { empty , startNode , ! , keyword , identifiers , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3030 :	"identifiers"
		- NEIGH  = { empty , startNode , ! , keyword , identifiers , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3030 :	"empty"
		- NEIGH  = { empty , startNode , ! , keyword , identifiers , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3031 :	"formatter"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , startNode , ! , keyword , identifiers , formatter , }
		- SUCC   = { baseCRS_ , d , l_baseCRS , & , }

3031 :	"addQuotedString"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , startNode , ! , keyword , identifiers , formatter , }
		- SUCC   = { baseCRS_ , d , l_baseCRS , & , }

3031 :	"nameStr"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , startNode , ! , keyword , identifiers , formatter , }
		- SUCC   = { baseCRS_ , d , l_baseCRS , & , }

3033 :	"&"
		- NEIGH  = { baseCRS_ , d , l_baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }

3033 :	"l_baseCRS"
		- NEIGH  = { baseCRS_ , d , l_baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }

3033 :	"d"
		- NEIGH  = { baseCRS_ , d , l_baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }

3033 :	"baseCRS_"
		- NEIGH  = { baseCRS_ , d , l_baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }

3034 :	"formatter"
		- NEIGH  = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , d , l_baseCRS , & , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3034 :	"startNode"
		- NEIGH  = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , d , l_baseCRS , & , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3034 :	"baseKeyword"
		- NEIGH  = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , d , l_baseCRS , & , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3034 :	"formatter"
		- NEIGH  = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , d , l_baseCRS , & , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3034 :	"use2019Keywords"
		- NEIGH  = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , d , l_baseCRS , & , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3034 :	"&&"
		- NEIGH  = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , d , l_baseCRS , & , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3035 :	"!"
		- NEIGH  = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , d , l_baseCRS , & , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3035 :	"l_baseCRS"
		- NEIGH  = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , d , l_baseCRS , & , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3035 :	"identifiers"
		- NEIGH  = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , d , l_baseCRS , & , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3035 :	"empty"
		- NEIGH  = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , d , l_baseCRS , & , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3036 :	"formatter"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

3036 :	"addQuotedString"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

3036 :	"l_baseCRS"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

3036 :	"nameStr"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

3037 :	"l_baseCRS"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }

3037 :	"exportDatumOrDatumEnsembleToWkt"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }

3037 :	"formatter"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }

3038 :	"if"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3038 :	"formatter"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3038 :	"use2019Keywords"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3038 :	"&&"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3039 :	"!"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3039 :	"formatter"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3039 :	"idOnTopLevelOnly"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3039 :	"&&"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3039 :	"formatter"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3039 :	"topLevelHasId"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3040 :	"l_baseCRS"
		- NEIGH  = { formatter , formatID , l_baseCRS , }
		- PARENT = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3040 :	"formatID"
		- NEIGH  = { formatter , formatID , l_baseCRS , }
		- PARENT = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3040 :	"formatter"
		- NEIGH  = { formatter , formatID , l_baseCRS , }
		- PARENT = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3042 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

3042 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

3044 :	"formatter"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

3044 :	"setUseDerivingConversion"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

3045 :	"derivingConversionRef"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

3045 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

3045 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

3046 :	"formatter"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

3046 :	"setUseDerivingConversion"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

3048 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3048 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3048 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3049 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

3049 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

3049 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

3050 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

3050 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

3056 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3056 :	"_exportToJSON"
		- NEIGH  = { _exportToJSON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3057 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3057 :	"JSONFormatter"
		- NEIGH  = { JSONFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3057 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3057 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3059 :	"&"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }

3059 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }

3059 :	"formatter"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }

3059 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }

3060 :	"objectContext"
		- NEIGH  = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

3061 :	"formatter"
		- NEIGH  = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

3061 :	"MakeObjectContext"
		- NEIGH  = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

3061 :	"className"
		- NEIGH  = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

3061 :	"!"
		- NEIGH  = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

3061 :	"identifiers"
		- NEIGH  = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

3061 :	"empty"
		- NEIGH  = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

3063 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

3063 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

3064 :	"l_name"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

3064 :	"nameStr"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

3065 :	"if"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

3065 :	"l_name"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

3065 :	"empty"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

3066 :	"writer"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3066 :	"Add"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3068 :	"writer"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3068 :	"Add"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3068 :	"l_name"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3071 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { formatter , _exportToJSON , baseCRS , }

3071 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { formatter , _exportToJSON , baseCRS , }

3072 :	"baseCRS"
		- NEIGH  = { formatter , _exportToJSON , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

3072 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

3072 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

3074 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , baseCRS , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

3074 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , baseCRS , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

3075 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , derivingConversionRef , }

3075 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , derivingConversionRef , }

3076 :	"derivingConversionRef"
		- NEIGH  = { formatter , _exportToJSON , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

3076 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

3076 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

3078 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , derivingConversionRef , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

3078 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , derivingConversionRef , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

3079 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

3079 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

3080 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

3080 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

3080 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

3082 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

3082 :	"baseExportToJSON"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

3082 :	"formatter"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

3089 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3089 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3090 :	"GeodeticCRSNNPtr"
		- NEIGH  = { baseCRS_ , GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs_ , CartesianCSNNPtr , cs , }

3090 :	"baseCRS_"
		- NEIGH  = { baseCRS_ , GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs_ , CartesianCSNNPtr , cs , }

3091 :	"cs"
		- NEIGH  = { cs_ , CartesianCSNNPtr , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , GeodeticCRSNNPtr , }
		- SUCC   = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }

3091 :	"CartesianCSNNPtr"
		- NEIGH  = { cs_ , CartesianCSNNPtr , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , GeodeticCRSNNPtr , }
		- SUCC   = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }

3091 :	"cs_"
		- NEIGH  = { cs_ , CartesianCSNNPtr , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , GeodeticCRSNNPtr , }
		- SUCC   = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }

3092 :	"Private"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3092 :	"GeodeticCRSNNPtr"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3092 :	"&"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3092 :	"baseCRSIn"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3092 :	"cs"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3092 :	"CartesianCSNNPtr"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3092 :	"&"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3092 :	"csIn"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3093 :	"baseCRS_"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3093 :	"baseCRSIn"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3093 :	"cs_"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3093 :	"csIn"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3095 :	"GeodeticCRSNNPtr"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3095 :	"&"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3095 :	"baseCRS"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3095 :	"return"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3095 :	"baseCRS_"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3097 :	"cs"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3097 :	"CartesianCSNNPtr"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3097 :	"&"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3097 :	"coordinateSystem"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3097 :	"return"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3097 :	"cs_"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3103 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3103 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3104 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3104 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3104 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3105 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3105 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3105 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3105 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3106 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3106 :	"CartesianCSNNPtr"
		- NEIGH  = { CartesianCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3106 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3106 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3107 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3107 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3107 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3107 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3107 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3107 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3108 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3108 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3108 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3108 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3109 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3109 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3109 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3109 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3109 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3109 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3109 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3109 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3113 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3113 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3113 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3113 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3113 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3114 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3114 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3114 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3114 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3115 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3115 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3115 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3115 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3115 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3115 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3115 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3115 :	"baseCRS"
		- NEIGH  = { baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3116 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3116 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3121 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3121 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3126 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3126 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3126 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3127 :	"crs"
		- NEIGH  = { this , * , < , ProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3127 :	"ProjectedCRS"
		- NEIGH  = { this , * , < , ProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3127 :	"nn_make_shared"
		- NEIGH  = { this , * , < , ProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3127 :	"<"
		- NEIGH  = { this , * , < , ProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3127 :	"ProjectedCRS"
		- NEIGH  = { this , * , < , ProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3127 :	">"
		- NEIGH  = { this , * , < , ProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3127 :	"*"
		- NEIGH  = { this , * , < , ProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3127 :	"this"
		- NEIGH  = { this , * , < , ProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3128 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , ProjectedCRS , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

3128 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , ProjectedCRS , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

3128 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , ProjectedCRS , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

3129 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

3129 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

3130 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

3130 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

3140 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3140 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3140 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3140 :	"baseCRS"
		- NEIGH  = { baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3140 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3141 :	"return"
		- NEIGH  = { d , baseCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3141 :	"d"
		- NEIGH  = { d , baseCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3141 :	"baseCRS"
		- NEIGH  = { d , baseCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3150 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3150 :	"CartesianCSNNPtr"
		- NEIGH  = { CartesianCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3150 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3150 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3150 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3150 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3151 :	"return"
		- NEIGH  = { coordinateSystem , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3151 :	"d"
		- NEIGH  = { coordinateSystem , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3151 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3157 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3157 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3157 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3157 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3157 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3157 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3158 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

3158 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

3158 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

3158 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

3158 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

3158 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

3158 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

3158 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

3160 :	"&"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { databaseContext , formatter , dbContext , & , }

3160 :	"l_identifiers"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { databaseContext , formatter , dbContext , & , }

3160 :	"identifiers"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { databaseContext , formatter , dbContext , & , }

3163 :	"&"
		- NEIGH  = { databaseContext , formatter , dbContext , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { nameStr , l_name , }

3163 :	"dbContext"
		- NEIGH  = { databaseContext , formatter , dbContext , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { nameStr , l_name , }

3163 :	"formatter"
		- NEIGH  = { databaseContext , formatter , dbContext , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { nameStr , l_name , }

3163 :	"databaseContext"
		- NEIGH  = { databaseContext , formatter , dbContext , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { nameStr , l_name , }

3165 :	"l_name"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { databaseContext , formatter , dbContext , & , }
		- SUCC   = { string , l_alias , std , }

3165 :	"nameStr"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { databaseContext , formatter , dbContext , & , }
		- SUCC   = { string , l_alias , std , }

3166 :	"std"
		- NEIGH  = { string , l_alias , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { dbContext , && , useESRIDialect , formatter , if , }

3166 :	"string"
		- NEIGH  = { string , l_alias , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { dbContext , && , useESRIDialect , formatter , if , }

3166 :	"l_alias"
		- NEIGH  = { string , l_alias , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { dbContext , && , useESRIDialect , formatter , if , }

3167 :	"if"
		- NEIGH  = { dbContext , && , useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PRED   = { string , l_alias , std , }
		- SUCC   = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }

3167 :	"formatter"
		- NEIGH  = { dbContext , && , useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PRED   = { string , l_alias , std , }
		- SUCC   = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }

3167 :	"useESRIDialect"
		- NEIGH  = { dbContext , && , useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PRED   = { string , l_alias , std , }
		- SUCC   = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }

3167 :	"&&"
		- NEIGH  = { dbContext , && , useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PRED   = { string , l_alias , std , }
		- SUCC   = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }

3167 :	"dbContext"
		- NEIGH  = { dbContext , && , useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PRED   = { string , l_alias , std , }
		- SUCC   = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }

3168 :	"l_alias"
		- NEIGH  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PARENT = { dbContext , && , useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3168 :	"dbContext"
		- NEIGH  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PARENT = { dbContext , && , useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3168 :	"getAliasFromOfficialName"
		- NEIGH  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PARENT = { dbContext , && , useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3168 :	"l_name"
		- NEIGH  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PARENT = { dbContext , && , useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3172 :	"if"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

3172 :	"!"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

3172 :	"isWKT2"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

3172 :	"&&"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

3172 :	"formatter"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

3172 :	"useESRIDialect"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

3172 :	"&&"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

3172 :	"!"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

3172 :	"l_identifiers"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

3172 :	"empty"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

3172 :	"&&"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

3173 :	"*"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

3173 :	"l_identifiers"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

3173 :	"codeSpace"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

3173 :	"=="
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

3173 :	"&&"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

3173 :	"dbContext"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

3175 :	"definition"
		- NEIGH  = { l_identifiers , code , getTextDefinition , dbContext , definition , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

3175 :	"dbContext"
		- NEIGH  = { l_identifiers , code , getTextDefinition , dbContext , definition , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

3175 :	"getTextDefinition"
		- NEIGH  = { l_identifiers , code , getTextDefinition , dbContext , definition , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

3176 :	"l_identifiers"
		- NEIGH  = { l_identifiers , code , getTextDefinition , dbContext , definition , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

3176 :	"code"
		- NEIGH  = { l_identifiers , code , getTextDefinition , dbContext , definition , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

3177 :	"if"
		- NEIGH  = { definition , starts_with , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { EQUIVALENT , Criterion , get , > , * , IComparable , util , dynamic_cast , < , _isEquivalentTo , dbContext , if , definition , attachDatabaseContext , WKTParser , io , createFromWKT , crsFromFromDef , }
		- PRED   = { l_identifiers , code , getTextDefinition , dbContext , definition , }
		- SUCC   = { & , exception , std , catch , }

3177 :	"starts_with"
		- NEIGH  = { definition , starts_with , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { EQUIVALENT , Criterion , get , > , * , IComparable , util , dynamic_cast , < , _isEquivalentTo , dbContext , if , definition , attachDatabaseContext , WKTParser , io , createFromWKT , crsFromFromDef , }
		- PRED   = { l_identifiers , code , getTextDefinition , dbContext , definition , }
		- SUCC   = { & , exception , std , catch , }

3177 :	"definition"
		- NEIGH  = { definition , starts_with , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { EQUIVALENT , Criterion , get , > , * , IComparable , util , dynamic_cast , < , _isEquivalentTo , dbContext , if , definition , attachDatabaseContext , WKTParser , io , createFromWKT , crsFromFromDef , }
		- PRED   = { l_identifiers , code , getTextDefinition , dbContext , definition , }
		- SUCC   = { & , exception , std , catch , }

3178 :	"crsFromFromDef"
		- NEIGH  = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }

3178 :	"io"
		- NEIGH  = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }

3178 :	"WKTParser"
		- NEIGH  = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }

3179 :	"attachDatabaseContext"
		- NEIGH  = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }

3179 :	"dbContext"
		- NEIGH  = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }

3180 :	"createFromWKT"
		- NEIGH  = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }

3180 :	"definition"
		- NEIGH  = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }

3181 :	"if"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

3181 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

3182 :	"dynamic_cast"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

3182 :	"<"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

3182 :	"IComparable"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

3182 :	"*"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

3182 :	">"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

3182 :	"crsFromFromDef"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

3182 :	"get"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

3183 :	"util"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

3183 :	"IComparable"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

3183 :	"Criterion"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

3183 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

3184 :	"formatter"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

3184 :	"ingestWKTNode"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

3185 :	"io"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

3185 :	"WKTNode"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

3185 :	"createFrom"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

3185 :	"definition"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

3186 :	"return"
		- NEIGH  = { return , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- SUCC   = { }

3189 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { }
		- PRED   = { definition , starts_with , if , }
		- SUCC   = { }

3189 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { }
		- PRED   = { definition , starts_with , if , }
		- SUCC   = { }

3189 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { }
		- PRED   = { definition , starts_with , if , }
		- SUCC   = { }

3189 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { }
		- PRED   = { definition , starts_with , if , }
		- SUCC   = { }

3191 :	"if"
		- NEIGH  = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { & , std , == , size , l_alias , create , PROJECTED_CRS , catch , ObjectType , exception , io , createObjectsFromName , AuthorityFactory , dbContext , if , res , NN_NO_CHECK , }
		- PRED   = { }
		- SUCC   = { }

3191 :	"!"
		- NEIGH  = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { & , std , == , size , l_alias , create , PROJECTED_CRS , catch , ObjectType , exception , io , createObjectsFromName , AuthorityFactory , dbContext , if , res , NN_NO_CHECK , }
		- PRED   = { }
		- SUCC   = { }

3191 :	"isWKT2"
		- NEIGH  = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { & , std , == , size , l_alias , create , PROJECTED_CRS , catch , ObjectType , exception , io , createObjectsFromName , AuthorityFactory , dbContext , if , res , NN_NO_CHECK , }
		- PRED   = { }
		- SUCC   = { }

3191 :	"&&"
		- NEIGH  = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { & , std , == , size , l_alias , create , PROJECTED_CRS , catch , ObjectType , exception , io , createObjectsFromName , AuthorityFactory , dbContext , if , res , NN_NO_CHECK , }
		- PRED   = { }
		- SUCC   = { }

3191 :	"formatter"
		- NEIGH  = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { & , std , == , size , l_alias , create , PROJECTED_CRS , catch , ObjectType , exception , io , createObjectsFromName , AuthorityFactory , dbContext , if , res , NN_NO_CHECK , }
		- PRED   = { }
		- SUCC   = { }

3191 :	"useESRIDialect"
		- NEIGH  = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { & , std , == , size , l_alias , create , PROJECTED_CRS , catch , ObjectType , exception , io , createObjectsFromName , AuthorityFactory , dbContext , if , res , NN_NO_CHECK , }
		- PRED   = { }
		- SUCC   = { }

3191 :	"&&"
		- NEIGH  = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { & , std , == , size , l_alias , create , PROJECTED_CRS , catch , ObjectType , exception , io , createObjectsFromName , AuthorityFactory , dbContext , if , res , NN_NO_CHECK , }
		- PRED   = { }
		- SUCC   = { }

3191 :	"!"
		- NEIGH  = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { & , std , == , size , l_alias , create , PROJECTED_CRS , catch , ObjectType , exception , io , createObjectsFromName , AuthorityFactory , dbContext , if , res , NN_NO_CHECK , }
		- PRED   = { }
		- SUCC   = { }

3191 :	"l_alias"
		- NEIGH  = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { & , std , == , size , l_alias , create , PROJECTED_CRS , catch , ObjectType , exception , io , createObjectsFromName , AuthorityFactory , dbContext , if , res , NN_NO_CHECK , }
		- PRED   = { }
		- SUCC   = { }

3191 :	"empty"
		- NEIGH  = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { & , std , == , size , l_alias , create , PROJECTED_CRS , catch , ObjectType , exception , io , createObjectsFromName , AuthorityFactory , dbContext , if , res , NN_NO_CHECK , }
		- PRED   = { }
		- SUCC   = { }

3193 :	"res"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3194 :	"io"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3194 :	"AuthorityFactory"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3194 :	"create"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3194 :	"NN_NO_CHECK"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3194 :	"dbContext"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3195 :	"createObjectsFromName"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3196 :	"l_alias"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3197 :	"io"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3197 :	"AuthorityFactory"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3197 :	"ObjectType"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3197 :	"PROJECTED_CRS"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3199 :	"if"
		- NEIGH  = { == , size , res , if , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { starts_with , if , code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- PRED   = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- SUCC   = { & , exception , std , catch , }

3199 :	"res"
		- NEIGH  = { == , size , res , if , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { starts_with , if , code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- PRED   = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- SUCC   = { & , exception , std , catch , }

3199 :	"size"
		- NEIGH  = { == , size , res , if , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { starts_with , if , code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- PRED   = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- SUCC   = { & , exception , std , catch , }

3199 :	"=="
		- NEIGH  = { == , size , res , if , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { starts_with , if , code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- PRED   = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- SUCC   = { & , exception , std , catch , }

3200 :	"definition"
		- NEIGH  = { code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

3200 :	"dbContext"
		- NEIGH  = { code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

3200 :	"getTextDefinition"
		- NEIGH  = { code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

3202 :	"res"
		- NEIGH  = { code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

3202 :	"front"
		- NEIGH  = { code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

3202 :	"identifiers"
		- NEIGH  = { code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

3202 :	"code"
		- NEIGH  = { code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

3203 :	"if"
		- NEIGH  = { definition , starts_with , if , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PRED   = { code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- SUCC   = { }

3203 :	"starts_with"
		- NEIGH  = { definition , starts_with , if , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PRED   = { code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- SUCC   = { }

3203 :	"definition"
		- NEIGH  = { definition , starts_with , if , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PRED   = { code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- SUCC   = { }

3204 :	"if"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3204 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3205 :	"dynamic_cast"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3205 :	"<"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3205 :	"IComparable"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3205 :	"*"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3205 :	">"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3205 :	"res"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3205 :	"front"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3205 :	"get"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3206 :	"util"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3206 :	"IComparable"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3206 :	"Criterion"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3206 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3207 :	"formatter"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

3207 :	"ingestWKTNode"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

3208 :	"io"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

3208 :	"WKTNode"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

3208 :	"createFrom"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

3208 :	"definition"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

3209 :	"return"
		- NEIGH  = { return , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- SUCC   = { }

3213 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { == , size , res , if , }
		- SUCC   = { }

3213 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { == , size , res , if , }
		- SUCC   = { }

3213 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { == , size , res , if , }
		- SUCC   = { }

3213 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { == , size , res , if , }
		- SUCC   = { }

3217 :	"&"
		- NEIGH  = { d , coordinateSystem , l_coordinateSystem , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- SUCC   = { l_coordinateSystem , axisList , & , }

3217 :	"l_coordinateSystem"
		- NEIGH  = { d , coordinateSystem , l_coordinateSystem , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- SUCC   = { l_coordinateSystem , axisList , & , }

3217 :	"d"
		- NEIGH  = { d , coordinateSystem , l_coordinateSystem , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- SUCC   = { l_coordinateSystem , axisList , & , }

3217 :	"coordinateSystem"
		- NEIGH  = { d , coordinateSystem , l_coordinateSystem , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- SUCC   = { l_coordinateSystem , axisList , & , }

3218 :	"&"
		- NEIGH  = { l_coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { d , coordinateSystem , l_coordinateSystem , & , }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }

3218 :	"axisList"
		- NEIGH  = { l_coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { d , coordinateSystem , l_coordinateSystem , & , }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }

3218 :	"l_coordinateSystem"
		- NEIGH  = { l_coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { d , coordinateSystem , l_coordinateSystem , & , }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }

3218 :	"axisList"
		- NEIGH  = { l_coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { d , coordinateSystem , l_coordinateSystem , & , }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }

3219 :	"if"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { l_coordinateSystem , axisList , & , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3219 :	"axisList"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { l_coordinateSystem , axisList , & , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3219 :	"size"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { l_coordinateSystem , axisList , & , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3219 :	"=="
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { l_coordinateSystem , axisList , & , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3219 :	"&&"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { l_coordinateSystem , axisList , & , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3219 :	"!"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { l_coordinateSystem , axisList , & , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3219 :	"isWKT2"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { l_coordinateSystem , axisList , & , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3219 :	"&&"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { l_coordinateSystem , axisList , & , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3219 :	"formatter"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { l_coordinateSystem , axisList , & , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3219 :	"use2019Keywords"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { l_coordinateSystem , axisList , & , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3220 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3220 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3220 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3224 :	"exportAxis"
		- NEIGH  = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- SUCC   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }

3224 :	"&"
		- NEIGH  = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- SUCC   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }

3224 :	"l_coordinateSystem"
		- NEIGH  = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- SUCC   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }

3224 :	"&"
		- NEIGH  = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- SUCC   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }

3224 :	"axisList"
		- NEIGH  = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- SUCC   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }

3224 :	"&"
		- NEIGH  = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- SUCC   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }

3224 :	"formatter"
		- NEIGH  = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- SUCC   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }

3225 :	"oldAxisOutputRule"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }

3225 :	"formatter"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }

3225 :	"outputAxis"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }

3226 :	"if"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_coordinateSystem , }

3226 :	"oldAxisOutputRule"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_coordinateSystem , }

3226 :	"=="
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_coordinateSystem , }

3227 :	"io"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_coordinateSystem , }

3227 :	"WKTFormatter"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_coordinateSystem , }

3227 :	"OutputAxisRule"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_coordinateSystem , }

3227 :	"WKT1_GDAL_EPSG_STYLE"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_coordinateSystem , }

3228 :	"if"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3228 :	"&"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3228 :	"axisList"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3228 :	"direction"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3228 :	"=="
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3228 :	"&"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3228 :	"cs"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3228 :	"AxisDirection"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3228 :	"EAST"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3228 :	"&&"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3229 :	"&"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3229 :	"axisList"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3229 :	"direction"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3229 :	"=="
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3229 :	"&"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3229 :	"cs"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3229 :	"AxisDirection"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3229 :	"NORTH"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3230 :	"formatter"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3230 :	"setOutputAxis"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3230 :	"io"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3230 :	"WKTFormatter"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3230 :	"OutputAxisRule"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3230 :	"YES"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3233 :	"l_coordinateSystem"
		- NEIGH  = { formatter , _exportToWKT , l_coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

3233 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , l_coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

3233 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , l_coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

3234 :	"formatter"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , l_coordinateSystem , }
		- SUCC   = { }

3234 :	"setOutputAxis"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , l_coordinateSystem , }
		- SUCC   = { }

3234 :	"oldAxisOutputRule"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , l_coordinateSystem , }
		- SUCC   = { }

3237 :	"if"
		- NEIGH  = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { return , baseExportToWKT , baseCRS , ObjectUsage , exportAxis , derivingConversionRef , addWKTExtensionNode , _exportToWKT , unit , empty , l_identifiers , endNode , PROJECTION , nameStr , WKTConstants , startNode , io , axisList , PROJCS , add , setTOWGS84Parameters , PARAMETER , formatter , ! , addQuotedString , }
		- PRED   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- SUCC   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }

3237 :	"!"
		- NEIGH  = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { return , baseExportToWKT , baseCRS , ObjectUsage , exportAxis , derivingConversionRef , addWKTExtensionNode , _exportToWKT , unit , empty , l_identifiers , endNode , PROJECTION , nameStr , WKTConstants , startNode , io , axisList , PROJCS , add , setTOWGS84Parameters , PARAMETER , formatter , ! , addQuotedString , }
		- PRED   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- SUCC   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }

3237 :	"isWKT2"
		- NEIGH  = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { return , baseExportToWKT , baseCRS , ObjectUsage , exportAxis , derivingConversionRef , addWKTExtensionNode , _exportToWKT , unit , empty , l_identifiers , endNode , PROJECTION , nameStr , WKTConstants , startNode , io , axisList , PROJCS , add , setTOWGS84Parameters , PARAMETER , formatter , ! , addQuotedString , }
		- PRED   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- SUCC   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }

3237 :	"&&"
		- NEIGH  = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { return , baseExportToWKT , baseCRS , ObjectUsage , exportAxis , derivingConversionRef , addWKTExtensionNode , _exportToWKT , unit , empty , l_identifiers , endNode , PROJECTION , nameStr , WKTConstants , startNode , io , axisList , PROJCS , add , setTOWGS84Parameters , PARAMETER , formatter , ! , addQuotedString , }
		- PRED   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- SUCC   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }

3237 :	"!"
		- NEIGH  = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { return , baseExportToWKT , baseCRS , ObjectUsage , exportAxis , derivingConversionRef , addWKTExtensionNode , _exportToWKT , unit , empty , l_identifiers , endNode , PROJECTION , nameStr , WKTConstants , startNode , io , axisList , PROJCS , add , setTOWGS84Parameters , PARAMETER , formatter , ! , addQuotedString , }
		- PRED   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- SUCC   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }

3237 :	"formatter"
		- NEIGH  = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { return , baseExportToWKT , baseCRS , ObjectUsage , exportAxis , derivingConversionRef , addWKTExtensionNode , _exportToWKT , unit , empty , l_identifiers , endNode , PROJECTION , nameStr , WKTConstants , startNode , io , axisList , PROJCS , add , setTOWGS84Parameters , PARAMETER , formatter , ! , addQuotedString , }
		- PRED   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- SUCC   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }

3237 :	"useESRIDialect"
		- NEIGH  = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { return , baseExportToWKT , baseCRS , ObjectUsage , exportAxis , derivingConversionRef , addWKTExtensionNode , _exportToWKT , unit , empty , l_identifiers , endNode , PROJECTION , nameStr , WKTConstants , startNode , io , axisList , PROJCS , add , setTOWGS84Parameters , PARAMETER , formatter , ! , addQuotedString , }
		- PRED   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- SUCC   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }

3237 :	"&&"
		- NEIGH  = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { return , baseExportToWKT , baseCRS , ObjectUsage , exportAxis , derivingConversionRef , addWKTExtensionNode , _exportToWKT , unit , empty , l_identifiers , endNode , PROJECTION , nameStr , WKTConstants , startNode , io , axisList , PROJCS , add , setTOWGS84Parameters , PARAMETER , formatter , ! , addQuotedString , }
		- PRED   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- SUCC   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }

3238 :	"starts_with"
		- NEIGH  = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { return , baseExportToWKT , baseCRS , ObjectUsage , exportAxis , derivingConversionRef , addWKTExtensionNode , _exportToWKT , unit , empty , l_identifiers , endNode , PROJECTION , nameStr , WKTConstants , startNode , io , axisList , PROJCS , add , setTOWGS84Parameters , PARAMETER , formatter , ! , addQuotedString , }
		- PRED   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- SUCC   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }

3238 :	"nameStr"
		- NEIGH  = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { return , baseExportToWKT , baseCRS , ObjectUsage , exportAxis , derivingConversionRef , addWKTExtensionNode , _exportToWKT , unit , empty , l_identifiers , endNode , PROJECTION , nameStr , WKTConstants , startNode , io , axisList , PROJCS , add , setTOWGS84Parameters , PARAMETER , formatter , ! , addQuotedString , }
		- PRED   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- SUCC   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }

3239 :	"formatter"
		- NEIGH  = { empty , l_identifiers , WKTConstants , io , PROJCS , ! , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3239 :	"startNode"
		- NEIGH  = { empty , l_identifiers , WKTConstants , io , PROJCS , ! , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3239 :	"io"
		- NEIGH  = { empty , l_identifiers , WKTConstants , io , PROJCS , ! , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3239 :	"WKTConstants"
		- NEIGH  = { empty , l_identifiers , WKTConstants , io , PROJCS , ! , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3239 :	"PROJCS"
		- NEIGH  = { empty , l_identifiers , WKTConstants , io , PROJCS , ! , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3239 :	"!"
		- NEIGH  = { empty , l_identifiers , WKTConstants , io , PROJCS , ! , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3239 :	"l_identifiers"
		- NEIGH  = { empty , l_identifiers , WKTConstants , io , PROJCS , ! , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3239 :	"empty"
		- NEIGH  = { empty , l_identifiers , WKTConstants , io , PROJCS , ! , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3240 :	"formatter"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { empty , l_identifiers , WKTConstants , io , PROJCS , ! , startNode , formatter , }
		- SUCC   = { setTOWGS84Parameters , formatter , }

3240 :	"addQuotedString"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { empty , l_identifiers , WKTConstants , io , PROJCS , ! , startNode , formatter , }
		- SUCC   = { setTOWGS84Parameters , formatter , }

3240 :	"nameStr"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { empty , l_identifiers , WKTConstants , io , PROJCS , ! , startNode , formatter , }
		- SUCC   = { setTOWGS84Parameters , formatter , }

3241 :	"formatter"
		- NEIGH  = { setTOWGS84Parameters , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , _exportToWKT , baseCRS , }

3241 :	"setTOWGS84Parameters"
		- NEIGH  = { setTOWGS84Parameters , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , _exportToWKT , baseCRS , }

3242 :	"baseCRS"
		- NEIGH  = { formatter , _exportToWKT , baseCRS , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { setTOWGS84Parameters , formatter , }
		- SUCC   = { setTOWGS84Parameters , formatter , }

3242 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , baseCRS , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { setTOWGS84Parameters , formatter , }
		- SUCC   = { setTOWGS84Parameters , formatter , }

3242 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , baseCRS , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { setTOWGS84Parameters , formatter , }
		- SUCC   = { setTOWGS84Parameters , formatter , }

3243 :	"formatter"
		- NEIGH  = { setTOWGS84Parameters , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , baseCRS , }
		- SUCC   = { PROJECTION , WKTConstants , io , startNode , formatter , }

3243 :	"setTOWGS84Parameters"
		- NEIGH  = { setTOWGS84Parameters , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , baseCRS , }
		- SUCC   = { PROJECTION , WKTConstants , io , startNode , formatter , }

3245 :	"formatter"
		- NEIGH  = { PROJECTION , WKTConstants , io , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { setTOWGS84Parameters , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3245 :	"startNode"
		- NEIGH  = { PROJECTION , WKTConstants , io , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { setTOWGS84Parameters , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3245 :	"io"
		- NEIGH  = { PROJECTION , WKTConstants , io , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { setTOWGS84Parameters , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3245 :	"WKTConstants"
		- NEIGH  = { PROJECTION , WKTConstants , io , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { setTOWGS84Parameters , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3245 :	"PROJECTION"
		- NEIGH  = { PROJECTION , WKTConstants , io , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { setTOWGS84Parameters , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3246 :	"formatter"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { PROJECTION , WKTConstants , io , startNode , formatter , }
		- SUCC   = { endNode , formatter , }

3246 :	"addQuotedString"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { PROJECTION , WKTConstants , io , startNode , formatter , }
		- SUCC   = { endNode , formatter , }

3247 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { WKTConstants , io , startNode , PARAMETER , formatter , }

3247 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { WKTConstants , io , startNode , PARAMETER , formatter , }

3249 :	"formatter"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3249 :	"startNode"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3249 :	"io"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3249 :	"WKTConstants"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3249 :	"PARAMETER"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3250 :	"formatter"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- SUCC   = { add , formatter , }

3250 :	"addQuotedString"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- SUCC   = { add , formatter , }

3251 :	"formatter"
		- NEIGH  = { add , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3251 :	"add"
		- NEIGH  = { add , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3252 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { add , formatter , }
		- SUCC   = { WKTConstants , io , startNode , PARAMETER , formatter , }

3252 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { add , formatter , }
		- SUCC   = { WKTConstants , io , startNode , PARAMETER , formatter , }

3254 :	"formatter"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3254 :	"startNode"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3254 :	"io"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3254 :	"WKTConstants"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3254 :	"PARAMETER"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3255 :	"formatter"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- SUCC   = { add , formatter , }

3255 :	"addQuotedString"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- SUCC   = { add , formatter , }

3256 :	"formatter"
		- NEIGH  = { add , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3256 :	"add"
		- NEIGH  = { add , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3257 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { add , formatter , }
		- SUCC   = { WKTConstants , io , startNode , PARAMETER , formatter , }

3257 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { add , formatter , }
		- SUCC   = { WKTConstants , io , startNode , PARAMETER , formatter , }

3259 :	"formatter"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3259 :	"startNode"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3259 :	"io"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3259 :	"WKTConstants"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3259 :	"PARAMETER"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3260 :	"formatter"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- SUCC   = { add , formatter , }

3260 :	"addQuotedString"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- SUCC   = { add , formatter , }

3261 :	"formatter"
		- NEIGH  = { add , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3261 :	"add"
		- NEIGH  = { add , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3262 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { add , formatter , }
		- SUCC   = { WKTConstants , io , startNode , PARAMETER , formatter , }

3262 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { add , formatter , }
		- SUCC   = { WKTConstants , io , startNode , PARAMETER , formatter , }

3264 :	"formatter"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3264 :	"startNode"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3264 :	"io"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3264 :	"WKTConstants"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3264 :	"PARAMETER"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3265 :	"formatter"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- SUCC   = { add , formatter , }

3265 :	"addQuotedString"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- SUCC   = { add , formatter , }

3266 :	"formatter"
		- NEIGH  = { add , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3266 :	"add"
		- NEIGH  = { add , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3267 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { add , formatter , }
		- SUCC   = { formatter , _exportToWKT , unit , axisList , }

3267 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { add , formatter , }
		- SUCC   = { formatter , _exportToWKT , unit , axisList , }

3269 :	"axisList"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { exportAxis , }

3269 :	"unit"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { exportAxis , }

3269 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { exportAxis , }

3269 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { exportAxis , }

3270 :	"exportAxis"
		- NEIGH  = { exportAxis , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , unit , axisList , }
		- SUCC   = { formatter , addWKTExtensionNode , derivingConversionRef , }

3271 :	"derivingConversionRef"
		- NEIGH  = { formatter , addWKTExtensionNode , derivingConversionRef , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { exportAxis , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3271 :	"addWKTExtensionNode"
		- NEIGH  = { formatter , addWKTExtensionNode , derivingConversionRef , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { exportAxis , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3271 :	"formatter"
		- NEIGH  = { formatter , addWKTExtensionNode , derivingConversionRef , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { exportAxis , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3272 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , addWKTExtensionNode , derivingConversionRef , }
		- SUCC   = { endNode , formatter , }

3272 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , addWKTExtensionNode , derivingConversionRef , }
		- SUCC   = { endNode , formatter , }

3272 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , addWKTExtensionNode , derivingConversionRef , }
		- SUCC   = { endNode , formatter , }

3273 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { return , }

3273 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { return , }

3274 :	"return"
		- NEIGH  = { return , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { }

3277 :	"formatter"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3277 :	"startNode"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3277 :	"isWKT2"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3277 :	"io"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3277 :	"WKTConstants"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3277 :	"PROJCRS"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3278 :	"io"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3278 :	"WKTConstants"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3278 :	"PROJCS"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3279 :	"!"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3279 :	"l_identifiers"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3279 :	"empty"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3281 :	"if"
		- NEIGH  = { useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { empty , l_alias , if , }
		- PRED   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- SUCC   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }

3281 :	"formatter"
		- NEIGH  = { useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { empty , l_alias , if , }
		- PRED   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- SUCC   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }

3281 :	"useESRIDialect"
		- NEIGH  = { useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { empty , l_alias , if , }
		- PRED   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- SUCC   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }

3282 :	"if"
		- NEIGH  = { empty , l_alias , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { l_alias , WKTFormatter , morphNameToESRI , io , l_name , }
		- PRED   = { }
		- SUCC   = { }

3282 :	"l_alias"
		- NEIGH  = { empty , l_alias , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { l_alias , WKTFormatter , morphNameToESRI , io , l_name , }
		- PRED   = { }
		- SUCC   = { }

3282 :	"empty"
		- NEIGH  = { empty , l_alias , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { l_alias , WKTFormatter , morphNameToESRI , io , l_name , }
		- PRED   = { }
		- SUCC   = { }

3283 :	"l_name"
		- NEIGH  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PARENT = { empty , l_alias , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3283 :	"io"
		- NEIGH  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PARENT = { empty , l_alias , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3283 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PARENT = { empty , l_alias , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3283 :	"morphNameToESRI"
		- NEIGH  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PARENT = { empty , l_alias , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3283 :	"l_name"
		- NEIGH  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PARENT = { empty , l_alias , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3285 :	"l_name"
		- NEIGH  = { l_alias , l_name , }
		- PARENT = { empty , l_alias , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3285 :	"l_alias"
		- NEIGH  = { l_alias , l_name , }
		- PARENT = { empty , l_alias , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3288 :	"if"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

3288 :	"!"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

3288 :	"isWKT2"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

3288 :	"&&"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

3288 :	"!"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

3288 :	"formatter"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

3288 :	"useESRIDialect"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

3288 :	"&&"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

3288 :	"isDeprecated"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

3289 :	"l_name"
		- NEIGH  = { += , l_name , }
		- PARENT = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3289 :	"+="
		- NEIGH  = { += , l_name , }
		- PARENT = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3291 :	"formatter"
		- NEIGH  = { l_name , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { baseCRS , d , l_baseCRS , & , }

3291 :	"addQuotedString"
		- NEIGH  = { l_name , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { baseCRS , d , l_baseCRS , & , }

3291 :	"l_name"
		- NEIGH  = { l_name , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { baseCRS , d , l_baseCRS , & , }

3293 :	"&"
		- NEIGH  = { baseCRS , d , l_baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_name , addQuotedString , formatter , }
		- SUCC   = { axisList , coordinateSystem , l_baseCRS , geodeticCRSAxisList , & , }

3293 :	"l_baseCRS"
		- NEIGH  = { baseCRS , d , l_baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_name , addQuotedString , formatter , }
		- SUCC   = { axisList , coordinateSystem , l_baseCRS , geodeticCRSAxisList , & , }

3293 :	"d"
		- NEIGH  = { baseCRS , d , l_baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_name , addQuotedString , formatter , }
		- SUCC   = { axisList , coordinateSystem , l_baseCRS , geodeticCRSAxisList , & , }

3293 :	"baseCRS"
		- NEIGH  = { baseCRS , d , l_baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_name , addQuotedString , formatter , }
		- SUCC   = { axisList , coordinateSystem , l_baseCRS , geodeticCRSAxisList , & , }

3294 :	"&"
		- NEIGH  = { axisList , coordinateSystem , l_baseCRS , geodeticCRSAxisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , d , l_baseCRS , & , }
		- SUCC   = { isWKT2 , if , }

3294 :	"geodeticCRSAxisList"
		- NEIGH  = { axisList , coordinateSystem , l_baseCRS , geodeticCRSAxisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , d , l_baseCRS , & , }
		- SUCC   = { isWKT2 , if , }

3294 :	"l_baseCRS"
		- NEIGH  = { axisList , coordinateSystem , l_baseCRS , geodeticCRSAxisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , d , l_baseCRS , & , }
		- SUCC   = { isWKT2 , if , }

3294 :	"coordinateSystem"
		- NEIGH  = { axisList , coordinateSystem , l_baseCRS , geodeticCRSAxisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , d , l_baseCRS , & , }
		- SUCC   = { isWKT2 , if , }

3294 :	"axisList"
		- NEIGH  = { axisList , coordinateSystem , l_baseCRS , geodeticCRSAxisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , d , l_baseCRS , & , }
		- SUCC   = { isWKT2 , if , }

3296 :	"if"
		- NEIGH  = { isWKT2 , if , }
		- PARENT = { }
		- CHILD  = { NO , OutputAxisRule , outputAxis , endNode , topLevelHasId , _exportToWKT , primeMeridian , if , exportDatumOrDatumEnsembleToWkt , oldAxisOutputRule , empty , setOutputAxis , identifiers , WKTFormatter , BASEGEODCRS , nameStr , WKTConstants , startNode , io , addQuotedString , get , l_baseCRS , && , primeMeridianOrParameterUnitOmittedIfSameAsAxis , BASEGEOGCRS , use2019Keywords , > , idOnTopLevelOnly , GeographicCRS , dynamic_cast , < , ! , formatter , * , }
		- PRED   = { axisList , coordinateSystem , l_baseCRS , geodeticCRSAxisList , & , }
		- SUCC   = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }

3296 :	"isWKT2"
		- NEIGH  = { isWKT2 , if , }
		- PARENT = { }
		- CHILD  = { NO , OutputAxisRule , outputAxis , endNode , topLevelHasId , _exportToWKT , primeMeridian , if , exportDatumOrDatumEnsembleToWkt , oldAxisOutputRule , empty , setOutputAxis , identifiers , WKTFormatter , BASEGEODCRS , nameStr , WKTConstants , startNode , io , addQuotedString , get , l_baseCRS , && , primeMeridianOrParameterUnitOmittedIfSameAsAxis , BASEGEOGCRS , use2019Keywords , > , idOnTopLevelOnly , GeographicCRS , dynamic_cast , < , ! , formatter , * , }
		- PRED   = { axisList , coordinateSystem , l_baseCRS , geodeticCRSAxisList , & , }
		- SUCC   = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }

3297 :	"formatter"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3297 :	"startNode"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3298 :	"formatter"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3298 :	"use2019Keywords"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3298 :	"&&"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3299 :	"dynamic_cast"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3299 :	"<"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3299 :	"GeographicCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3299 :	"*"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3299 :	">"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3299 :	"l_baseCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3299 :	"get"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3300 :	"io"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3300 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3300 :	"BASEGEOGCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3301 :	"io"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3301 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3301 :	"BASEGEODCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3302 :	"formatter"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3302 :	"use2019Keywords"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3302 :	"&&"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3302 :	"!"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3302 :	"l_baseCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3302 :	"identifiers"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3302 :	"empty"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3303 :	"formatter"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

3303 :	"addQuotedString"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

3303 :	"l_baseCRS"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

3303 :	"nameStr"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

3304 :	"l_baseCRS"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }

3304 :	"exportDatumOrDatumEnsembleToWkt"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }

3304 :	"formatter"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }

3309 :	"if"
		- NEIGH  = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }

3309 :	"formatter"
		- NEIGH  = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }

3309 :	"primeMeridianOrParameterUnitOmittedIfSameAsAxis"
		- NEIGH  = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }

3310 :	"geodeticCRSAxisList"
		- NEIGH  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PARENT = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3310 :	"unit"
		- NEIGH  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PARENT = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3310 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PARENT = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3310 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PARENT = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3312 :	"l_baseCRS"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }
		- SUCC   = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }

3312 :	"primeMeridian"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }
		- SUCC   = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }

3312 :	"_exportToWKT"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }
		- SUCC   = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }

3312 :	"formatter"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }
		- SUCC   = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }

3313 :	"if"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3313 :	"formatter"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3313 :	"use2019Keywords"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3313 :	"&&"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3314 :	"!"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3314 :	"formatter"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3314 :	"idOnTopLevelOnly"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3314 :	"&&"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3314 :	"formatter"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3314 :	"topLevelHasId"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3315 :	"l_baseCRS"
		- NEIGH  = { formatter , formatID , l_baseCRS , }
		- PARENT = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3315 :	"formatID"
		- NEIGH  = { formatter , formatID , l_baseCRS , }
		- PARENT = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3315 :	"formatter"
		- NEIGH  = { formatter , formatID , l_baseCRS , }
		- PARENT = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3317 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- SUCC   = { }

3317 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- SUCC   = { }

3319 :	"oldAxisOutputRule"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }

3319 :	"formatter"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }

3319 :	"outputAxis"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }

3320 :	"formatter"
		- NEIGH  = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_baseCRS , }

3320 :	"setOutputAxis"
		- NEIGH  = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_baseCRS , }

3320 :	"io"
		- NEIGH  = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_baseCRS , }

3320 :	"WKTFormatter"
		- NEIGH  = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_baseCRS , }

3320 :	"OutputAxisRule"
		- NEIGH  = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_baseCRS , }

3320 :	"NO"
		- NEIGH  = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_baseCRS , }

3321 :	"l_baseCRS"
		- NEIGH  = { formatter , _exportToWKT , l_baseCRS , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

3321 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , l_baseCRS , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

3321 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , l_baseCRS , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

3322 :	"formatter"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , l_baseCRS , }
		- SUCC   = { }

3322 :	"setOutputAxis"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , l_baseCRS , }
		- SUCC   = { }

3322 :	"oldAxisOutputRule"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , l_baseCRS , }
		- SUCC   = { }

3325 :	"formatter"
		- NEIGH  = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , if , }
		- SUCC   = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }

3325 :	"pushAxisLinearUnit"
		- NEIGH  = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , if , }
		- SUCC   = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }

3326 :	"common"
		- NEIGH  = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , if , }
		- SUCC   = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }

3326 :	"UnitOfMeasure"
		- NEIGH  = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , if , }
		- SUCC   = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }

3326 :	"create"
		- NEIGH  = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , if , }
		- SUCC   = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }

3326 :	"axisList"
		- NEIGH  = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , if , }
		- SUCC   = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }

3326 :	"unit"
		- NEIGH  = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , if , }
		- SUCC   = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }

3328 :	"formatter"
		- NEIGH  = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

3328 :	"pushAxisAngularUnit"
		- NEIGH  = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

3329 :	"common"
		- NEIGH  = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

3329 :	"UnitOfMeasure"
		- NEIGH  = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

3329 :	"create"
		- NEIGH  = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

3329 :	"geodeticCRSAxisList"
		- NEIGH  = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

3329 :	"unit"
		- NEIGH  = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

3331 :	"derivingConversionRef"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }
		- SUCC   = { popAxisAngularUnit , formatter , }

3331 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }
		- SUCC   = { popAxisAngularUnit , formatter , }

3331 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }
		- SUCC   = { popAxisAngularUnit , formatter , }

3333 :	"formatter"
		- NEIGH  = { popAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , }
		- SUCC   = { popAxisLinearUnit , formatter , }

3333 :	"popAxisAngularUnit"
		- NEIGH  = { popAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , }
		- SUCC   = { popAxisLinearUnit , formatter , }

3335 :	"formatter"
		- NEIGH  = { popAxisLinearUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { popAxisAngularUnit , formatter , }
		- SUCC   = { isWKT2 , ! , if , }

3335 :	"popAxisLinearUnit"
		- NEIGH  = { popAxisLinearUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { popAxisAngularUnit , formatter , }
		- SUCC   = { isWKT2 , ! , if , }

3337 :	"if"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , axisList , }
		- PRED   = { popAxisLinearUnit , formatter , }
		- SUCC   = { exportAxis , }

3337 :	"!"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , axisList , }
		- PRED   = { popAxisLinearUnit , formatter , }
		- SUCC   = { exportAxis , }

3337 :	"isWKT2"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , axisList , }
		- PRED   = { popAxisLinearUnit , formatter , }
		- SUCC   = { exportAxis , }

3338 :	"axisList"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3338 :	"unit"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3338 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3338 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3341 :	"exportAxis"
		- NEIGH  = { exportAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , && , isWKT2 , ! , if , }

3343 :	"if"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { exportAxis , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3343 :	"!"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { exportAxis , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3343 :	"isWKT2"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { exportAxis , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3343 :	"&&"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { exportAxis , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3343 :	"!"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { exportAxis , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3343 :	"formatter"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { exportAxis , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3343 :	"useESRIDialect"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { exportAxis , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3344 :	"&"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

3344 :	"extensionProj4"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

3344 :	"CRS"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

3344 :	"getPrivate"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

3344 :	"extensionProj4_"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

3345 :	"if"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { derivingConversionRef , endNode , addWKTExtensionNode , extensionProj4 , WKTConstants , io , EXTENSION , startNode , addQuotedString , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { }

3345 :	"!"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { derivingConversionRef , endNode , addWKTExtensionNode , extensionProj4 , WKTConstants , io , EXTENSION , startNode , addQuotedString , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { }

3345 :	"extensionProj4"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { derivingConversionRef , endNode , addWKTExtensionNode , extensionProj4 , WKTConstants , io , EXTENSION , startNode , addQuotedString , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { }

3345 :	"empty"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { derivingConversionRef , endNode , addWKTExtensionNode , extensionProj4 , WKTConstants , io , EXTENSION , startNode , addQuotedString , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { }

3346 :	"formatter"
		- NEIGH  = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

3346 :	"startNode"
		- NEIGH  = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

3346 :	"io"
		- NEIGH  = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

3346 :	"WKTConstants"
		- NEIGH  = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

3346 :	"EXTENSION"
		- NEIGH  = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

3347 :	"formatter"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- SUCC   = { extensionProj4 , addQuotedString , formatter , }

3347 :	"addQuotedString"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- SUCC   = { extensionProj4 , addQuotedString , formatter , }

3348 :	"formatter"
		- NEIGH  = { extensionProj4 , addQuotedString , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3348 :	"addQuotedString"
		- NEIGH  = { extensionProj4 , addQuotedString , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3348 :	"extensionProj4"
		- NEIGH  = { extensionProj4 , addQuotedString , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3349 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { extensionProj4 , addQuotedString , formatter , }
		- SUCC   = { }

3349 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { extensionProj4 , addQuotedString , formatter , }
		- SUCC   = { }

3351 :	"derivingConversionRef"
		- NEIGH  = { formatter , addWKTExtensionNode , derivingConversionRef , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3351 :	"addWKTExtensionNode"
		- NEIGH  = { formatter , addWKTExtensionNode , derivingConversionRef , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3351 :	"formatter"
		- NEIGH  = { formatter , addWKTExtensionNode , derivingConversionRef , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3355 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { endNode , formatter , }

3355 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { endNode , formatter , }

3355 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { endNode , formatter , }

3356 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { return , }

3356 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { return , }

3357 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { }

3364 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3364 :	"_exportToJSON"
		- NEIGH  = { _exportToJSON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3365 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3365 :	"JSONFormatter"
		- NEIGH  = { JSONFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3365 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3365 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3367 :	"&"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

3367 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

3367 :	"formatter"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

3367 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

3368 :	"objectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

3369 :	"formatter"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

3369 :	"MakeObjectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

3369 :	"!"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

3369 :	"identifiers"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

3369 :	"empty"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

3371 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

3371 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

3372 :	"l_name"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

3372 :	"nameStr"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

3373 :	"if"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

3373 :	"l_name"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

3373 :	"empty"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

3374 :	"writer"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3374 :	"Add"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3376 :	"writer"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3376 :	"Add"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3376 :	"l_name"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3379 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { setAllowIDInImmediateChild , formatter , }

3379 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { setAllowIDInImmediateChild , formatter , }

3380 :	"formatter"
		- NEIGH  = { setAllowIDInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

3380 :	"setAllowIDInImmediateChild"
		- NEIGH  = { setAllowIDInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

3381 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setAllowIDInImmediateChild , formatter , }
		- SUCC   = { formatter , _exportToJSON , baseCRS , }

3381 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setAllowIDInImmediateChild , formatter , }
		- SUCC   = { formatter , _exportToJSON , baseCRS , }

3382 :	"baseCRS"
		- NEIGH  = { formatter , _exportToJSON , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

3382 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

3382 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

3384 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , baseCRS , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

3384 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , baseCRS , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

3385 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , derivingConversionRef , }

3385 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , derivingConversionRef , }

3386 :	"derivingConversionRef"
		- NEIGH  = { formatter , _exportToJSON , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

3386 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

3386 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

3388 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , derivingConversionRef , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

3388 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , derivingConversionRef , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

3389 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

3389 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

3390 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

3390 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

3390 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

3392 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

3392 :	"baseExportToJSON"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

3392 :	"formatter"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

3398 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3398 :	"_exportToPROJString"
		- NEIGH  = { _exportToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3399 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3399 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3399 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3399 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3401 :	"&"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

3401 :	"extensionProj4"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

3401 :	"CRS"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

3401 :	"getPrivate"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

3401 :	"extensionProj4_"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

3402 :	"if"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { formatter , _exportToPROJString , derivingConversionRef , }

3402 :	"!"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { formatter , _exportToPROJString , derivingConversionRef , }

3402 :	"extensionProj4"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { formatter , _exportToPROJString , derivingConversionRef , }

3402 :	"empty"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { formatter , _exportToPROJString , derivingConversionRef , }

3403 :	"formatter"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

3403 :	"ingestPROJString"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

3404 :	"replaceAll"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

3404 :	"extensionProj4"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

3405 :	"formatter"
		- NEIGH  = { addNoDefs , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- SUCC   = { return , }

3405 :	"addNoDefs"
		- NEIGH  = { addNoDefs , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- SUCC   = { return , }

3406 :	"return"
		- NEIGH  = { return , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { addNoDefs , formatter , }
		- SUCC   = { }

3409 :	"derivingConversionRef"
		- NEIGH  = { formatter , _exportToPROJString , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { }

3409 :	"_exportToPROJString"
		- NEIGH  = { formatter , _exportToPROJString , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { }

3409 :	"formatter"
		- NEIGH  = { formatter , _exportToPROJString , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { }

3428 :	"ProjectedCRSNNPtr"
		- NEIGH  = { ProjectedCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3429 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3429 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3429 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3429 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3429 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3429 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3430 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3430 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3430 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3431 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3431 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3431 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3431 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3432 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3432 :	"CartesianCSNNPtr"
		- NEIGH  = { CartesianCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3432 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3432 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3433 :	"crs"
		- NEIGH  = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3433 :	"ProjectedCRS"
		- NEIGH  = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3433 :	"nn_make_shared"
		- NEIGH  = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3433 :	"<"
		- NEIGH  = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3433 :	"ProjectedCRS"
		- NEIGH  = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3433 :	">"
		- NEIGH  = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3434 :	"baseCRSIn"
		- NEIGH  = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3434 :	"derivingConversionIn"
		- NEIGH  = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3434 :	"csIn"
		- NEIGH  = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3435 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

3435 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

3435 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

3436 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

3436 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

3436 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

3437 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }

3437 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }

3438 :	"properties"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

3438 :	"getStringValue"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

3439 :	"crs"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

3439 :	"CRS"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

3439 :	"getPrivate"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

3439 :	"extensionProj4_"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

3440 :	"crs"
		- NEIGH  = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { crs , return , }

3440 :	"CRS"
		- NEIGH  = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { crs , return , }

3440 :	"getPrivate"
		- NEIGH  = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { crs , return , }

3440 :	"setImplicitCS"
		- NEIGH  = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { crs , return , }

3440 :	"properties"
		- NEIGH  = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { crs , return , }

3441 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- SUCC   = { }

3441 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- SUCC   = { }

3446 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3446 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3447 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3447 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3447 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3447 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3447 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3447 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3447 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3447 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3448 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3448 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3448 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3448 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3449 :	"otherProjCRS"
		- NEIGH  = { other , > , dynamic_cast , * , otherProjCRS , ProjectedCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , _isEquivalentTo , && , DerivedCRS , != , otherProjCRS , criterion , return , }

3449 :	"dynamic_cast"
		- NEIGH  = { other , > , dynamic_cast , * , otherProjCRS , ProjectedCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , _isEquivalentTo , && , DerivedCRS , != , otherProjCRS , criterion , return , }

3449 :	"<"
		- NEIGH  = { other , > , dynamic_cast , * , otherProjCRS , ProjectedCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , _isEquivalentTo , && , DerivedCRS , != , otherProjCRS , criterion , return , }

3449 :	"ProjectedCRS"
		- NEIGH  = { other , > , dynamic_cast , * , otherProjCRS , ProjectedCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , _isEquivalentTo , && , DerivedCRS , != , otherProjCRS , criterion , return , }

3449 :	"*"
		- NEIGH  = { other , > , dynamic_cast , * , otherProjCRS , ProjectedCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , _isEquivalentTo , && , DerivedCRS , != , otherProjCRS , criterion , return , }

3449 :	">"
		- NEIGH  = { other , > , dynamic_cast , * , otherProjCRS , ProjectedCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , _isEquivalentTo , && , DerivedCRS , != , otherProjCRS , criterion , return , }

3449 :	"other"
		- NEIGH  = { other , > , dynamic_cast , * , otherProjCRS , ProjectedCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , _isEquivalentTo , && , DerivedCRS , != , otherProjCRS , criterion , return , }

3450 :	"return"
		- NEIGH  = { dbContext , other , _isEquivalentTo , && , DerivedCRS , != , otherProjCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , otherProjCRS , ProjectedCRS , < , }
		- SUCC   = { }

3450 :	"otherProjCRS"
		- NEIGH  = { dbContext , other , _isEquivalentTo , && , DerivedCRS , != , otherProjCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , otherProjCRS , ProjectedCRS , < , }
		- SUCC   = { }

3450 :	"!="
		- NEIGH  = { dbContext , other , _isEquivalentTo , && , DerivedCRS , != , otherProjCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , otherProjCRS , ProjectedCRS , < , }
		- SUCC   = { }

3450 :	"&&"
		- NEIGH  = { dbContext , other , _isEquivalentTo , && , DerivedCRS , != , otherProjCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , otherProjCRS , ProjectedCRS , < , }
		- SUCC   = { }

3451 :	"DerivedCRS"
		- NEIGH  = { dbContext , other , _isEquivalentTo , && , DerivedCRS , != , otherProjCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , otherProjCRS , ProjectedCRS , < , }
		- SUCC   = { }

3451 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , other , _isEquivalentTo , && , DerivedCRS , != , otherProjCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , otherProjCRS , ProjectedCRS , < , }
		- SUCC   = { }

3451 :	"other"
		- NEIGH  = { dbContext , other , _isEquivalentTo , && , DerivedCRS , != , otherProjCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , otherProjCRS , ProjectedCRS , < , }
		- SUCC   = { }

3451 :	"criterion"
		- NEIGH  = { dbContext , other , _isEquivalentTo , && , DerivedCRS , != , otherProjCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , otherProjCRS , ProjectedCRS , < , }
		- SUCC   = { }

3451 :	"dbContext"
		- NEIGH  = { dbContext , other , _isEquivalentTo , && , DerivedCRS , != , otherProjCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , otherProjCRS , ProjectedCRS , < , }
		- SUCC   = { }

3457 :	"ProjectedCRSNNPtr"
		- NEIGH  = { ProjectedCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3458 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3458 :	"alterParametersLinearUnit"
		- NEIGH  = { alterParametersLinearUnit , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3458 :	"common"
		- NEIGH  = { common , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3458 :	"UnitOfMeasure"
		- NEIGH  = { UnitOfMeasure , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3458 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3458 :	"unit"
		- NEIGH  = { unit , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3459 :	"convertToNewUnit"
		- NEIGH  = { convertToNewUnit , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3460 :	"return"
		- NEIGH  = { convertToNewUnit , unit , alterParametersLinearUnit , derivingConversion , this , create , baseCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3460 :	"create"
		- NEIGH  = { convertToNewUnit , unit , alterParametersLinearUnit , derivingConversion , this , create , baseCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3461 :	"createPropertyMap"
		- NEIGH  = { convertToNewUnit , unit , alterParametersLinearUnit , derivingConversion , this , create , baseCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3461 :	"this"
		- NEIGH  = { convertToNewUnit , unit , alterParametersLinearUnit , derivingConversion , this , create , baseCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3461 :	"baseCRS"
		- NEIGH  = { convertToNewUnit , unit , alterParametersLinearUnit , derivingConversion , this , create , baseCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3462 :	"derivingConversion"
		- NEIGH  = { convertToNewUnit , unit , alterParametersLinearUnit , derivingConversion , this , create , baseCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3462 :	"alterParametersLinearUnit"
		- NEIGH  = { convertToNewUnit , unit , alterParametersLinearUnit , derivingConversion , this , create , baseCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3462 :	"unit"
		- NEIGH  = { convertToNewUnit , unit , alterParametersLinearUnit , derivingConversion , this , create , baseCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3462 :	"convertToNewUnit"
		- NEIGH  = { convertToNewUnit , unit , alterParametersLinearUnit , derivingConversion , this , create , baseCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3463 :	"coordinateSystem"
		- NEIGH  = { convertToNewUnit , unit , alterParametersLinearUnit , derivingConversion , this , create , baseCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3470 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3470 :	"addUnitConvertAndAxisSwap"
		- NEIGH  = { addUnitConvertAndAxisSwap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3470 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3470 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3470 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3470 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3471 :	"axisSpecFound"
		- NEIGH  = { axisSpecFound , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3472 :	"&"
		- NEIGH  = { d , coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , unit , & , }

3472 :	"axisList"
		- NEIGH  = { d , coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , unit , & , }

3472 :	"d"
		- NEIGH  = { d , coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , unit , & , }

3472 :	"coordinateSystem"
		- NEIGH  = { d , coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , unit , & , }

3472 :	"axisList"
		- NEIGH  = { d , coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , unit , & , }

3473 :	"&"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { d , coordinateSystem , axisList , & , }
		- SUCC   = { & , unit , axisList , size , == , zUnit , * , }

3473 :	"unit"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { d , coordinateSystem , axisList , & , }
		- SUCC   = { & , unit , axisList , size , == , zUnit , * , }

3473 :	"axisList"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { d , coordinateSystem , axisList , & , }
		- SUCC   = { & , unit , axisList , size , == , zUnit , * , }

3473 :	"unit"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { d , coordinateSystem , axisList , & , }
		- SUCC   = { & , unit , axisList , size , == , zUnit , * , }

3474 :	"*"
		- NEIGH  = { & , unit , axisList , size , == , zUnit , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }

3474 :	"zUnit"
		- NEIGH  = { & , unit , axisList , size , == , zUnit , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }

3474 :	"axisList"
		- NEIGH  = { & , unit , axisList , size , == , zUnit , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }

3474 :	"size"
		- NEIGH  = { & , unit , axisList , size , == , zUnit , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }

3474 :	"=="
		- NEIGH  = { & , unit , axisList , size , == , zUnit , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }

3474 :	"&"
		- NEIGH  = { & , unit , axisList , size , == , zUnit , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }

3474 :	"axisList"
		- NEIGH  = { & , unit , axisList , size , == , zUnit , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }

3474 :	"unit"
		- NEIGH  = { & , unit , axisList , size , == , zUnit , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }

3475 :	"if"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

3475 :	"!"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

3475 :	"unit"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

3475 :	"_isEquivalentTo"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

3475 :	"common"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

3475 :	"UnitOfMeasure"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

3475 :	"METRE"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

3476 :	"util"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

3476 :	"IComparable"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

3476 :	"Criterion"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

3476 :	"EQUIVALENT"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

3476 :	"||"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

3477 :	"zUnit"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

3477 :	"&&"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

3478 :	"!"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

3478 :	"zUnit"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

3478 :	"_isEquivalentTo"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

3478 :	"common"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

3478 :	"UnitOfMeasure"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

3478 :	"METRE"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

3479 :	"util"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

3479 :	"IComparable"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

3479 :	"Criterion"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

3479 :	"EQUIVALENT"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

3480 :	"projUnit"
		- NEIGH  = { exportToPROJString , unit , projUnit , }
		- PARENT = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { conversionToSI , unit , toSI , }

3480 :	"unit"
		- NEIGH  = { exportToPROJString , unit , projUnit , }
		- PARENT = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { conversionToSI , unit , toSI , }

3480 :	"exportToPROJString"
		- NEIGH  = { exportToPROJString , unit , projUnit , }
		- PARENT = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { conversionToSI , unit , toSI , }

3481 :	"toSI"
		- NEIGH  = { conversionToSI , unit , toSI , }
		- PARENT = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- CHILD  = { }
		- PRED   = { exportToPROJString , unit , projUnit , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

3481 :	"unit"
		- NEIGH  = { conversionToSI , unit , toSI , }
		- PARENT = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- CHILD  = { }
		- PRED   = { exportToPROJString , unit , projUnit , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

3481 :	"conversionToSI"
		- NEIGH  = { conversionToSI , unit , toSI , }
		- PARENT = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- CHILD  = { }
		- PRED   = { exportToPROJString , unit , projUnit , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

3482 :	"if"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- CHILD  = { empty , projUnit , addStep , zUnit , addParam , if , formatter , }
		- PRED   = { conversionToSI , unit , toSI , }
		- SUCC   = { }

3482 :	"!"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- CHILD  = { empty , projUnit , addStep , zUnit , addParam , if , formatter , }
		- PRED   = { conversionToSI , unit , toSI , }
		- SUCC   = { }

3482 :	"formatter"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- CHILD  = { empty , projUnit , addStep , zUnit , addParam , if , formatter , }
		- PRED   = { conversionToSI , unit , toSI , }
		- SUCC   = { }

3482 :	"getCRSExport"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- CHILD  = { empty , projUnit , addStep , zUnit , addParam , if , formatter , }
		- PRED   = { conversionToSI , unit , toSI , }
		- SUCC   = { }

3483 :	"formatter"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addParam , formatter , }

3483 :	"addStep"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addParam , formatter , }

3484 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { zUnit , if , }

3484 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { zUnit , if , }

3485 :	"if"
		- NEIGH  = { zUnit , if , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { addParam , formatter , }
		- SUCC   = { empty , projUnit , if , }

3485 :	"zUnit"
		- NEIGH  = { zUnit , if , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { addParam , formatter , }
		- SUCC   = { empty , projUnit , if , }

3486 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { zUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3486 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { zUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3488 :	"if"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { projUnit , toSI , addParam , formatter , }
		- PRED   = { zUnit , if , }
		- SUCC   = { zUnit , if , }

3488 :	"projUnit"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { projUnit , toSI , addParam , formatter , }
		- PRED   = { zUnit , if , }
		- SUCC   = { zUnit , if , }

3488 :	"empty"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { projUnit , toSI , addParam , formatter , }
		- PRED   = { zUnit , if , }
		- SUCC   = { zUnit , if , }

3489 :	"formatter"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3489 :	"addParam"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3489 :	"toSI"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3491 :	"formatter"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3491 :	"addParam"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3491 :	"projUnit"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3493 :	"if"
		- NEIGH  = { zUnit , if , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { empty , conversionToSI , zToSI , zUnit , if , exportToPROJString , projZUnit , }
		- PRED   = { empty , projUnit , if , }
		- SUCC   = { }

3493 :	"zUnit"
		- NEIGH  = { zUnit , if , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { empty , conversionToSI , zToSI , zUnit , if , exportToPROJString , projZUnit , }
		- PRED   = { empty , projUnit , if , }
		- SUCC   = { }

3494 :	"projZUnit"
		- NEIGH  = { zUnit , exportToPROJString , projZUnit , }
		- PARENT = { zUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { conversionToSI , zUnit , zToSI , }

3494 :	"zUnit"
		- NEIGH  = { zUnit , exportToPROJString , projZUnit , }
		- PARENT = { zUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { conversionToSI , zUnit , zToSI , }

3494 :	"exportToPROJString"
		- NEIGH  = { zUnit , exportToPROJString , projZUnit , }
		- PARENT = { zUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { conversionToSI , zUnit , zToSI , }

3495 :	"zToSI"
		- NEIGH  = { conversionToSI , zUnit , zToSI , }
		- PARENT = { zUnit , if , }
		- CHILD  = { }
		- PRED   = { zUnit , exportToPROJString , projZUnit , }
		- SUCC   = { empty , projZUnit , if , }

3495 :	"zUnit"
		- NEIGH  = { conversionToSI , zUnit , zToSI , }
		- PARENT = { zUnit , if , }
		- CHILD  = { }
		- PRED   = { zUnit , exportToPROJString , projZUnit , }
		- SUCC   = { empty , projZUnit , if , }

3495 :	"conversionToSI"
		- NEIGH  = { conversionToSI , zUnit , zToSI , }
		- PARENT = { zUnit , if , }
		- CHILD  = { }
		- PRED   = { zUnit , exportToPROJString , projZUnit , }
		- SUCC   = { empty , projZUnit , if , }

3496 :	"if"
		- NEIGH  = { empty , projZUnit , if , }
		- PARENT = { zUnit , if , }
		- CHILD  = { projZUnit , addParam , zToSI , formatter , }
		- PRED   = { conversionToSI , zUnit , zToSI , }
		- SUCC   = { }

3496 :	"projZUnit"
		- NEIGH  = { empty , projZUnit , if , }
		- PARENT = { zUnit , if , }
		- CHILD  = { projZUnit , addParam , zToSI , formatter , }
		- PRED   = { conversionToSI , zUnit , zToSI , }
		- SUCC   = { }

3496 :	"empty"
		- NEIGH  = { empty , projZUnit , if , }
		- PARENT = { zUnit , if , }
		- CHILD  = { projZUnit , addParam , zToSI , formatter , }
		- PRED   = { conversionToSI , zUnit , zToSI , }
		- SUCC   = { }

3497 :	"formatter"
		- NEIGH  = { addParam , zToSI , formatter , }
		- PARENT = { empty , projZUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3497 :	"addParam"
		- NEIGH  = { addParam , zToSI , formatter , }
		- PARENT = { empty , projZUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3497 :	"zToSI"
		- NEIGH  = { addParam , zToSI , formatter , }
		- PARENT = { empty , projZUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3499 :	"formatter"
		- NEIGH  = { projZUnit , addParam , formatter , }
		- PARENT = { empty , projZUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3499 :	"addParam"
		- NEIGH  = { projZUnit , addParam , formatter , }
		- PARENT = { empty , projZUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3499 :	"projZUnit"
		- NEIGH  = { projZUnit , addParam , formatter , }
		- PARENT = { empty , projZUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3503 :	"if"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { projUnit , toSI , addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

3503 :	"projUnit"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { projUnit , toSI , addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

3503 :	"empty"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { projUnit , toSI , addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

3504 :	"formatter"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3504 :	"addParam"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3504 :	"toSI"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3506 :	"formatter"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3506 :	"addParam"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3506 :	"projUnit"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3509 :	"if"
		- NEIGH  = { getLegacyCRSToCRSContext , if , ! , formatter , && , getCRSExport , }
		- PARENT = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

3509 :	"formatter"
		- NEIGH  = { getLegacyCRSToCRSContext , if , ! , formatter , && , getCRSExport , }
		- PARENT = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

3509 :	"getCRSExport"
		- NEIGH  = { getLegacyCRSToCRSContext , if , ! , formatter , && , getCRSExport , }
		- PARENT = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

3509 :	"&&"
		- NEIGH  = { getLegacyCRSToCRSContext , if , ! , formatter , && , getCRSExport , }
		- PARENT = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

3510 :	"!"
		- NEIGH  = { getLegacyCRSToCRSContext , if , ! , formatter , && , getCRSExport , }
		- PARENT = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

3510 :	"formatter"
		- NEIGH  = { getLegacyCRSToCRSContext , if , ! , formatter , && , getCRSExport , }
		- PARENT = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

3510 :	"getLegacyCRSToCRSContext"
		- NEIGH  = { getLegacyCRSToCRSContext , if , ! , formatter , && , getCRSExport , }
		- PARENT = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

3511 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { getLegacyCRSToCRSContext , if , ! , formatter , && , getCRSExport , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3511 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { getLegacyCRSToCRSContext , if , ! , formatter , && , getCRSExport , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3514 :	"if"
		- NEIGH  = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- PARENT = { }
		- CHILD  = { != , && , EAST , AxisDirection , axisList , & , dir1 , direction , ! , if , dir0 , NORTH , cs , == , }
		- PRED   = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- SUCC   = { }

3514 :	"!"
		- NEIGH  = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- PARENT = { }
		- CHILD  = { != , && , EAST , AxisDirection , axisList , & , dir1 , direction , ! , if , dir0 , NORTH , cs , == , }
		- PRED   = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- SUCC   = { }

3514 :	"axisSpecFound"
		- NEIGH  = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- PARENT = { }
		- CHILD  = { != , && , EAST , AxisDirection , axisList , & , dir1 , direction , ! , if , dir0 , NORTH , cs , == , }
		- PRED   = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- SUCC   = { }

3514 :	"&&"
		- NEIGH  = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- PARENT = { }
		- CHILD  = { != , && , EAST , AxisDirection , axisList , & , dir1 , direction , ! , if , dir0 , NORTH , cs , == , }
		- PRED   = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- SUCC   = { }

3514 :	"!"
		- NEIGH  = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- PARENT = { }
		- CHILD  = { != , && , EAST , AxisDirection , axisList , & , dir1 , direction , ! , if , dir0 , NORTH , cs , == , }
		- PRED   = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- SUCC   = { }

3514 :	"formatter"
		- NEIGH  = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- PARENT = { }
		- CHILD  = { != , && , EAST , AxisDirection , axisList , & , dir1 , direction , ! , if , dir0 , NORTH , cs , == , }
		- PRED   = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- SUCC   = { }

3514 :	"getCRSExport"
		- NEIGH  = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- PARENT = { }
		- CHILD  = { != , && , EAST , AxisDirection , axisList , & , dir1 , direction , ! , if , dir0 , NORTH , cs , == , }
		- PRED   = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- SUCC   = { }

3515 :	"&"
		- NEIGH  = { axisList , dir0 , direction , & , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , dir1 , direction , & , }

3515 :	"dir0"
		- NEIGH  = { axisList , dir0 , direction , & , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , dir1 , direction , & , }

3515 :	"axisList"
		- NEIGH  = { axisList , dir0 , direction , & , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , dir1 , direction , & , }

3515 :	"direction"
		- NEIGH  = { axisList , dir0 , direction , & , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , dir1 , direction , & , }

3516 :	"&"
		- NEIGH  = { axisList , dir1 , direction , & , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { }
		- PRED   = { axisList , dir0 , direction , & , }
		- SUCC   = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }

3516 :	"dir1"
		- NEIGH  = { axisList , dir1 , direction , & , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { }
		- PRED   = { axisList , dir0 , direction , & , }
		- SUCC   = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }

3516 :	"axisList"
		- NEIGH  = { axisList , dir1 , direction , & , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { }
		- PRED   = { axisList , dir0 , direction , & , }
		- SUCC   = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }

3516 :	"direction"
		- NEIGH  = { axisList , dir1 , direction , & , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { }
		- PRED   = { axisList , dir0 , direction , & , }
		- SUCC   = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }

3517 :	"if"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3517 :	"!"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3517 :	"&"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3517 :	"dir0"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3517 :	"=="
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3517 :	"&"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3517 :	"cs"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3517 :	"AxisDirection"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3517 :	"EAST"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3517 :	"&&"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3518 :	"&"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3518 :	"dir1"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3518 :	"=="
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3518 :	"&"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3518 :	"cs"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3518 :	"AxisDirection"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3518 :	"NORTH"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3518 :	"&&"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3521 :	"dir0"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3521 :	"!="
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3521 :	"dir1"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3523 :	"*"
		- NEIGH  = { order , * , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ++ , < , i , for , }

3523 :	"order"
		- NEIGH  = { order , * , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ++ , < , i , for , }

3524 :	"for"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { order , * , }
		- SUCC   = { && , order , if , }

3524 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { order , * , }
		- SUCC   = { && , order , if , }

3524 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { order , * , }
		- SUCC   = { && , order , if , }

3524 :	"<"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { order , * , }
		- SUCC   = { && , order , if , }

3524 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { order , * , }
		- SUCC   = { && , order , if , }

3524 :	"++"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { order , * , }
		- SUCC   = { && , order , if , }

3525 :	"&"
		- NEIGH  = { axisList , dir , direction , i , & , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WEST , AxisDirection , cs , == , dir , & , if , }

3525 :	"dir"
		- NEIGH  = { axisList , dir , direction , i , & , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WEST , AxisDirection , cs , == , dir , & , if , }

3525 :	"axisList"
		- NEIGH  = { axisList , dir , direction , i , & , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WEST , AxisDirection , cs , == , dir , & , if , }

3525 :	"i"
		- NEIGH  = { axisList , dir , direction , i , & , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WEST , AxisDirection , cs , == , dir , & , if , }

3525 :	"direction"
		- NEIGH  = { axisList , dir , direction , i , & , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WEST , AxisDirection , cs , == , dir , & , if , }

3526 :	"if"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

3526 :	"&"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

3526 :	"dir"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

3526 :	"=="
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

3526 :	"&"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

3526 :	"cs"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

3526 :	"AxisDirection"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

3526 :	"WEST"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

3527 :	"order"
		- NEIGH  = { i , order , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3527 :	"i"
		- NEIGH  = { i , order , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3528 :	"if"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

3528 :	"&"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

3528 :	"dir"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

3528 :	"=="
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

3528 :	"&"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

3528 :	"cs"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

3528 :	"AxisDirection"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

3528 :	"EAST"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

3529 :	"order"
		- NEIGH  = { i , order , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3529 :	"i"
		- NEIGH  = { i , order , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3530 :	"if"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

3530 :	"&"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

3530 :	"dir"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

3530 :	"=="
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

3530 :	"&"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

3530 :	"cs"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

3530 :	"AxisDirection"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

3530 :	"SOUTH"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

3531 :	"order"
		- NEIGH  = { i , order , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3531 :	"i"
		- NEIGH  = { i , order , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3532 :	"if"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { i , order , }
		- PRED   = { }
		- SUCC   = { }

3532 :	"&"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { i , order , }
		- PRED   = { }
		- SUCC   = { }

3532 :	"dir"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { i , order , }
		- PRED   = { }
		- SUCC   = { }

3532 :	"=="
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { i , order , }
		- PRED   = { }
		- SUCC   = { }

3532 :	"&"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { i , order , }
		- PRED   = { }
		- SUCC   = { }

3532 :	"cs"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { i , order , }
		- PRED   = { }
		- SUCC   = { }

3532 :	"AxisDirection"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { i , order , }
		- PRED   = { }
		- SUCC   = { }

3532 :	"NORTH"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { i , order , }
		- PRED   = { }
		- SUCC   = { }

3533 :	"order"
		- NEIGH  = { i , order , }
		- PARENT = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3533 :	"i"
		- NEIGH  = { i , order , }
		- PARENT = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3536 :	"if"
		- NEIGH  = { && , order , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

3536 :	"order"
		- NEIGH  = { && , order , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

3536 :	"&&"
		- NEIGH  = { && , order , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

3536 :	"order"
		- NEIGH  = { && , order , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

3537 :	"formatter"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { && , order , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { orderStr , }

3537 :	"addStep"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { && , order , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { orderStr , }

3538 :	"orderStr"
		- NEIGH  = { orderStr , }
		- PARENT = { && , order , if , }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { order , orderStr , sprintf , }

3539 :	"sprintf"
		- NEIGH  = { order , orderStr , sprintf , }
		- PARENT = { && , order , if , }
		- CHILD  = { }
		- PRED   = { orderStr , }
		- SUCC   = { orderStr , addParam , formatter , }

3539 :	"orderStr"
		- NEIGH  = { order , orderStr , sprintf , }
		- PARENT = { && , order , if , }
		- CHILD  = { }
		- PRED   = { orderStr , }
		- SUCC   = { orderStr , addParam , formatter , }

3539 :	"order"
		- NEIGH  = { order , orderStr , sprintf , }
		- PARENT = { && , order , if , }
		- CHILD  = { }
		- PRED   = { orderStr , }
		- SUCC   = { orderStr , addParam , formatter , }

3539 :	"order"
		- NEIGH  = { order , orderStr , sprintf , }
		- PARENT = { && , order , if , }
		- CHILD  = { }
		- PRED   = { orderStr , }
		- SUCC   = { orderStr , addParam , formatter , }

3540 :	"formatter"
		- NEIGH  = { orderStr , addParam , formatter , }
		- PARENT = { && , order , if , }
		- CHILD  = { }
		- PRED   = { order , orderStr , sprintf , }
		- SUCC   = { }

3540 :	"addParam"
		- NEIGH  = { orderStr , addParam , formatter , }
		- PARENT = { && , order , if , }
		- CHILD  = { }
		- PRED   = { order , orderStr , sprintf , }
		- SUCC   = { }

3540 :	"orderStr"
		- NEIGH  = { orderStr , addParam , formatter , }
		- PARENT = { && , order , if , }
		- CHILD  = { }
		- PRED   = { order , orderStr , sprintf , }
		- SUCC   = { }

3543 :	"&"
		- NEIGH  = { nameStr , axisList , name0 , & , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , axisList , name1 , & , }

3543 :	"name0"
		- NEIGH  = { nameStr , axisList , name0 , & , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , axisList , name1 , & , }

3543 :	"axisList"
		- NEIGH  = { nameStr , axisList , name0 , & , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , axisList , name1 , & , }

3543 :	"nameStr"
		- NEIGH  = { nameStr , axisList , name0 , & , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , axisList , name1 , & , }

3544 :	"&"
		- NEIGH  = { nameStr , axisList , name1 , & , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , axisList , name0 , & , }
		- SUCC   = { name1 , && , name0 , ci_starts_with , northingEasting , }

3544 :	"name1"
		- NEIGH  = { nameStr , axisList , name1 , & , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , axisList , name0 , & , }
		- SUCC   = { name1 , && , name0 , ci_starts_with , northingEasting , }

3544 :	"axisList"
		- NEIGH  = { nameStr , axisList , name1 , & , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , axisList , name0 , & , }
		- SUCC   = { name1 , && , name0 , ci_starts_with , northingEasting , }

3544 :	"nameStr"
		- NEIGH  = { nameStr , axisList , name1 , & , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , axisList , name0 , & , }
		- SUCC   = { name1 , && , name0 , ci_starts_with , northingEasting , }

3545 :	"northingEasting"
		- NEIGH  = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , axisList , name1 , & , }
		- SUCC   = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }

3545 :	"ci_starts_with"
		- NEIGH  = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , axisList , name1 , & , }
		- SUCC   = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }

3545 :	"name0"
		- NEIGH  = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , axisList , name1 , & , }
		- SUCC   = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }

3545 :	"&&"
		- NEIGH  = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , axisList , name1 , & , }
		- SUCC   = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }

3546 :	"ci_starts_with"
		- NEIGH  = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , axisList , name1 , & , }
		- SUCC   = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }

3546 :	"name1"
		- NEIGH  = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , axisList , name1 , & , }
		- SUCC   = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }

3549 :	"if"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3549 :	"&"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3549 :	"dir0"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3549 :	"=="
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3549 :	"&"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3549 :	"cs"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3549 :	"AxisDirection"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3549 :	"SOUTH"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3549 :	"&&"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3550 :	"&"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3550 :	"dir1"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3550 :	"=="
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3550 :	"&"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3550 :	"cs"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3550 :	"AxisDirection"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3550 :	"SOUTH"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3550 :	"||"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3551 :	"&"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3551 :	"dir0"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3551 :	"=="
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3551 :	"&"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3551 :	"cs"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3551 :	"AxisDirection"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3551 :	"NORTH"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3551 :	"&&"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3552 :	"&"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3552 :	"dir1"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3552 :	"=="
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3552 :	"&"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3552 :	"cs"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3552 :	"AxisDirection"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3552 :	"NORTH"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3552 :	"&&"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3553 :	"northingEasting"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3554 :	"formatter"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addParam , formatter , }

3554 :	"addStep"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addParam , formatter , }

3555 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { }

3555 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { }

3598 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3598 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3598 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3598 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3598 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3598 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3598 :	"ProjectedCRSNNPtr"
		- NEIGH  = { ProjectedCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3598 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3599 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3599 :	"identify"
		- NEIGH  = { identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3599 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3599 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3599 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3599 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3600 :	"std"
		- NEIGH  = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3600 :	"pair"
		- NEIGH  = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3600 :	"<"
		- NEIGH  = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3600 :	"ProjectedCRSNNPtr"
		- NEIGH  = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3600 :	">"
		- NEIGH  = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3600 :	"Pair"
		- NEIGH  = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3601 :	"std"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- SUCC   = { nameStr , thisName , & , }

3601 :	"list"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- SUCC   = { nameStr , thisName , & , }

3601 :	"<"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- SUCC   = { nameStr , thisName , & , }

3601 :	"Pair"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- SUCC   = { nameStr , thisName , & , }

3601 :	">"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- SUCC   = { nameStr , thisName , & , }

3601 :	"res"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- SUCC   = { nameStr , thisName , & , }

3603 :	"&"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }

3603 :	"thisName"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }

3603 :	"nameStr"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }

3605 :	"std"
		- NEIGH  = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { baseCRS , l_baseCRS , & , }

3605 :	"list"
		- NEIGH  = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { baseCRS , l_baseCRS , & , }

3605 :	"<"
		- NEIGH  = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { baseCRS , l_baseCRS , & , }

3605 :	"std"
		- NEIGH  = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { baseCRS , l_baseCRS , & , }

3605 :	"pair"
		- NEIGH  = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { baseCRS , l_baseCRS , & , }

3605 :	"<"
		- NEIGH  = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { baseCRS , l_baseCRS , & , }

3605 :	"GeodeticCRSNNPtr"
		- NEIGH  = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { baseCRS , l_baseCRS , & , }

3605 :	">>"
		- NEIGH  = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { baseCRS , l_baseCRS , & , }

3605 :	"baseRes"
		- NEIGH  = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { baseCRS , l_baseCRS , & , }

3606 :	"&"
		- NEIGH  = { baseCRS , l_baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- SUCC   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }

3606 :	"l_baseCRS"
		- NEIGH  = { baseCRS , l_baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- SUCC   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }

3606 :	"baseCRS"
		- NEIGH  = { baseCRS , l_baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- SUCC   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }

3607 :	"geogCRS"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }

3607 :	"dynamic_cast"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }

3607 :	"<"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }

3607 :	"GeographicCRS"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }

3607 :	"*"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }

3607 :	">"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }

3607 :	"l_baseCRS"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }

3607 :	"get"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }

3608 :	"if"
		- NEIGH  = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , l_baseCRS , baseRes , }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { zone , }

3608 :	"geogCRS"
		- NEIGH  = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , l_baseCRS , baseRes , }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { zone , }

3608 :	"&&"
		- NEIGH  = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , l_baseCRS , baseRes , }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { zone , }

3609 :	"geogCRS"
		- NEIGH  = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , l_baseCRS , baseRes , }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { zone , }

3609 :	"coordinateSystem"
		- NEIGH  = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , l_baseCRS , baseRes , }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { zone , }

3609 :	"axisOrder"
		- NEIGH  = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , l_baseCRS , baseRes , }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { zone , }

3609 :	"=="
		- NEIGH  = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , l_baseCRS , baseRes , }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { zone , }

3610 :	"cs"
		- NEIGH  = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , l_baseCRS , baseRes , }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { zone , }

3610 :	"EllipsoidalCS"
		- NEIGH  = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , l_baseCRS , baseRes , }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { zone , }

3610 :	"AxisOrder"
		- NEIGH  = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , l_baseCRS , baseRes , }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { zone , }

3610 :	"LONG_EAST_LAT_NORTH"
		- NEIGH  = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , l_baseCRS , baseRes , }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { zone , }

3611 :	"baseRes"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3612 :	"GeographicCRS"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3612 :	"create"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3613 :	"util"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3613 :	"PropertyMap"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3613 :	"set"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3613 :	"common"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3613 :	"IdentifiedObject"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3613 :	"NAME_KEY"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3614 :	"geogCRS"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3614 :	"nameStr"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3615 :	"geogCRS"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3615 :	"datum"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3615 :	"geogCRS"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3615 :	"datumEnsemble"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3616 :	"cs"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3616 :	"EllipsoidalCS"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3616 :	"createLatitudeLongitude"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3617 :	"geogCRS"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3617 :	"coordinateSystem"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3617 :	"axisList"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3617 :	"unit"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3618 :	"identify"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3618 :	"authorityFactory"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3620 :	"baseRes"
		- NEIGH  = { authorityFactory , identify , l_baseCRS , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3620 :	"l_baseCRS"
		- NEIGH  = { authorityFactory , identify , l_baseCRS , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3620 :	"identify"
		- NEIGH  = { authorityFactory , identify , l_baseCRS , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3620 :	"authorityFactory"
		- NEIGH  = { authorityFactory , identify , l_baseCRS , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3623 :	"zone"
		- NEIGH  = { zone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- SUCC   = { north , }

3624 :	"north"
		- NEIGH  = { north , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { zone , }
		- SUCC   = { crsName , std , & , thisName , string , computeConfidence , }

3626 :	"computeConfidence"
		- NEIGH  = { crsName , std , & , thisName , string , computeConfidence , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { north , }
		- SUCC   = { l_north , l_zone , base , * , computeUTMCRSName , }

3626 :	"&"
		- NEIGH  = { crsName , std , & , thisName , string , computeConfidence , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { north , }
		- SUCC   = { l_north , l_zone , base , * , computeUTMCRSName , }

3626 :	"thisName"
		- NEIGH  = { crsName , std , & , thisName , string , computeConfidence , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { north , }
		- SUCC   = { l_north , l_zone , base , * , computeUTMCRSName , }

3626 :	"std"
		- NEIGH  = { crsName , std , & , thisName , string , computeConfidence , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { north , }
		- SUCC   = { l_north , l_zone , base , * , computeUTMCRSName , }

3626 :	"string"
		- NEIGH  = { crsName , std , & , thisName , string , computeConfidence , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { north , }
		- SUCC   = { l_north , l_zone , base , * , computeUTMCRSName , }

3626 :	"&"
		- NEIGH  = { crsName , std , & , thisName , string , computeConfidence , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { north , }
		- SUCC   = { l_north , l_zone , base , * , computeUTMCRSName , }

3626 :	"crsName"
		- NEIGH  = { crsName , std , & , thisName , string , computeConfidence , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { north , }
		- SUCC   = { l_north , l_zone , base , * , computeUTMCRSName , }

3627 :	"return"
		- NEIGH  = { c_str , isEquivalentName , Identifier , thisName , metadata , == , crsName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3627 :	"crsName"
		- NEIGH  = { c_str , isEquivalentName , Identifier , thisName , metadata , == , crsName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3627 :	"=="
		- NEIGH  = { c_str , isEquivalentName , Identifier , thisName , metadata , == , crsName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3627 :	"thisName"
		- NEIGH  = { c_str , isEquivalentName , Identifier , thisName , metadata , == , crsName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3628 :	"metadata"
		- NEIGH  = { c_str , isEquivalentName , Identifier , thisName , metadata , == , crsName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3628 :	"Identifier"
		- NEIGH  = { c_str , isEquivalentName , Identifier , thisName , metadata , == , crsName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3628 :	"isEquivalentName"
		- NEIGH  = { c_str , isEquivalentName , Identifier , thisName , metadata , == , crsName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3629 :	"crsName"
		- NEIGH  = { c_str , isEquivalentName , Identifier , thisName , metadata , == , crsName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3629 :	"c_str"
		- NEIGH  = { c_str , isEquivalentName , Identifier , thisName , metadata , == , crsName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3629 :	"thisName"
		- NEIGH  = { c_str , isEquivalentName , Identifier , thisName , metadata , == , crsName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3629 :	"c_str"
		- NEIGH  = { c_str , isEquivalentName , Identifier , thisName , metadata , == , crsName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3633 :	"computeUTMCRSName"
		- NEIGH  = { l_north , l_zone , base , * , computeUTMCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { crsName , std , & , thisName , string , computeConfidence , }
		- SUCC   = { derivingConversionRef , conv , & , }

3633 :	"*"
		- NEIGH  = { l_north , l_zone , base , * , computeUTMCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { crsName , std , & , thisName , string , computeConfidence , }
		- SUCC   = { derivingConversionRef , conv , & , }

3633 :	"base"
		- NEIGH  = { l_north , l_zone , base , * , computeUTMCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { crsName , std , & , thisName , string , computeConfidence , }
		- SUCC   = { derivingConversionRef , conv , & , }

3633 :	"l_zone"
		- NEIGH  = { l_north , l_zone , base , * , computeUTMCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { crsName , std , & , thisName , string , computeConfidence , }
		- SUCC   = { derivingConversionRef , conv , & , }

3633 :	"l_north"
		- NEIGH  = { l_north , l_zone , base , * , computeUTMCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { crsName , std , & , thisName , string , computeConfidence , }
		- SUCC   = { derivingConversionRef , conv , & , }

3634 :	"return"
		- NEIGH  = { l_north , return , toString , l_zone , base , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3634 :	"base"
		- NEIGH  = { l_north , return , toString , l_zone , base , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3634 :	"+"
		- NEIGH  = { l_north , return , toString , l_zone , base , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3634 :	"toString"
		- NEIGH  = { l_north , return , toString , l_zone , base , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3634 :	"l_zone"
		- NEIGH  = { l_north , return , toString , l_zone , base , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3634 :	"+"
		- NEIGH  = { l_north , return , toString , l_zone , base , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3634 :	"l_north"
		- NEIGH  = { l_north , return , toString , l_zone , base , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3637 :	"&"
		- NEIGH  = { derivingConversionRef , conv , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_north , l_zone , base , * , computeUTMCRSName , }
		- SUCC   = { coordinateSystem , cs , & , }

3637 :	"conv"
		- NEIGH  = { derivingConversionRef , conv , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_north , l_zone , base , * , computeUTMCRSName , }
		- SUCC   = { coordinateSystem , cs , & , }

3637 :	"derivingConversionRef"
		- NEIGH  = { derivingConversionRef , conv , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_north , l_zone , base , * , computeUTMCRSName , }
		- SUCC   = { coordinateSystem , cs , & , }

3638 :	"&"
		- NEIGH  = { coordinateSystem , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversionRef , conv , & , }
		- SUCC   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }

3638 :	"cs"
		- NEIGH  = { coordinateSystem , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversionRef , conv , & , }
		- SUCC   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }

3638 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversionRef , conv , & , }
		- SUCC   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }

3639 :	"io"
		- NEIGH  = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }

3639 :	"DatabaseContextPtr"
		- NEIGH  = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }

3639 :	"dbContext"
		- NEIGH  = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }

3640 :	"authorityFactory"
		- NEIGH  = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }

3640 :	"authorityFactory"
		- NEIGH  = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }

3640 :	"databaseContext"
		- NEIGH  = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }

3640 :	"as_nullable"
		- NEIGH  = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }

3643 :	"if"
		- NEIGH  = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { authorityFactory , if , }

3643 :	"baseRes"
		- NEIGH  = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { authorityFactory , if , }

3643 :	"size"
		- NEIGH  = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { authorityFactory , if , }

3643 :	"=="
		- NEIGH  = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { authorityFactory , if , }

3643 :	"&&"
		- NEIGH  = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { authorityFactory , if , }

3643 :	"baseRes"
		- NEIGH  = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { authorityFactory , if , }

3643 :	"front"
		- NEIGH  = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { authorityFactory , if , }

3643 :	"second"
		- NEIGH  = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { authorityFactory , if , }

3643 :	">="
		- NEIGH  = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { authorityFactory , if , }

3643 :	"&&"
		- NEIGH  = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { authorityFactory , if , }

3644 :	"conv"
		- NEIGH  = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { authorityFactory , if , }

3644 :	"isUTM"
		- NEIGH  = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { authorityFactory , if , }

3644 :	"zone"
		- NEIGH  = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { authorityFactory , if , }

3644 :	"north"
		- NEIGH  = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { authorityFactory , if , }

3644 :	"&&"
		- NEIGH  = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { authorityFactory , if , }

3645 :	"cs"
		- NEIGH  = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { authorityFactory , if , }

3645 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { authorityFactory , if , }

3646 :	"cs"
		- NEIGH  = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { authorityFactory , if , }

3646 :	"CartesianCS"
		- NEIGH  = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { authorityFactory , if , }

3646 :	"createEastingNorthing"
		- NEIGH  = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { authorityFactory , if , }

3646 :	"common"
		- NEIGH  = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { authorityFactory , if , }

3646 :	"UnitOfMeasure"
		- NEIGH  = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { authorityFactory , if , }

3646 :	"METRE"
		- NEIGH  = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { authorityFactory , if , }

3647 :	"get"
		- NEIGH  = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { authorityFactory , if , }

3648 :	"util"
		- NEIGH  = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { authorityFactory , if , }

3648 :	"IComparable"
		- NEIGH  = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { authorityFactory , if , }

3648 :	"Criterion"
		- NEIGH  = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { authorityFactory , if , }

3648 :	"EQUIVALENT"
		- NEIGH  = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { authorityFactory , if , }

3648 :	"dbContext"
		- NEIGH  = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { authorityFactory , if , }

3649 :	"if"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PARENT = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { }
		- SUCC   = { }

3649 :	"baseRes"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PARENT = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { }
		- SUCC   = { }

3649 :	"front"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PARENT = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { }
		- SUCC   = { }

3649 :	"first"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PARENT = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { }
		- SUCC   = { }

3649 :	"_isEquivalentTo"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PARENT = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { }
		- SUCC   = { }

3650 :	"GeographicCRS"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PARENT = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { }
		- SUCC   = { }

3650 :	"EPSG_4326"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PARENT = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { }
		- SUCC   = { }

3650 :	"get"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PARENT = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { }
		- SUCC   = { }

3651 :	"util"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PARENT = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { }
		- SUCC   = { }

3651 :	"IComparable"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PARENT = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { }
		- SUCC   = { }

3651 :	"Criterion"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PARENT = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { }
		- SUCC   = { }

3651 :	"EQUIVALENT"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PARENT = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { }
		- SUCC   = { }

3651 :	"dbContext"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PARENT = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { }
		- SUCC   = { }

3652 :	"std"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }

3652 :	"string"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }

3652 :	"crsName"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }

3653 :	"computeUTMCRSName"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }

3653 :	"zone"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }

3653 :	"north"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }

3654 :	"res"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3654 :	"emplace_back"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3655 :	"ProjectedCRS"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3655 :	"create"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3656 :	"createMapNameEPSGCode"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3656 :	"crsName"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3656 :	"c_str"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3657 :	"north"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3657 :	"+"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3657 :	"zone"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3658 :	"GeographicCRS"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3658 :	"EPSG_4326"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3658 :	"conv"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3658 :	"identify"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3658 :	"cs"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3659 :	"computeConfidence"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3659 :	"crsName"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3660 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- SUCC   = { }

3660 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- SUCC   = { }

3661 :	"if"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3661 :	"zone"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3661 :	">="
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3661 :	"&&"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3661 :	"zone"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3661 :	"<="
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3661 :	"||"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3661 :	"zone"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3661 :	"=="
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3661 :	"||"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3661 :	"zone"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3661 :	"=="
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3661 :	"&&"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3662 :	"north"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3662 :	"&&"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3663 :	"baseRes"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3663 :	"front"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3663 :	"first"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3663 :	"_isEquivalentTo"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3664 :	"GeographicCRS"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3664 :	"EPSG_4267"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3664 :	"get"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3665 :	"util"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3665 :	"IComparable"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3665 :	"Criterion"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3665 :	"EQUIVALENT"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3665 :	"dbContext"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3666 :	"std"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

3666 :	"string"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

3666 :	"crsName"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

3667 :	"computeUTMCRSName"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

3667 :	"zone"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

3667 :	"north"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

3668 :	"res"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3668 :	"emplace_back"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3669 :	"ProjectedCRS"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3669 :	"create"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3670 :	"createMapNameEPSGCode"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3670 :	"crsName"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3670 :	"c_str"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3671 :	"zone"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3671 :	">="
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3671 :	"+"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3671 :	"zone"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3671 :	"-"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3672 :	"+"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3672 :	"zone"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3673 :	"GeographicCRS"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3673 :	"EPSG_4267"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3673 :	"conv"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3673 :	"identify"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3673 :	"cs"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3674 :	"computeConfidence"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3674 :	"crsName"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3675 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- SUCC   = { }

3675 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- SUCC   = { }

3676 :	"if"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3676 :	"zone"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3676 :	">="
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3676 :	"&&"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3676 :	"zone"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3676 :	"<="
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3676 :	"||"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3676 :	"zone"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3676 :	"=="
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3676 :	"||"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3676 :	"zone"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3676 :	"=="
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3676 :	"&&"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3677 :	"north"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3677 :	"&&"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3678 :	"baseRes"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3678 :	"front"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3678 :	"first"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3678 :	"_isEquivalentTo"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3679 :	"GeographicCRS"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3679 :	"EPSG_4269"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3679 :	"get"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3680 :	"util"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3680 :	"IComparable"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3680 :	"Criterion"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3680 :	"EQUIVALENT"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3680 :	"dbContext"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3681 :	"std"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

3681 :	"string"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

3681 :	"crsName"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

3682 :	"computeUTMCRSName"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

3682 :	"zone"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

3682 :	"north"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

3683 :	"res"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3683 :	"emplace_back"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3684 :	"ProjectedCRS"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3684 :	"create"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3685 :	"createMapNameEPSGCode"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3685 :	"crsName"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3685 :	"c_str"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3686 :	"zone"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3686 :	">="
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3686 :	"+"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3686 :	"zone"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3686 :	"-"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3687 :	"+"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3687 :	"zone"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3688 :	"GeographicCRS"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3688 :	"EPSG_4269"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3688 :	"conv"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3688 :	"identify"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3688 :	"cs"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3689 :	"computeConfidence"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3689 :	"crsName"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3690 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- SUCC   = { }

3690 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- SUCC   = { }

3694 :	"if"
		- NEIGH  = { authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { size , < , ci_equal , ! , second , sort , res , a , this , && , Pair , & , || , lambdaSort , if , empty , authorityFactory , front , b , foundEquivalentName , hasCodeCompatibleOfAuthorityFactory , thisName , >= , unsignificantName , }
		- PRED   = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- SUCC   = { res , return , }

3694 :	"authorityFactory"
		- NEIGH  = { authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { size , < , ci_equal , ! , second , sort , res , a , this , && , Pair , & , || , lambdaSort , if , empty , authorityFactory , front , b , foundEquivalentName , hasCodeCompatibleOfAuthorityFactory , thisName , >= , unsignificantName , }
		- PRED   = { dbContext , EQUIVALENT , get , UnitOfMeasure , METRE , common , IComparable , size , CartesianCS , createEastingNorthing , second , _isEquivalentTo , && , util , cs , Criterion , front , == , isUTM , baseRes , conv , >= , north , zone , if , }
		- SUCC   = { res , return , }

3696 :	"unsignificantName"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

3696 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

3696 :	"empty"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

3696 :	"||"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

3697 :	"ci_equal"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

3697 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

3697 :	"||"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

3698 :	"ci_equal"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

3698 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

3699 :	"foundEquivalentName"
		- NEIGH  = { foundEquivalentName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { ci_equal , || , empty , thisName , unsignificantName , }
		- SUCC   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }

3701 :	"if"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { unsignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { foundEquivalentName , }
		- SUCC   = { a , Pair , thisName , & , b , lambdaSort , }

3701 :	"hasCodeCompatibleOfAuthorityFactory"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { unsignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { foundEquivalentName , }
		- SUCC   = { a , Pair , thisName , & , b , lambdaSort , }

3701 :	"this"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { unsignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { foundEquivalentName , }
		- SUCC   = { a , Pair , thisName , & , b , lambdaSort , }

3701 :	"authorityFactory"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { unsignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { foundEquivalentName , }
		- SUCC   = { a , Pair , thisName , & , b , lambdaSort , }

3704 :	"for"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

3704 :	"&"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

3704 :	"id"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

3704 :	"identifiers"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

3705 :	"if"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , std , res , catch , createProjectedCRS , emplace_back , databaseContext , dbContext , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , exception , util , get , match , IComparable , id , code , Criterion , authorityFactory , * , _isEquivalentTo , crs , AuthorityFactory , create , codeSpace , return , io , }
		- PRED   = { }
		- SUCC   = { }

3705 :	"hasCodeCompatibleOfAuthorityFactory"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , std , res , catch , createProjectedCRS , emplace_back , databaseContext , dbContext , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , exception , util , get , match , IComparable , id , code , Criterion , authorityFactory , * , _isEquivalentTo , crs , AuthorityFactory , create , codeSpace , return , io , }
		- PRED   = { }
		- SUCC   = { }

3705 :	"id"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , std , res , catch , createProjectedCRS , emplace_back , databaseContext , dbContext , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , exception , util , get , match , IComparable , id , code , Criterion , authorityFactory , * , _isEquivalentTo , crs , AuthorityFactory , create , codeSpace , return , io , }
		- PRED   = { }
		- SUCC   = { }

3705 :	"authorityFactory"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , std , res , catch , createProjectedCRS , emplace_back , databaseContext , dbContext , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , exception , util , get , match , IComparable , id , code , Criterion , authorityFactory , * , _isEquivalentTo , crs , AuthorityFactory , create , codeSpace , return , io , }
		- PRED   = { }
		- SUCC   = { }

3707 :	"crs"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }

3707 :	"io"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }

3707 :	"AuthorityFactory"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }

3707 :	"create"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }

3708 :	"authorityFactory"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }

3708 :	"databaseContext"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }

3709 :	"*"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }

3709 :	"id"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }

3709 :	"codeSpace"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }

3710 :	"createProjectedCRS"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }

3710 :	"id"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }

3710 :	"code"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }

3711 :	"match"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

3711 :	"_isEquivalentTo"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

3712 :	"crs"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

3712 :	"get"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

3712 :	"util"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

3712 :	"IComparable"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

3712 :	"Criterion"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

3713 :	"EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

3714 :	"dbContext"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

3715 :	"res"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }
		- SUCC   = { res , return , }

3715 :	"emplace_back"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }
		- SUCC   = { res , return , }

3715 :	"crs"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }
		- SUCC   = { res , return , }

3715 :	"match"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }
		- SUCC   = { res , return , }

3716 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { match , crs , emplace_back , res , }
		- SUCC   = { & , exception , std , catch , }

3716 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { match , crs , emplace_back , res , }
		- SUCC   = { & , exception , std , catch , }

3717 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

3717 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

3717 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

3717 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

3721 :	"if"
		- NEIGH  = { ! , unsignificantName , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { < , ++ , ipass , for , }
		- PRED   = { }
		- SUCC   = { }

3721 :	"!"
		- NEIGH  = { ! , unsignificantName , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { < , ++ , ipass , for , }
		- PRED   = { }
		- SUCC   = { }

3721 :	"unsignificantName"
		- NEIGH  = { ! , unsignificantName , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { < , ++ , ipass , for , }
		- PRED   = { }
		- SUCC   = { }

3722 :	"for"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , AuthorityFactory , objects , PROJECTED_CRS , for , approximateMatch , ObjectType , io , createObjectsFromName , authorityFactory , == , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

3722 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , AuthorityFactory , objects , PROJECTED_CRS , for , approximateMatch , ObjectType , io , createObjectsFromName , authorityFactory , == , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

3722 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , AuthorityFactory , objects , PROJECTED_CRS , for , approximateMatch , ObjectType , io , createObjectsFromName , authorityFactory , == , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

3722 :	"<"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , AuthorityFactory , objects , PROJECTED_CRS , for , approximateMatch , ObjectType , io , createObjectsFromName , authorityFactory , == , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

3722 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , AuthorityFactory , objects , PROJECTED_CRS , for , approximateMatch , ObjectType , io , createObjectsFromName , authorityFactory , == , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

3722 :	"++"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , AuthorityFactory , objects , PROJECTED_CRS , for , approximateMatch , ObjectType , io , createObjectsFromName , authorityFactory , == , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

3723 :	"approximateMatch"
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , AuthorityFactory , objects , io , PROJECTED_CRS , ObjectType , createObjectsFromName , authorityFactory , thisName , }

3723 :	"ipass"
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , AuthorityFactory , objects , io , PROJECTED_CRS , ObjectType , createObjectsFromName , authorityFactory , thisName , }

3723 :	"=="
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , AuthorityFactory , objects , io , PROJECTED_CRS , ObjectType , createObjectsFromName , authorityFactory , thisName , }

3724 :	"objects"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , PROJECTED_CRS , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3724 :	"authorityFactory"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , PROJECTED_CRS , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3724 :	"createObjectsFromName"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , PROJECTED_CRS , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3725 :	"thisName"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , PROJECTED_CRS , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3725 :	"io"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , PROJECTED_CRS , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3725 :	"AuthorityFactory"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , PROJECTED_CRS , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3725 :	"ObjectType"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , PROJECTED_CRS , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3725 :	"PROJECTED_CRS"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , PROJECTED_CRS , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3726 :	"approximateMatch"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , PROJECTED_CRS , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3727 :	"for"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { dbContext , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , Criterion , get , assert , if , |= , c_str , thisName , IComparable , ProjectedCRS , isEquivalentName , nameStr , metadata , NN_NO_CHECK , > , Identifier , eqName , util , < , crsNN , foundEquivalentName , obj , nn_dynamic_pointer_cast , _isEquivalentTo , crs , }
		- PRED   = { approximateMatch , AuthorityFactory , objects , io , PROJECTED_CRS , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

3727 :	"&"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { dbContext , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , Criterion , get , assert , if , |= , c_str , thisName , IComparable , ProjectedCRS , isEquivalentName , nameStr , metadata , NN_NO_CHECK , > , Identifier , eqName , util , < , crsNN , foundEquivalentName , obj , nn_dynamic_pointer_cast , _isEquivalentTo , crs , }
		- PRED   = { approximateMatch , AuthorityFactory , objects , io , PROJECTED_CRS , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

3727 :	"obj"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { dbContext , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , Criterion , get , assert , if , |= , c_str , thisName , IComparable , ProjectedCRS , isEquivalentName , nameStr , metadata , NN_NO_CHECK , > , Identifier , eqName , util , < , crsNN , foundEquivalentName , obj , nn_dynamic_pointer_cast , _isEquivalentTo , crs , }
		- PRED   = { approximateMatch , AuthorityFactory , objects , io , PROJECTED_CRS , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

3727 :	"objects"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { dbContext , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , Criterion , get , assert , if , |= , c_str , thisName , IComparable , ProjectedCRS , isEquivalentName , nameStr , metadata , NN_NO_CHECK , > , Identifier , eqName , util , < , crsNN , foundEquivalentName , obj , nn_dynamic_pointer_cast , _isEquivalentTo , crs , }
		- PRED   = { approximateMatch , AuthorityFactory , objects , io , PROJECTED_CRS , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

3728 :	"crs"
		- NEIGH  = { obj , > , ProjectedCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

3728 :	"util"
		- NEIGH  = { obj , > , ProjectedCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

3728 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { obj , > , ProjectedCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

3728 :	"<"
		- NEIGH  = { obj , > , ProjectedCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

3728 :	"ProjectedCRS"
		- NEIGH  = { obj , > , ProjectedCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

3728 :	">"
		- NEIGH  = { obj , > , ProjectedCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

3728 :	"obj"
		- NEIGH  = { obj , > , ProjectedCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

3729 :	"assert"
		- NEIGH  = { crs , assert , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { obj , > , ProjectedCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- SUCC   = { NN_NO_CHECK , crs , crsNN , }

3729 :	"crs"
		- NEIGH  = { crs , assert , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { obj , > , ProjectedCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- SUCC   = { NN_NO_CHECK , crs , crsNN , }

3730 :	"crsNN"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }

3730 :	"NN_NO_CHECK"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }

3730 :	"crs"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }

3731 :	"eqName"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

3731 :	"metadata"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

3731 :	"Identifier"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

3731 :	"isEquivalentName"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

3732 :	"thisName"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

3732 :	"c_str"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

3732 :	"crs"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

3732 :	"nameStr"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

3732 :	"c_str"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

3733 :	"foundEquivalentName"
		- NEIGH  = { |= , eqName , foundEquivalentName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3733 :	"|="
		- NEIGH  = { |= , eqName , foundEquivalentName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3733 :	"eqName"
		- NEIGH  = { |= , eqName , foundEquivalentName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3734 :	"if"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { dbContext , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , get , l_baseCRS , IComparable , derivingConversionRef , emplace_back , coordinateSystem , crs , getPrivate , nameStr , size , EQUIVALENT , objects , baseCRS , eqName , && , util , CRS , crsNN , Criterion , axisList , res , == , _isEquivalentTo , implicitCS_ , unit , thisName , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

3734 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { dbContext , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , get , l_baseCRS , IComparable , derivingConversionRef , emplace_back , coordinateSystem , crs , getPrivate , nameStr , size , EQUIVALENT , objects , baseCRS , eqName , && , util , CRS , crsNN , Criterion , axisList , res , == , _isEquivalentTo , implicitCS_ , unit , thisName , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

3735 :	"crs"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { dbContext , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , get , l_baseCRS , IComparable , derivingConversionRef , emplace_back , coordinateSystem , crs , getPrivate , nameStr , size , EQUIVALENT , objects , baseCRS , eqName , && , util , CRS , crsNN , Criterion , axisList , res , == , _isEquivalentTo , implicitCS_ , unit , thisName , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

3735 :	"get"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { dbContext , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , get , l_baseCRS , IComparable , derivingConversionRef , emplace_back , coordinateSystem , crs , getPrivate , nameStr , size , EQUIVALENT , objects , baseCRS , eqName , && , util , CRS , crsNN , Criterion , axisList , res , == , _isEquivalentTo , implicitCS_ , unit , thisName , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

3735 :	"util"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { dbContext , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , get , l_baseCRS , IComparable , derivingConversionRef , emplace_back , coordinateSystem , crs , getPrivate , nameStr , size , EQUIVALENT , objects , baseCRS , eqName , && , util , CRS , crsNN , Criterion , axisList , res , == , _isEquivalentTo , implicitCS_ , unit , thisName , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

3735 :	"IComparable"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { dbContext , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , get , l_baseCRS , IComparable , derivingConversionRef , emplace_back , coordinateSystem , crs , getPrivate , nameStr , size , EQUIVALENT , objects , baseCRS , eqName , && , util , CRS , crsNN , Criterion , axisList , res , == , _isEquivalentTo , implicitCS_ , unit , thisName , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

3735 :	"Criterion"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { dbContext , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , get , l_baseCRS , IComparable , derivingConversionRef , emplace_back , coordinateSystem , crs , getPrivate , nameStr , size , EQUIVALENT , objects , baseCRS , eqName , && , util , CRS , crsNN , Criterion , axisList , res , == , _isEquivalentTo , implicitCS_ , unit , thisName , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

3736 :	"EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { dbContext , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , get , l_baseCRS , IComparable , derivingConversionRef , emplace_back , coordinateSystem , crs , getPrivate , nameStr , size , EQUIVALENT , objects , baseCRS , eqName , && , util , CRS , crsNN , Criterion , axisList , res , == , _isEquivalentTo , implicitCS_ , unit , thisName , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

3737 :	"dbContext"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { dbContext , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , get , l_baseCRS , IComparable , derivingConversionRef , emplace_back , coordinateSystem , crs , getPrivate , nameStr , size , EQUIVALENT , objects , baseCRS , eqName , && , util , CRS , crsNN , Criterion , axisList , res , == , _isEquivalentTo , implicitCS_ , unit , thisName , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

3738 :	"if"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

3738 :	"crs"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

3738 :	"nameStr"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

3738 :	"=="
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

3738 :	"thisName"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

3739 :	"res"
		- NEIGH  = { clear , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

3739 :	"clear"
		- NEIGH  = { clear , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

3740 :	"res"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

3740 :	"emplace_back"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

3740 :	"crsNN"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

3741 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { crsNN , emplace_back , res , }
		- SUCC   = { }

3741 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { crsNN , emplace_back , res , }
		- SUCC   = { }

3743 :	"res"
		- NEIGH  = { crsNN , eqName , emplace_back , res , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { }

3743 :	"emplace_back"
		- NEIGH  = { crsNN , eqName , emplace_back , res , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { }

3743 :	"crsNN"
		- NEIGH  = { crsNN , eqName , emplace_back , res , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { }

3743 :	"eqName"
		- NEIGH  = { crsNN , eqName , emplace_back , res , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { }

3744 :	"if"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3744 :	"objects"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3744 :	"size"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3744 :	"=="
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3744 :	"&&"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3745 :	"CRS"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3745 :	"getPrivate"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3745 :	"implicitCS_"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3745 :	"&&"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3746 :	"coordinateSystem"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3747 :	"axisList"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3748 :	"unit"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3749 :	"_isEquivalentTo"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3750 :	"crs"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3750 :	"coordinateSystem"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3751 :	"axisList"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3752 :	"unit"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3753 :	"util"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3753 :	"IComparable"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3753 :	"Criterion"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3754 :	"EQUIVALENT"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3754 :	"&&"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3755 :	"l_baseCRS"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3755 :	"_isEquivalentTo"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3756 :	"crs"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3756 :	"baseCRS"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3756 :	"get"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3757 :	"util"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3757 :	"IComparable"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3757 :	"Criterion"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3758 :	"EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3759 :	"dbContext"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3759 :	"&&"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3760 :	"derivingConversionRef"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3760 :	"_isEquivalentTo"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3761 :	"crs"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3761 :	"derivingConversionRef"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3761 :	"get"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3762 :	"util"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3762 :	"IComparable"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3762 :	"Criterion"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3762 :	"EQUIVALENT"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3763 :	"dbContext"
		- NEIGH  = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { thisName , return , crs , eqName , res , crsNN , clear , == , nameStr , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

3764 :	"res"
		- NEIGH  = { clear , res , }
		- PARENT = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { thisName , == , emplace_back , nameStr , crs , eqName , crsNN , res , }

3764 :	"clear"
		- NEIGH  = { clear , res , }
		- PARENT = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { thisName , == , emplace_back , nameStr , crs , eqName , crsNN , res , }

3765 :	"res"
		- NEIGH  = { thisName , == , emplace_back , nameStr , crs , eqName , crsNN , res , }
		- PARENT = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

3765 :	"emplace_back"
		- NEIGH  = { thisName , == , emplace_back , nameStr , crs , eqName , crsNN , res , }
		- PARENT = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

3765 :	"crsNN"
		- NEIGH  = { thisName , == , emplace_back , nameStr , crs , eqName , crsNN , res , }
		- PARENT = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

3765 :	"crs"
		- NEIGH  = { thisName , == , emplace_back , nameStr , crs , eqName , crsNN , res , }
		- PARENT = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

3765 :	"nameStr"
		- NEIGH  = { thisName , == , emplace_back , nameStr , crs , eqName , crsNN , res , }
		- PARENT = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

3765 :	"=="
		- NEIGH  = { thisName , == , emplace_back , nameStr , crs , eqName , crsNN , res , }
		- PARENT = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

3765 :	"thisName"
		- NEIGH  = { thisName , == , emplace_back , nameStr , crs , eqName , crsNN , res , }
		- PARENT = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

3767 :	"eqName"
		- NEIGH  = { thisName , == , emplace_back , nameStr , crs , eqName , crsNN , res , }
		- PARENT = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

3768 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- CHILD  = { }
		- PRED   = { thisName , == , emplace_back , nameStr , crs , eqName , crsNN , res , }
		- SUCC   = { }

3768 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- CHILD  = { }
		- PRED   = { thisName , == , emplace_back , nameStr , crs , eqName , crsNN , res , }
		- SUCC   = { }

3770 :	"res"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3770 :	"emplace_back"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3770 :	"crsNN"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { get , derivingConversionRef , baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , IComparable , util , getPrivate , coordinateSystem , crs , _isEquivalentTo , implicitCS_ , unit , CRS , && , Criterion , == , axisList , size , EQUIVALENT , objects , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3773 :	"if"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

3773 :	"!"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

3773 :	"res"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

3773 :	"empty"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

3774 :	"break"
		- NEIGH  = { break , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3779 :	"lambdaSort"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

3779 :	"&"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

3779 :	"thisName"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

3779 :	"Pair"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

3779 :	"&"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

3779 :	"a"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

3779 :	"Pair"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

3779 :	"&"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

3779 :	"b"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

3781 :	"if"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

3781 :	"a"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

3781 :	"second"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

3781 :	">"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

3781 :	"b"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

3781 :	"second"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

3782 :	"return"
		- NEIGH  = { return , }
		- PARENT = { > , second , a , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3784 :	"if"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

3784 :	"a"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

3784 :	"second"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

3784 :	"<"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

3784 :	"b"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

3784 :	"second"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

3785 :	"return"
		- NEIGH  = { return , }
		- PARENT = { < , second , a , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3789 :	"&"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

3789 :	"aName"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

3789 :	"a"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

3789 :	"first"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

3789 :	"nameStr"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

3790 :	"&"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

3790 :	"bName"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

3790 :	"b"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

3790 :	"first"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

3790 :	"nameStr"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

3791 :	"if"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

3791 :	"aName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

3791 :	"=="
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

3791 :	"thisName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

3791 :	"&&"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

3791 :	"bName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

3791 :	"!="
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

3791 :	"thisName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

3792 :	"return"
		- NEIGH  = { return , }
		- PARENT = { != , bName , && , == , aName , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3794 :	"if"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

3794 :	"bName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

3794 :	"=="
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

3794 :	"thisName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

3794 :	"&&"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

3794 :	"aName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

3794 :	"!="
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

3794 :	"thisName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

3795 :	"return"
		- NEIGH  = { return , }
		- PARENT = { != , aName , && , == , bName , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3799 :	"return"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

3799 :	"aName"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

3799 :	"<"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

3799 :	"bName"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

3803 :	"res"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { a , Pair , thisName , & , b , lambdaSort , }
		- SUCC   = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }

3803 :	"sort"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { a , Pair , thisName , & , b , lambdaSort , }
		- SUCC   = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }

3803 :	"lambdaSort"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { a , Pair , thisName , & , b , lambdaSort , }
		- SUCC   = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }

3805 :	"if"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , ellipsoid , createProjectedCRSFromExisting , as_nullable , pair , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , lambdaSort , for , crs , self , string , < , l_baseCRS , alreadyKnown , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3805 :	"!"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , ellipsoid , createProjectedCRSFromExisting , as_nullable , pair , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , lambdaSort , for , crs , self , string , < , l_baseCRS , alreadyKnown , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3805 :	"hasCodeCompatibleOfAuthorityFactory"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , ellipsoid , createProjectedCRSFromExisting , as_nullable , pair , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , lambdaSort , for , crs , self , string , < , l_baseCRS , alreadyKnown , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3805 :	"this"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , ellipsoid , createProjectedCRSFromExisting , as_nullable , pair , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , lambdaSort , for , crs , self , string , < , l_baseCRS , alreadyKnown , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3805 :	"authorityFactory"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , ellipsoid , createProjectedCRSFromExisting , as_nullable , pair , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , lambdaSort , for , crs , self , string , < , l_baseCRS , alreadyKnown , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3805 :	"&&"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , ellipsoid , createProjectedCRSFromExisting , as_nullable , pair , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , lambdaSort , for , crs , self , string , < , l_baseCRS , alreadyKnown , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3806 :	"!"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , ellipsoid , createProjectedCRSFromExisting , as_nullable , pair , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , lambdaSort , for , crs , self , string , < , l_baseCRS , alreadyKnown , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3806 :	"foundEquivalentName"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , ellipsoid , createProjectedCRSFromExisting , as_nullable , pair , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , lambdaSort , for , crs , self , string , < , l_baseCRS , alreadyKnown , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3806 :	"&&"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , ellipsoid , createProjectedCRSFromExisting , as_nullable , pair , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , lambdaSort , for , crs , self , string , < , l_baseCRS , alreadyKnown , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3806 :	"res"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , ellipsoid , createProjectedCRSFromExisting , as_nullable , pair , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , lambdaSort , for , crs , self , string , < , l_baseCRS , alreadyKnown , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3806 :	"empty"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , ellipsoid , createProjectedCRSFromExisting , as_nullable , pair , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , lambdaSort , for , crs , self , string , < , l_baseCRS , alreadyKnown , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3806 :	"||"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , ellipsoid , createProjectedCRSFromExisting , as_nullable , pair , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , lambdaSort , for , crs , self , string , < , l_baseCRS , alreadyKnown , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3806 :	"res"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , ellipsoid , createProjectedCRSFromExisting , as_nullable , pair , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , lambdaSort , for , crs , self , string , < , l_baseCRS , alreadyKnown , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3806 :	"front"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , ellipsoid , createProjectedCRSFromExisting , as_nullable , pair , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , lambdaSort , for , crs , self , string , < , l_baseCRS , alreadyKnown , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3806 :	"second"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , ellipsoid , createProjectedCRSFromExisting , as_nullable , pair , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , lambdaSort , for , crs , self , string , < , l_baseCRS , alreadyKnown , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3806 :	"<"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , ellipsoid , createProjectedCRSFromExisting , as_nullable , pair , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , lambdaSort , for , crs , self , string , < , l_baseCRS , alreadyKnown , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3807 :	"std"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3807 :	"set"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3807 :	"<"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3807 :	"std"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3807 :	"pair"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3807 :	"<"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3807 :	"std"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3807 :	"string"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3807 :	"std"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3807 :	"string"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3807 :	">>"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3807 :	"alreadyKnown"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3808 :	"for"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { code , * , < , insert , alreadyKnown , codeSpace , std , empty , string , ! , > , assert , first , identifiers , pair , ids , & , }
		- PRED   = { >> , string , pair , < , alreadyKnown , set , std , }
		- SUCC   = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }

3808 :	"&"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { code , * , < , insert , alreadyKnown , codeSpace , std , empty , string , ! , > , assert , first , identifiers , pair , ids , & , }
		- PRED   = { >> , string , pair , < , alreadyKnown , set , std , }
		- SUCC   = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }

3808 :	"pair"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { code , * , < , insert , alreadyKnown , codeSpace , std , empty , string , ! , > , assert , first , identifiers , pair , ids , & , }
		- PRED   = { >> , string , pair , < , alreadyKnown , set , std , }
		- SUCC   = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }

3808 :	"res"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { code , * , < , insert , alreadyKnown , codeSpace , std , empty , string , ! , > , assert , first , identifiers , pair , ids , & , }
		- PRED   = { >> , string , pair , < , alreadyKnown , set , std , }
		- SUCC   = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }

3809 :	"&"
		- NEIGH  = { identifiers , pair , first , ids , & , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

3809 :	"ids"
		- NEIGH  = { identifiers , pair , first , ids , & , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

3809 :	"pair"
		- NEIGH  = { identifiers , pair , first , ids , & , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

3809 :	"first"
		- NEIGH  = { identifiers , pair , first , ids , & , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

3809 :	"identifiers"
		- NEIGH  = { identifiers , pair , first , ids , & , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

3810 :	"assert"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , pair , first , ids , & , }
		- SUCC   = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }

3810 :	"!"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , pair , first , ids , & , }
		- SUCC   = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }

3810 :	"ids"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , pair , first , ids , & , }
		- SUCC   = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }

3810 :	"empty"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , pair , first , ids , & , }
		- SUCC   = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }

3811 :	"alreadyKnown"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3811 :	"insert"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3811 :	"std"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3811 :	"pair"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3811 :	"<"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3811 :	"std"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3811 :	"string"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3811 :	"std"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3811 :	"string"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3811 :	">"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3812 :	"*"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3812 :	"ids"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3812 :	"codeSpace"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3812 :	"ids"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3812 :	"code"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3815 :	"self"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }

3815 :	"NN_NO_CHECK"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }

3815 :	"std"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }

3815 :	"dynamic_pointer_cast"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }

3815 :	"<"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }

3815 :	"ProjectedCRS"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }

3815 :	">"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }

3816 :	"shared_from_this"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }

3816 :	"as_nullable"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }

3817 :	"candidates"
		- NEIGH  = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { l_baseCRS , ellipsoid , & , }

3818 :	"authorityFactory"
		- NEIGH  = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { l_baseCRS , ellipsoid , & , }

3818 :	"createProjectedCRSFromExisting"
		- NEIGH  = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { l_baseCRS , ellipsoid , & , }

3818 :	"self"
		- NEIGH  = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { l_baseCRS , ellipsoid , & , }

3819 :	"&"
		- NEIGH  = { l_baseCRS , ellipsoid , & , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }
		- SUCC   = { candidates , crs , & , for , }

3819 :	"ellipsoid"
		- NEIGH  = { l_baseCRS , ellipsoid , & , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }
		- SUCC   = { candidates , crs , & , for , }

3819 :	"l_baseCRS"
		- NEIGH  = { l_baseCRS , ellipsoid , & , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }
		- SUCC   = { candidates , crs , & , for , }

3819 :	"ellipsoid"
		- NEIGH  = { l_baseCRS , ellipsoid , & , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }
		- SUCC   = { candidates , crs , & , for , }

3820 :	"for"
		- NEIGH  = { candidates , crs , & , for , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { dbContext , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , Criterion , IComparable , get , != , code , * , util , < , empty , pair , find , alreadyKnown , assert , if , _isEquivalentTo , end , string , crs , ! , identifiers , > , codeSpace , std , ids , & , }
		- PRED   = { l_baseCRS , ellipsoid , & , }
		- SUCC   = { lambdaSort , sort , res , }

3820 :	"&"
		- NEIGH  = { candidates , crs , & , for , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { dbContext , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , Criterion , IComparable , get , != , code , * , util , < , empty , pair , find , alreadyKnown , assert , if , _isEquivalentTo , end , string , crs , ! , identifiers , > , codeSpace , std , ids , & , }
		- PRED   = { l_baseCRS , ellipsoid , & , }
		- SUCC   = { lambdaSort , sort , res , }

3820 :	"crs"
		- NEIGH  = { candidates , crs , & , for , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { dbContext , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , Criterion , IComparable , get , != , code , * , util , < , empty , pair , find , alreadyKnown , assert , if , _isEquivalentTo , end , string , crs , ! , identifiers , > , codeSpace , std , ids , & , }
		- PRED   = { l_baseCRS , ellipsoid , & , }
		- SUCC   = { lambdaSort , sort , res , }

3820 :	"candidates"
		- NEIGH  = { candidates , crs , & , for , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { dbContext , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , Criterion , IComparable , get , != , code , * , util , < , empty , pair , find , alreadyKnown , assert , if , _isEquivalentTo , end , string , crs , ! , identifiers , > , codeSpace , std , ids , & , }
		- PRED   = { l_baseCRS , ellipsoid , & , }
		- SUCC   = { lambdaSort , sort , res , }

3821 :	"&"
		- NEIGH  = { identifiers , crs , ids , & , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

3821 :	"ids"
		- NEIGH  = { identifiers , crs , ids , & , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

3821 :	"crs"
		- NEIGH  = { identifiers , crs , ids , & , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

3821 :	"identifiers"
		- NEIGH  = { identifiers , crs , ids , & , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

3822 :	"assert"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , crs , ids , & , }
		- SUCC   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }

3822 :	"!"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , crs , ids , & , }
		- SUCC   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }

3822 :	"ids"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , crs , ids , & , }
		- SUCC   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }

3822 :	"empty"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , crs , ids , & , }
		- SUCC   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }

3823 :	"if"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3823 :	"alreadyKnown"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3823 :	"find"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3823 :	"std"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3823 :	"pair"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3823 :	"<"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3823 :	"std"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3823 :	"string"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3823 :	"std"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3823 :	"string"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3823 :	">"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3824 :	"*"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3824 :	"ids"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3824 :	"codeSpace"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3824 :	"ids"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3824 :	"code"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3824 :	"!="
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3825 :	"alreadyKnown"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3825 :	"end"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3826 :	"continue"
		- NEIGH  = { continue , }
		- PARENT = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3829 :	"if"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { EQUIVALENT , Criterion , util , get , ellipsoid , dbContext , if , IComparable , unsignificantName , crs , _isEquivalentTo , && , emplace_back , derivingConversionRef , baseCRS , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

3829 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { EQUIVALENT , Criterion , util , get , ellipsoid , dbContext , if , IComparable , unsignificantName , crs , _isEquivalentTo , && , emplace_back , derivingConversionRef , baseCRS , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

3829 :	"crs"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { EQUIVALENT , Criterion , util , get , ellipsoid , dbContext , if , IComparable , unsignificantName , crs , _isEquivalentTo , && , emplace_back , derivingConversionRef , baseCRS , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

3829 :	"get"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { EQUIVALENT , Criterion , util , get , ellipsoid , dbContext , if , IComparable , unsignificantName , crs , _isEquivalentTo , && , emplace_back , derivingConversionRef , baseCRS , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

3830 :	"util"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { EQUIVALENT , Criterion , util , get , ellipsoid , dbContext , if , IComparable , unsignificantName , crs , _isEquivalentTo , && , emplace_back , derivingConversionRef , baseCRS , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

3830 :	"IComparable"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { EQUIVALENT , Criterion , util , get , ellipsoid , dbContext , if , IComparable , unsignificantName , crs , _isEquivalentTo , && , emplace_back , derivingConversionRef , baseCRS , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

3830 :	"Criterion"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { EQUIVALENT , Criterion , util , get , ellipsoid , dbContext , if , IComparable , unsignificantName , crs , _isEquivalentTo , && , emplace_back , derivingConversionRef , baseCRS , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

3831 :	"EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { EQUIVALENT , Criterion , util , get , ellipsoid , dbContext , if , IComparable , unsignificantName , crs , _isEquivalentTo , && , emplace_back , derivingConversionRef , baseCRS , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

3832 :	"dbContext"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { EQUIVALENT , Criterion , util , get , ellipsoid , dbContext , if , IComparable , unsignificantName , crs , _isEquivalentTo , && , emplace_back , derivingConversionRef , baseCRS , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

3833 :	"res"
		- NEIGH  = { unsignificantName , crs , emplace_back , res , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3833 :	"emplace_back"
		- NEIGH  = { unsignificantName , crs , emplace_back , res , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3833 :	"crs"
		- NEIGH  = { unsignificantName , crs , emplace_back , res , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3833 :	"unsignificantName"
		- NEIGH  = { unsignificantName , crs , emplace_back , res , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3834 :	"if"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { emplace_back , if , dbContext , EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , }
		- PRED   = { }
		- SUCC   = { }

3834 :	"ellipsoid"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { emplace_back , if , dbContext , EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , }
		- PRED   = { }
		- SUCC   = { }

3834 :	"_isEquivalentTo"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { emplace_back , if , dbContext , EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , }
		- PRED   = { }
		- SUCC   = { }

3835 :	"crs"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { emplace_back , if , dbContext , EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , }
		- PRED   = { }
		- SUCC   = { }

3835 :	"baseCRS"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { emplace_back , if , dbContext , EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , }
		- PRED   = { }
		- SUCC   = { }

3835 :	"ellipsoid"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { emplace_back , if , dbContext , EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , }
		- PRED   = { }
		- SUCC   = { }

3835 :	"get"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { emplace_back , if , dbContext , EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , }
		- PRED   = { }
		- SUCC   = { }

3836 :	"util"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { emplace_back , if , dbContext , EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , }
		- PRED   = { }
		- SUCC   = { }

3836 :	"IComparable"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { emplace_back , if , dbContext , EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , }
		- PRED   = { }
		- SUCC   = { }

3836 :	"Criterion"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { emplace_back , if , dbContext , EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , }
		- PRED   = { }
		- SUCC   = { }

3836 :	"EQUIVALENT"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { emplace_back , if , dbContext , EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , }
		- PRED   = { }
		- SUCC   = { }

3837 :	"dbContext"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { emplace_back , if , dbContext , EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , }
		- PRED   = { }
		- SUCC   = { }

3837 :	"&&"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { emplace_back , if , dbContext , EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , }
		- PRED   = { }
		- SUCC   = { }

3838 :	"derivingConversionRef"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { emplace_back , if , dbContext , EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , }
		- PRED   = { }
		- SUCC   = { }

3838 :	"_isEquivalentTo"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { emplace_back , if , dbContext , EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , }
		- PRED   = { }
		- SUCC   = { }

3839 :	"crs"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { emplace_back , if , dbContext , EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , }
		- PRED   = { }
		- SUCC   = { }

3839 :	"derivingConversionRef"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { emplace_back , if , dbContext , EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , }
		- PRED   = { }
		- SUCC   = { }

3839 :	"get"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { emplace_back , if , dbContext , EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , }
		- PRED   = { }
		- SUCC   = { }

3840 :	"util"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { emplace_back , if , dbContext , EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , }
		- PRED   = { }
		- SUCC   = { }

3840 :	"IComparable"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { emplace_back , if , dbContext , EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , }
		- PRED   = { }
		- SUCC   = { }

3840 :	"Criterion"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { emplace_back , if , dbContext , EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , }
		- PRED   = { }
		- SUCC   = { }

3840 :	"EQUIVALENT"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { emplace_back , if , dbContext , EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , }
		- PRED   = { }
		- SUCC   = { }

3841 :	"dbContext"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { dbContext , IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { emplace_back , if , dbContext , EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , }
		- PRED   = { }
		- SUCC   = { }

3842 :	"if"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , if , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3842 :	"coordinateSystem"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , if , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3842 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , if , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3843 :	"crs"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , if , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3843 :	"coordinateSystem"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , if , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3843 :	"get"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , if , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3844 :	"util"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , if , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3844 :	"IComparable"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , if , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3844 :	"Criterion"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , if , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3844 :	"EQUIVALENT"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , if , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3845 :	"dbContext"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , if , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3846 :	"res"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3846 :	"emplace_back"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3846 :	"crs"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3848 :	"res"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3848 :	"emplace_back"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3848 :	"crs"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3851 :	"res"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3851 :	"emplace_back"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3851 :	"crs"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3855 :	"res"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { candidates , crs , & , for , }
		- SUCC   = { }

3855 :	"sort"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { candidates , crs , & , for , }
		- SUCC   = { }

3855 :	"lambdaSort"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { candidates , crs , & , for , }
		- SUCC   = { }

3859 :	"if"
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- SUCC   = { }

3859 :	"res"
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- SUCC   = { }

3859 :	"size"
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- SUCC   = { }

3859 :	">="
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- SUCC   = { }

3860 :	"highestConfidence"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

3860 :	"res"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

3860 :	"front"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

3860 :	"second"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

3861 :	"std"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

3861 :	"list"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

3861 :	"<"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

3861 :	"Pair"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

3861 :	">"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

3861 :	"newRes"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

3862 :	"for"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

3862 :	"&"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

3862 :	"pair"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

3862 :	"res"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

3863 :	"if"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

3863 :	"pair"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

3863 :	"second"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

3863 :	"=="
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

3863 :	"highestConfidence"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

3864 :	"newRes"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3864 :	"push_back"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3864 :	"pair"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3866 :	"break"
		- NEIGH  = { break , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3869 :	"return"
		- NEIGH  = { newRes , return , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { }

3869 :	"newRes"
		- NEIGH  = { newRes , return , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { }

3873 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , if , }
		- SUCC   = { }

3873 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , if , }
		- SUCC   = { }

3889 :	"ProjectedCRSNNPtr"
		- NEIGH  = { ProjectedCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3890 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3890 :	"demoteTo2D"
		- NEIGH  = { demoteTo2D , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3890 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3890 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3890 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3890 :	"newName"
		- NEIGH  = { newName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3891 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3891 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3891 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3891 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3893 :	"&"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

3893 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

3893 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

3893 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

3894 :	"if"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { }
		- CHILD  = { nameStr , empty , newName , ! , common , set , dbContext , std , string , GeodeticCRS , l_baseCRS , get , nn_static_pointer_cast , newBaseCRS , > , * , geogCRS , & , derivingConversion , axisList , NAME_KEY , demoteTo2D , < , cs , dynamic_cast , util , GeographicCRS , create , IdentifiedObject , PropertyMap , baseCRS , ProjectedCRS , return , CartesianCS , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

3894 :	"axisList"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { }
		- CHILD  = { nameStr , empty , newName , ! , common , set , dbContext , std , string , GeodeticCRS , l_baseCRS , get , nn_static_pointer_cast , newBaseCRS , > , * , geogCRS , & , derivingConversion , axisList , NAME_KEY , demoteTo2D , < , cs , dynamic_cast , util , GeographicCRS , create , IdentifiedObject , PropertyMap , baseCRS , ProjectedCRS , return , CartesianCS , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

3894 :	"size"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { }
		- CHILD  = { nameStr , empty , newName , ! , common , set , dbContext , std , string , GeodeticCRS , l_baseCRS , get , nn_static_pointer_cast , newBaseCRS , > , * , geogCRS , & , derivingConversion , axisList , NAME_KEY , demoteTo2D , < , cs , dynamic_cast , util , GeographicCRS , create , IdentifiedObject , PropertyMap , baseCRS , ProjectedCRS , return , CartesianCS , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

3894 :	"=="
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { }
		- CHILD  = { nameStr , empty , newName , ! , common , set , dbContext , std , string , GeodeticCRS , l_baseCRS , get , nn_static_pointer_cast , newBaseCRS , > , * , geogCRS , & , derivingConversion , axisList , NAME_KEY , demoteTo2D , < , cs , dynamic_cast , util , GeographicCRS , create , IdentifiedObject , PropertyMap , baseCRS , ProjectedCRS , return , CartesianCS , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

3895 :	"cs"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRS , l_baseCRS , & , }

3895 :	"cs"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRS , l_baseCRS , & , }

3895 :	"CartesianCS"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRS , l_baseCRS , & , }

3895 :	"create"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRS , l_baseCRS , & , }

3895 :	"util"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRS , l_baseCRS , & , }

3895 :	"PropertyMap"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRS , l_baseCRS , & , }

3895 :	"axisList"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRS , l_baseCRS , & , }

3896 :	"axisList"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRS , l_baseCRS , & , }

3897 :	"&"
		- NEIGH  = { baseCRS , l_baseCRS , & , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }

3897 :	"l_baseCRS"
		- NEIGH  = { baseCRS , l_baseCRS , & , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }

3897 :	"baseCRS"
		- NEIGH  = { baseCRS , l_baseCRS , & , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }

3898 :	"geogCRS"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }

3899 :	"dynamic_cast"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }

3899 :	"<"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }

3899 :	"GeographicCRS"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }

3899 :	"*"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }

3899 :	">"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }

3899 :	"l_baseCRS"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }

3899 :	"get"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }

3900 :	"newBaseCRS"
		- NEIGH  = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }

3901 :	"geogCRS"
		- NEIGH  = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }

3901 :	"util"
		- NEIGH  = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }

3901 :	"nn_static_pointer_cast"
		- NEIGH  = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }

3901 :	"<"
		- NEIGH  = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }

3901 :	"GeodeticCRS"
		- NEIGH  = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }

3901 :	">"
		- NEIGH  = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }

3902 :	"geogCRS"
		- NEIGH  = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }

3902 :	"demoteTo2D"
		- NEIGH  = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }

3902 :	"std"
		- NEIGH  = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }

3902 :	"string"
		- NEIGH  = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }

3902 :	"dbContext"
		- NEIGH  = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }

3903 :	"l_baseCRS"
		- NEIGH  = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }

3904 :	"return"
		- NEIGH  = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- SUCC   = { }

3904 :	"ProjectedCRS"
		- NEIGH  = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- SUCC   = { }

3904 :	"create"
		- NEIGH  = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- SUCC   = { }

3905 :	"util"
		- NEIGH  = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- SUCC   = { }

3905 :	"PropertyMap"
		- NEIGH  = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- SUCC   = { }

3905 :	"set"
		- NEIGH  = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- SUCC   = { }

3905 :	"common"
		- NEIGH  = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- SUCC   = { }

3905 :	"IdentifiedObject"
		- NEIGH  = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- SUCC   = { }

3905 :	"NAME_KEY"
		- NEIGH  = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- SUCC   = { }

3906 :	"!"
		- NEIGH  = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- SUCC   = { }

3906 :	"newName"
		- NEIGH  = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- SUCC   = { }

3906 :	"empty"
		- NEIGH  = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- SUCC   = { }

3906 :	"newName"
		- NEIGH  = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- SUCC   = { }

3906 :	"nameStr"
		- NEIGH  = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- SUCC   = { }

3907 :	"newBaseCRS"
		- NEIGH  = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- SUCC   = { }

3907 :	"derivingConversion"
		- NEIGH  = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- SUCC   = { }

3907 :	"cs"
		- NEIGH  = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- SUCC   = { }

3910 :	"return"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

3910 :	"NN_NO_CHECK"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

3910 :	"std"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

3910 :	"dynamic_pointer_cast"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

3910 :	"<"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

3910 :	"ProjectedCRS"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

3910 :	">"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

3911 :	"shared_from_this"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

3911 :	"as_nullable"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

3918 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3918 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3918 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3918 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3918 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3918 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3918 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3918 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3919 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3919 :	"_identify"
		- NEIGH  = { _identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3919 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3919 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3919 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3919 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3920 :	"std"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3920 :	"pair"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3920 :	"<"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3920 :	"CRSNNPtr"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3920 :	">"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3920 :	"Pair"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3921 :	"std"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

3921 :	"list"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

3921 :	"<"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

3921 :	"Pair"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

3921 :	">"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

3921 :	"res"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

3922 :	"resTemp"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

3922 :	"identify"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

3922 :	"authorityFactory"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

3923 :	"for"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

3923 :	"&"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

3923 :	"pair"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

3923 :	"resTemp"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

3924 :	"res"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3924 :	"emplace_back"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3924 :	"pair"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3924 :	"first"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3924 :	"pair"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3924 :	"second"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3926 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pair , resTemp , & , for , }
		- SUCC   = { }

3926 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pair , resTemp , & , for , }
		- SUCC   = { }

3934 :	"InvalidCompoundCRSException"
		- NEIGH  = { InvalidCompoundCRSException , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3934 :	"InvalidCompoundCRSException"
		- NEIGH  = { InvalidCompoundCRSException , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3934 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3934 :	"message"
		- NEIGH  = { message , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3935 :	"Exception"
		- NEIGH  = { Exception , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3935 :	"message"
		- NEIGH  = { message , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3939 :	"InvalidCompoundCRSException"
		- NEIGH  = { InvalidCompoundCRSException , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3939 :	"InvalidCompoundCRSException"
		- NEIGH  = { InvalidCompoundCRSException , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3940 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3940 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3940 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3940 :	"message"
		- NEIGH  = { message , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3941 :	"Exception"
		- NEIGH  = { Exception , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3941 :	"message"
		- NEIGH  = { message , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3945 :	"InvalidCompoundCRSException"
		- NEIGH  = { InvalidCompoundCRSException , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3945 :	"InvalidCompoundCRSException"
		- NEIGH  = { InvalidCompoundCRSException , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3949 :	"InvalidCompoundCRSException"
		- NEIGH  = { InvalidCompoundCRSException , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3949 :	"InvalidCompoundCRSException"
		- NEIGH  = { InvalidCompoundCRSException , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3950 :	"InvalidCompoundCRSException"
		- NEIGH  = { InvalidCompoundCRSException , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3950 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3956 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3956 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3957 :	"std"
		- NEIGH  = { components_ , > , CRSNNPtr , < , vector , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3957 :	"vector"
		- NEIGH  = { components_ , > , CRSNNPtr , < , vector , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3957 :	"<"
		- NEIGH  = { components_ , > , CRSNNPtr , < , vector , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3957 :	"CRSNNPtr"
		- NEIGH  = { components_ , > , CRSNNPtr , < , vector , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3957 :	">"
		- NEIGH  = { components_ , > , CRSNNPtr , < , vector , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3957 :	"components_"
		- NEIGH  = { components_ , > , CRSNNPtr , < , vector , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3963 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3963 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3963 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3963 :	"vector"
		- NEIGH  = { vector , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3963 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3963 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3963 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3963 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3963 :	"components"
		- NEIGH  = { components , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3964 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3964 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3964 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3964 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3964 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3964 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3964 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3965 :	"d"
		- NEIGH  = { components_ , components , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3965 :	"components_"
		- NEIGH  = { components_ , components , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3965 :	"components"
		- NEIGH  = { components_ , components , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3970 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3970 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3970 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3970 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3970 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3971 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3971 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3971 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3971 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3971 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3971 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3971 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3971 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3971 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3971 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3971 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3976 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3976 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3981 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3981 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3981 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3982 :	"crs"
		- NEIGH  = { this , * , < , CompoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3982 :	"CompoundCRS"
		- NEIGH  = { this , * , < , CompoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3982 :	"nn_make_shared"
		- NEIGH  = { this , * , < , CompoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3982 :	"<"
		- NEIGH  = { this , * , < , CompoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3982 :	"CompoundCRS"
		- NEIGH  = { this , * , < , CompoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3982 :	">"
		- NEIGH  = { this , * , < , CompoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3982 :	"*"
		- NEIGH  = { this , * , < , CompoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3982 :	"this"
		- NEIGH  = { this , * , < , CompoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3983 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , CompoundCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

3983 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , CompoundCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

3983 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , CompoundCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

3984 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

3984 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

3993 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3993 :	"vector"
		- NEIGH  = { vector , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3993 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3993 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3993 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3993 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3994 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3994 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3994 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3995 :	"return"
		- NEIGH  = { components_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3995 :	"d"
		- NEIGH  = { components_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3995 :	"components_"
		- NEIGH  = { components_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4008 :	"CompoundCRSNNPtr"
		- NEIGH  = { CompoundCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4008 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4008 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4008 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4008 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4008 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4008 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4009 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4009 :	"vector"
		- NEIGH  = { vector , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4009 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4009 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4009 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4009 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4009 :	"components"
		- NEIGH  = { components , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4011 :	"if"
		- NEIGH  = { < , size , components , if , }
		- PARENT = { }
		- CHILD  = { InvalidCompoundCRSException , throw , }
		- PRED   = { }
		- SUCC   = { get , components , comp0 , }

4011 :	"components"
		- NEIGH  = { < , size , components , if , }
		- PARENT = { }
		- CHILD  = { InvalidCompoundCRSException , throw , }
		- PRED   = { }
		- SUCC   = { get , components , comp0 , }

4011 :	"size"
		- NEIGH  = { < , size , components , if , }
		- PARENT = { }
		- CHILD  = { InvalidCompoundCRSException , throw , }
		- PRED   = { }
		- SUCC   = { get , components , comp0 , }

4011 :	"<"
		- NEIGH  = { < , size , components , if , }
		- PARENT = { }
		- CHILD  = { InvalidCompoundCRSException , throw , }
		- PRED   = { }
		- SUCC   = { get , components , comp0 , }

4012 :	"throw"
		- NEIGH  = { InvalidCompoundCRSException , throw , }
		- PARENT = { < , size , components , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4012 :	"InvalidCompoundCRSException"
		- NEIGH  = { InvalidCompoundCRSException , throw , }
		- PARENT = { < , size , components , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4016 :	"comp0"
		- NEIGH  = { get , components , comp0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , size , components , if , }
		- SUCC   = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }

4016 :	"components"
		- NEIGH  = { get , components , comp0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , size , components , if , }
		- SUCC   = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }

4016 :	"get"
		- NEIGH  = { get , components , comp0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , size , components , if , }
		- SUCC   = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }

4017 :	"comp0Bound"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { get , components , comp0 , }
		- SUCC   = { comp0Bound , if , }

4017 :	"dynamic_cast"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { get , components , comp0 , }
		- SUCC   = { comp0Bound , if , }

4017 :	"<"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { get , components , comp0 , }
		- SUCC   = { comp0Bound , if , }

4017 :	"BoundCRS"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { get , components , comp0 , }
		- SUCC   = { comp0Bound , if , }

4017 :	"*"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { get , components , comp0 , }
		- SUCC   = { comp0Bound , if , }

4017 :	">"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { get , components , comp0 , }
		- SUCC   = { comp0Bound , if , }

4017 :	"comp0"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { get , components , comp0 , }
		- SUCC   = { comp0Bound , if , }

4018 :	"if"
		- NEIGH  = { comp0Bound , if , }
		- PARENT = { }
		- CHILD  = { get , baseCRS , comp0Bound , comp0 , }
		- PRED   = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }
		- SUCC   = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }

4018 :	"comp0Bound"
		- NEIGH  = { comp0Bound , if , }
		- PARENT = { }
		- CHILD  = { get , baseCRS , comp0Bound , comp0 , }
		- PRED   = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }
		- SUCC   = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }

4019 :	"comp0"
		- NEIGH  = { get , baseCRS , comp0Bound , comp0 , }
		- PARENT = { comp0Bound , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4019 :	"comp0Bound"
		- NEIGH  = { get , baseCRS , comp0Bound , comp0 , }
		- PARENT = { comp0Bound , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4019 :	"baseCRS"
		- NEIGH  = { get , baseCRS , comp0Bound , comp0 , }
		- PARENT = { comp0Bound , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4019 :	"get"
		- NEIGH  = { get , baseCRS , comp0Bound , comp0 , }
		- PARENT = { comp0Bound , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4021 :	"comp0Geog"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0Bound , if , }
		- SUCC   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }

4021 :	"dynamic_cast"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0Bound , if , }
		- SUCC   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }

4021 :	"<"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0Bound , if , }
		- SUCC   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }

4021 :	"GeographicCRS"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0Bound , if , }
		- SUCC   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }

4021 :	"*"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0Bound , if , }
		- SUCC   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }

4021 :	">"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0Bound , if , }
		- SUCC   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }

4021 :	"comp0"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0Bound , if , }
		- SUCC   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }

4022 :	"comp0Proj"
		- NEIGH  = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- SUCC   = { comp0 , > , dynamic_cast , * , EngineeringCRS , < , comp0Eng , }

4022 :	"dynamic_cast"
		- NEIGH  = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- SUCC   = { comp0 , > , dynamic_cast , * , EngineeringCRS , < , comp0Eng , }

4022 :	"<"
		- NEIGH  = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- SUCC   = { comp0 , > , dynamic_cast , * , EngineeringCRS , < , comp0Eng , }

4022 :	"ProjectedCRS"
		- NEIGH  = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- SUCC   = { comp0 , > , dynamic_cast , * , EngineeringCRS , < , comp0Eng , }

4022 :	"*"
		- NEIGH  = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- SUCC   = { comp0 , > , dynamic_cast , * , EngineeringCRS , < , comp0Eng , }

4022 :	">"
		- NEIGH  = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- SUCC   = { comp0 , > , dynamic_cast , * , EngineeringCRS , < , comp0Eng , }

4022 :	"comp0"
		- NEIGH  = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- SUCC   = { comp0 , > , dynamic_cast , * , EngineeringCRS , < , comp0Eng , }

4023 :	"comp0Eng"
		- NEIGH  = { comp0 , > , dynamic_cast , * , EngineeringCRS , < , comp0Eng , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- SUCC   = { get , components , comp1 , }

4023 :	"dynamic_cast"
		- NEIGH  = { comp0 , > , dynamic_cast , * , EngineeringCRS , < , comp0Eng , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- SUCC   = { get , components , comp1 , }

4023 :	"<"
		- NEIGH  = { comp0 , > , dynamic_cast , * , EngineeringCRS , < , comp0Eng , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- SUCC   = { get , components , comp1 , }

4023 :	"EngineeringCRS"
		- NEIGH  = { comp0 , > , dynamic_cast , * , EngineeringCRS , < , comp0Eng , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- SUCC   = { get , components , comp1 , }

4023 :	"*"
		- NEIGH  = { comp0 , > , dynamic_cast , * , EngineeringCRS , < , comp0Eng , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- SUCC   = { get , components , comp1 , }

4023 :	">"
		- NEIGH  = { comp0 , > , dynamic_cast , * , EngineeringCRS , < , comp0Eng , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- SUCC   = { get , components , comp1 , }

4023 :	"comp0"
		- NEIGH  = { comp0 , > , dynamic_cast , * , EngineeringCRS , < , comp0Eng , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- SUCC   = { get , components , comp1 , }

4025 :	"comp1"
		- NEIGH  = { get , components , comp1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0 , > , dynamic_cast , * , EngineeringCRS , < , comp0Eng , }
		- SUCC   = { comp1 , > , dynamic_cast , * , < , BoundCRS , comp1Bound , }

4025 :	"components"
		- NEIGH  = { get , components , comp1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0 , > , dynamic_cast , * , EngineeringCRS , < , comp0Eng , }
		- SUCC   = { comp1 , > , dynamic_cast , * , < , BoundCRS , comp1Bound , }

4025 :	"get"
		- NEIGH  = { get , components , comp1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0 , > , dynamic_cast , * , EngineeringCRS , < , comp0Eng , }
		- SUCC   = { comp1 , > , dynamic_cast , * , < , BoundCRS , comp1Bound , }

4026 :	"comp1Bound"
		- NEIGH  = { comp1 , > , dynamic_cast , * , < , BoundCRS , comp1Bound , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { get , components , comp1 , }
		- SUCC   = { comp1Bound , if , }

4026 :	"dynamic_cast"
		- NEIGH  = { comp1 , > , dynamic_cast , * , < , BoundCRS , comp1Bound , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { get , components , comp1 , }
		- SUCC   = { comp1Bound , if , }

4026 :	"<"
		- NEIGH  = { comp1 , > , dynamic_cast , * , < , BoundCRS , comp1Bound , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { get , components , comp1 , }
		- SUCC   = { comp1Bound , if , }

4026 :	"BoundCRS"
		- NEIGH  = { comp1 , > , dynamic_cast , * , < , BoundCRS , comp1Bound , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { get , components , comp1 , }
		- SUCC   = { comp1Bound , if , }

4026 :	"*"
		- NEIGH  = { comp1 , > , dynamic_cast , * , < , BoundCRS , comp1Bound , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { get , components , comp1 , }
		- SUCC   = { comp1Bound , if , }

4026 :	">"
		- NEIGH  = { comp1 , > , dynamic_cast , * , < , BoundCRS , comp1Bound , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { get , components , comp1 , }
		- SUCC   = { comp1Bound , if , }

4026 :	"comp1"
		- NEIGH  = { comp1 , > , dynamic_cast , * , < , BoundCRS , comp1Bound , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { get , components , comp1 , }
		- SUCC   = { comp1Bound , if , }

4027 :	"if"
		- NEIGH  = { comp1Bound , if , }
		- PARENT = { }
		- CHILD  = { get , baseCRS , comp1Bound , comp1 , }
		- PRED   = { comp1 , > , dynamic_cast , * , < , BoundCRS , comp1Bound , }
		- SUCC   = { comp1 , > , VerticalCRS , < , dynamic_cast , * , comp1Vert , }

4027 :	"comp1Bound"
		- NEIGH  = { comp1Bound , if , }
		- PARENT = { }
		- CHILD  = { get , baseCRS , comp1Bound , comp1 , }
		- PRED   = { comp1 , > , dynamic_cast , * , < , BoundCRS , comp1Bound , }
		- SUCC   = { comp1 , > , VerticalCRS , < , dynamic_cast , * , comp1Vert , }

4028 :	"comp1"
		- NEIGH  = { get , baseCRS , comp1Bound , comp1 , }
		- PARENT = { comp1Bound , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4028 :	"comp1Bound"
		- NEIGH  = { get , baseCRS , comp1Bound , comp1 , }
		- PARENT = { comp1Bound , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4028 :	"baseCRS"
		- NEIGH  = { get , baseCRS , comp1Bound , comp1 , }
		- PARENT = { comp1Bound , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4028 :	"get"
		- NEIGH  = { get , baseCRS , comp1Bound , comp1 , }
		- PARENT = { comp1Bound , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4030 :	"comp1Vert"
		- NEIGH  = { comp1 , > , VerticalCRS , < , dynamic_cast , * , comp1Vert , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp1Bound , if , }
		- SUCC   = { comp1 , > , dynamic_cast , * , EngineeringCRS , < , comp1Eng , }

4030 :	"dynamic_cast"
		- NEIGH  = { comp1 , > , VerticalCRS , < , dynamic_cast , * , comp1Vert , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp1Bound , if , }
		- SUCC   = { comp1 , > , dynamic_cast , * , EngineeringCRS , < , comp1Eng , }

4030 :	"<"
		- NEIGH  = { comp1 , > , VerticalCRS , < , dynamic_cast , * , comp1Vert , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp1Bound , if , }
		- SUCC   = { comp1 , > , dynamic_cast , * , EngineeringCRS , < , comp1Eng , }

4030 :	"VerticalCRS"
		- NEIGH  = { comp1 , > , VerticalCRS , < , dynamic_cast , * , comp1Vert , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp1Bound , if , }
		- SUCC   = { comp1 , > , dynamic_cast , * , EngineeringCRS , < , comp1Eng , }

4030 :	"*"
		- NEIGH  = { comp1 , > , VerticalCRS , < , dynamic_cast , * , comp1Vert , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp1Bound , if , }
		- SUCC   = { comp1 , > , dynamic_cast , * , EngineeringCRS , < , comp1Eng , }

4030 :	">"
		- NEIGH  = { comp1 , > , VerticalCRS , < , dynamic_cast , * , comp1Vert , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp1Bound , if , }
		- SUCC   = { comp1 , > , dynamic_cast , * , EngineeringCRS , < , comp1Eng , }

4030 :	"comp1"
		- NEIGH  = { comp1 , > , VerticalCRS , < , dynamic_cast , * , comp1Vert , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp1Bound , if , }
		- SUCC   = { comp1 , > , dynamic_cast , * , EngineeringCRS , < , comp1Eng , }

4031 :	"comp1Eng"
		- NEIGH  = { comp1 , > , dynamic_cast , * , EngineeringCRS , < , comp1Eng , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp1 , > , VerticalCRS , < , dynamic_cast , * , comp1Vert , }
		- SUCC   = { ok , }

4031 :	"dynamic_cast"
		- NEIGH  = { comp1 , > , dynamic_cast , * , EngineeringCRS , < , comp1Eng , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp1 , > , VerticalCRS , < , dynamic_cast , * , comp1Vert , }
		- SUCC   = { ok , }

4031 :	"<"
		- NEIGH  = { comp1 , > , dynamic_cast , * , EngineeringCRS , < , comp1Eng , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp1 , > , VerticalCRS , < , dynamic_cast , * , comp1Vert , }
		- SUCC   = { ok , }

4031 :	"EngineeringCRS"
		- NEIGH  = { comp1 , > , dynamic_cast , * , EngineeringCRS , < , comp1Eng , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp1 , > , VerticalCRS , < , dynamic_cast , * , comp1Vert , }
		- SUCC   = { ok , }

4031 :	"*"
		- NEIGH  = { comp1 , > , dynamic_cast , * , EngineeringCRS , < , comp1Eng , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp1 , > , VerticalCRS , < , dynamic_cast , * , comp1Vert , }
		- SUCC   = { ok , }

4031 :	">"
		- NEIGH  = { comp1 , > , dynamic_cast , * , EngineeringCRS , < , comp1Eng , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp1 , > , VerticalCRS , < , dynamic_cast , * , comp1Vert , }
		- SUCC   = { ok , }

4031 :	"comp1"
		- NEIGH  = { comp1 , > , dynamic_cast , * , EngineeringCRS , < , comp1Eng , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp1 , > , VerticalCRS , < , dynamic_cast , * , comp1Vert , }
		- SUCC   = { ok , }

4034 :	"ok"
		- NEIGH  = { ok , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp1 , > , dynamic_cast , * , EngineeringCRS , < , comp1Eng , }
		- SUCC   = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }

4035 :	"if"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4035 :	"comp0Geog"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4035 :	"&&"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4035 :	"comp0Geog"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4035 :	"coordinateSystem"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4035 :	"axisList"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4035 :	"size"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4035 :	"=="
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4035 :	"&&"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4036 :	"comp1Vert"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4036 :	"||"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4037 :	"comp1Eng"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4037 :	"&&"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4038 :	"comp1Eng"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4038 :	"coordinateSystem"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4038 :	"axisList"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4038 :	"size"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4038 :	"=="
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4038 :	"||"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4039 :	"comp0Proj"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4039 :	"&&"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4039 :	"comp0Proj"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4039 :	"coordinateSystem"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4039 :	"axisList"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4039 :	"size"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4039 :	"=="
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4039 :	"&&"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4040 :	"comp1Vert"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4040 :	"||"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4041 :	"comp1Eng"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4041 :	"&&"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4042 :	"comp1Eng"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4042 :	"coordinateSystem"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4042 :	"axisList"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4042 :	"size"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4042 :	"=="
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4042 :	"||"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4043 :	"comp0Eng"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4043 :	"&&"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4043 :	"comp0Eng"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4043 :	"coordinateSystem"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4043 :	"axisList"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4043 :	"size"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4043 :	"<="
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4043 :	"&&"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4044 :	"comp1Vert"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4046 :	"ok"
		- NEIGH  = { ok , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4048 :	"isComp0Spatial"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4048 :	"comp0Geog"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4048 :	"||"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4048 :	"comp0Proj"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4048 :	"||"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4048 :	"comp0Eng"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4048 :	"||"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4049 :	"dynamic_cast"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4049 :	"<"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4049 :	"GeodeticCRS"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4049 :	"*"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4049 :	">"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4049 :	"comp0"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4049 :	"||"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4050 :	"dynamic_cast"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4050 :	"<"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4050 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4050 :	"*"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4050 :	">"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4050 :	"comp0"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4051 :	"if"
		- NEIGH  = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { comp1 , > , < , ParametricCRS , ok , && , if , isComp0Spatial , * , dynamic_cast , }
		- PRED   = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- SUCC   = { }

4051 :	"isComp0Spatial"
		- NEIGH  = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { comp1 , > , < , ParametricCRS , ok , && , if , isComp0Spatial , * , dynamic_cast , }
		- PRED   = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- SUCC   = { }

4051 :	"&&"
		- NEIGH  = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { comp1 , > , < , ParametricCRS , ok , && , if , isComp0Spatial , * , dynamic_cast , }
		- PRED   = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- SUCC   = { }

4051 :	"dynamic_cast"
		- NEIGH  = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { comp1 , > , < , ParametricCRS , ok , && , if , isComp0Spatial , * , dynamic_cast , }
		- PRED   = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- SUCC   = { }

4051 :	"<"
		- NEIGH  = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { comp1 , > , < , ParametricCRS , ok , && , if , isComp0Spatial , * , dynamic_cast , }
		- PRED   = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- SUCC   = { }

4051 :	"TemporalCRS"
		- NEIGH  = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { comp1 , > , < , ParametricCRS , ok , && , if , isComp0Spatial , * , dynamic_cast , }
		- PRED   = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- SUCC   = { }

4051 :	"*"
		- NEIGH  = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { comp1 , > , < , ParametricCRS , ok , && , if , isComp0Spatial , * , dynamic_cast , }
		- PRED   = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- SUCC   = { }

4051 :	">"
		- NEIGH  = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { comp1 , > , < , ParametricCRS , ok , && , if , isComp0Spatial , * , dynamic_cast , }
		- PRED   = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- SUCC   = { }

4051 :	"comp1"
		- NEIGH  = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { comp1 , > , < , ParametricCRS , ok , && , if , isComp0Spatial , * , dynamic_cast , }
		- PRED   = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- SUCC   = { }

4053 :	"ok"
		- NEIGH  = { ok , }
		- PARENT = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4054 :	"if"
		- NEIGH  = { comp1 , > , ParametricCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- CHILD  = { ok , }
		- PRED   = { }
		- SUCC   = { }

4054 :	"isComp0Spatial"
		- NEIGH  = { comp1 , > , ParametricCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- CHILD  = { ok , }
		- PRED   = { }
		- SUCC   = { }

4054 :	"&&"
		- NEIGH  = { comp1 , > , ParametricCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- CHILD  = { ok , }
		- PRED   = { }
		- SUCC   = { }

4055 :	"dynamic_cast"
		- NEIGH  = { comp1 , > , ParametricCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- CHILD  = { ok , }
		- PRED   = { }
		- SUCC   = { }

4055 :	"<"
		- NEIGH  = { comp1 , > , ParametricCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- CHILD  = { ok , }
		- PRED   = { }
		- SUCC   = { }

4055 :	"ParametricCRS"
		- NEIGH  = { comp1 , > , ParametricCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- CHILD  = { ok , }
		- PRED   = { }
		- SUCC   = { }

4055 :	"*"
		- NEIGH  = { comp1 , > , ParametricCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- CHILD  = { ok , }
		- PRED   = { }
		- SUCC   = { }

4055 :	">"
		- NEIGH  = { comp1 , > , ParametricCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- CHILD  = { ok , }
		- PRED   = { }
		- SUCC   = { }

4055 :	"comp1"
		- NEIGH  = { comp1 , > , ParametricCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- CHILD  = { ok , }
		- PRED   = { }
		- SUCC   = { }

4057 :	"ok"
		- NEIGH  = { ok , }
		- PARENT = { comp1 , > , ParametricCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4060 :	"if"
		- NEIGH  = { ok , ! , if , }
		- PARENT = { }
		- CHILD  = { InvalidCompoundCRSException , throw , }
		- PRED   = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- SUCC   = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }

4060 :	"!"
		- NEIGH  = { ok , ! , if , }
		- PARENT = { }
		- CHILD  = { InvalidCompoundCRSException , throw , }
		- PRED   = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- SUCC   = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }

4060 :	"ok"
		- NEIGH  = { ok , ! , if , }
		- PARENT = { }
		- CHILD  = { InvalidCompoundCRSException , throw , }
		- PRED   = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- SUCC   = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }

4061 :	"throw"
		- NEIGH  = { InvalidCompoundCRSException , throw , }
		- PARENT = { ok , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4061 :	"InvalidCompoundCRSException"
		- NEIGH  = { InvalidCompoundCRSException , throw , }
		- PARENT = { ok , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4067 :	"compoundCRS"
		- NEIGH  = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ok , ! , if , }
		- SUCC   = { assignSelf , compoundCRS , }

4067 :	"CompoundCRS"
		- NEIGH  = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ok , ! , if , }
		- SUCC   = { assignSelf , compoundCRS , }

4067 :	"nn_make_shared"
		- NEIGH  = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ok , ! , if , }
		- SUCC   = { assignSelf , compoundCRS , }

4067 :	"<"
		- NEIGH  = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ok , ! , if , }
		- SUCC   = { assignSelf , compoundCRS , }

4067 :	"CompoundCRS"
		- NEIGH  = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ok , ! , if , }
		- SUCC   = { assignSelf , compoundCRS , }

4067 :	">"
		- NEIGH  = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ok , ! , if , }
		- SUCC   = { assignSelf , compoundCRS , }

4067 :	"components"
		- NEIGH  = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ok , ! , if , }
		- SUCC   = { assignSelf , compoundCRS , }

4068 :	"compoundCRS"
		- NEIGH  = { assignSelf , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }
		- SUCC   = { setProperties , properties , compoundCRS , }

4068 :	"assignSelf"
		- NEIGH  = { assignSelf , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }
		- SUCC   = { setProperties , properties , compoundCRS , }

4068 :	"compoundCRS"
		- NEIGH  = { assignSelf , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }
		- SUCC   = { setProperties , properties , compoundCRS , }

4069 :	"compoundCRS"
		- NEIGH  = { setProperties , properties , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , compoundCRS , }
		- SUCC   = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }

4069 :	"setProperties"
		- NEIGH  = { setProperties , properties , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , compoundCRS , }
		- SUCC   = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }

4069 :	"properties"
		- NEIGH  = { setProperties , properties , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , compoundCRS , }
		- SUCC   = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }

4070 :	"if"
		- NEIGH  = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- PARENT = { }
		- CHILD  = { compoundCRS , NAME_KEY , components , set , IdentifiedObject , PropertyMap , util , & , crs , string , common , for , propertyName , name , setProperties , std , }
		- PRED   = { setProperties , properties , compoundCRS , }
		- SUCC   = { compoundCRS , return , }

4070 :	"!"
		- NEIGH  = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- PARENT = { }
		- CHILD  = { compoundCRS , NAME_KEY , components , set , IdentifiedObject , PropertyMap , util , & , crs , string , common , for , propertyName , name , setProperties , std , }
		- PRED   = { setProperties , properties , compoundCRS , }
		- SUCC   = { compoundCRS , return , }

4070 :	"properties"
		- NEIGH  = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- PARENT = { }
		- CHILD  = { compoundCRS , NAME_KEY , components , set , IdentifiedObject , PropertyMap , util , & , crs , string , common , for , propertyName , name , setProperties , std , }
		- PRED   = { setProperties , properties , compoundCRS , }
		- SUCC   = { compoundCRS , return , }

4070 :	"get"
		- NEIGH  = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- PARENT = { }
		- CHILD  = { compoundCRS , NAME_KEY , components , set , IdentifiedObject , PropertyMap , util , & , crs , string , common , for , propertyName , name , setProperties , std , }
		- PRED   = { setProperties , properties , compoundCRS , }
		- SUCC   = { compoundCRS , return , }

4070 :	"common"
		- NEIGH  = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- PARENT = { }
		- CHILD  = { compoundCRS , NAME_KEY , components , set , IdentifiedObject , PropertyMap , util , & , crs , string , common , for , propertyName , name , setProperties , std , }
		- PRED   = { setProperties , properties , compoundCRS , }
		- SUCC   = { compoundCRS , return , }

4070 :	"IdentifiedObject"
		- NEIGH  = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- PARENT = { }
		- CHILD  = { compoundCRS , NAME_KEY , components , set , IdentifiedObject , PropertyMap , util , & , crs , string , common , for , propertyName , name , setProperties , std , }
		- PRED   = { setProperties , properties , compoundCRS , }
		- SUCC   = { compoundCRS , return , }

4070 :	"NAME_KEY"
		- NEIGH  = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- PARENT = { }
		- CHILD  = { compoundCRS , NAME_KEY , components , set , IdentifiedObject , PropertyMap , util , & , crs , string , common , for , propertyName , name , setProperties , std , }
		- PRED   = { setProperties , properties , compoundCRS , }
		- SUCC   = { compoundCRS , return , }

4071 :	"std"
		- NEIGH  = { string , name , std , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { components , crs , & , for , }

4071 :	"string"
		- NEIGH  = { string , name , std , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { components , crs , & , for , }

4071 :	"name"
		- NEIGH  = { string , name , std , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { components , crs , & , for , }

4072 :	"for"
		- NEIGH  = { components , crs , & , for , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { nameStr , l_name , & , crs , empty , if , ! , name , }
		- PRED   = { string , name , std , }
		- SUCC   = { propertyName , PropertyMap , util , }

4072 :	"&"
		- NEIGH  = { components , crs , & , for , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { nameStr , l_name , & , crs , empty , if , ! , name , }
		- PRED   = { string , name , std , }
		- SUCC   = { propertyName , PropertyMap , util , }

4072 :	"crs"
		- NEIGH  = { components , crs , & , for , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { nameStr , l_name , & , crs , empty , if , ! , name , }
		- PRED   = { string , name , std , }
		- SUCC   = { propertyName , PropertyMap , util , }

4072 :	"components"
		- NEIGH  = { components , crs , & , for , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { nameStr , l_name , & , crs , empty , if , ! , name , }
		- PRED   = { string , name , std , }
		- SUCC   = { propertyName , PropertyMap , util , }

4073 :	"if"
		- NEIGH  = { empty , ! , name , if , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { += , name , }
		- PRED   = { }
		- SUCC   = { nameStr , crs , l_name , & , }

4073 :	"!"
		- NEIGH  = { empty , ! , name , if , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { += , name , }
		- PRED   = { }
		- SUCC   = { nameStr , crs , l_name , & , }

4073 :	"name"
		- NEIGH  = { empty , ! , name , if , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { += , name , }
		- PRED   = { }
		- SUCC   = { nameStr , crs , l_name , & , }

4073 :	"empty"
		- NEIGH  = { empty , ! , name , if , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { += , name , }
		- PRED   = { }
		- SUCC   = { nameStr , crs , l_name , & , }

4074 :	"name"
		- NEIGH  = { += , name , }
		- PARENT = { empty , ! , name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4074 :	"+="
		- NEIGH  = { += , name , }
		- PARENT = { empty , ! , name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4076 :	"&"
		- NEIGH  = { nameStr , crs , l_name , & , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ! , name , if , }
		- SUCC   = { empty , l_name , ! , if , }

4076 :	"l_name"
		- NEIGH  = { nameStr , crs , l_name , & , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ! , name , if , }
		- SUCC   = { empty , l_name , ! , if , }

4076 :	"crs"
		- NEIGH  = { nameStr , crs , l_name , & , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ! , name , if , }
		- SUCC   = { empty , l_name , ! , if , }

4076 :	"nameStr"
		- NEIGH  = { nameStr , crs , l_name , & , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ! , name , if , }
		- SUCC   = { empty , l_name , ! , if , }

4077 :	"if"
		- NEIGH  = { empty , l_name , ! , if , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { l_name , += , name , }
		- PRED   = { nameStr , crs , l_name , & , }
		- SUCC   = { }

4077 :	"!"
		- NEIGH  = { empty , l_name , ! , if , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { l_name , += , name , }
		- PRED   = { nameStr , crs , l_name , & , }
		- SUCC   = { }

4077 :	"l_name"
		- NEIGH  = { empty , l_name , ! , if , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { l_name , += , name , }
		- PRED   = { nameStr , crs , l_name , & , }
		- SUCC   = { }

4077 :	"empty"
		- NEIGH  = { empty , l_name , ! , if , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { l_name , += , name , }
		- PRED   = { nameStr , crs , l_name , & , }
		- SUCC   = { }

4078 :	"name"
		- NEIGH  = { l_name , += , name , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4078 :	"+="
		- NEIGH  = { l_name , += , name , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4078 :	"l_name"
		- NEIGH  = { l_name , += , name , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4080 :	"name"
		- NEIGH  = { += , name , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4080 :	"+="
		- NEIGH  = { += , name , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4083 :	"util"
		- NEIGH  = { propertyName , PropertyMap , util , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { components , crs , & , for , }
		- SUCC   = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }

4083 :	"PropertyMap"
		- NEIGH  = { propertyName , PropertyMap , util , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { components , crs , & , for , }
		- SUCC   = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }

4083 :	"propertyName"
		- NEIGH  = { propertyName , PropertyMap , util , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { components , crs , & , for , }
		- SUCC   = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }

4084 :	"propertyName"
		- NEIGH  = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { propertyName , PropertyMap , util , }
		- SUCC   = { propertyName , setProperties , compoundCRS , }

4084 :	"set"
		- NEIGH  = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { propertyName , PropertyMap , util , }
		- SUCC   = { propertyName , setProperties , compoundCRS , }

4084 :	"common"
		- NEIGH  = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { propertyName , PropertyMap , util , }
		- SUCC   = { propertyName , setProperties , compoundCRS , }

4084 :	"IdentifiedObject"
		- NEIGH  = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { propertyName , PropertyMap , util , }
		- SUCC   = { propertyName , setProperties , compoundCRS , }

4084 :	"NAME_KEY"
		- NEIGH  = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { propertyName , PropertyMap , util , }
		- SUCC   = { propertyName , setProperties , compoundCRS , }

4084 :	"name"
		- NEIGH  = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { propertyName , PropertyMap , util , }
		- SUCC   = { propertyName , setProperties , compoundCRS , }

4085 :	"compoundCRS"
		- NEIGH  = { propertyName , setProperties , compoundCRS , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }
		- SUCC   = { }

4085 :	"setProperties"
		- NEIGH  = { propertyName , setProperties , compoundCRS , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }
		- SUCC   = { }

4085 :	"propertyName"
		- NEIGH  = { propertyName , setProperties , compoundCRS , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }
		- SUCC   = { }

4088 :	"return"
		- NEIGH  = { compoundCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- SUCC   = { }

4088 :	"compoundCRS"
		- NEIGH  = { compoundCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- SUCC   = { }

4094 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4094 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4094 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4094 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4094 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4094 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4095 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }

4095 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }

4095 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }

4095 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }

4095 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }

4095 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }

4095 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }

4095 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }

4096 :	"formatter"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4096 :	"startNode"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4096 :	"isWKT2"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4096 :	"io"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4096 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4096 :	"COMPOUNDCRS"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4097 :	"io"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4097 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4097 :	"COMPD_CS"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4098 :	"!"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4098 :	"identifiers"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4098 :	"empty"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4099 :	"formatter"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- SUCC   = { componentReferenceSystems , crs , & , for , }

4099 :	"addQuotedString"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- SUCC   = { componentReferenceSystems , crs , & , for , }

4099 :	"nameStr"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- SUCC   = { componentReferenceSystems , crs , & , for , }

4100 :	"for"
		- NEIGH  = { componentReferenceSystems , crs , & , for , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , crs , }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

4100 :	"&"
		- NEIGH  = { componentReferenceSystems , crs , & , for , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , crs , }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

4100 :	"crs"
		- NEIGH  = { componentReferenceSystems , crs , & , for , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , crs , }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

4100 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , crs , & , for , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , crs , }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

4101 :	"crs"
		- NEIGH  = { formatter , _exportToWKT , crs , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4101 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , crs , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4101 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , crs , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4103 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , crs , & , for , }
		- SUCC   = { endNode , formatter , }

4103 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , crs , & , for , }
		- SUCC   = { endNode , formatter , }

4103 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , crs , & , for , }
		- SUCC   = { endNode , formatter , }

4104 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

4104 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

4111 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4111 :	"_exportToJSON"
		- NEIGH  = { _exportToJSON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4112 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4112 :	"JSONFormatter"
		- NEIGH  = { JSONFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4112 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4112 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4114 :	"&"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

4114 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

4114 :	"formatter"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

4114 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

4115 :	"objectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

4116 :	"formatter"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

4116 :	"MakeObjectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

4116 :	"!"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

4116 :	"identifiers"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

4116 :	"empty"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

4118 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

4118 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

4119 :	"l_name"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

4119 :	"nameStr"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

4120 :	"if"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

4120 :	"l_name"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

4120 :	"empty"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

4121 :	"writer"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4121 :	"Add"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4123 :	"writer"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4123 :	"Add"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4123 :	"l_name"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4126 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { MakeArrayContext , writer , componentsContext , }

4126 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { MakeArrayContext , writer , componentsContext , }

4128 :	"componentsContext"
		- NEIGH  = { MakeArrayContext , writer , componentsContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { componentReferenceSystems , crs , & , for , }

4128 :	"writer"
		- NEIGH  = { MakeArrayContext , writer , componentsContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { componentReferenceSystems , crs , & , for , }

4128 :	"MakeArrayContext"
		- NEIGH  = { MakeArrayContext , writer , componentsContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { componentReferenceSystems , crs , & , for , }

4129 :	"for"
		- NEIGH  = { componentReferenceSystems , crs , & , for , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToJSON , crs , }
		- PRED   = { MakeArrayContext , writer , componentsContext , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

4129 :	"&"
		- NEIGH  = { componentReferenceSystems , crs , & , for , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToJSON , crs , }
		- PRED   = { MakeArrayContext , writer , componentsContext , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

4129 :	"crs"
		- NEIGH  = { componentReferenceSystems , crs , & , for , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToJSON , crs , }
		- PRED   = { MakeArrayContext , writer , componentsContext , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

4129 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , crs , & , for , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToJSON , crs , }
		- PRED   = { MakeArrayContext , writer , componentsContext , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

4130 :	"crs"
		- NEIGH  = { formatter , _exportToJSON , crs , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4130 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , crs , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4130 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , crs , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4134 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , crs , & , for , }
		- SUCC   = { }

4134 :	"baseExportToJSON"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , crs , & , for , }
		- SUCC   = { }

4134 :	"formatter"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , crs , & , for , }
		- SUCC   = { }

4140 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4140 :	"_exportToPROJString"
		- NEIGH  = { _exportToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4141 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4141 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4141 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4141 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4143 :	"for"
		- NEIGH  = { componentReferenceSystems , crs , & , for , }
		- PARENT = { }
		- CHILD  = { if , get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PRED   = { }
		- SUCC   = { }

4143 :	"&"
		- NEIGH  = { componentReferenceSystems , crs , & , for , }
		- PARENT = { }
		- CHILD  = { if , get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PRED   = { }
		- SUCC   = { }

4143 :	"crs"
		- NEIGH  = { componentReferenceSystems , crs , & , for , }
		- PARENT = { }
		- CHILD  = { if , get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PRED   = { }
		- SUCC   = { }

4143 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , crs , & , for , }
		- PARENT = { }
		- CHILD  = { if , get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PRED   = { }
		- SUCC   = { }

4144 :	"crs_exportable"
		- NEIGH  = { get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , if , }

4145 :	"dynamic_cast"
		- NEIGH  = { get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , if , }

4145 :	"<"
		- NEIGH  = { get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , if , }

4145 :	"IPROJStringExportable"
		- NEIGH  = { get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , if , }

4145 :	"*"
		- NEIGH  = { get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , if , }

4145 :	">"
		- NEIGH  = { get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , if , }

4145 :	"crs"
		- NEIGH  = { get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , if , }

4145 :	"get"
		- NEIGH  = { get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , if , }

4146 :	"if"
		- NEIGH  = { crs_exportable , if , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { formatter , _exportToPROJString , crs_exportable , }
		- PRED   = { get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- SUCC   = { }

4146 :	"crs_exportable"
		- NEIGH  = { crs_exportable , if , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { formatter , _exportToPROJString , crs_exportable , }
		- PRED   = { get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- SUCC   = { }

4147 :	"crs_exportable"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { crs_exportable , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4147 :	"_exportToPROJString"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { crs_exportable , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4147 :	"formatter"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { crs_exportable , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4154 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4154 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4155 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4155 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4155 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4155 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4155 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4155 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4155 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4155 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4156 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4156 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4156 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4156 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4157 :	"otherCompoundCRS"
		- NEIGH  = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

4157 :	"dynamic_cast"
		- NEIGH  = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

4157 :	"<"
		- NEIGH  = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

4157 :	"CompoundCRS"
		- NEIGH  = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

4157 :	"*"
		- NEIGH  = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

4157 :	">"
		- NEIGH  = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

4157 :	"other"
		- NEIGH  = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

4158 :	"if"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

4158 :	"otherCompoundCRS"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

4158 :	"=="
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

4158 :	"||"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

4159 :	"criterion"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

4159 :	"=="
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

4159 :	"util"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

4159 :	"IComparable"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

4159 :	"Criterion"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

4159 :	"STRICT"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

4159 :	"&&"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

4160 :	"!"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

4160 :	"ObjectUsage"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

4160 :	"_isEquivalentTo"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

4160 :	"other"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

4160 :	"criterion"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

4160 :	"dbContext"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

4161 :	"return"
		- NEIGH  = { return , }
		- PARENT = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4163 :	"&"
		- NEIGH  = { componentReferenceSystems , components , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- SUCC   = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }

4163 :	"components"
		- NEIGH  = { componentReferenceSystems , components , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- SUCC   = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }

4163 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , components , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- SUCC   = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }

4164 :	"&"
		- NEIGH  = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , components , & , }
		- SUCC   = { otherComponents , != , size , components , if , }

4164 :	"otherComponents"
		- NEIGH  = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , components , & , }
		- SUCC   = { otherComponents , != , size , components , if , }

4164 :	"otherCompoundCRS"
		- NEIGH  = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , components , & , }
		- SUCC   = { otherComponents , != , size , components , if , }

4164 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , components , & , }
		- SUCC   = { otherComponents , != , size , components , if , }

4165 :	"if"
		- NEIGH  = { otherComponents , != , size , components , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }
		- SUCC   = { components , ++ , size_t , i , < , size , for , }

4165 :	"components"
		- NEIGH  = { otherComponents , != , size , components , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }
		- SUCC   = { components , ++ , size_t , i , < , size , for , }

4165 :	"size"
		- NEIGH  = { otherComponents , != , size , components , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }
		- SUCC   = { components , ++ , size_t , i , < , size , for , }

4165 :	"!="
		- NEIGH  = { otherComponents , != , size , components , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }
		- SUCC   = { components , ++ , size_t , i , < , size , for , }

4165 :	"otherComponents"
		- NEIGH  = { otherComponents , != , size , components , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }
		- SUCC   = { components , ++ , size_t , i , < , size , for , }

4165 :	"size"
		- NEIGH  = { otherComponents , != , size , components , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }
		- SUCC   = { components , ++ , size_t , i , < , size , for , }

4166 :	"return"
		- NEIGH  = { return , }
		- PARENT = { otherComponents , != , size , components , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4168 :	"for"
		- NEIGH  = { components , ++ , size_t , i , < , size , for , }
		- PARENT = { }
		- CHILD  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PRED   = { otherComponents , != , size , components , if , }
		- SUCC   = { return , }

4168 :	"size_t"
		- NEIGH  = { components , ++ , size_t , i , < , size , for , }
		- PARENT = { }
		- CHILD  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PRED   = { otherComponents , != , size , components , if , }
		- SUCC   = { return , }

4168 :	"i"
		- NEIGH  = { components , ++ , size_t , i , < , size , for , }
		- PARENT = { }
		- CHILD  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PRED   = { otherComponents , != , size , components , if , }
		- SUCC   = { return , }

4168 :	"i"
		- NEIGH  = { components , ++ , size_t , i , < , size , for , }
		- PARENT = { }
		- CHILD  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PRED   = { otherComponents , != , size , components , if , }
		- SUCC   = { return , }

4168 :	"<"
		- NEIGH  = { components , ++ , size_t , i , < , size , for , }
		- PARENT = { }
		- CHILD  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PRED   = { otherComponents , != , size , components , if , }
		- SUCC   = { return , }

4168 :	"components"
		- NEIGH  = { components , ++ , size_t , i , < , size , for , }
		- PARENT = { }
		- CHILD  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PRED   = { otherComponents , != , size , components , if , }
		- SUCC   = { return , }

4168 :	"size"
		- NEIGH  = { components , ++ , size_t , i , < , size , for , }
		- PARENT = { }
		- CHILD  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PRED   = { otherComponents , != , size , components , if , }
		- SUCC   = { return , }

4168 :	"i"
		- NEIGH  = { components , ++ , size_t , i , < , size , for , }
		- PARENT = { }
		- CHILD  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PRED   = { otherComponents , != , size , components , if , }
		- SUCC   = { return , }

4168 :	"++"
		- NEIGH  = { components , ++ , size_t , i , < , size , for , }
		- PARENT = { }
		- CHILD  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PRED   = { otherComponents , != , size , components , if , }
		- SUCC   = { return , }

4169 :	"if"
		- NEIGH  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PARENT = { components , ++ , size_t , i , < , size , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

4169 :	"!"
		- NEIGH  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PARENT = { components , ++ , size_t , i , < , size , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

4169 :	"components"
		- NEIGH  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PARENT = { components , ++ , size_t , i , < , size , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

4169 :	"i"
		- NEIGH  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PARENT = { components , ++ , size_t , i , < , size , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

4169 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PARENT = { components , ++ , size_t , i , < , size , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

4169 :	"otherComponents"
		- NEIGH  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PARENT = { components , ++ , size_t , i , < , size , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

4169 :	"i"
		- NEIGH  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PARENT = { components , ++ , size_t , i , < , size , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

4169 :	"get"
		- NEIGH  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PARENT = { components , ++ , size_t , i , < , size , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

4169 :	"criterion"
		- NEIGH  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PARENT = { components , ++ , size_t , i , < , size , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

4170 :	"dbContext"
		- NEIGH  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PARENT = { components , ++ , size_t , i , < , size , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

4171 :	"return"
		- NEIGH  = { return , }
		- PARENT = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4174 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { components , ++ , size_t , i , < , size , for , }
		- SUCC   = { }

4206 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4206 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4206 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4206 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4206 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4206 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4206 :	"CompoundCRSNNPtr"
		- NEIGH  = { CompoundCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4206 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4207 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4207 :	"identify"
		- NEIGH  = { identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4207 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4207 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4207 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4207 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4208 :	"std"
		- NEIGH  = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4208 :	"pair"
		- NEIGH  = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4208 :	"<"
		- NEIGH  = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4208 :	"CompoundCRSNNPtr"
		- NEIGH  = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4208 :	">"
		- NEIGH  = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4208 :	"Pair"
		- NEIGH  = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4209 :	"std"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

4209 :	"list"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

4209 :	"<"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

4209 :	"Pair"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

4209 :	">"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

4209 :	"res"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

4211 :	"&"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { authorityFactory , if , }

4211 :	"thisName"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { authorityFactory , if , }

4211 :	"nameStr"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { authorityFactory , if , }

4213 :	"if"
		- NEIGH  = { authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { size , < , second , identifiers , sort , res , b , foundEquivalentName , hasCodeCompatibleOfAuthorityFactory , thisName , front , authorityFactory , empty , a , dbContext , databaseContext , lambdaSort , if , ! , ci_equal , && , this , >= , unsignificantName , io , || , & , Pair , DatabaseContextNNPtr , }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { res , return , }

4213 :	"authorityFactory"
		- NEIGH  = { authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { size , < , second , identifiers , sort , res , b , foundEquivalentName , hasCodeCompatibleOfAuthorityFactory , thisName , front , authorityFactory , empty , a , dbContext , databaseContext , lambdaSort , if , ! , ci_equal , && , this , >= , unsignificantName , io , || , & , Pair , DatabaseContextNNPtr , }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { res , return , }

4214 :	"io"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

4214 :	"DatabaseContextNNPtr"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

4214 :	"&"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

4214 :	"dbContext"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

4215 :	"authorityFactory"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

4215 :	"databaseContext"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

4217 :	"unsignificantName"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { foundEquivalentName , }

4217 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { foundEquivalentName , }

4217 :	"empty"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { foundEquivalentName , }

4217 :	"||"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { foundEquivalentName , }

4218 :	"ci_equal"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { foundEquivalentName , }

4218 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { foundEquivalentName , }

4218 :	"||"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { foundEquivalentName , }

4219 :	"ci_equal"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { foundEquivalentName , }

4219 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { foundEquivalentName , }

4220 :	"foundEquivalentName"
		- NEIGH  = { foundEquivalentName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { ci_equal , || , empty , thisName , unsignificantName , }
		- SUCC   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }

4222 :	"if"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { unsignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { foundEquivalentName , }
		- SUCC   = { a , Pair , thisName , & , b , lambdaSort , }

4222 :	"hasCodeCompatibleOfAuthorityFactory"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { unsignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { foundEquivalentName , }
		- SUCC   = { a , Pair , thisName , & , b , lambdaSort , }

4222 :	"this"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { unsignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { foundEquivalentName , }
		- SUCC   = { a , Pair , thisName , & , b , lambdaSort , }

4222 :	"authorityFactory"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { unsignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { foundEquivalentName , }
		- SUCC   = { a , Pair , thisName , & , b , lambdaSort , }

4225 :	"for"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

4225 :	"&"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

4225 :	"id"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

4225 :	"identifiers"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

4226 :	"if"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , res , catch , emplace_back , exception , util , get , IComparable , id , code , Criterion , match , * , dbContext , createCompoundCRS , AuthorityFactory , EQUIVALENT , create , std , codeSpace , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

4226 :	"hasCodeCompatibleOfAuthorityFactory"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , res , catch , emplace_back , exception , util , get , IComparable , id , code , Criterion , match , * , dbContext , createCompoundCRS , AuthorityFactory , EQUIVALENT , create , std , codeSpace , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

4226 :	"id"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , res , catch , emplace_back , exception , util , get , IComparable , id , code , Criterion , match , * , dbContext , createCompoundCRS , AuthorityFactory , EQUIVALENT , create , std , codeSpace , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

4226 :	"authorityFactory"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , res , catch , emplace_back , exception , util , get , IComparable , id , code , Criterion , match , * , dbContext , createCompoundCRS , AuthorityFactory , EQUIVALENT , create , std , codeSpace , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

4228 :	"crs"
		- NEIGH  = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }

4228 :	"io"
		- NEIGH  = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }

4228 :	"AuthorityFactory"
		- NEIGH  = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }

4228 :	"create"
		- NEIGH  = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }

4229 :	"dbContext"
		- NEIGH  = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }

4229 :	"*"
		- NEIGH  = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }

4229 :	"id"
		- NEIGH  = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }

4229 :	"codeSpace"
		- NEIGH  = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }

4230 :	"createCompoundCRS"
		- NEIGH  = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }

4230 :	"id"
		- NEIGH  = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }

4230 :	"code"
		- NEIGH  = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }

4231 :	"match"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

4231 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

4232 :	"crs"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

4232 :	"get"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

4232 :	"util"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

4232 :	"IComparable"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

4232 :	"Criterion"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

4232 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

4233 :	"dbContext"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

4234 :	"res"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- SUCC   = { res , return , }

4234 :	"emplace_back"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- SUCC   = { res , return , }

4234 :	"crs"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- SUCC   = { res , return , }

4234 :	"match"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- SUCC   = { res , return , }

4235 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { match , crs , emplace_back , res , }
		- SUCC   = { & , exception , std , catch , }

4235 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { match , crs , emplace_back , res , }
		- SUCC   = { & , exception , std , catch , }

4236 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

4236 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

4236 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

4236 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

4240 :	"if"
		- NEIGH  = { ! , unsignificantName , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { < , ++ , ipass , for , }
		- PRED   = { }
		- SUCC   = { }

4240 :	"!"
		- NEIGH  = { ! , unsignificantName , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { < , ++ , ipass , for , }
		- PRED   = { }
		- SUCC   = { }

4240 :	"unsignificantName"
		- NEIGH  = { ! , unsignificantName , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { < , ++ , ipass , for , }
		- PRED   = { }
		- SUCC   = { }

4241 :	"for"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , COMPOUND_CRS , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

4241 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , COMPOUND_CRS , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

4241 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , COMPOUND_CRS , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

4241 :	"<"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , COMPOUND_CRS , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

4241 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , COMPOUND_CRS , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

4241 :	"++"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , COMPOUND_CRS , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

4242 :	"approximateMatch"
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }

4242 :	"ipass"
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }

4242 :	"=="
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }

4243 :	"objects"
		- NEIGH  = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

4243 :	"authorityFactory"
		- NEIGH  = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

4243 :	"createObjectsFromName"
		- NEIGH  = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

4244 :	"thisName"
		- NEIGH  = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

4244 :	"io"
		- NEIGH  = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

4244 :	"AuthorityFactory"
		- NEIGH  = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

4244 :	"ObjectType"
		- NEIGH  = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

4244 :	"COMPOUND_CRS"
		- NEIGH  = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

4245 :	"approximateMatch"
		- NEIGH  = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

4246 :	"for"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , get , assert , if , |= , c_str , thisName , IComparable , isEquivalentName , nameStr , metadata , NN_NO_CHECK , > , Identifier , CompoundCRS , eqName , util , < , crsNN , foundEquivalentName , obj , _isEquivalentTo , crs , nn_dynamic_pointer_cast , }
		- PRED   = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

4246 :	"&"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , get , assert , if , |= , c_str , thisName , IComparable , isEquivalentName , nameStr , metadata , NN_NO_CHECK , > , Identifier , CompoundCRS , eqName , util , < , crsNN , foundEquivalentName , obj , _isEquivalentTo , crs , nn_dynamic_pointer_cast , }
		- PRED   = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

4246 :	"obj"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , get , assert , if , |= , c_str , thisName , IComparable , isEquivalentName , nameStr , metadata , NN_NO_CHECK , > , Identifier , CompoundCRS , eqName , util , < , crsNN , foundEquivalentName , obj , _isEquivalentTo , crs , nn_dynamic_pointer_cast , }
		- PRED   = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

4246 :	"objects"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , get , assert , if , |= , c_str , thisName , IComparable , isEquivalentName , nameStr , metadata , NN_NO_CHECK , > , Identifier , CompoundCRS , eqName , util , < , crsNN , foundEquivalentName , obj , _isEquivalentTo , crs , nn_dynamic_pointer_cast , }
		- PRED   = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

4247 :	"crs"
		- NEIGH  = { obj , > , CompoundCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

4247 :	"util"
		- NEIGH  = { obj , > , CompoundCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

4247 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { obj , > , CompoundCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

4247 :	"<"
		- NEIGH  = { obj , > , CompoundCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

4247 :	"CompoundCRS"
		- NEIGH  = { obj , > , CompoundCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

4247 :	">"
		- NEIGH  = { obj , > , CompoundCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

4247 :	"obj"
		- NEIGH  = { obj , > , CompoundCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

4248 :	"assert"
		- NEIGH  = { crs , assert , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { obj , > , CompoundCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- SUCC   = { NN_NO_CHECK , crs , crsNN , }

4248 :	"crs"
		- NEIGH  = { crs , assert , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { obj , > , CompoundCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- SUCC   = { NN_NO_CHECK , crs , crsNN , }

4249 :	"crsNN"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }

4249 :	"NN_NO_CHECK"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }

4249 :	"crs"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }

4250 :	"eqName"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

4250 :	"metadata"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

4250 :	"Identifier"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

4250 :	"isEquivalentName"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

4251 :	"thisName"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

4251 :	"c_str"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

4251 :	"crs"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

4251 :	"nameStr"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

4251 :	"c_str"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

4252 :	"foundEquivalentName"
		- NEIGH  = { |= , eqName , foundEquivalentName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- SUCC   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

4252 :	"|="
		- NEIGH  = { |= , eqName , foundEquivalentName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- SUCC   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

4252 :	"eqName"
		- NEIGH  = { |= , eqName , foundEquivalentName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- SUCC   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

4253 :	"if"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { eqName , crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

4253 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { eqName , crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

4254 :	"crs"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { eqName , crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

4254 :	"get"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { eqName , crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

4254 :	"util"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { eqName , crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

4254 :	"IComparable"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { eqName , crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

4254 :	"Criterion"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { eqName , crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

4254 :	"EQUIVALENT"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { eqName , crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

4255 :	"dbContext"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { eqName , crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

4256 :	"if"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

4256 :	"crs"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

4256 :	"nameStr"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

4256 :	"=="
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

4256 :	"thisName"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

4257 :	"res"
		- NEIGH  = { clear , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

4257 :	"clear"
		- NEIGH  = { clear , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

4258 :	"res"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

4258 :	"emplace_back"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

4258 :	"crsNN"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

4259 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { crsNN , emplace_back , res , }
		- SUCC   = { }

4259 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { crsNN , emplace_back , res , }
		- SUCC   = { }

4261 :	"res"
		- NEIGH  = { crsNN , eqName , emplace_back , res , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { }

4261 :	"emplace_back"
		- NEIGH  = { crsNN , eqName , emplace_back , res , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { }

4261 :	"crsNN"
		- NEIGH  = { crsNN , eqName , emplace_back , res , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { }

4261 :	"eqName"
		- NEIGH  = { crsNN , eqName , emplace_back , res , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { }

4263 :	"res"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4263 :	"emplace_back"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4263 :	"crsNN"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4266 :	"if"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

4266 :	"!"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

4266 :	"res"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

4266 :	"empty"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

4267 :	"break"
		- NEIGH  = { break , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4272 :	"lambdaSort"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

4272 :	"&"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

4272 :	"thisName"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

4272 :	"Pair"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

4272 :	"&"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

4272 :	"a"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

4272 :	"Pair"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

4272 :	"&"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

4272 :	"b"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

4274 :	"if"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

4274 :	"a"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

4274 :	"second"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

4274 :	">"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

4274 :	"b"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

4274 :	"second"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

4275 :	"return"
		- NEIGH  = { return , }
		- PARENT = { > , second , a , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4277 :	"if"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

4277 :	"a"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

4277 :	"second"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

4277 :	"<"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

4277 :	"b"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

4277 :	"second"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

4278 :	"return"
		- NEIGH  = { return , }
		- PARENT = { < , second , a , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4282 :	"&"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

4282 :	"aName"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

4282 :	"a"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

4282 :	"first"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

4282 :	"nameStr"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

4283 :	"&"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

4283 :	"bName"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

4283 :	"b"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

4283 :	"first"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

4283 :	"nameStr"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

4284 :	"if"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

4284 :	"aName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

4284 :	"=="
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

4284 :	"thisName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

4284 :	"&&"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

4284 :	"bName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

4284 :	"!="
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

4284 :	"thisName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

4285 :	"return"
		- NEIGH  = { return , }
		- PARENT = { != , bName , && , == , aName , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4287 :	"if"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

4287 :	"bName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

4287 :	"=="
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

4287 :	"thisName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

4287 :	"&&"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

4287 :	"aName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

4287 :	"!="
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

4287 :	"thisName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

4288 :	"return"
		- NEIGH  = { return , }
		- PARENT = { != , aName , && , == , bName , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4292 :	"return"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

4292 :	"aName"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

4292 :	"<"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

4292 :	"bName"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

4296 :	"res"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { a , Pair , thisName , & , b , lambdaSort , }
		- SUCC   = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }

4296 :	"sort"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { a , Pair , thisName , & , b , lambdaSort , }
		- SUCC   = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }

4296 :	"lambdaSort"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { a , Pair , thisName , & , b , lambdaSort , }
		- SUCC   = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }

4298 :	"if"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , as_nullable , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , candidates , res , & , >> , for , crs , CompoundCRS , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

4298 :	"identifiers"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , as_nullable , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , candidates , res , & , >> , for , crs , CompoundCRS , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

4298 :	"empty"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , as_nullable , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , candidates , res , & , >> , for , crs , CompoundCRS , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

4298 :	"&&"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , as_nullable , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , candidates , res , & , >> , for , crs , CompoundCRS , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

4298 :	"!"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , as_nullable , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , candidates , res , & , >> , for , crs , CompoundCRS , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

4298 :	"foundEquivalentName"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , as_nullable , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , candidates , res , & , >> , for , crs , CompoundCRS , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

4298 :	"&&"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , as_nullable , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , candidates , res , & , >> , for , crs , CompoundCRS , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

4299 :	"res"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , as_nullable , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , candidates , res , & , >> , for , crs , CompoundCRS , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

4299 :	"empty"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , as_nullable , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , candidates , res , & , >> , for , crs , CompoundCRS , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

4299 :	"||"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , as_nullable , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , candidates , res , & , >> , for , crs , CompoundCRS , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

4299 :	"res"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , as_nullable , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , candidates , res , & , >> , for , crs , CompoundCRS , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

4299 :	"front"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , as_nullable , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , candidates , res , & , >> , for , crs , CompoundCRS , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

4299 :	"second"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , as_nullable , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , candidates , res , & , >> , for , crs , CompoundCRS , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

4299 :	"<"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , as_nullable , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , candidates , res , & , >> , for , crs , CompoundCRS , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

4300 :	"std"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

4300 :	"set"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

4300 :	"<"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

4300 :	"std"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

4300 :	"pair"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

4300 :	"<"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

4300 :	"std"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

4300 :	"string"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

4300 :	"std"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

4300 :	"string"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

4300 :	">>"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

4300 :	"alreadyKnown"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

4301 :	"for"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { code , * , < , insert , alreadyKnown , codeSpace , std , empty , string , ! , > , assert , first , identifiers , pair , ids , & , }
		- PRED   = { >> , string , pair , < , alreadyKnown , set , std , }
		- SUCC   = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }

4301 :	"&"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { code , * , < , insert , alreadyKnown , codeSpace , std , empty , string , ! , > , assert , first , identifiers , pair , ids , & , }
		- PRED   = { >> , string , pair , < , alreadyKnown , set , std , }
		- SUCC   = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }

4301 :	"pair"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { code , * , < , insert , alreadyKnown , codeSpace , std , empty , string , ! , > , assert , first , identifiers , pair , ids , & , }
		- PRED   = { >> , string , pair , < , alreadyKnown , set , std , }
		- SUCC   = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }

4301 :	"res"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { code , * , < , insert , alreadyKnown , codeSpace , std , empty , string , ! , > , assert , first , identifiers , pair , ids , & , }
		- PRED   = { >> , string , pair , < , alreadyKnown , set , std , }
		- SUCC   = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }

4302 :	"&"
		- NEIGH  = { identifiers , pair , first , ids , & , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

4302 :	"ids"
		- NEIGH  = { identifiers , pair , first , ids , & , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

4302 :	"pair"
		- NEIGH  = { identifiers , pair , first , ids , & , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

4302 :	"first"
		- NEIGH  = { identifiers , pair , first , ids , & , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

4302 :	"identifiers"
		- NEIGH  = { identifiers , pair , first , ids , & , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

4303 :	"assert"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , pair , first , ids , & , }
		- SUCC   = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }

4303 :	"!"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , pair , first , ids , & , }
		- SUCC   = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }

4303 :	"ids"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , pair , first , ids , & , }
		- SUCC   = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }

4303 :	"empty"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , pair , first , ids , & , }
		- SUCC   = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }

4304 :	"alreadyKnown"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

4304 :	"insert"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

4304 :	"std"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

4304 :	"pair"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

4304 :	"<"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

4304 :	"std"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

4304 :	"string"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

4304 :	"std"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

4304 :	"string"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

4304 :	">"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

4305 :	"*"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

4305 :	"ids"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

4305 :	"codeSpace"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

4305 :	"ids"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

4305 :	"code"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

4308 :	"self"
		- NEIGH  = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }

4308 :	"NN_NO_CHECK"
		- NEIGH  = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }

4308 :	"std"
		- NEIGH  = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }

4308 :	"dynamic_pointer_cast"
		- NEIGH  = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }

4308 :	"<"
		- NEIGH  = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }

4308 :	"CompoundCRS"
		- NEIGH  = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }

4308 :	">"
		- NEIGH  = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }

4309 :	"shared_from_this"
		- NEIGH  = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }

4309 :	"as_nullable"
		- NEIGH  = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }

4310 :	"candidates"
		- NEIGH  = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { candidates , crs , & , for , }

4311 :	"authorityFactory"
		- NEIGH  = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { candidates , crs , & , for , }

4311 :	"createCompoundCRSFromExisting"
		- NEIGH  = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { candidates , crs , & , for , }

4311 :	"self"
		- NEIGH  = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { candidates , crs , & , for , }

4312 :	"for"
		- NEIGH  = { candidates , crs , & , for , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , != , code , * , util , < , empty , pair , find , alreadyKnown , assert , if , _isEquivalentTo , end , string , crs , ! , identifiers , > , codeSpace , std , ids , & , }
		- PRED   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }
		- SUCC   = { lambdaSort , sort , res , }

4312 :	"&"
		- NEIGH  = { candidates , crs , & , for , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , != , code , * , util , < , empty , pair , find , alreadyKnown , assert , if , _isEquivalentTo , end , string , crs , ! , identifiers , > , codeSpace , std , ids , & , }
		- PRED   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }
		- SUCC   = { lambdaSort , sort , res , }

4312 :	"crs"
		- NEIGH  = { candidates , crs , & , for , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , != , code , * , util , < , empty , pair , find , alreadyKnown , assert , if , _isEquivalentTo , end , string , crs , ! , identifiers , > , codeSpace , std , ids , & , }
		- PRED   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }
		- SUCC   = { lambdaSort , sort , res , }

4312 :	"candidates"
		- NEIGH  = { candidates , crs , & , for , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , != , code , * , util , < , empty , pair , find , alreadyKnown , assert , if , _isEquivalentTo , end , string , crs , ! , identifiers , > , codeSpace , std , ids , & , }
		- PRED   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }
		- SUCC   = { lambdaSort , sort , res , }

4313 :	"&"
		- NEIGH  = { identifiers , crs , ids , & , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

4313 :	"ids"
		- NEIGH  = { identifiers , crs , ids , & , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

4313 :	"crs"
		- NEIGH  = { identifiers , crs , ids , & , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

4313 :	"identifiers"
		- NEIGH  = { identifiers , crs , ids , & , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

4314 :	"assert"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , crs , ids , & , }
		- SUCC   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }

4314 :	"!"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , crs , ids , & , }
		- SUCC   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }

4314 :	"ids"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , crs , ids , & , }
		- SUCC   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }

4314 :	"empty"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , crs , ids , & , }
		- SUCC   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }

4315 :	"if"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

4315 :	"alreadyKnown"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

4315 :	"find"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

4315 :	"std"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

4315 :	"pair"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

4315 :	"<"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

4315 :	"std"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

4315 :	"string"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

4315 :	"std"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

4315 :	"string"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

4315 :	">"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

4316 :	"*"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

4316 :	"ids"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

4316 :	"codeSpace"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

4316 :	"ids"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

4316 :	"code"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

4316 :	"!="
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

4317 :	"alreadyKnown"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

4317 :	"end"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

4318 :	"continue"
		- NEIGH  = { continue , }
		- PARENT = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4321 :	"if"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { unsignificantName , crs , emplace_back , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

4321 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { unsignificantName , crs , emplace_back , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

4321 :	"crs"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { unsignificantName , crs , emplace_back , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

4321 :	"get"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { unsignificantName , crs , emplace_back , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

4322 :	"util"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { unsignificantName , crs , emplace_back , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

4322 :	"IComparable"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { unsignificantName , crs , emplace_back , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

4322 :	"Criterion"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { unsignificantName , crs , emplace_back , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

4322 :	"EQUIVALENT"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { unsignificantName , crs , emplace_back , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

4323 :	"dbContext"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { unsignificantName , crs , emplace_back , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

4324 :	"res"
		- NEIGH  = { unsignificantName , crs , emplace_back , res , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4324 :	"emplace_back"
		- NEIGH  = { unsignificantName , crs , emplace_back , res , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4324 :	"crs"
		- NEIGH  = { unsignificantName , crs , emplace_back , res , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4324 :	"unsignificantName"
		- NEIGH  = { unsignificantName , crs , emplace_back , res , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4326 :	"res"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4326 :	"emplace_back"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4326 :	"crs"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4330 :	"res"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { candidates , crs , & , for , }
		- SUCC   = { }

4330 :	"sort"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { candidates , crs , & , for , }
		- SUCC   = { }

4330 :	"lambdaSort"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { candidates , crs , & , for , }
		- SUCC   = { }

4334 :	"if"
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- SUCC   = { }

4334 :	"res"
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- SUCC   = { }

4334 :	"size"
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- SUCC   = { }

4334 :	">="
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- SUCC   = { }

4335 :	"highestConfidence"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

4335 :	"res"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

4335 :	"front"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

4335 :	"second"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

4336 :	"std"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

4336 :	"list"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

4336 :	"<"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

4336 :	"Pair"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

4336 :	">"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

4336 :	"newRes"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

4337 :	"for"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

4337 :	"&"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

4337 :	"pair"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

4337 :	"res"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

4338 :	"if"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

4338 :	"pair"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

4338 :	"second"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

4338 :	"=="
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

4338 :	"highestConfidence"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

4339 :	"newRes"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4339 :	"push_back"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4339 :	"pair"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4341 :	"break"
		- NEIGH  = { break , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4344 :	"return"
		- NEIGH  = { newRes , return , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { }

4344 :	"newRes"
		- NEIGH  = { newRes , return , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { }

4348 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , if , }
		- SUCC   = { }

4348 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , if , }
		- SUCC   = { }

4355 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4355 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4355 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4355 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4355 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4355 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4355 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4355 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4356 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4356 :	"_identify"
		- NEIGH  = { _identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4356 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4356 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4356 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4356 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4357 :	"std"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4357 :	"pair"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4357 :	"<"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4357 :	"CRSNNPtr"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4357 :	">"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4357 :	"Pair"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4358 :	"std"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

4358 :	"list"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

4358 :	"<"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

4358 :	"Pair"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

4358 :	">"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

4358 :	"res"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

4359 :	"resTemp"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

4359 :	"identify"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

4359 :	"authorityFactory"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

4360 :	"for"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

4360 :	"&"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

4360 :	"pair"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

4360 :	"resTemp"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

4361 :	"res"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4361 :	"emplace_back"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4361 :	"pair"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4361 :	"first"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4361 :	"pair"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4361 :	"second"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4363 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pair , resTemp , & , for , }
		- SUCC   = { }

4363 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pair , resTemp , & , for , }
		- SUCC   = { }

4371 :	"PROJ_INTERNAL"
		- NEIGH  = { PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4371 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4371 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4372 :	"CRSNNPtr"
		- NEIGH  = { baseCRS_ , CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { hubCRS_ , CRSNNPtr , }

4372 :	"baseCRS_"
		- NEIGH  = { baseCRS_ , CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { hubCRS_ , CRSNNPtr , }

4373 :	"CRSNNPtr"
		- NEIGH  = { hubCRS_ , CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , CRSNNPtr , }
		- SUCC   = { TransformationNNPtr , transformation_ , operation , }

4373 :	"hubCRS_"
		- NEIGH  = { hubCRS_ , CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , CRSNNPtr , }
		- SUCC   = { TransformationNNPtr , transformation_ , operation , }

4374 :	"operation"
		- NEIGH  = { TransformationNNPtr , transformation_ , operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { hubCRS_ , CRSNNPtr , }
		- SUCC   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }

4374 :	"TransformationNNPtr"
		- NEIGH  = { TransformationNNPtr , transformation_ , operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { hubCRS_ , CRSNNPtr , }
		- SUCC   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }

4374 :	"transformation_"
		- NEIGH  = { TransformationNNPtr , transformation_ , operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { hubCRS_ , CRSNNPtr , }
		- SUCC   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }

4376 :	"Private"
		- NEIGH  = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { TransformationNNPtr , transformation_ , operation , }
		- SUCC   = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }

4376 :	"CRSNNPtr"
		- NEIGH  = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { TransformationNNPtr , transformation_ , operation , }
		- SUCC   = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }

4376 :	"&"
		- NEIGH  = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { TransformationNNPtr , transformation_ , operation , }
		- SUCC   = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }

4376 :	"baseCRSIn"
		- NEIGH  = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { TransformationNNPtr , transformation_ , operation , }
		- SUCC   = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }

4376 :	"CRSNNPtr"
		- NEIGH  = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { TransformationNNPtr , transformation_ , operation , }
		- SUCC   = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }

4376 :	"&"
		- NEIGH  = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { TransformationNNPtr , transformation_ , operation , }
		- SUCC   = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }

4376 :	"hubCRSIn"
		- NEIGH  = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { TransformationNNPtr , transformation_ , operation , }
		- SUCC   = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }

4377 :	"operation"
		- NEIGH  = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { TransformationNNPtr , transformation_ , operation , }
		- SUCC   = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }

4377 :	"TransformationNNPtr"
		- NEIGH  = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { TransformationNNPtr , transformation_ , operation , }
		- SUCC   = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }

4377 :	"&"
		- NEIGH  = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { TransformationNNPtr , transformation_ , operation , }
		- SUCC   = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }

4377 :	"transformationIn"
		- NEIGH  = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { TransformationNNPtr , transformation_ , operation , }
		- SUCC   = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }

4379 :	"CRSNNPtr"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

4379 :	"&"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

4379 :	"baseCRS"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

4379 :	"return"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

4379 :	"baseCRS_"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

4380 :	"CRSNNPtr"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

4380 :	"&"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

4380 :	"hubCRS"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

4380 :	"return"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

4380 :	"hubCRS_"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

4381 :	"operation"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

4381 :	"TransformationNNPtr"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

4381 :	"&"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

4381 :	"transformation"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

4382 :	"return"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

4382 :	"transformation_"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

4386 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4386 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4386 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4387 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4387 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4387 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4387 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4387 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4387 :	"hubCRSIn"
		- NEIGH  = { hubCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4388 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4388 :	"TransformationNNPtr"
		- NEIGH  = { TransformationNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4388 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4388 :	"transformationIn"
		- NEIGH  = { transformationIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4389 :	"baseCRS_"
		- NEIGH  = { baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4389 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4389 :	"hubCRS_"
		- NEIGH  = { hubCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4389 :	"hubCRSIn"
		- NEIGH  = { hubCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4390 :	"transformation_"
		- NEIGH  = { transformation_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4390 :	"transformationIn"
		- NEIGH  = { transformationIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4396 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4396 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4396 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4396 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4396 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4396 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4396 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4396 :	"hubCRSIn"
		- NEIGH  = { hubCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4397 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4397 :	"TransformationNNPtr"
		- NEIGH  = { TransformationNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4397 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4397 :	"transformationIn"
		- NEIGH  = { transformationIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4398 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4398 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4398 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4398 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4398 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4398 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4398 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4398 :	"hubCRSIn"
		- NEIGH  = { hubCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4398 :	"transformationIn"
		- NEIGH  = { transformationIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4403 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4403 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4403 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4403 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4403 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4404 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4404 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4405 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4405 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4405 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4405 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4405 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4405 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4405 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4405 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4405 :	"baseCRS"
		- NEIGH  = { baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4405 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4405 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4405 :	"hubCRS"
		- NEIGH  = { hubCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4406 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4406 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4406 :	"transformation"
		- NEIGH  = { transformation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4411 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4411 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4416 :	"BoundCRSNNPtr"
		- NEIGH  = { BoundCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4416 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4416 :	"shallowCloneAsBoundCRS"
		- NEIGH  = { shallowCloneAsBoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4417 :	"crs"
		- NEIGH  = { this , * , < , BoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4417 :	"BoundCRS"
		- NEIGH  = { this , * , < , BoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4417 :	"nn_make_shared"
		- NEIGH  = { this , * , < , BoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4417 :	"<"
		- NEIGH  = { this , * , < , BoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4417 :	"BoundCRS"
		- NEIGH  = { this , * , < , BoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4417 :	">"
		- NEIGH  = { this , * , < , BoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4417 :	"*"
		- NEIGH  = { this , * , < , BoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4417 :	"this"
		- NEIGH  = { this , * , < , BoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4418 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , BoundCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

4418 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , BoundCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

4418 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , BoundCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

4419 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

4419 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

4424 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4424 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4424 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4424 :	"return"
		- NEIGH  = { shallowCloneAsBoundCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4424 :	"shallowCloneAsBoundCRS"
		- NEIGH  = { shallowCloneAsBoundCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4434 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4434 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4434 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4434 :	"baseCRS"
		- NEIGH  = { baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4434 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4434 :	"return"
		- NEIGH  = { baseCRS_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4434 :	"d"
		- NEIGH  = { baseCRS_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4434 :	"baseCRS_"
		- NEIGH  = { baseCRS_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4439 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4439 :	"setCanonicalBoundCRS"
		- NEIGH  = { setCanonicalBoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4439 :	"BoundCRSNNPtr"
		- NEIGH  = { BoundCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4439 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4439 :	"boundCRS"
		- NEIGH  = { boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4441 :	"d"
		- NEIGH  = { boundCRS , canonicalBoundCRS_ , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4441 :	"canonicalBoundCRS_"
		- NEIGH  = { boundCRS , canonicalBoundCRS_ , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4441 :	"boundCRS"
		- NEIGH  = { boundCRS , canonicalBoundCRS_ , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4459 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4459 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4459 :	"baseCRSWithCanonicalBoundCRS"
		- NEIGH  = { baseCRSWithCanonicalBoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4460 :	"baseCRSClone"
		- NEIGH  = { _shallowClone , baseCRS , baseCRSClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { shallowCloneAsBoundCRS , setCanonicalBoundCRS , baseCRSClone , }

4460 :	"baseCRS"
		- NEIGH  = { _shallowClone , baseCRS , baseCRSClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { shallowCloneAsBoundCRS , setCanonicalBoundCRS , baseCRSClone , }

4460 :	"_shallowClone"
		- NEIGH  = { _shallowClone , baseCRS , baseCRSClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { shallowCloneAsBoundCRS , setCanonicalBoundCRS , baseCRSClone , }

4461 :	"baseCRSClone"
		- NEIGH  = { shallowCloneAsBoundCRS , setCanonicalBoundCRS , baseCRSClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { _shallowClone , baseCRS , baseCRSClone , }
		- SUCC   = { baseCRSClone , return , }

4461 :	"setCanonicalBoundCRS"
		- NEIGH  = { shallowCloneAsBoundCRS , setCanonicalBoundCRS , baseCRSClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { _shallowClone , baseCRS , baseCRSClone , }
		- SUCC   = { baseCRSClone , return , }

4461 :	"shallowCloneAsBoundCRS"
		- NEIGH  = { shallowCloneAsBoundCRS , setCanonicalBoundCRS , baseCRSClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { _shallowClone , baseCRS , baseCRSClone , }
		- SUCC   = { baseCRSClone , return , }

4462 :	"return"
		- NEIGH  = { baseCRSClone , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shallowCloneAsBoundCRS , setCanonicalBoundCRS , baseCRSClone , }
		- SUCC   = { }

4462 :	"baseCRSClone"
		- NEIGH  = { baseCRSClone , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shallowCloneAsBoundCRS , setCanonicalBoundCRS , baseCRSClone , }
		- SUCC   = { }

4471 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4471 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4471 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4471 :	"hubCRS"
		- NEIGH  = { hubCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4471 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4471 :	"return"
		- NEIGH  = { d , hubCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4471 :	"d"
		- NEIGH  = { d , hubCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4471 :	"hubCRS_"
		- NEIGH  = { d , hubCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4479 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4479 :	"TransformationNNPtr"
		- NEIGH  = { TransformationNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4479 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4480 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4480 :	"transformation"
		- NEIGH  = { transformation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4480 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4481 :	"return"
		- NEIGH  = { d , transformation_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4481 :	"d"
		- NEIGH  = { d , transformation_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4481 :	"transformation_"
		- NEIGH  = { d , transformation_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4494 :	"BoundCRSNNPtr"
		- NEIGH  = { BoundCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4495 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4495 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4495 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4495 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4495 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4495 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4495 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4495 :	"hubCRSIn"
		- NEIGH  = { hubCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4496 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4496 :	"TransformationNNPtr"
		- NEIGH  = { TransformationNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4496 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4496 :	"transformationIn"
		- NEIGH  = { transformationIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4497 :	"crs"
		- NEIGH  = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4497 :	"BoundCRS"
		- NEIGH  = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4497 :	"nn_make_shared"
		- NEIGH  = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4497 :	"<"
		- NEIGH  = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4497 :	"BoundCRS"
		- NEIGH  = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4497 :	">"
		- NEIGH  = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4497 :	"baseCRSIn"
		- NEIGH  = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4497 :	"hubCRSIn"
		- NEIGH  = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4498 :	"transformationIn"
		- NEIGH  = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4499 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { nameStr , l_name , baseCRSIn , & , }

4499 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { nameStr , l_name , baseCRSIn , & , }

4499 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { nameStr , l_name , baseCRSIn , & , }

4500 :	"&"
		- NEIGH  = { nameStr , l_name , baseCRSIn , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { empty , l_name , ! , if , }

4500 :	"l_name"
		- NEIGH  = { nameStr , l_name , baseCRSIn , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { empty , l_name , ! , if , }

4500 :	"baseCRSIn"
		- NEIGH  = { nameStr , l_name , baseCRSIn , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { empty , l_name , ! , if , }

4500 :	"nameStr"
		- NEIGH  = { nameStr , l_name , baseCRSIn , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { empty , l_name , ! , if , }

4501 :	"if"
		- NEIGH  = { empty , l_name , ! , if , }
		- PARENT = { }
		- CHILD  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PRED   = { nameStr , l_name , baseCRSIn , & , }
		- SUCC   = { crs , return , }

4501 :	"!"
		- NEIGH  = { empty , l_name , ! , if , }
		- PARENT = { }
		- CHILD  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PRED   = { nameStr , l_name , baseCRSIn , & , }
		- SUCC   = { crs , return , }

4501 :	"l_name"
		- NEIGH  = { empty , l_name , ! , if , }
		- PARENT = { }
		- CHILD  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PRED   = { nameStr , l_name , baseCRSIn , & , }
		- SUCC   = { crs , return , }

4501 :	"empty"
		- NEIGH  = { empty , l_name , ! , if , }
		- PARENT = { }
		- CHILD  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PRED   = { nameStr , l_name , baseCRSIn , & , }
		- SUCC   = { crs , return , }

4502 :	"crs"
		- NEIGH  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4502 :	"setProperties"
		- NEIGH  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4502 :	"util"
		- NEIGH  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4502 :	"PropertyMap"
		- NEIGH  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4502 :	"set"
		- NEIGH  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4503 :	"common"
		- NEIGH  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4503 :	"IdentifiedObject"
		- NEIGH  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4503 :	"NAME_KEY"
		- NEIGH  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4503 :	"l_name"
		- NEIGH  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4505 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , ! , if , }
		- SUCC   = { }

4505 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , ! , if , }
		- SUCC   = { }

4517 :	"BoundCRSNNPtr"
		- NEIGH  = { BoundCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4518 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4518 :	"createFromTOWGS84"
		- NEIGH  = { createFromTOWGS84 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4518 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4518 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4518 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4519 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4519 :	"vector"
		- NEIGH  = { vector , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4519 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4519 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4519 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4519 :	"TOWGS84Parameters"
		- NEIGH  = { TOWGS84Parameters , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4521 :	"geodCRS"
		- NEIGH  = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }

4521 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }

4521 :	"extractGeodeticCRS"
		- NEIGH  = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }

4522 :	"targetCRS"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4523 :	"geodCRS"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4523 :	"get"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4523 :	"=="
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4523 :	"||"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4524 :	"dynamic_cast"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4524 :	"<"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4524 :	"crs"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4524 :	"GeographicCRS"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4524 :	"*"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4524 :	">"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4524 :	"geodCRS"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4524 :	"get"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4525 :	"util"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4525 :	"nn_static_pointer_cast"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4525 :	"<"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4525 :	"crs"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4525 :	"CRS"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4525 :	">"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4526 :	"crs"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4526 :	"GeographicCRS"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4526 :	"EPSG_4326"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4527 :	"util"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4527 :	"nn_static_pointer_cast"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4527 :	"<"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4527 :	"crs"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4527 :	"CRS"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4527 :	">"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4528 :	"crs"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4528 :	"GeodeticCRS"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4528 :	"EPSG_4978"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4529 :	"return"
		- NEIGH  = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- SUCC   = { }

4529 :	"create"
		- NEIGH  = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- SUCC   = { }

4530 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- SUCC   = { }

4530 :	"targetCRS"
		- NEIGH  = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- SUCC   = { }

4531 :	"operation"
		- NEIGH  = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- SUCC   = { }

4531 :	"Transformation"
		- NEIGH  = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- SUCC   = { }

4531 :	"createTOWGS84"
		- NEIGH  = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- SUCC   = { }

4531 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- SUCC   = { }

4531 :	"TOWGS84Parameters"
		- NEIGH  = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- SUCC   = { }

4542 :	"BoundCRSNNPtr"
		- NEIGH  = { BoundCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4542 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4542 :	"createFromNadgrids"
		- NEIGH  = { createFromNadgrids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4542 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4542 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4542 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4543 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4543 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4543 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4543 :	"filename"
		- NEIGH  = { filename , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4544 :	"sourceGeographicCRS"
		- NEIGH  = { extractGeographicCRS , baseCRSIn , sourceGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }

4544 :	"baseCRSIn"
		- NEIGH  = { extractGeographicCRS , baseCRSIn , sourceGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }

4544 :	"extractGeographicCRS"
		- NEIGH  = { extractGeographicCRS , baseCRSIn , sourceGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }

4545 :	"transformationSourceCRS"
		- NEIGH  = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , baseCRSIn , sourceGeographicCRS , }
		- SUCC   = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }

4546 :	"sourceGeographicCRS"
		- NEIGH  = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , baseCRSIn , sourceGeographicCRS , }
		- SUCC   = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }

4547 :	"NN_NO_CHECK"
		- NEIGH  = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , baseCRSIn , sourceGeographicCRS , }
		- SUCC   = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }

4547 :	"std"
		- NEIGH  = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , baseCRSIn , sourceGeographicCRS , }
		- SUCC   = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }

4547 :	"static_pointer_cast"
		- NEIGH  = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , baseCRSIn , sourceGeographicCRS , }
		- SUCC   = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }

4547 :	"<"
		- NEIGH  = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , baseCRSIn , sourceGeographicCRS , }
		- SUCC   = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }

4547 :	"CRS"
		- NEIGH  = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , baseCRSIn , sourceGeographicCRS , }
		- SUCC   = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }

4547 :	">"
		- NEIGH  = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , baseCRSIn , sourceGeographicCRS , }
		- SUCC   = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }

4547 :	"sourceGeographicCRS"
		- NEIGH  = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , baseCRSIn , sourceGeographicCRS , }
		- SUCC   = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }

4548 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , baseCRSIn , sourceGeographicCRS , }
		- SUCC   = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }

4549 :	"if"
		- NEIGH  = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- PARENT = { }
		- CHILD  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PRED   = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- SUCC   = { nameStr , transformationName , string , transformationSourceCRS , std , }

4549 :	"sourceGeographicCRS"
		- NEIGH  = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- PARENT = { }
		- CHILD  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PRED   = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- SUCC   = { nameStr , transformationName , string , transformationSourceCRS , std , }

4549 :	"!="
		- NEIGH  = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- PARENT = { }
		- CHILD  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PRED   = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- SUCC   = { nameStr , transformationName , string , transformationSourceCRS , std , }

4549 :	"&&"
		- NEIGH  = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- PARENT = { }
		- CHILD  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PRED   = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- SUCC   = { nameStr , transformationName , string , transformationSourceCRS , std , }

4550 :	"sourceGeographicCRS"
		- NEIGH  = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- PARENT = { }
		- CHILD  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PRED   = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- SUCC   = { nameStr , transformationName , string , transformationSourceCRS , std , }

4550 :	"datum"
		- NEIGH  = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- PARENT = { }
		- CHILD  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PRED   = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- SUCC   = { nameStr , transformationName , string , transformationSourceCRS , std , }

4550 :	"!="
		- NEIGH  = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- PARENT = { }
		- CHILD  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PRED   = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- SUCC   = { nameStr , transformationName , string , transformationSourceCRS , std , }

4550 :	"&&"
		- NEIGH  = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- PARENT = { }
		- CHILD  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PRED   = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- SUCC   = { nameStr , transformationName , string , transformationSourceCRS , std , }

4551 :	"sourceGeographicCRS"
		- NEIGH  = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- PARENT = { }
		- CHILD  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PRED   = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- SUCC   = { nameStr , transformationName , string , transformationSourceCRS , std , }

4551 :	"primeMeridian"
		- NEIGH  = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- PARENT = { }
		- CHILD  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PRED   = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- SUCC   = { nameStr , transformationName , string , transformationSourceCRS , std , }

4551 :	"longitude"
		- NEIGH  = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- PARENT = { }
		- CHILD  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PRED   = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- SUCC   = { nameStr , transformationName , string , transformationSourceCRS , std , }

4551 :	"getSIValue"
		- NEIGH  = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- PARENT = { }
		- CHILD  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PRED   = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- SUCC   = { nameStr , transformationName , string , transformationSourceCRS , std , }

4551 :	"!="
		- NEIGH  = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- PARENT = { }
		- CHILD  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PRED   = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- SUCC   = { nameStr , transformationName , string , transformationSourceCRS , std , }

4552 :	"transformationSourceCRS"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4552 :	"GeographicCRS"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4552 :	"create"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4553 :	"util"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4553 :	"PropertyMap"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4553 :	"set"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4553 :	"common"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4553 :	"IdentifiedObject"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4553 :	"NAME_KEY"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4554 :	"sourceGeographicCRS"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4554 :	"nameStr"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4554 :	"+"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4556 :	"datum"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4556 :	"GeodeticReferenceFrame"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4556 :	"create"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4557 :	"util"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4557 :	"PropertyMap"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4557 :	"set"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4558 :	"common"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4558 :	"IdentifiedObject"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4558 :	"NAME_KEY"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4559 :	"sourceGeographicCRS"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4559 :	"datum"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4559 :	"nameStr"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4559 :	"+"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4561 :	"sourceGeographicCRS"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4561 :	"datum"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4561 :	"ellipsoid"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4562 :	"util"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4562 :	"optional"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4562 :	"<"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4562 :	"std"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4562 :	"string"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4562 :	">"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4562 :	"datum"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4562 :	"PrimeMeridian"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4562 :	"GREENWICH"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4563 :	"sourceGeographicCRS"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4563 :	"coordinateSystem"
		- NEIGH  = { GREENWICH , PrimeMeridian , > , string , optional , ellipsoid , coordinateSystem , datum , std , GeodeticReferenceFrame , + , nameStr , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , create , common , < , util , }
		- PARENT = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4565 :	"std"
		- NEIGH  = { nameStr , transformationName , string , transformationSourceCRS , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- SUCC   = { += , transformationName , }

4565 :	"string"
		- NEIGH  = { nameStr , transformationName , string , transformationSourceCRS , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- SUCC   = { += , transformationName , }

4565 :	"transformationName"
		- NEIGH  = { nameStr , transformationName , string , transformationSourceCRS , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- SUCC   = { += , transformationName , }

4565 :	"transformationSourceCRS"
		- NEIGH  = { nameStr , transformationName , string , transformationSourceCRS , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- SUCC   = { += , transformationName , }

4565 :	"nameStr"
		- NEIGH  = { nameStr , transformationName , string , transformationSourceCRS , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getSIValue , primeMeridian , datum , longitude , && , != , sourceGeographicCRS , if , }
		- SUCC   = { += , transformationName , }

4566 :	"transformationName"
		- NEIGH  = { += , transformationName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , transformationName , string , transformationSourceCRS , std , }
		- SUCC   = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }

4566 :	"+="
		- NEIGH  = { += , transformationName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , transformationName , string , transformationSourceCRS , std , }
		- SUCC   = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }

4568 :	"return"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4568 :	"create"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4569 :	"baseCRSIn"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4569 :	"GeographicCRS"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4569 :	"EPSG_4326"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4570 :	"operation"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4570 :	"Transformation"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4570 :	"createNTv2"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4571 :	"util"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4571 :	"PropertyMap"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4571 :	"set"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4571 :	"common"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4571 :	"IdentifiedObject"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4571 :	"NAME_KEY"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4572 :	"transformationName"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4573 :	"transformationSourceCRS"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4573 :	"GeographicCRS"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4573 :	"EPSG_4326"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4573 :	"filename"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4574 :	"std"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4574 :	"vector"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4574 :	"<"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4574 :	"metadata"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4574 :	"PositionalAccuracyNNPtr"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4574 :	">"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4579 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4579 :	"isTOWGS84Compatible"
		- NEIGH  = { isTOWGS84Compatible , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4580 :	"return"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4580 :	"dynamic_cast"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4580 :	"<"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4580 :	"GeodeticCRS"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4580 :	"*"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4580 :	">"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4580 :	"d"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4580 :	"hubCRS"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4580 :	"get"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4580 :	"!="
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4580 :	"&&"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4581 :	"ci_equal"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4581 :	"d"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4581 :	"hubCRS"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4581 :	"nameStr"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4586 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4586 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4586 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4586 :	"getHDatumPROJ4GRIDS"
		- NEIGH  = { getHDatumPROJ4GRIDS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4587 :	"if"
		- NEIGH  = { nameStr , hubCRS , d , ci_equal , if , }
		- PARENT = { }
		- CHILD  = { getNTv2Filename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4587 :	"ci_equal"
		- NEIGH  = { nameStr , hubCRS , d , ci_equal , if , }
		- PARENT = { }
		- CHILD  = { getNTv2Filename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4587 :	"d"
		- NEIGH  = { nameStr , hubCRS , d , ci_equal , if , }
		- PARENT = { }
		- CHILD  = { getNTv2Filename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4587 :	"hubCRS"
		- NEIGH  = { nameStr , hubCRS , d , ci_equal , if , }
		- PARENT = { }
		- CHILD  = { getNTv2Filename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4587 :	"nameStr"
		- NEIGH  = { nameStr , hubCRS , d , ci_equal , if , }
		- PARENT = { }
		- CHILD  = { getNTv2Filename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4588 :	"return"
		- NEIGH  = { getNTv2Filename , d , transformation , return , }
		- PARENT = { nameStr , hubCRS , d , ci_equal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4588 :	"d"
		- NEIGH  = { getNTv2Filename , d , transformation , return , }
		- PARENT = { nameStr , hubCRS , d , ci_equal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4588 :	"transformation"
		- NEIGH  = { getNTv2Filename , d , transformation , return , }
		- PARENT = { nameStr , hubCRS , d , ci_equal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4588 :	"getNTv2Filename"
		- NEIGH  = { getNTv2Filename , d , transformation , return , }
		- PARENT = { nameStr , hubCRS , d , ci_equal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4590 :	"return"
		- NEIGH  = { string , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , hubCRS , d , ci_equal , if , }
		- SUCC   = { }

4590 :	"std"
		- NEIGH  = { string , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , hubCRS , d , ci_equal , if , }
		- SUCC   = { }

4590 :	"string"
		- NEIGH  = { string , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , hubCRS , d , ci_equal , if , }
		- SUCC   = { }

4595 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4595 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4595 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4595 :	"getVDatumPROJ4GRIDS"
		- NEIGH  = { getVDatumPROJ4GRIDS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4596 :	"if"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4596 :	"dynamic_cast"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4596 :	"<"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4596 :	"VerticalCRS"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4596 :	"*"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4596 :	">"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4596 :	"d"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4596 :	"baseCRS"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4596 :	"get"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4596 :	"&&"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4597 :	"ci_equal"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4597 :	"d"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4597 :	"hubCRS"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4597 :	"nameStr"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4598 :	"return"
		- NEIGH  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PARENT = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4598 :	"d"
		- NEIGH  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PARENT = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4598 :	"transformation"
		- NEIGH  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PARENT = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4598 :	"getHeightToGeographic3DFilename"
		- NEIGH  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PARENT = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4600 :	"return"
		- NEIGH  = { string , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- SUCC   = { }

4600 :	"std"
		- NEIGH  = { string , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- SUCC   = { }

4600 :	"string"
		- NEIGH  = { string , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- SUCC   = { }

4606 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4606 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4606 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4606 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4606 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4606 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4607 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , if , }

4607 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , if , }

4607 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , if , }

4607 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , if , }

4607 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , if , }

4607 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , if , }

4607 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , if , }

4607 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , if , }

4608 :	"if"
		- NEIGH  = { isWKT2 , if , }
		- PARENT = { }
		- CHILD  = { > , < , std , setTOWGS84Parameters , getTOWGS84Parameters , isTOWGS84Compatible , hdatumProj4GridName , if , getVDatumPROJ4GRIDS , empty , params , transformation , getHDatumPROJ4GRIDS , setAbridgedTransformation , vdatumProj4GridName , WKTConstants , hubCRS , TARGETCRS , endNode , _exportToWKT , SOURCECRS , ! , useESRIDialect , formatter , d , BOUNDCRS , baseCRS , vector , io , startNode , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { }

4608 :	"isWKT2"
		- NEIGH  = { isWKT2 , if , }
		- PARENT = { }
		- CHILD  = { > , < , std , setTOWGS84Parameters , getTOWGS84Parameters , isTOWGS84Compatible , hdatumProj4GridName , if , getVDatumPROJ4GRIDS , empty , params , transformation , getHDatumPROJ4GRIDS , setAbridgedTransformation , vdatumProj4GridName , WKTConstants , hubCRS , TARGETCRS , endNode , _exportToWKT , SOURCECRS , ! , useESRIDialect , formatter , d , BOUNDCRS , baseCRS , vector , io , startNode , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { }

4609 :	"formatter"
		- NEIGH  = { BOUNDCRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { SOURCECRS , WKTConstants , io , startNode , formatter , }

4609 :	"startNode"
		- NEIGH  = { BOUNDCRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { SOURCECRS , WKTConstants , io , startNode , formatter , }

4609 :	"io"
		- NEIGH  = { BOUNDCRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { SOURCECRS , WKTConstants , io , startNode , formatter , }

4609 :	"WKTConstants"
		- NEIGH  = { BOUNDCRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { SOURCECRS , WKTConstants , io , startNode , formatter , }

4609 :	"BOUNDCRS"
		- NEIGH  = { BOUNDCRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { SOURCECRS , WKTConstants , io , startNode , formatter , }

4610 :	"formatter"
		- NEIGH  = { SOURCECRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { BOUNDCRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

4610 :	"startNode"
		- NEIGH  = { SOURCECRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { BOUNDCRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

4610 :	"io"
		- NEIGH  = { SOURCECRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { BOUNDCRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

4610 :	"WKTConstants"
		- NEIGH  = { SOURCECRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { BOUNDCRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

4610 :	"SOURCECRS"
		- NEIGH  = { SOURCECRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { BOUNDCRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

4611 :	"d"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { SOURCECRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { endNode , formatter , }

4611 :	"baseCRS"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { SOURCECRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { endNode , formatter , }

4611 :	"_exportToWKT"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { SOURCECRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { endNode , formatter , }

4611 :	"formatter"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { SOURCECRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { endNode , formatter , }

4612 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { TARGETCRS , WKTConstants , io , startNode , formatter , }

4612 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { TARGETCRS , WKTConstants , io , startNode , formatter , }

4613 :	"formatter"
		- NEIGH  = { TARGETCRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , hubCRS , d , }

4613 :	"startNode"
		- NEIGH  = { TARGETCRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , hubCRS , d , }

4613 :	"io"
		- NEIGH  = { TARGETCRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , hubCRS , d , }

4613 :	"WKTConstants"
		- NEIGH  = { TARGETCRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , hubCRS , d , }

4613 :	"TARGETCRS"
		- NEIGH  = { TARGETCRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , hubCRS , d , }

4614 :	"d"
		- NEIGH  = { formatter , _exportToWKT , hubCRS , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { TARGETCRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { endNode , formatter , }

4614 :	"hubCRS"
		- NEIGH  = { formatter , _exportToWKT , hubCRS , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { TARGETCRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { endNode , formatter , }

4614 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , hubCRS , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { TARGETCRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { endNode , formatter , }

4614 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , hubCRS , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { TARGETCRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { endNode , formatter , }

4615 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , hubCRS , d , }
		- SUCC   = { setAbridgedTransformation , formatter , }

4615 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , hubCRS , d , }
		- SUCC   = { setAbridgedTransformation , formatter , }

4616 :	"formatter"
		- NEIGH  = { setAbridgedTransformation , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , transformation , _exportToWKT , d , }

4616 :	"setAbridgedTransformation"
		- NEIGH  = { setAbridgedTransformation , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , transformation , _exportToWKT , d , }

4617 :	"d"
		- NEIGH  = { formatter , transformation , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { setAbridgedTransformation , formatter , }
		- SUCC   = { setAbridgedTransformation , formatter , }

4617 :	"transformation"
		- NEIGH  = { formatter , transformation , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { setAbridgedTransformation , formatter , }
		- SUCC   = { setAbridgedTransformation , formatter , }

4617 :	"_exportToWKT"
		- NEIGH  = { formatter , transformation , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { setAbridgedTransformation , formatter , }
		- SUCC   = { setAbridgedTransformation , formatter , }

4617 :	"formatter"
		- NEIGH  = { formatter , transformation , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { setAbridgedTransformation , formatter , }
		- SUCC   = { setAbridgedTransformation , formatter , }

4618 :	"formatter"
		- NEIGH  = { setAbridgedTransformation , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , transformation , _exportToWKT , d , }
		- SUCC   = { endNode , formatter , }

4618 :	"setAbridgedTransformation"
		- NEIGH  = { setAbridgedTransformation , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , transformation , _exportToWKT , d , }
		- SUCC   = { endNode , formatter , }

4619 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { setAbridgedTransformation , formatter , }
		- SUCC   = { }

4619 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { setAbridgedTransformation , formatter , }
		- SUCC   = { }

4622 :	"vdatumProj4GridName"
		- NEIGH  = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , vdatumProj4GridName , ! , if , }

4622 :	"getVDatumPROJ4GRIDS"
		- NEIGH  = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , vdatumProj4GridName , ! , if , }

4623 :	"if"
		- NEIGH  = { empty , vdatumProj4GridName , ! , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { return , std , _exportToWKT , d , baseCRS , vdatumProj4GridName , string , setVDatumExtension , formatter , }
		- PRED   = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- SUCC   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }

4623 :	"!"
		- NEIGH  = { empty , vdatumProj4GridName , ! , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { return , std , _exportToWKT , d , baseCRS , vdatumProj4GridName , string , setVDatumExtension , formatter , }
		- PRED   = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- SUCC   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }

4623 :	"vdatumProj4GridName"
		- NEIGH  = { empty , vdatumProj4GridName , ! , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { return , std , _exportToWKT , d , baseCRS , vdatumProj4GridName , string , setVDatumExtension , formatter , }
		- PRED   = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- SUCC   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }

4623 :	"empty"
		- NEIGH  = { empty , vdatumProj4GridName , ! , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { return , std , _exportToWKT , d , baseCRS , vdatumProj4GridName , string , setVDatumExtension , formatter , }
		- PRED   = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- SUCC   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }

4624 :	"formatter"
		- NEIGH  = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

4624 :	"setVDatumExtension"
		- NEIGH  = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

4624 :	"vdatumProj4GridName"
		- NEIGH  = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

4625 :	"d"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- SUCC   = { string , setVDatumExtension , std , formatter , }

4625 :	"baseCRS"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- SUCC   = { string , setVDatumExtension , std , formatter , }

4625 :	"_exportToWKT"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- SUCC   = { string , setVDatumExtension , std , formatter , }

4625 :	"formatter"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- SUCC   = { string , setVDatumExtension , std , formatter , }

4626 :	"formatter"
		- NEIGH  = { string , setVDatumExtension , std , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { return , }

4626 :	"setVDatumExtension"
		- NEIGH  = { string , setVDatumExtension , std , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { return , }

4626 :	"std"
		- NEIGH  = { string , setVDatumExtension , std , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { return , }

4626 :	"string"
		- NEIGH  = { string , setVDatumExtension , std , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { return , }

4627 :	"return"
		- NEIGH  = { return , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { string , setVDatumExtension , std , formatter , }
		- SUCC   = { }

4630 :	"hdatumProj4GridName"
		- NEIGH  = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { empty , vdatumProj4GridName , ! , if , }
		- SUCC   = { empty , hdatumProj4GridName , ! , if , }

4630 :	"getHDatumPROJ4GRIDS"
		- NEIGH  = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { empty , vdatumProj4GridName , ! , if , }
		- SUCC   = { empty , hdatumProj4GridName , ! , if , }

4631 :	"if"
		- NEIGH  = { empty , hdatumProj4GridName , ! , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { string , return , std , _exportToWKT , d , baseCRS , hdatumProj4GridName , setHDatumExtension , formatter , }
		- PRED   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- SUCC   = { isTOWGS84Compatible , ! , if , }

4631 :	"!"
		- NEIGH  = { empty , hdatumProj4GridName , ! , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { string , return , std , _exportToWKT , d , baseCRS , hdatumProj4GridName , setHDatumExtension , formatter , }
		- PRED   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- SUCC   = { isTOWGS84Compatible , ! , if , }

4631 :	"hdatumProj4GridName"
		- NEIGH  = { empty , hdatumProj4GridName , ! , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { string , return , std , _exportToWKT , d , baseCRS , hdatumProj4GridName , setHDatumExtension , formatter , }
		- PRED   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- SUCC   = { isTOWGS84Compatible , ! , if , }

4631 :	"empty"
		- NEIGH  = { empty , hdatumProj4GridName , ! , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { string , return , std , _exportToWKT , d , baseCRS , hdatumProj4GridName , setHDatumExtension , formatter , }
		- PRED   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- SUCC   = { isTOWGS84Compatible , ! , if , }

4632 :	"formatter"
		- NEIGH  = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

4632 :	"setHDatumExtension"
		- NEIGH  = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

4632 :	"hdatumProj4GridName"
		- NEIGH  = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

4633 :	"d"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- SUCC   = { string , setHDatumExtension , std , formatter , }

4633 :	"baseCRS"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- SUCC   = { string , setHDatumExtension , std , formatter , }

4633 :	"_exportToWKT"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- SUCC   = { string , setHDatumExtension , std , formatter , }

4633 :	"formatter"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- SUCC   = { string , setHDatumExtension , std , formatter , }

4634 :	"formatter"
		- NEIGH  = { string , setHDatumExtension , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { return , }

4634 :	"setHDatumExtension"
		- NEIGH  = { string , setHDatumExtension , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { return , }

4634 :	"std"
		- NEIGH  = { string , setHDatumExtension , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { return , }

4634 :	"string"
		- NEIGH  = { string , setHDatumExtension , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { return , }

4635 :	"return"
		- NEIGH  = { return , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { string , setHDatumExtension , std , formatter , }
		- SUCC   = { }

4638 :	"if"
		- NEIGH  = { isTOWGS84Compatible , ! , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { empty , hdatumProj4GridName , ! , if , }
		- SUCC   = { transformation , getTOWGS84Parameters , d , params , }

4638 :	"!"
		- NEIGH  = { isTOWGS84Compatible , ! , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { empty , hdatumProj4GridName , ! , if , }
		- SUCC   = { transformation , getTOWGS84Parameters , d , params , }

4638 :	"isTOWGS84Compatible"
		- NEIGH  = { isTOWGS84Compatible , ! , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { empty , hdatumProj4GridName , ! , if , }
		- SUCC   = { transformation , getTOWGS84Parameters , d , params , }

4639 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isTOWGS84Compatible , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4639 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isTOWGS84Compatible , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4639 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isTOWGS84Compatible , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4642 :	"params"
		- NEIGH  = { transformation , getTOWGS84Parameters , d , params , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { isTOWGS84Compatible , ! , if , }
		- SUCC   = { useESRIDialect , ! , formatter , if , }

4642 :	"d"
		- NEIGH  = { transformation , getTOWGS84Parameters , d , params , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { isTOWGS84Compatible , ! , if , }
		- SUCC   = { useESRIDialect , ! , formatter , if , }

4642 :	"transformation"
		- NEIGH  = { transformation , getTOWGS84Parameters , d , params , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { isTOWGS84Compatible , ! , if , }
		- SUCC   = { useESRIDialect , ! , formatter , if , }

4642 :	"getTOWGS84Parameters"
		- NEIGH  = { transformation , getTOWGS84Parameters , d , params , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { isTOWGS84Compatible , ! , if , }
		- SUCC   = { useESRIDialect , ! , formatter , if , }

4643 :	"if"
		- NEIGH  = { useESRIDialect , ! , formatter , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { params , setTOWGS84Parameters , formatter , }
		- PRED   = { transformation , getTOWGS84Parameters , d , params , }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

4643 :	"!"
		- NEIGH  = { useESRIDialect , ! , formatter , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { params , setTOWGS84Parameters , formatter , }
		- PRED   = { transformation , getTOWGS84Parameters , d , params , }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

4643 :	"formatter"
		- NEIGH  = { useESRIDialect , ! , formatter , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { params , setTOWGS84Parameters , formatter , }
		- PRED   = { transformation , getTOWGS84Parameters , d , params , }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

4643 :	"useESRIDialect"
		- NEIGH  = { useESRIDialect , ! , formatter , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { params , setTOWGS84Parameters , formatter , }
		- PRED   = { transformation , getTOWGS84Parameters , d , params , }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

4644 :	"formatter"
		- NEIGH  = { params , setTOWGS84Parameters , formatter , }
		- PARENT = { useESRIDialect , ! , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4644 :	"setTOWGS84Parameters"
		- NEIGH  = { params , setTOWGS84Parameters , formatter , }
		- PARENT = { useESRIDialect , ! , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4644 :	"params"
		- NEIGH  = { params , setTOWGS84Parameters , formatter , }
		- PARENT = { useESRIDialect , ! , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4646 :	"d"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { useESRIDialect , ! , formatter , if , }
		- SUCC   = { > , < , vector , setTOWGS84Parameters , std , formatter , }

4646 :	"baseCRS"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { useESRIDialect , ! , formatter , if , }
		- SUCC   = { > , < , vector , setTOWGS84Parameters , std , formatter , }

4646 :	"_exportToWKT"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { useESRIDialect , ! , formatter , if , }
		- SUCC   = { > , < , vector , setTOWGS84Parameters , std , formatter , }

4646 :	"formatter"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { useESRIDialect , ! , formatter , if , }
		- SUCC   = { > , < , vector , setTOWGS84Parameters , std , formatter , }

4647 :	"formatter"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { }

4647 :	"setTOWGS84Parameters"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { }

4647 :	"std"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { }

4647 :	"vector"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { }

4647 :	"<"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { }

4647 :	">"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { }

4655 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4655 :	"_exportToJSON"
		- NEIGH  = { _exportToJSON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4656 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4656 :	"JSONFormatter"
		- NEIGH  = { JSONFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4656 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4656 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4658 :	"&"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

4658 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

4658 :	"formatter"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

4658 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

4659 :	"objectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

4660 :	"formatter"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

4660 :	"MakeObjectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

4660 :	"!"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

4660 :	"identifiers"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

4660 :	"empty"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

4662 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { formatter , _exportToJSON , baseCRS , d , }

4662 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { formatter , _exportToJSON , baseCRS , d , }

4663 :	"d"
		- NEIGH  = { formatter , _exportToJSON , baseCRS , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

4663 :	"baseCRS"
		- NEIGH  = { formatter , _exportToJSON , baseCRS , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

4663 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , baseCRS , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

4663 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , baseCRS , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

4665 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , baseCRS , d , }
		- SUCC   = { formatter , _exportToJSON , hubCRS , d , }

4665 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , baseCRS , d , }
		- SUCC   = { formatter , _exportToJSON , hubCRS , d , }

4666 :	"d"
		- NEIGH  = { formatter , _exportToJSON , hubCRS , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

4666 :	"hubCRS"
		- NEIGH  = { formatter , _exportToJSON , hubCRS , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

4666 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , hubCRS , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

4666 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , hubCRS , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

4668 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , hubCRS , d , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

4668 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , hubCRS , d , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

4669 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { setAbridgedTransformation , formatter , }

4669 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { setAbridgedTransformation , formatter , }

4670 :	"formatter"
		- NEIGH  = { setAbridgedTransformation , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , _exportToJSON , transformation , d , }

4670 :	"setAbridgedTransformation"
		- NEIGH  = { setAbridgedTransformation , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , _exportToJSON , transformation , d , }

4671 :	"d"
		- NEIGH  = { formatter , _exportToJSON , transformation , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setAbridgedTransformation , formatter , }
		- SUCC   = { setAbridgedTransformation , formatter , }

4671 :	"transformation"
		- NEIGH  = { formatter , _exportToJSON , transformation , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setAbridgedTransformation , formatter , }
		- SUCC   = { setAbridgedTransformation , formatter , }

4671 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , transformation , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setAbridgedTransformation , formatter , }
		- SUCC   = { setAbridgedTransformation , formatter , }

4671 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , transformation , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setAbridgedTransformation , formatter , }
		- SUCC   = { setAbridgedTransformation , formatter , }

4672 :	"formatter"
		- NEIGH  = { setAbridgedTransformation , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , transformation , d , }
		- SUCC   = { }

4672 :	"setAbridgedTransformation"
		- NEIGH  = { setAbridgedTransformation , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , transformation , d , }
		- SUCC   = { }

4678 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4678 :	"_exportToPROJString"
		- NEIGH  = { _exportToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4679 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4679 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4679 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4679 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4681 :	"crs_exportable"
		- NEIGH  = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , ! , if , }

4682 :	"dynamic_cast"
		- NEIGH  = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , ! , if , }

4682 :	"<"
		- NEIGH  = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , ! , if , }

4682 :	"io"
		- NEIGH  = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , ! , if , }

4682 :	"IPROJStringExportable"
		- NEIGH  = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , ! , if , }

4682 :	"*"
		- NEIGH  = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , ! , if , }

4682 :	">"
		- NEIGH  = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , ! , if , }

4682 :	"d"
		- NEIGH  = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , ! , if , }

4682 :	"baseCRS_"
		- NEIGH  = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , ! , if , }

4682 :	"get"
		- NEIGH  = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , ! , if , }

4683 :	"if"
		- NEIGH  = { crs_exportable , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- SUCC   = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }

4683 :	"!"
		- NEIGH  = { crs_exportable , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- SUCC   = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }

4683 :	"crs_exportable"
		- NEIGH  = { crs_exportable , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- SUCC   = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }

4684 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { crs_exportable , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4684 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { crs_exportable , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4684 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { crs_exportable , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4688 :	"vdatumProj4GridName"
		- NEIGH  = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { crs_exportable , ! , if , }
		- SUCC   = { empty , vdatumProj4GridName , ! , if , }

4688 :	"getVDatumPROJ4GRIDS"
		- NEIGH  = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { crs_exportable , ! , if , }
		- SUCC   = { empty , vdatumProj4GridName , ! , if , }

4689 :	"if"
		- NEIGH  = { empty , vdatumProj4GridName , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , formatter , string , ! , if , setVDatumExtension , getHDatumPROJ4GRIDS , std , hdatumProj4GridName , _exportToPROJString , crs_exportable , vdatumProj4GridName , }
		- PRED   = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- SUCC   = { }

4689 :	"!"
		- NEIGH  = { empty , vdatumProj4GridName , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , formatter , string , ! , if , setVDatumExtension , getHDatumPROJ4GRIDS , std , hdatumProj4GridName , _exportToPROJString , crs_exportable , vdatumProj4GridName , }
		- PRED   = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- SUCC   = { }

4689 :	"vdatumProj4GridName"
		- NEIGH  = { empty , vdatumProj4GridName , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , formatter , string , ! , if , setVDatumExtension , getHDatumPROJ4GRIDS , std , hdatumProj4GridName , _exportToPROJString , crs_exportable , vdatumProj4GridName , }
		- PRED   = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- SUCC   = { }

4689 :	"empty"
		- NEIGH  = { empty , vdatumProj4GridName , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , formatter , string , ! , if , setVDatumExtension , getHDatumPROJ4GRIDS , std , hdatumProj4GridName , _exportToPROJString , crs_exportable , vdatumProj4GridName , }
		- PRED   = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- SUCC   = { }

4690 :	"formatter"
		- NEIGH  = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToPROJString , crs_exportable , }

4690 :	"setVDatumExtension"
		- NEIGH  = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToPROJString , crs_exportable , }

4690 :	"vdatumProj4GridName"
		- NEIGH  = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToPROJString , crs_exportable , }

4691 :	"crs_exportable"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- SUCC   = { string , setVDatumExtension , std , formatter , }

4691 :	"_exportToPROJString"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- SUCC   = { string , setVDatumExtension , std , formatter , }

4691 :	"formatter"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- SUCC   = { string , setVDatumExtension , std , formatter , }

4692 :	"formatter"
		- NEIGH  = { string , setVDatumExtension , std , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

4692 :	"setVDatumExtension"
		- NEIGH  = { string , setVDatumExtension , std , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

4692 :	"std"
		- NEIGH  = { string , setVDatumExtension , std , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

4692 :	"string"
		- NEIGH  = { string , setVDatumExtension , std , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

4694 :	"hdatumProj4GridName"
		- NEIGH  = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , hdatumProj4GridName , ! , if , }

4694 :	"getHDatumPROJ4GRIDS"
		- NEIGH  = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , hdatumProj4GridName , ! , if , }

4695 :	"if"
		- NEIGH  = { empty , hdatumProj4GridName , ! , if , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { < , > , crs_exportable , vector , setTOWGS84Parameters , if , formatter , string , std , hdatumProj4GridName , _exportToPROJString , isTOWGS84Compatible , setHDatumExtension , }
		- PRED   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- SUCC   = { }

4695 :	"!"
		- NEIGH  = { empty , hdatumProj4GridName , ! , if , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { < , > , crs_exportable , vector , setTOWGS84Parameters , if , formatter , string , std , hdatumProj4GridName , _exportToPROJString , isTOWGS84Compatible , setHDatumExtension , }
		- PRED   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- SUCC   = { }

4695 :	"hdatumProj4GridName"
		- NEIGH  = { empty , hdatumProj4GridName , ! , if , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { < , > , crs_exportable , vector , setTOWGS84Parameters , if , formatter , string , std , hdatumProj4GridName , _exportToPROJString , isTOWGS84Compatible , setHDatumExtension , }
		- PRED   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- SUCC   = { }

4695 :	"empty"
		- NEIGH  = { empty , hdatumProj4GridName , ! , if , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { < , > , crs_exportable , vector , setTOWGS84Parameters , if , formatter , string , std , hdatumProj4GridName , _exportToPROJString , isTOWGS84Compatible , setHDatumExtension , }
		- PRED   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- SUCC   = { }

4696 :	"formatter"
		- NEIGH  = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToPROJString , crs_exportable , }

4696 :	"setHDatumExtension"
		- NEIGH  = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToPROJString , crs_exportable , }

4696 :	"hdatumProj4GridName"
		- NEIGH  = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToPROJString , crs_exportable , }

4697 :	"crs_exportable"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- SUCC   = { string , setHDatumExtension , std , formatter , }

4697 :	"_exportToPROJString"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- SUCC   = { string , setHDatumExtension , std , formatter , }

4697 :	"formatter"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- SUCC   = { string , setHDatumExtension , std , formatter , }

4698 :	"formatter"
		- NEIGH  = { string , setHDatumExtension , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

4698 :	"setHDatumExtension"
		- NEIGH  = { string , setHDatumExtension , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

4698 :	"std"
		- NEIGH  = { string , setHDatumExtension , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

4698 :	"string"
		- NEIGH  = { string , setHDatumExtension , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

4700 :	"if"
		- NEIGH  = { isTOWGS84Compatible , if , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { formatter , getTOWGS84Parameters , setTOWGS84Parameters , transformation , params , }
		- PRED   = { }
		- SUCC   = { formatter , _exportToPROJString , crs_exportable , }

4700 :	"isTOWGS84Compatible"
		- NEIGH  = { isTOWGS84Compatible , if , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { formatter , getTOWGS84Parameters , setTOWGS84Parameters , transformation , params , }
		- PRED   = { }
		- SUCC   = { formatter , _exportToPROJString , crs_exportable , }

4701 :	"params"
		- NEIGH  = { getTOWGS84Parameters , transformation , params , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { params , setTOWGS84Parameters , formatter , }

4701 :	"transformation"
		- NEIGH  = { getTOWGS84Parameters , transformation , params , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { params , setTOWGS84Parameters , formatter , }

4701 :	"getTOWGS84Parameters"
		- NEIGH  = { getTOWGS84Parameters , transformation , params , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { params , setTOWGS84Parameters , formatter , }

4702 :	"formatter"
		- NEIGH  = { params , setTOWGS84Parameters , formatter , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transformation , params , }
		- SUCC   = { }

4702 :	"setTOWGS84Parameters"
		- NEIGH  = { params , setTOWGS84Parameters , formatter , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transformation , params , }
		- SUCC   = { }

4702 :	"params"
		- NEIGH  = { params , setTOWGS84Parameters , formatter , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transformation , params , }
		- SUCC   = { }

4704 :	"crs_exportable"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { isTOWGS84Compatible , if , }
		- SUCC   = { > , < , vector , setTOWGS84Parameters , std , formatter , }

4704 :	"_exportToPROJString"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { isTOWGS84Compatible , if , }
		- SUCC   = { > , < , vector , setTOWGS84Parameters , std , formatter , }

4704 :	"formatter"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { isTOWGS84Compatible , if , }
		- SUCC   = { > , < , vector , setTOWGS84Parameters , std , formatter , }

4705 :	"formatter"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

4705 :	"setTOWGS84Parameters"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

4705 :	"std"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

4705 :	"vector"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

4705 :	"<"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

4705 :	">"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

4712 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4712 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4712 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4712 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4712 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4712 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4713 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4713 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4713 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4713 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4714 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4714 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4714 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4714 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4715 :	"otherBoundCRS"
		- NEIGH  = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

4715 :	"dynamic_cast"
		- NEIGH  = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

4715 :	"<"
		- NEIGH  = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

4715 :	"BoundCRS"
		- NEIGH  = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

4715 :	"*"
		- NEIGH  = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

4715 :	">"
		- NEIGH  = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

4715 :	"other"
		- NEIGH  = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

4716 :	"if"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

4716 :	"otherBoundCRS"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

4716 :	"=="
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

4716 :	"||"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

4717 :	"criterion"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

4717 :	"=="
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

4717 :	"util"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

4717 :	"IComparable"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

4717 :	"Criterion"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

4717 :	"STRICT"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

4717 :	"&&"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

4718 :	"!"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

4718 :	"ObjectUsage"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

4718 :	"_isEquivalentTo"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

4718 :	"other"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

4718 :	"criterion"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

4718 :	"dbContext"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

4719 :	"return"
		- NEIGH  = { return , }
		- PARENT = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4721 :	"standardCriterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- SUCC   = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }

4721 :	"getStandardCriterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- SUCC   = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }

4721 :	"criterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- SUCC   = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }

4722 :	"return"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4722 :	"d"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4722 :	"baseCRS_"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4722 :	"_isEquivalentTo"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4722 :	"otherBoundCRS"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4722 :	"d"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4722 :	"baseCRS_"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4722 :	"get"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4723 :	"criterion"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4723 :	"dbContext"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4723 :	"&&"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4724 :	"d"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4724 :	"hubCRS_"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4724 :	"_isEquivalentTo"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4724 :	"otherBoundCRS"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4724 :	"d"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4724 :	"hubCRS_"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4724 :	"get"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4725 :	"criterion"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4725 :	"dbContext"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4725 :	"&&"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4726 :	"d"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4726 :	"transformation_"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4726 :	"_isEquivalentTo"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4727 :	"otherBoundCRS"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4727 :	"d"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4727 :	"transformation_"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4727 :	"get"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4727 :	"standardCriterion"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4728 :	"dbContext"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4735 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4735 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4735 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4735 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4735 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4735 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4735 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4735 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4736 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4736 :	"_identify"
		- NEIGH  = { _identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4736 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4736 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4736 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4736 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4737 :	"std"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4737 :	"pair"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4737 :	"<"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4737 :	"CRSNNPtr"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4737 :	">"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4737 :	"Pair"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4738 :	"std"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { authorityFactory , ! , if , }

4738 :	"list"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { authorityFactory , ! , if , }

4738 :	"<"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { authorityFactory , ! , if , }

4738 :	"Pair"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { authorityFactory , ! , if , }

4738 :	">"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { authorityFactory , ! , if , }

4738 :	"res"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { authorityFactory , ! , if , }

4739 :	"if"
		- NEIGH  = { authorityFactory , ! , if , }
		- PARENT = { }
		- CHILD  = { res , return , }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { > , Pair , < , list , resMatchOfTransfToWGS84 , std , }

4739 :	"!"
		- NEIGH  = { authorityFactory , ! , if , }
		- PARENT = { }
		- CHILD  = { res , return , }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { > , Pair , < , list , resMatchOfTransfToWGS84 , std , }

4739 :	"authorityFactory"
		- NEIGH  = { authorityFactory , ! , if , }
		- PARENT = { }
		- CHILD  = { res , return , }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { > , Pair , < , list , resMatchOfTransfToWGS84 , std , }

4740 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4740 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4741 :	"std"
		- NEIGH  = { > , Pair , < , list , resMatchOfTransfToWGS84 , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , ! , if , }
		- SUCC   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }

4741 :	"list"
		- NEIGH  = { > , Pair , < , list , resMatchOfTransfToWGS84 , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , ! , if , }
		- SUCC   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }

4741 :	"<"
		- NEIGH  = { > , Pair , < , list , resMatchOfTransfToWGS84 , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , ! , if , }
		- SUCC   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }

4741 :	"Pair"
		- NEIGH  = { > , Pair , < , list , resMatchOfTransfToWGS84 , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , ! , if , }
		- SUCC   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }

4741 :	">"
		- NEIGH  = { > , Pair , < , list , resMatchOfTransfToWGS84 , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , ! , if , }
		- SUCC   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }

4741 :	"resMatchOfTransfToWGS84"
		- NEIGH  = { > , Pair , < , list , resMatchOfTransfToWGS84 , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , ! , if , }
		- SUCC   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }

4742 :	"io"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , Pair , < , list , resMatchOfTransfToWGS84 , std , }
		- SUCC   = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }

4742 :	"DatabaseContextNNPtr"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , Pair , < , list , resMatchOfTransfToWGS84 , std , }
		- SUCC   = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }

4742 :	"&"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , Pair , < , list , resMatchOfTransfToWGS84 , std , }
		- SUCC   = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }

4742 :	"dbContext"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , Pair , < , list , resMatchOfTransfToWGS84 , std , }
		- SUCC   = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }

4743 :	"authorityFactory"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , Pair , < , list , resMatchOfTransfToWGS84 , std , }
		- SUCC   = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }

4743 :	"databaseContext"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , Pair , < , list , resMatchOfTransfToWGS84 , std , }
		- SUCC   = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }

4744 :	"if"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- PARENT = { }
		- CHILD  = { for , refIsNullTransform , & , create , replaceAll , PROJStringFormatter , isTOWGS84Compatible , exportToPROJString , transformation_ , exception , io , identify , catch , string , normalizeForVisualization , refTransf , get , refTransfPROJStringValid , refTransfPROJString , std , baseCRS_ , resTemp , d , pair , authorityFactory , if , }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { res , empty , resMatchOfTransfToWGS84 , ! , return , }

4744 :	"d"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- PARENT = { }
		- CHILD  = { for , refIsNullTransform , & , create , replaceAll , PROJStringFormatter , isTOWGS84Compatible , exportToPROJString , transformation_ , exception , io , identify , catch , string , normalizeForVisualization , refTransf , get , refTransfPROJStringValid , refTransfPROJString , std , baseCRS_ , resTemp , d , pair , authorityFactory , if , }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { res , empty , resMatchOfTransfToWGS84 , ! , return , }

4744 :	"hubCRS_"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- PARENT = { }
		- CHILD  = { for , refIsNullTransform , & , create , replaceAll , PROJStringFormatter , isTOWGS84Compatible , exportToPROJString , transformation_ , exception , io , identify , catch , string , normalizeForVisualization , refTransf , get , refTransfPROJStringValid , refTransfPROJString , std , baseCRS_ , resTemp , d , pair , authorityFactory , if , }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { res , empty , resMatchOfTransfToWGS84 , ! , return , }

4744 :	"_isEquivalentTo"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- PARENT = { }
		- CHILD  = { for , refIsNullTransform , & , create , replaceAll , PROJStringFormatter , isTOWGS84Compatible , exportToPROJString , transformation_ , exception , io , identify , catch , string , normalizeForVisualization , refTransf , get , refTransfPROJStringValid , refTransfPROJString , std , baseCRS_ , resTemp , d , pair , authorityFactory , if , }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { res , empty , resMatchOfTransfToWGS84 , ! , return , }

4744 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- PARENT = { }
		- CHILD  = { for , refIsNullTransform , & , create , replaceAll , PROJStringFormatter , isTOWGS84Compatible , exportToPROJString , transformation_ , exception , io , identify , catch , string , normalizeForVisualization , refTransf , get , refTransfPROJStringValid , refTransfPROJString , std , baseCRS_ , resTemp , d , pair , authorityFactory , if , }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { res , empty , resMatchOfTransfToWGS84 , ! , return , }

4744 :	"EPSG_4326"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- PARENT = { }
		- CHILD  = { for , refIsNullTransform , & , create , replaceAll , PROJStringFormatter , isTOWGS84Compatible , exportToPROJString , transformation_ , exception , io , identify , catch , string , normalizeForVisualization , refTransf , get , refTransfPROJStringValid , refTransfPROJString , std , baseCRS_ , resTemp , d , pair , authorityFactory , if , }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { res , empty , resMatchOfTransfToWGS84 , ! , return , }

4744 :	"get"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- PARENT = { }
		- CHILD  = { for , refIsNullTransform , & , create , replaceAll , PROJStringFormatter , isTOWGS84Compatible , exportToPROJString , transformation_ , exception , io , identify , catch , string , normalizeForVisualization , refTransf , get , refTransfPROJStringValid , refTransfPROJString , std , baseCRS_ , resTemp , d , pair , authorityFactory , if , }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { res , empty , resMatchOfTransfToWGS84 , ! , return , }

4745 :	"util"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- PARENT = { }
		- CHILD  = { for , refIsNullTransform , & , create , replaceAll , PROJStringFormatter , isTOWGS84Compatible , exportToPROJString , transformation_ , exception , io , identify , catch , string , normalizeForVisualization , refTransf , get , refTransfPROJStringValid , refTransfPROJString , std , baseCRS_ , resTemp , d , pair , authorityFactory , if , }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { res , empty , resMatchOfTransfToWGS84 , ! , return , }

4745 :	"IComparable"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- PARENT = { }
		- CHILD  = { for , refIsNullTransform , & , create , replaceAll , PROJStringFormatter , isTOWGS84Compatible , exportToPROJString , transformation_ , exception , io , identify , catch , string , normalizeForVisualization , refTransf , get , refTransfPROJStringValid , refTransfPROJString , std , baseCRS_ , resTemp , d , pair , authorityFactory , if , }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { res , empty , resMatchOfTransfToWGS84 , ! , return , }

4745 :	"Criterion"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- PARENT = { }
		- CHILD  = { for , refIsNullTransform , & , create , replaceAll , PROJStringFormatter , isTOWGS84Compatible , exportToPROJString , transformation_ , exception , io , identify , catch , string , normalizeForVisualization , refTransf , get , refTransfPROJStringValid , refTransfPROJString , std , baseCRS_ , resTemp , d , pair , authorityFactory , if , }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { res , empty , resMatchOfTransfToWGS84 , ! , return , }

4745 :	"EQUIVALENT"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- PARENT = { }
		- CHILD  = { for , refIsNullTransform , & , create , replaceAll , PROJStringFormatter , isTOWGS84Compatible , exportToPROJString , transformation_ , exception , io , identify , catch , string , normalizeForVisualization , refTransf , get , refTransfPROJStringValid , refTransfPROJString , std , baseCRS_ , resTemp , d , pair , authorityFactory , if , }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { res , empty , resMatchOfTransfToWGS84 , ! , return , }

4746 :	"dbContext"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- PARENT = { }
		- CHILD  = { for , refIsNullTransform , & , create , replaceAll , PROJStringFormatter , isTOWGS84Compatible , exportToPROJString , transformation_ , exception , io , identify , catch , string , normalizeForVisualization , refTransf , get , refTransfPROJStringValid , refTransfPROJString , std , baseCRS_ , resTemp , d , pair , authorityFactory , if , }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { res , empty , resMatchOfTransfToWGS84 , ! , return , }

4747 :	"resTemp"
		- NEIGH  = { identify , baseCRS_ , d , authorityFactory , resTemp , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { refTransfPROJString , string , std , }

4747 :	"d"
		- NEIGH  = { identify , baseCRS_ , d , authorityFactory , resTemp , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { refTransfPROJString , string , std , }

4747 :	"baseCRS_"
		- NEIGH  = { identify , baseCRS_ , d , authorityFactory , resTemp , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { refTransfPROJString , string , std , }

4747 :	"identify"
		- NEIGH  = { identify , baseCRS_ , d , authorityFactory , resTemp , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { refTransfPROJString , string , std , }

4747 :	"authorityFactory"
		- NEIGH  = { identify , baseCRS_ , d , authorityFactory , resTemp , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { refTransfPROJString , string , std , }

4749 :	"std"
		- NEIGH  = { refTransfPROJString , string , std , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { identify , baseCRS_ , d , authorityFactory , resTemp , }
		- SUCC   = { refTransfPROJStringValid , }

4749 :	"string"
		- NEIGH  = { refTransfPROJString , string , std , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { identify , baseCRS_ , d , authorityFactory , resTemp , }
		- SUCC   = { refTransfPROJStringValid , }

4749 :	"refTransfPROJString"
		- NEIGH  = { refTransfPROJString , string , std , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { identify , baseCRS_ , d , authorityFactory , resTemp , }
		- SUCC   = { refTransfPROJStringValid , }

4750 :	"refTransfPROJStringValid"
		- NEIGH  = { refTransfPROJStringValid , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { refTransfPROJString , string , std , }
		- SUCC   = { transformation_ , normalizeForVisualization , d , refTransf , }

4751 :	"refTransf"
		- NEIGH  = { transformation_ , normalizeForVisualization , d , refTransf , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { refTransfPROJStringValid , }
		- SUCC   = { get , refTransfPROJString , PROJStringFormatter , io , create , exportToPROJString , refTransf , }

4751 :	"d"
		- NEIGH  = { transformation_ , normalizeForVisualization , d , refTransf , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { refTransfPROJStringValid , }
		- SUCC   = { get , refTransfPROJString , PROJStringFormatter , io , create , exportToPROJString , refTransf , }

4751 :	"transformation_"
		- NEIGH  = { transformation_ , normalizeForVisualization , d , refTransf , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { refTransfPROJStringValid , }
		- SUCC   = { get , refTransfPROJString , PROJStringFormatter , io , create , exportToPROJString , refTransf , }

4751 :	"normalizeForVisualization"
		- NEIGH  = { transformation_ , normalizeForVisualization , d , refTransf , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { refTransfPROJStringValid , }
		- SUCC   = { get , refTransfPROJString , PROJStringFormatter , io , create , exportToPROJString , refTransf , }

4753 :	"refTransfPROJString"
		- NEIGH  = { get , refTransfPROJString , PROJStringFormatter , io , create , exportToPROJString , refTransf , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { transformation_ , normalizeForVisualization , d , refTransf , }
		- SUCC   = { replaceAll , refTransfPROJString , }

4753 :	"refTransf"
		- NEIGH  = { get , refTransfPROJString , PROJStringFormatter , io , create , exportToPROJString , refTransf , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { transformation_ , normalizeForVisualization , d , refTransf , }
		- SUCC   = { replaceAll , refTransfPROJString , }

4753 :	"exportToPROJString"
		- NEIGH  = { get , refTransfPROJString , PROJStringFormatter , io , create , exportToPROJString , refTransf , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { transformation_ , normalizeForVisualization , d , refTransf , }
		- SUCC   = { replaceAll , refTransfPROJString , }

4754 :	"io"
		- NEIGH  = { get , refTransfPROJString , PROJStringFormatter , io , create , exportToPROJString , refTransf , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { transformation_ , normalizeForVisualization , d , refTransf , }
		- SUCC   = { replaceAll , refTransfPROJString , }

4754 :	"PROJStringFormatter"
		- NEIGH  = { get , refTransfPROJString , PROJStringFormatter , io , create , exportToPROJString , refTransf , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { transformation_ , normalizeForVisualization , d , refTransf , }
		- SUCC   = { replaceAll , refTransfPROJString , }

4754 :	"create"
		- NEIGH  = { get , refTransfPROJString , PROJStringFormatter , io , create , exportToPROJString , refTransf , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { transformation_ , normalizeForVisualization , d , refTransf , }
		- SUCC   = { replaceAll , refTransfPROJString , }

4754 :	"get"
		- NEIGH  = { get , refTransfPROJString , PROJStringFormatter , io , create , exportToPROJString , refTransf , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { transformation_ , normalizeForVisualization , d , refTransf , }
		- SUCC   = { replaceAll , refTransfPROJString , }

4755 :	"refTransfPROJString"
		- NEIGH  = { replaceAll , refTransfPROJString , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { get , refTransfPROJString , PROJStringFormatter , io , create , exportToPROJString , refTransf , }
		- SUCC   = { refTransfPROJStringValid , }

4755 :	"replaceAll"
		- NEIGH  = { replaceAll , refTransfPROJString , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { get , refTransfPROJString , PROJStringFormatter , io , create , exportToPROJString , refTransf , }
		- SUCC   = { refTransfPROJStringValid , }

4756 :	"refTransfPROJString"
		- NEIGH  = { replaceAll , refTransfPROJString , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { get , refTransfPROJString , PROJStringFormatter , io , create , exportToPROJString , refTransf , }
		- SUCC   = { refTransfPROJStringValid , }

4758 :	"refTransfPROJStringValid"
		- NEIGH  = { refTransfPROJStringValid , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { replaceAll , refTransfPROJString , }
		- SUCC   = { & , exception , std , catch , }

4759 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { refTransfPROJStringValid , }
		- SUCC   = { refIsNullTransform , }

4759 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { refTransfPROJStringValid , }
		- SUCC   = { refIsNullTransform , }

4759 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { refTransfPROJStringValid , }
		- SUCC   = { refIsNullTransform , }

4759 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { refTransfPROJStringValid , }
		- SUCC   = { refIsNullTransform , }

4761 :	"refIsNullTransform"
		- NEIGH  = { refIsNullTransform , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { isTOWGS84Compatible , if , }

4762 :	"if"
		- NEIGH  = { isTOWGS84Compatible , if , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { > , < , vector , if , getTOWGS84Parameters , transformation , == , std , params , }
		- PRED   = { refIsNullTransform , }
		- SUCC   = { pair , resTemp , & , for , }

4762 :	"isTOWGS84Compatible"
		- NEIGH  = { isTOWGS84Compatible , if , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { > , < , vector , if , getTOWGS84Parameters , transformation , == , std , params , }
		- PRED   = { refIsNullTransform , }
		- SUCC   = { pair , resTemp , & , for , }

4763 :	"params"
		- NEIGH  = { getTOWGS84Parameters , transformation , params , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , < , vector , == , params , std , if , }

4763 :	"transformation"
		- NEIGH  = { getTOWGS84Parameters , transformation , params , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , < , vector , == , params , std , if , }

4763 :	"getTOWGS84Parameters"
		- NEIGH  = { getTOWGS84Parameters , transformation , params , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , < , vector , == , params , std , if , }

4764 :	"if"
		- NEIGH  = { > , < , vector , == , params , std , if , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { refIsNullTransform , }
		- PRED   = { getTOWGS84Parameters , transformation , params , }
		- SUCC   = { }

4764 :	"params"
		- NEIGH  = { > , < , vector , == , params , std , if , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { refIsNullTransform , }
		- PRED   = { getTOWGS84Parameters , transformation , params , }
		- SUCC   = { }

4764 :	"=="
		- NEIGH  = { > , < , vector , == , params , std , if , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { refIsNullTransform , }
		- PRED   = { getTOWGS84Parameters , transformation , params , }
		- SUCC   = { }

4764 :	"std"
		- NEIGH  = { > , < , vector , == , params , std , if , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { refIsNullTransform , }
		- PRED   = { getTOWGS84Parameters , transformation , params , }
		- SUCC   = { }

4764 :	"vector"
		- NEIGH  = { > , < , vector , == , params , std , if , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { refIsNullTransform , }
		- PRED   = { getTOWGS84Parameters , transformation , params , }
		- SUCC   = { }

4764 :	"<"
		- NEIGH  = { > , < , vector , == , params , std , if , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { refIsNullTransform , }
		- PRED   = { getTOWGS84Parameters , transformation , params , }
		- SUCC   = { }

4764 :	">"
		- NEIGH  = { > , < , vector , == , params , std , if , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { refIsNullTransform , }
		- PRED   = { getTOWGS84Parameters , transformation , params , }
		- SUCC   = { }

4765 :	"refIsNullTransform"
		- NEIGH  = { refIsNullTransform , }
		- PARENT = { > , < , vector , == , params , std , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4769 :	"for"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { nn_dynamic_pointer_cast , as_nullable , baseCRS , GeodeticCRS , geodCRS , get , > , ProjectedCRS , pair , * , util , projCRS , < , dynamic_cast , if , first , candidateBaseCRS , & , }
		- PRED   = { isTOWGS84Compatible , if , }
		- SUCC   = { }

4769 :	"&"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { nn_dynamic_pointer_cast , as_nullable , baseCRS , GeodeticCRS , geodCRS , get , > , ProjectedCRS , pair , * , util , projCRS , < , dynamic_cast , if , first , candidateBaseCRS , & , }
		- PRED   = { isTOWGS84Compatible , if , }
		- SUCC   = { }

4769 :	"pair"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { nn_dynamic_pointer_cast , as_nullable , baseCRS , GeodeticCRS , geodCRS , get , > , ProjectedCRS , pair , * , util , projCRS , < , dynamic_cast , if , first , candidateBaseCRS , & , }
		- PRED   = { isTOWGS84Compatible , if , }
		- SUCC   = { }

4769 :	"resTemp"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { nn_dynamic_pointer_cast , as_nullable , baseCRS , GeodeticCRS , geodCRS , get , > , ProjectedCRS , pair , * , util , projCRS , < , dynamic_cast , if , first , candidateBaseCRS , & , }
		- PRED   = { isTOWGS84Compatible , if , }
		- SUCC   = { }

4770 :	"&"
		- NEIGH  = { pair , first , candidateBaseCRS , & , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }

4770 :	"candidateBaseCRS"
		- NEIGH  = { pair , first , candidateBaseCRS , & , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }

4770 :	"pair"
		- NEIGH  = { pair , first , candidateBaseCRS , & , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }

4770 :	"first"
		- NEIGH  = { pair , first , candidateBaseCRS , & , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }

4771 :	"projCRS"
		- NEIGH  = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { pair , first , candidateBaseCRS , & , }
		- SUCC   = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }

4772 :	"dynamic_cast"
		- NEIGH  = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { pair , first , candidateBaseCRS , & , }
		- SUCC   = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }

4772 :	"<"
		- NEIGH  = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { pair , first , candidateBaseCRS , & , }
		- SUCC   = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }

4772 :	"ProjectedCRS"
		- NEIGH  = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { pair , first , candidateBaseCRS , & , }
		- SUCC   = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }

4772 :	"*"
		- NEIGH  = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { pair , first , candidateBaseCRS , & , }
		- SUCC   = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }

4772 :	">"
		- NEIGH  = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { pair , first , candidateBaseCRS , & , }
		- SUCC   = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }

4772 :	"candidateBaseCRS"
		- NEIGH  = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { pair , first , candidateBaseCRS , & , }
		- SUCC   = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }

4772 :	"get"
		- NEIGH  = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { pair , first , candidateBaseCRS , & , }
		- SUCC   = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }

4773 :	"geodCRS"
		- NEIGH  = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { geodCRS , if , }

4773 :	"projCRS"
		- NEIGH  = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { geodCRS , if , }

4773 :	"projCRS"
		- NEIGH  = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { geodCRS , if , }

4773 :	"baseCRS"
		- NEIGH  = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { geodCRS , if , }

4773 :	"as_nullable"
		- NEIGH  = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { geodCRS , if , }

4774 :	"util"
		- NEIGH  = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { geodCRS , if , }

4774 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { geodCRS , if , }

4774 :	"<"
		- NEIGH  = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { geodCRS , if , }

4774 :	"GeodeticCRS"
		- NEIGH  = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { geodCRS , if , }

4774 :	">"
		- NEIGH  = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { geodCRS , if , }

4775 :	"candidateBaseCRS"
		- NEIGH  = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { geodCRS , if , }

4776 :	"if"
		- NEIGH  = { geodCRS , if , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { for , EPSG_4326 , ! , geodCRS , NN_NO_CHECK , op , & , CoordinateOperationFactory , createOperations , foundOp , authorityFactory , ops , SpatialCriterion , CoordinateOperationContext , GeographicCRS , create , setSpatialCriterion , if , operation , PARTIAL_INTERSECTION , context , }
		- PRED   = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- SUCC   = { }

4776 :	"geodCRS"
		- NEIGH  = { geodCRS , if , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { for , EPSG_4326 , ! , geodCRS , NN_NO_CHECK , op , & , CoordinateOperationFactory , createOperations , foundOp , authorityFactory , ops , SpatialCriterion , CoordinateOperationContext , GeographicCRS , create , setSpatialCriterion , if , operation , PARTIAL_INTERSECTION , context , }
		- PRED   = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- SUCC   = { }

4777 :	"context"
		- NEIGH  = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }

4777 :	"operation"
		- NEIGH  = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }

4777 :	"CoordinateOperationContext"
		- NEIGH  = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }

4777 :	"create"
		- NEIGH  = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }

4778 :	"authorityFactory"
		- NEIGH  = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }

4779 :	"context"
		- NEIGH  = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- SUCC   = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }

4779 :	"setSpatialCriterion"
		- NEIGH  = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- SUCC   = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }

4780 :	"operation"
		- NEIGH  = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- SUCC   = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }

4780 :	"CoordinateOperationContext"
		- NEIGH  = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- SUCC   = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }

4780 :	"SpatialCriterion"
		- NEIGH  = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- SUCC   = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }

4781 :	"PARTIAL_INTERSECTION"
		- NEIGH  = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- SUCC   = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }

4782 :	"ops"
		- NEIGH  = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }
		- SUCC   = { foundOp , }

4783 :	"operation"
		- NEIGH  = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }
		- SUCC   = { foundOp , }

4783 :	"CoordinateOperationFactory"
		- NEIGH  = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }
		- SUCC   = { foundOp , }

4783 :	"create"
		- NEIGH  = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }
		- SUCC   = { foundOp , }

4784 :	"createOperations"
		- NEIGH  = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }
		- SUCC   = { foundOp , }

4784 :	"NN_NO_CHECK"
		- NEIGH  = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }
		- SUCC   = { foundOp , }

4784 :	"geodCRS"
		- NEIGH  = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }
		- SUCC   = { foundOp , }

4785 :	"GeographicCRS"
		- NEIGH  = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }
		- SUCC   = { foundOp , }

4785 :	"EPSG_4326"
		- NEIGH  = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }
		- SUCC   = { foundOp , }

4785 :	"context"
		- NEIGH  = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }
		- SUCC   = { foundOp , }

4787 :	"foundOp"
		- NEIGH  = { foundOp , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }
		- SUCC   = { op , ops , & , for , }

4788 :	"for"
		- NEIGH  = { op , ops , & , for , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { Criterion , _isEquivalentTo , IComparable , refTransfPROJStringValid , get , create , util , && , exception , io , dbContext , exportToPROJString , == , replaceAll , PROJStringFormatter , opTransfPROJStringValid , nameStr , if , refTransf , find , & , op , normalizeForVisualization , string , EQUIVALENT , refTransfPROJString , || , opNormalized , std , catch , opTransfPROJString , }
		- PRED   = { foundOp , }
		- SUCC   = { foundOp , ! , if , }

4788 :	"&"
		- NEIGH  = { op , ops , & , for , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { Criterion , _isEquivalentTo , IComparable , refTransfPROJStringValid , get , create , util , && , exception , io , dbContext , exportToPROJString , == , replaceAll , PROJStringFormatter , opTransfPROJStringValid , nameStr , if , refTransf , find , & , op , normalizeForVisualization , string , EQUIVALENT , refTransfPROJString , || , opNormalized , std , catch , opTransfPROJString , }
		- PRED   = { foundOp , }
		- SUCC   = { foundOp , ! , if , }

4788 :	"op"
		- NEIGH  = { op , ops , & , for , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { Criterion , _isEquivalentTo , IComparable , refTransfPROJStringValid , get , create , util , && , exception , io , dbContext , exportToPROJString , == , replaceAll , PROJStringFormatter , opTransfPROJStringValid , nameStr , if , refTransf , find , & , op , normalizeForVisualization , string , EQUIVALENT , refTransfPROJString , || , opNormalized , std , catch , opTransfPROJString , }
		- PRED   = { foundOp , }
		- SUCC   = { foundOp , ! , if , }

4788 :	"ops"
		- NEIGH  = { op , ops , & , for , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { Criterion , _isEquivalentTo , IComparable , refTransfPROJStringValid , get , create , util , && , exception , io , dbContext , exportToPROJString , == , replaceAll , PROJStringFormatter , opTransfPROJStringValid , nameStr , if , refTransf , find , & , op , normalizeForVisualization , string , EQUIVALENT , refTransfPROJString , || , opNormalized , std , catch , opTransfPROJString , }
		- PRED   = { foundOp , }
		- SUCC   = { foundOp , ! , if , }

4789 :	"opNormalized"
		- NEIGH  = { normalizeForVisualization , op , opNormalized , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { opTransfPROJString , string , std , }

4789 :	"op"
		- NEIGH  = { normalizeForVisualization , op , opNormalized , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { opTransfPROJString , string , std , }

4789 :	"normalizeForVisualization"
		- NEIGH  = { normalizeForVisualization , op , opNormalized , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { opTransfPROJString , string , std , }

4790 :	"std"
		- NEIGH  = { opTransfPROJString , string , std , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { normalizeForVisualization , op , opNormalized , }
		- SUCC   = { opTransfPROJStringValid , }

4790 :	"string"
		- NEIGH  = { opTransfPROJString , string , std , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { normalizeForVisualization , op , opNormalized , }
		- SUCC   = { opTransfPROJStringValid , }

4790 :	"opTransfPROJString"
		- NEIGH  = { opTransfPROJString , string , std , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { normalizeForVisualization , op , opNormalized , }
		- SUCC   = { opTransfPROJStringValid , }

4791 :	"opTransfPROJStringValid"
		- NEIGH  = { opTransfPROJStringValid , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { opTransfPROJString , string , std , }
		- SUCC   = { == , nameStr , find , op , if , }

4792 :	"if"
		- NEIGH  = { == , nameStr , find , op , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { continue , refIsNullTransform , if , }
		- PRED   = { opTransfPROJStringValid , }
		- SUCC   = { get , PROJStringFormatter , io , create , exportToPROJString , opNormalized , opTransfPROJString , }

4792 :	"op"
		- NEIGH  = { == , nameStr , find , op , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { continue , refIsNullTransform , if , }
		- PRED   = { opTransfPROJStringValid , }
		- SUCC   = { get , PROJStringFormatter , io , create , exportToPROJString , opNormalized , opTransfPROJString , }

4792 :	"nameStr"
		- NEIGH  = { == , nameStr , find , op , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { continue , refIsNullTransform , if , }
		- PRED   = { opTransfPROJStringValid , }
		- SUCC   = { get , PROJStringFormatter , io , create , exportToPROJString , opNormalized , opTransfPROJString , }

4792 :	"find"
		- NEIGH  = { == , nameStr , find , op , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { continue , refIsNullTransform , if , }
		- PRED   = { opTransfPROJStringValid , }
		- SUCC   = { get , PROJStringFormatter , io , create , exportToPROJString , opNormalized , opTransfPROJString , }

4792 :	"=="
		- NEIGH  = { == , nameStr , find , op , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { continue , refIsNullTransform , if , }
		- PRED   = { opTransfPROJStringValid , }
		- SUCC   = { get , PROJStringFormatter , io , create , exportToPROJString , opNormalized , opTransfPROJString , }

4793 :	"if"
		- NEIGH  = { refIsNullTransform , if , }
		- PARENT = { == , nameStr , find , op , if , }
		- CHILD  = { break , second , transformation , hubCRS_ , candidateBaseCRS , foundOp , d , create , pair , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { continue , }

4793 :	"refIsNullTransform"
		- NEIGH  = { refIsNullTransform , if , }
		- PARENT = { == , nameStr , find , op , if , }
		- CHILD  = { break , second , transformation , hubCRS_ , candidateBaseCRS , foundOp , d , create , pair , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { continue , }

4794 :	"res"
		- NEIGH  = { second , transformation , hubCRS_ , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { refIsNullTransform , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4794 :	"emplace_back"
		- NEIGH  = { second , transformation , hubCRS_ , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { refIsNullTransform , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4794 :	"create"
		- NEIGH  = { second , transformation , hubCRS_ , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { refIsNullTransform , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4794 :	"candidateBaseCRS"
		- NEIGH  = { second , transformation , hubCRS_ , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { refIsNullTransform , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4795 :	"d"
		- NEIGH  = { second , transformation , hubCRS_ , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { refIsNullTransform , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4795 :	"hubCRS_"
		- NEIGH  = { second , transformation , hubCRS_ , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { refIsNullTransform , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4796 :	"transformation"
		- NEIGH  = { second , transformation , hubCRS_ , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { refIsNullTransform , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4797 :	"pair"
		- NEIGH  = { second , transformation , hubCRS_ , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { refIsNullTransform , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4797 :	"second"
		- NEIGH  = { second , transformation , hubCRS_ , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { refIsNullTransform , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4798 :	"foundOp"
		- NEIGH  = { foundOp , }
		- PARENT = { refIsNullTransform , if , }
		- CHILD  = { }
		- PRED   = { second , transformation , hubCRS_ , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- SUCC   = { break , }

4799 :	"break"
		- NEIGH  = { break , }
		- PARENT = { refIsNullTransform , if , }
		- CHILD  = { }
		- PRED   = { foundOp , }
		- SUCC   = { }

4801 :	"continue"
		- NEIGH  = { continue , }
		- PARENT = { == , nameStr , find , op , if , }
		- CHILD  = { }
		- PRED   = { refIsNullTransform , if , }
		- SUCC   = { }

4804 :	"opTransfPROJString"
		- NEIGH  = { get , PROJStringFormatter , io , create , exportToPROJString , opNormalized , opTransfPROJString , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { == , nameStr , find , op , if , }
		- SUCC   = { opTransfPROJStringValid , }

4804 :	"opNormalized"
		- NEIGH  = { get , PROJStringFormatter , io , create , exportToPROJString , opNormalized , opTransfPROJString , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { == , nameStr , find , op , if , }
		- SUCC   = { opTransfPROJStringValid , }

4804 :	"exportToPROJString"
		- NEIGH  = { get , PROJStringFormatter , io , create , exportToPROJString , opNormalized , opTransfPROJString , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { == , nameStr , find , op , if , }
		- SUCC   = { opTransfPROJStringValid , }

4805 :	"io"
		- NEIGH  = { get , PROJStringFormatter , io , create , exportToPROJString , opNormalized , opTransfPROJString , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { == , nameStr , find , op , if , }
		- SUCC   = { opTransfPROJStringValid , }

4805 :	"PROJStringFormatter"
		- NEIGH  = { get , PROJStringFormatter , io , create , exportToPROJString , opNormalized , opTransfPROJString , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { == , nameStr , find , op , if , }
		- SUCC   = { opTransfPROJStringValid , }

4805 :	"create"
		- NEIGH  = { get , PROJStringFormatter , io , create , exportToPROJString , opNormalized , opTransfPROJString , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { == , nameStr , find , op , if , }
		- SUCC   = { opTransfPROJStringValid , }

4805 :	"get"
		- NEIGH  = { get , PROJStringFormatter , io , create , exportToPROJString , opNormalized , opTransfPROJString , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { == , nameStr , find , op , if , }
		- SUCC   = { opTransfPROJStringValid , }

4806 :	"opTransfPROJStringValid"
		- NEIGH  = { opTransfPROJStringValid , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { get , PROJStringFormatter , io , create , exportToPROJString , opNormalized , opTransfPROJString , }
		- SUCC   = { replaceAll , opTransfPROJString , }

4807 :	"opTransfPROJString"
		- NEIGH  = { replaceAll , opTransfPROJString , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { opTransfPROJStringValid , }
		- SUCC   = { & , exception , std , catch , }

4807 :	"replaceAll"
		- NEIGH  = { replaceAll , opTransfPROJString , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { opTransfPROJStringValid , }
		- SUCC   = { & , exception , std , catch , }

4808 :	"opTransfPROJString"
		- NEIGH  = { replaceAll , opTransfPROJString , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { opTransfPROJStringValid , }
		- SUCC   = { & , exception , std , catch , }

4811 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { replaceAll , opTransfPROJString , }
		- SUCC   = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }

4811 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { replaceAll , opTransfPROJString , }
		- SUCC   = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }

4811 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { replaceAll , opTransfPROJString , }
		- SUCC   = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }

4811 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { replaceAll , opTransfPROJString , }
		- SUCC   = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }

4813 :	"if"
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4813 :	"refTransfPROJStringValid"
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4813 :	"&&"
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4813 :	"opTransfPROJStringValid"
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4813 :	"&&"
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4814 :	"refTransfPROJString"
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4814 :	"=="
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4814 :	"opTransfPROJString"
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4814 :	"||"
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4815 :	"opNormalized"
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4815 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4816 :	"refTransf"
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4816 :	"get"
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4817 :	"util"
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4817 :	"IComparable"
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4817 :	"Criterion"
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4817 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4818 :	"dbContext"
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4819 :	"resMatchOfTransfToWGS84"
		- NEIGH  = { second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4819 :	"emplace_back"
		- NEIGH  = { second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4820 :	"create"
		- NEIGH  = { second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4820 :	"candidateBaseCRS"
		- NEIGH  = { second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4820 :	"d"
		- NEIGH  = { second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4820 :	"hubCRS_"
		- NEIGH  = { second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4821 :	"NN_NO_CHECK"
		- NEIGH  = { second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4821 :	"util"
		- NEIGH  = { second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4821 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4821 :	"<"
		- NEIGH  = { second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4822 :	"operation"
		- NEIGH  = { second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4822 :	"Transformation"
		- NEIGH  = { second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4822 :	">"
		- NEIGH  = { second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4822 :	"op"
		- NEIGH  = { second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4823 :	"pair"
		- NEIGH  = { second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4823 :	"second"
		- NEIGH  = { second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4824 :	"foundOp"
		- NEIGH  = { foundOp , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- SUCC   = { break , }

4825 :	"break"
		- NEIGH  = { break , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { foundOp , }
		- SUCC   = { }

4828 :	"if"
		- NEIGH  = { foundOp , ! , if , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PRED   = { op , ops , & , for , }
		- SUCC   = { }

4828 :	"!"
		- NEIGH  = { foundOp , ! , if , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PRED   = { op , ops , & , for , }
		- SUCC   = { }

4828 :	"foundOp"
		- NEIGH  = { foundOp , ! , if , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PRED   = { op , ops , & , for , }
		- SUCC   = { }

4829 :	"res"
		- NEIGH  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { foundOp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4829 :	"emplace_back"
		- NEIGH  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { foundOp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4830 :	"create"
		- NEIGH  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { foundOp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4830 :	"candidateBaseCRS"
		- NEIGH  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { foundOp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4830 :	"d"
		- NEIGH  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { foundOp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4830 :	"hubCRS_"
		- NEIGH  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { foundOp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4830 :	"transformation"
		- NEIGH  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { foundOp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4831 :	"std"
		- NEIGH  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { foundOp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4831 :	"min"
		- NEIGH  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { foundOp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4831 :	"pair"
		- NEIGH  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { foundOp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4831 :	"second"
		- NEIGH  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { foundOp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4836 :	"return"
		- NEIGH  = { res , empty , resMatchOfTransfToWGS84 , ! , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- SUCC   = { }

4836 :	"!"
		- NEIGH  = { res , empty , resMatchOfTransfToWGS84 , ! , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- SUCC   = { }

4836 :	"resMatchOfTransfToWGS84"
		- NEIGH  = { res , empty , resMatchOfTransfToWGS84 , ! , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- SUCC   = { }

4836 :	"empty"
		- NEIGH  = { res , empty , resMatchOfTransfToWGS84 , ! , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- SUCC   = { }

4836 :	"resMatchOfTransfToWGS84"
		- NEIGH  = { res , empty , resMatchOfTransfToWGS84 , ! , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- SUCC   = { }

4836 :	"res"
		- NEIGH  = { res , empty , resMatchOfTransfToWGS84 , ! , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- SUCC   = { }

4842 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4842 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4848 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4848 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4853 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4853 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4854 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4854 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4854 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4855 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4855 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4855 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4855 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4856 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4856 :	"CartesianCSNNPtr"
		- NEIGH  = { CartesianCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4856 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4856 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4857 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4857 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4857 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4857 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4857 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4857 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4858 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4858 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4858 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4858 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4858 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4858 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4859 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4859 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4859 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4859 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4859 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4863 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4863 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4864 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4864 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4864 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4865 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4865 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4865 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4865 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4866 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4866 :	"SphericalCSNNPtr"
		- NEIGH  = { SphericalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4866 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4866 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4867 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4867 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4867 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4867 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4867 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4867 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4868 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4868 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4868 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4868 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4868 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4868 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4869 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4869 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4869 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4869 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4869 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4873 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4873 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4873 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4873 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4873 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4874 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4874 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4874 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4874 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4874 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4874 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4874 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4878 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4878 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4878 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4879 :	"crs"
		- NEIGH  = { this , * , < , crs , DerivedGeodeticCRS , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4879 :	"DerivedGeodeticCRS"
		- NEIGH  = { this , * , < , crs , DerivedGeodeticCRS , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4879 :	"nn_make_shared"
		- NEIGH  = { this , * , < , crs , DerivedGeodeticCRS , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4879 :	"<"
		- NEIGH  = { this , * , < , crs , DerivedGeodeticCRS , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4879 :	"DerivedGeodeticCRS"
		- NEIGH  = { this , * , < , crs , DerivedGeodeticCRS , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4879 :	">"
		- NEIGH  = { this , * , < , crs , DerivedGeodeticCRS , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4879 :	"*"
		- NEIGH  = { this , * , < , crs , DerivedGeodeticCRS , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4879 :	"this"
		- NEIGH  = { this , * , < , crs , DerivedGeodeticCRS , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4880 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , crs , DerivedGeodeticCRS , > , nn_make_shared , }
		- SUCC   = { setDerivingConversionCRS , crs , }

4880 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , crs , DerivedGeodeticCRS , > , nn_make_shared , }
		- SUCC   = { setDerivingConversionCRS , crs , }

4880 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , crs , DerivedGeodeticCRS , > , nn_make_shared , }
		- SUCC   = { setDerivingConversionCRS , crs , }

4881 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

4881 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

4882 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

4882 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

4891 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4891 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4891 :	"baseCRS"
		- NEIGH  = { baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4892 :	"return"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4892 :	"NN_NO_CHECK"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4892 :	"util"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4892 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4892 :	"<"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4892 :	"GeodeticCRS"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4892 :	">"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4893 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4893 :	"getPrivate"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4893 :	"baseCRS_"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4909 :	"DerivedGeodeticCRSNNPtr"
		- NEIGH  = { DerivedGeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4909 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4909 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4910 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4910 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4910 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4910 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4910 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4910 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4910 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4911 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4911 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4911 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4911 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4912 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4912 :	"CartesianCSNNPtr"
		- NEIGH  = { CartesianCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4912 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4912 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4913 :	"crs"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4913 :	"DerivedGeodeticCRS"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4913 :	"nn_make_shared"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4913 :	"<"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4913 :	"DerivedGeodeticCRS"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4913 :	">"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4914 :	"baseCRSIn"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4914 :	"derivingConversionIn"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4914 :	"csIn"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4915 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- SUCC   = { properties , setProperties , crs , }

4915 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- SUCC   = { properties , setProperties , crs , }

4915 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- SUCC   = { properties , setProperties , crs , }

4916 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

4916 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

4916 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

4917 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

4917 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

4918 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

4918 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

4934 :	"DerivedGeodeticCRSNNPtr"
		- NEIGH  = { DerivedGeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4934 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4934 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4935 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4935 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4935 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4935 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4935 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4935 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4935 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4936 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4936 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4936 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4936 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4937 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4937 :	"SphericalCSNNPtr"
		- NEIGH  = { SphericalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4937 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4937 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4938 :	"crs"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4938 :	"DerivedGeodeticCRS"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4938 :	"nn_make_shared"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4938 :	"<"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4938 :	"DerivedGeodeticCRS"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4938 :	">"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4939 :	"baseCRSIn"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4939 :	"derivingConversionIn"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4939 :	"csIn"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4940 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- SUCC   = { properties , setProperties , crs , }

4940 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- SUCC   = { properties , setProperties , crs , }

4940 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- SUCC   = { properties , setProperties , crs , }

4941 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

4941 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

4941 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

4942 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

4942 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

4943 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

4943 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

4949 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4949 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4949 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4949 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4949 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4949 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4950 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

4950 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

4950 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

4950 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

4950 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

4950 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

4950 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

4950 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

4951 :	"if"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }

4951 :	"!"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }

4951 :	"isWKT2"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }

4952 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4952 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4952 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4955 :	"formatter"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4955 :	"startNode"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4955 :	"io"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4955 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4955 :	"GEODCRS"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4955 :	"!"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4955 :	"identifiers"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4955 :	"empty"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4956 :	"formatter"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }
		- SUCC   = { baseCRS , l_baseCRS , }

4956 :	"addQuotedString"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }
		- SUCC   = { baseCRS , l_baseCRS , }

4956 :	"nameStr"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }
		- SUCC   = { baseCRS , l_baseCRS , }

4958 :	"l_baseCRS"
		- NEIGH  = { baseCRS , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }

4958 :	"baseCRS"
		- NEIGH  = { baseCRS , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }

4959 :	"formatter"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4959 :	"startNode"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4959 :	"formatter"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4959 :	"use2019Keywords"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4959 :	"&&"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4960 :	"dynamic_cast"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4960 :	"<"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4960 :	"GeographicCRS"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4960 :	"*"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4960 :	">"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4960 :	"l_baseCRS"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4960 :	"get"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4961 :	"io"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4961 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4961 :	"BASEGEOGCRS"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4962 :	"io"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4962 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4962 :	"BASEGEODCRS"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4963 :	"!"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4963 :	"baseCRS"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4963 :	"identifiers"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4963 :	"empty"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4964 :	"formatter"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { datum , l_baseCRS , l_datum , }

4964 :	"addQuotedString"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { datum , l_baseCRS , l_datum , }

4964 :	"l_baseCRS"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { datum , l_baseCRS , l_datum , }

4964 :	"nameStr"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { datum , l_baseCRS , l_datum , }

4965 :	"l_datum"
		- NEIGH  = { datum , l_baseCRS , l_datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { l_datum , if , }

4965 :	"l_baseCRS"
		- NEIGH  = { datum , l_baseCRS , l_datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { l_datum , if , }

4965 :	"datum"
		- NEIGH  = { datum , l_baseCRS , l_datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { l_datum , if , }

4966 :	"if"
		- NEIGH  = { l_datum , if , }
		- PARENT = { }
		- CHILD  = { assert , formatter , l_datumEnsemble , l_datum , _exportToWKT , datumEnsemble , }
		- PRED   = { datum , l_baseCRS , l_datum , }
		- SUCC   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }

4966 :	"l_datum"
		- NEIGH  = { l_datum , if , }
		- PARENT = { }
		- CHILD  = { assert , formatter , l_datumEnsemble , l_datum , _exportToWKT , datumEnsemble , }
		- PRED   = { datum , l_baseCRS , l_datum , }
		- SUCC   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }

4967 :	"l_datum"
		- NEIGH  = { formatter , _exportToWKT , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4967 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4967 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4969 :	"l_datumEnsemble"
		- NEIGH  = { datumEnsemble , l_datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datumEnsemble , assert , }

4969 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , l_datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datumEnsemble , assert , }

4970 :	"assert"
		- NEIGH  = { l_datumEnsemble , assert , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { datumEnsemble , l_datumEnsemble , }
		- SUCC   = { formatter , _exportToWKT , l_datumEnsemble , }

4970 :	"l_datumEnsemble"
		- NEIGH  = { l_datumEnsemble , assert , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { datumEnsemble , l_datumEnsemble , }
		- SUCC   = { formatter , _exportToWKT , l_datumEnsemble , }

4971 :	"l_datumEnsemble"
		- NEIGH  = { formatter , _exportToWKT , l_datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , assert , }
		- SUCC   = { }

4971 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , l_datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , assert , }
		- SUCC   = { }

4971 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , l_datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , assert , }
		- SUCC   = { }

4973 :	"l_baseCRS"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datum , if , }
		- SUCC   = { endNode , formatter , }

4973 :	"primeMeridian"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datum , if , }
		- SUCC   = { endNode , formatter , }

4973 :	"_exportToWKT"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datum , if , }
		- SUCC   = { endNode , formatter , }

4973 :	"formatter"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datum , if , }
		- SUCC   = { endNode , formatter , }

4974 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { setUseDerivingConversion , formatter , }

4974 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { setUseDerivingConversion , formatter , }

4976 :	"formatter"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

4976 :	"setUseDerivingConversion"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

4977 :	"derivingConversionRef"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

4977 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

4977 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

4978 :	"formatter"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

4978 :	"setUseDerivingConversion"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

4980 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

4980 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

4980 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

4981 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

4981 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

4981 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

4982 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

4982 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

4988 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4988 :	"_exportToPROJString"
		- NEIGH  = { _exportToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4989 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4989 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4989 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4991 :	"throw"
		- NEIGH  = { FormattingException , io , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4991 :	"io"
		- NEIGH  = { FormattingException , io , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4991 :	"FormattingException"
		- NEIGH  = { FormattingException , io , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4997 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4997 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4998 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4998 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4998 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4998 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4998 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4998 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4998 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4998 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4999 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4999 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4999 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4999 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5000 :	"otherDerivedCRS"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5000 :	"dynamic_cast"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5000 :	"<"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5000 :	"DerivedGeodeticCRS"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5000 :	"*"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5000 :	">"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5000 :	"other"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5001 :	"return"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5001 :	"otherDerivedCRS"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5001 :	"!="
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5001 :	"&&"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5002 :	"DerivedCRS"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5002 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5002 :	"other"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5002 :	"criterion"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5002 :	"dbContext"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5009 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5009 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5009 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5009 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5009 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5009 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5009 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5009 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5010 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5010 :	"_identify"
		- NEIGH  = { _identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5010 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5010 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5010 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5010 :	"factory"
		- NEIGH  = { factory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5011 :	"return"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5011 :	"CRS"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5011 :	"_identify"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5011 :	"factory"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5019 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5019 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5025 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5025 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5030 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5030 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5031 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5031 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5031 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5032 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5032 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5032 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5032 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5033 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5033 :	"EllipsoidalCSNNPtr"
		- NEIGH  = { EllipsoidalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5033 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5033 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5034 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5034 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5034 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5034 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5034 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5034 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5035 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5035 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5035 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5035 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5035 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5035 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5036 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5036 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5036 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5036 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5036 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5040 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5040 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5040 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5040 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5040 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5041 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5041 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5041 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5041 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5041 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5041 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5041 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5045 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5045 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5045 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5046 :	"crs"
		- NEIGH  = { this , * , < , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5046 :	"DerivedGeographicCRS"
		- NEIGH  = { this , * , < , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5046 :	"nn_make_shared"
		- NEIGH  = { this , * , < , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5046 :	"<"
		- NEIGH  = { this , * , < , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5046 :	"DerivedGeographicCRS"
		- NEIGH  = { this , * , < , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5046 :	">"
		- NEIGH  = { this , * , < , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5046 :	"*"
		- NEIGH  = { this , * , < , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5046 :	"this"
		- NEIGH  = { this , * , < , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5047 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5047 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5047 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5048 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

5048 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

5049 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5049 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5058 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5058 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5058 :	"baseCRS"
		- NEIGH  = { baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5059 :	"return"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5059 :	"NN_NO_CHECK"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5059 :	"util"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5059 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5059 :	"<"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5059 :	"GeodeticCRS"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5059 :	">"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5060 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5060 :	"getPrivate"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5060 :	"baseCRS_"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5076 :	"DerivedGeographicCRSNNPtr"
		- NEIGH  = { DerivedGeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5076 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5076 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5077 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5077 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5077 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5077 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5077 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5077 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5077 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5078 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5078 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5078 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5078 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5079 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5079 :	"EllipsoidalCSNNPtr"
		- NEIGH  = { EllipsoidalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5079 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5079 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5080 :	"crs"
		- NEIGH  = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5080 :	"DerivedGeographicCRS"
		- NEIGH  = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5080 :	"nn_make_shared"
		- NEIGH  = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5080 :	"<"
		- NEIGH  = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5080 :	"DerivedGeographicCRS"
		- NEIGH  = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5080 :	">"
		- NEIGH  = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5081 :	"baseCRSIn"
		- NEIGH  = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5081 :	"derivingConversionIn"
		- NEIGH  = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5081 :	"csIn"
		- NEIGH  = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5082 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- SUCC   = { properties , setProperties , crs , }

5082 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- SUCC   = { properties , setProperties , crs , }

5082 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- SUCC   = { properties , setProperties , crs , }

5083 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5083 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5083 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5084 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

5084 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

5085 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5085 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5091 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5091 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5091 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5091 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5091 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5091 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5092 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5092 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5092 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5092 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5092 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5092 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5092 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5092 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5093 :	"if"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }

5093 :	"!"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }

5093 :	"isWKT2"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }

5094 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5094 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5094 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5097 :	"formatter"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5097 :	"startNode"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5097 :	"formatter"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5097 :	"use2019Keywords"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5098 :	"io"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5098 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5098 :	"GEOGCRS"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5099 :	"io"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5099 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5099 :	"GEODCRS"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5100 :	"!"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5100 :	"identifiers"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5100 :	"empty"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5101 :	"formatter"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- SUCC   = { baseCRS , l_baseCRS , }

5101 :	"addQuotedString"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- SUCC   = { baseCRS , l_baseCRS , }

5101 :	"nameStr"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- SUCC   = { baseCRS , l_baseCRS , }

5103 :	"l_baseCRS"
		- NEIGH  = { baseCRS , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }

5103 :	"baseCRS"
		- NEIGH  = { baseCRS , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }

5104 :	"formatter"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5104 :	"startNode"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5104 :	"formatter"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5104 :	"use2019Keywords"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5104 :	"&&"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5105 :	"dynamic_cast"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5105 :	"<"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5105 :	"GeographicCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5105 :	"*"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5105 :	">"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5105 :	"l_baseCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5105 :	"get"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5106 :	"io"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5106 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5106 :	"BASEGEOGCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5107 :	"io"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5107 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5107 :	"BASEGEODCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5108 :	"!"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5108 :	"l_baseCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5108 :	"identifiers"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5108 :	"empty"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5109 :	"formatter"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

5109 :	"addQuotedString"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

5109 :	"l_baseCRS"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

5109 :	"nameStr"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

5110 :	"l_baseCRS"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }

5110 :	"exportDatumOrDatumEnsembleToWkt"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }

5110 :	"formatter"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }

5111 :	"l_baseCRS"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

5111 :	"primeMeridian"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

5111 :	"_exportToWKT"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

5111 :	"formatter"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

5112 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { setUseDerivingConversion , formatter , }

5112 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { setUseDerivingConversion , formatter , }

5114 :	"formatter"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

5114 :	"setUseDerivingConversion"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

5115 :	"derivingConversionRef"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

5115 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

5115 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

5116 :	"formatter"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

5116 :	"setUseDerivingConversion"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

5118 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

5118 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

5118 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

5119 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

5119 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

5119 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

5120 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

5120 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

5126 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5126 :	"_exportToPROJString"
		- NEIGH  = { _exportToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5127 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5127 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5127 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5127 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5129 :	"&"
		- NEIGH  = { derivingConversionRef , l_conv , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , method , methodName , l_conv , & , }

5129 :	"l_conv"
		- NEIGH  = { derivingConversionRef , l_conv , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , method , methodName , l_conv , & , }

5129 :	"derivingConversionRef"
		- NEIGH  = { derivingConversionRef , l_conv , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , method , methodName , l_conv , & , }

5130 :	"&"
		- NEIGH  = { nameStr , method , methodName , l_conv , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversionRef , l_conv , & , }
		- SUCC   = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , ci_equal , || , == , methodName , if , }

5130 :	"methodName"
		- NEIGH  = { nameStr , method , methodName , l_conv , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversionRef , l_conv , & , }
		- SUCC   = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , ci_equal , || , == , methodName , if , }

5130 :	"l_conv"
		- NEIGH  = { nameStr , method , methodName , l_conv , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversionRef , l_conv , & , }
		- SUCC   = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , ci_equal , || , == , methodName , if , }

5130 :	"method"
		- NEIGH  = { nameStr , method , methodName , l_conv , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversionRef , l_conv , & , }
		- SUCC   = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , ci_equal , || , == , methodName , if , }

5130 :	"nameStr"
		- NEIGH  = { nameStr , method , methodName , l_conv , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversionRef , l_conv , & , }
		- SUCC   = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , ci_equal , || , == , methodName , if , }

5131 :	"if"
		- NEIGH  = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , ci_equal , || , == , methodName , if , }
		- PARENT = { }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { nameStr , method , methodName , l_conv , & , }
		- SUCC   = { FormattingException , io , throw , }

5131 :	"methodName"
		- NEIGH  = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , ci_equal , || , == , methodName , if , }
		- PARENT = { }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { nameStr , method , methodName , l_conv , & , }
		- SUCC   = { FormattingException , io , throw , }

5131 :	"=="
		- NEIGH  = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , ci_equal , || , == , methodName , if , }
		- PARENT = { }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { nameStr , method , methodName , l_conv , & , }
		- SUCC   = { FormattingException , io , throw , }

5131 :	"||"
		- NEIGH  = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , ci_equal , || , == , methodName , if , }
		- PARENT = { }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { nameStr , method , methodName , l_conv , & , }
		- SUCC   = { FormattingException , io , throw , }

5132 :	"methodName"
		- NEIGH  = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , ci_equal , || , == , methodName , if , }
		- PARENT = { }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { nameStr , method , methodName , l_conv , & , }
		- SUCC   = { FormattingException , io , throw , }

5132 :	"=="
		- NEIGH  = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , ci_equal , || , == , methodName , if , }
		- PARENT = { }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { nameStr , method , methodName , l_conv , & , }
		- SUCC   = { FormattingException , io , throw , }

5132 :	"||"
		- NEIGH  = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , ci_equal , || , == , methodName , if , }
		- PARENT = { }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { nameStr , method , methodName , l_conv , & , }
		- SUCC   = { FormattingException , io , throw , }

5133 :	"methodName"
		- NEIGH  = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , ci_equal , || , == , methodName , if , }
		- PARENT = { }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { nameStr , method , methodName , l_conv , & , }
		- SUCC   = { FormattingException , io , throw , }

5133 :	"=="
		- NEIGH  = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , ci_equal , || , == , methodName , if , }
		- PARENT = { }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { nameStr , method , methodName , l_conv , & , }
		- SUCC   = { FormattingException , io , throw , }

5133 :	"||"
		- NEIGH  = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , ci_equal , || , == , methodName , if , }
		- PARENT = { }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { nameStr , method , methodName , l_conv , & , }
		- SUCC   = { FormattingException , io , throw , }

5134 :	"methodName"
		- NEIGH  = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , ci_equal , || , == , methodName , if , }
		- PARENT = { }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { nameStr , method , methodName , l_conv , & , }
		- SUCC   = { FormattingException , io , throw , }

5134 :	"=="
		- NEIGH  = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , ci_equal , || , == , methodName , if , }
		- PARENT = { }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { nameStr , method , methodName , l_conv , & , }
		- SUCC   = { FormattingException , io , throw , }

5134 :	"||"
		- NEIGH  = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , ci_equal , || , == , methodName , if , }
		- PARENT = { }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { nameStr , method , methodName , l_conv , & , }
		- SUCC   = { FormattingException , io , throw , }

5135 :	"ci_equal"
		- NEIGH  = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , ci_equal , || , == , methodName , if , }
		- PARENT = { }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { nameStr , method , methodName , l_conv , & , }
		- SUCC   = { FormattingException , io , throw , }

5135 :	"methodName"
		- NEIGH  = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , ci_equal , || , == , methodName , if , }
		- PARENT = { }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { nameStr , method , methodName , l_conv , & , }
		- SUCC   = { FormattingException , io , throw , }

5136 :	"PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION"
		- NEIGH  = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , ci_equal , || , == , methodName , if , }
		- PARENT = { }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { nameStr , method , methodName , l_conv , & , }
		- SUCC   = { FormattingException , io , throw , }

5137 :	"l_conv"
		- NEIGH  = { formatter , _exportToPROJString , l_conv , }
		- PARENT = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , ci_equal , || , == , methodName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

5137 :	"_exportToPROJString"
		- NEIGH  = { formatter , _exportToPROJString , l_conv , }
		- PARENT = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , ci_equal , || , == , methodName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

5137 :	"formatter"
		- NEIGH  = { formatter , _exportToPROJString , l_conv , }
		- PARENT = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , ci_equal , || , == , methodName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

5138 :	"return"
		- NEIGH  = { return , }
		- PARENT = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , ci_equal , || , == , methodName , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , l_conv , }
		- SUCC   = { }

5141 :	"throw"
		- NEIGH  = { FormattingException , io , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , ci_equal , || , == , methodName , if , }
		- SUCC   = { }

5141 :	"io"
		- NEIGH  = { FormattingException , io , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , ci_equal , || , == , methodName , if , }
		- SUCC   = { }

5141 :	"FormattingException"
		- NEIGH  = { FormattingException , io , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , ci_equal , || , == , methodName , if , }
		- SUCC   = { }

5147 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5147 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5148 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5148 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5148 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5148 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5148 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5148 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5148 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5148 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5149 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5149 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5149 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5149 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5150 :	"otherDerivedCRS"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5150 :	"dynamic_cast"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5150 :	"<"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5150 :	"DerivedGeographicCRS"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5150 :	"*"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5150 :	">"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5150 :	"other"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5151 :	"return"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5151 :	"otherDerivedCRS"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5151 :	"!="
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5151 :	"&&"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5152 :	"DerivedCRS"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5152 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5152 :	"other"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5152 :	"criterion"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5152 :	"dbContext"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5159 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5159 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5159 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5159 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5159 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5159 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5159 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5159 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5160 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5160 :	"_identify"
		- NEIGH  = { _identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5160 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5160 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5160 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5160 :	"factory"
		- NEIGH  = { factory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5161 :	"return"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5161 :	"CRS"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5161 :	"_identify"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5161 :	"factory"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5169 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5169 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5175 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5175 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5180 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5180 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5181 :	"ProjectedCRSNNPtr"
		- NEIGH  = { ProjectedCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5181 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5181 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5182 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5182 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5182 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5182 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5183 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5183 :	"CoordinateSystemNNPtr"
		- NEIGH  = { CoordinateSystemNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5183 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5183 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5184 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5184 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5184 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5184 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5184 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5184 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5185 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5185 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5185 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5185 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5185 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5189 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5189 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5189 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5189 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5189 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5190 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5190 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5190 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5190 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5190 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5194 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5194 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5194 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5195 :	"crs"
		- NEIGH  = { this , * , < , DerivedProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5195 :	"DerivedProjectedCRS"
		- NEIGH  = { this , * , < , DerivedProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5195 :	"nn_make_shared"
		- NEIGH  = { this , * , < , DerivedProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5195 :	"<"
		- NEIGH  = { this , * , < , DerivedProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5195 :	"DerivedProjectedCRS"
		- NEIGH  = { this , * , < , DerivedProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5195 :	">"
		- NEIGH  = { this , * , < , DerivedProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5195 :	"*"
		- NEIGH  = { this , * , < , DerivedProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5195 :	"this"
		- NEIGH  = { this , * , < , DerivedProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5196 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , DerivedProjectedCRS , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5196 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , DerivedProjectedCRS , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5196 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , DerivedProjectedCRS , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5197 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

5197 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

5198 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5198 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5207 :	"ProjectedCRSNNPtr"
		- NEIGH  = { ProjectedCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5207 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5207 :	"baseCRS"
		- NEIGH  = { baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5208 :	"return"
		- NEIGH  = { DerivedCRS , > , ProjectedCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5208 :	"NN_NO_CHECK"
		- NEIGH  = { DerivedCRS , > , ProjectedCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5208 :	"util"
		- NEIGH  = { DerivedCRS , > , ProjectedCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5208 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { DerivedCRS , > , ProjectedCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5208 :	"<"
		- NEIGH  = { DerivedCRS , > , ProjectedCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5208 :	"ProjectedCRS"
		- NEIGH  = { DerivedCRS , > , ProjectedCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5208 :	">"
		- NEIGH  = { DerivedCRS , > , ProjectedCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5209 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , > , ProjectedCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5209 :	"getPrivate"
		- NEIGH  = { DerivedCRS , > , ProjectedCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5209 :	"baseCRS_"
		- NEIGH  = { DerivedCRS , > , ProjectedCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5225 :	"DerivedProjectedCRSNNPtr"
		- NEIGH  = { DerivedProjectedCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5225 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5225 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5226 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5226 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5226 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5226 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5226 :	"ProjectedCRSNNPtr"
		- NEIGH  = { ProjectedCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5226 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5226 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5227 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5227 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5227 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5227 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5228 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5228 :	"CoordinateSystemNNPtr"
		- NEIGH  = { CoordinateSystemNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5228 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5228 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5229 :	"crs"
		- NEIGH  = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5229 :	"DerivedProjectedCRS"
		- NEIGH  = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5229 :	"nn_make_shared"
		- NEIGH  = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5229 :	"<"
		- NEIGH  = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5229 :	"DerivedProjectedCRS"
		- NEIGH  = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5229 :	">"
		- NEIGH  = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5230 :	"baseCRSIn"
		- NEIGH  = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5230 :	"derivingConversionIn"
		- NEIGH  = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5230 :	"csIn"
		- NEIGH  = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5231 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

5231 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

5231 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

5232 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5232 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5232 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5233 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

5233 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

5234 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5234 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5240 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5240 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5240 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5240 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5240 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5240 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5241 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }

5241 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }

5241 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }

5241 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }

5241 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }

5241 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }

5241 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }

5241 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }

5242 :	"if"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }

5242 :	"!"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }

5242 :	"isWKT2"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }

5242 :	"||"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }

5242 :	"!"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }

5242 :	"formatter"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }

5242 :	"use2019Keywords"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }

5243 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5243 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5243 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5246 :	"formatter"
		- NEIGH  = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5246 :	"startNode"
		- NEIGH  = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5246 :	"io"
		- NEIGH  = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5246 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5246 :	"DERIVEDPROJCRS"
		- NEIGH  = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5247 :	"!"
		- NEIGH  = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5247 :	"identifiers"
		- NEIGH  = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5247 :	"empty"
		- NEIGH  = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5248 :	"formatter"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }
		- SUCC   = { baseCRS , l_baseProjCRS , }

5248 :	"addQuotedString"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }
		- SUCC   = { baseCRS , l_baseProjCRS , }

5248 :	"nameStr"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }
		- SUCC   = { baseCRS , l_baseProjCRS , }

5251 :	"l_baseProjCRS"
		- NEIGH  = { baseCRS , l_baseProjCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }

5251 :	"baseCRS"
		- NEIGH  = { baseCRS , l_baseProjCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }

5252 :	"formatter"
		- NEIGH  = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , }
		- SUCC   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }

5252 :	"startNode"
		- NEIGH  = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , }
		- SUCC   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }

5252 :	"io"
		- NEIGH  = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , }
		- SUCC   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }

5252 :	"WKTConstants"
		- NEIGH  = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , }
		- SUCC   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }

5252 :	"BASEPROJCRS"
		- NEIGH  = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , }
		- SUCC   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }

5253 :	"!"
		- NEIGH  = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , }
		- SUCC   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }

5253 :	"l_baseProjCRS"
		- NEIGH  = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , }
		- SUCC   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }

5253 :	"identifiers"
		- NEIGH  = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , }
		- SUCC   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }

5253 :	"empty"
		- NEIGH  = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , }
		- SUCC   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }

5254 :	"formatter"
		- NEIGH  = { nameStr , l_baseProjCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- SUCC   = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }

5254 :	"addQuotedString"
		- NEIGH  = { nameStr , l_baseProjCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- SUCC   = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }

5254 :	"l_baseProjCRS"
		- NEIGH  = { nameStr , l_baseProjCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- SUCC   = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }

5254 :	"nameStr"
		- NEIGH  = { nameStr , l_baseProjCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- SUCC   = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }

5256 :	"l_baseGeodCRS"
		- NEIGH  = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }
		- SUCC   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }

5256 :	"l_baseProjCRS"
		- NEIGH  = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }
		- SUCC   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }

5256 :	"baseCRS"
		- NEIGH  = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }
		- SUCC   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }

5257 :	"&"
		- NEIGH  = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }
		- SUCC   = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }

5257 :	"geodeticCRSAxisList"
		- NEIGH  = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }
		- SUCC   = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }

5258 :	"l_baseGeodCRS"
		- NEIGH  = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }
		- SUCC   = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }

5258 :	"coordinateSystem"
		- NEIGH  = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }
		- SUCC   = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }

5258 :	"axisList"
		- NEIGH  = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }
		- SUCC   = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }

5260 :	"formatter"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

5260 :	"startNode"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

5261 :	"dynamic_cast"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

5261 :	"<"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

5261 :	"GeographicCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

5261 :	"*"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

5261 :	">"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

5261 :	"l_baseGeodCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

5261 :	"get"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

5262 :	"io"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

5262 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

5262 :	"BASEGEOGCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

5263 :	"io"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

5263 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

5263 :	"BASEGEODCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

5264 :	"!"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

5264 :	"l_baseGeodCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

5264 :	"identifiers"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

5264 :	"empty"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

5265 :	"formatter"
		- NEIGH  = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }

5265 :	"addQuotedString"
		- NEIGH  = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }

5265 :	"l_baseGeodCRS"
		- NEIGH  = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }

5265 :	"nameStr"
		- NEIGH  = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }

5266 :	"l_baseGeodCRS"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }
		- SUCC   = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }

5266 :	"exportDatumOrDatumEnsembleToWkt"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }
		- SUCC   = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }

5266 :	"formatter"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }
		- SUCC   = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }

5271 :	"if"
		- NEIGH  = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }
		- SUCC   = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }

5271 :	"formatter"
		- NEIGH  = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }
		- SUCC   = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }

5271 :	"primeMeridianOrParameterUnitOmittedIfSameAsAxis"
		- NEIGH  = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }
		- SUCC   = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }

5271 :	"&&"
		- NEIGH  = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }
		- SUCC   = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }

5272 :	"!"
		- NEIGH  = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }
		- SUCC   = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }

5272 :	"geodeticCRSAxisList"
		- NEIGH  = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }
		- SUCC   = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }

5272 :	"empty"
		- NEIGH  = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }
		- SUCC   = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }

5273 :	"geodeticCRSAxisList"
		- NEIGH  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PARENT = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5273 :	"unit"
		- NEIGH  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PARENT = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5273 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PARENT = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5273 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PARENT = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5275 :	"l_baseGeodCRS"
		- NEIGH  = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- SUCC   = { endNode , formatter , }

5275 :	"primeMeridian"
		- NEIGH  = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- SUCC   = { endNode , formatter , }

5275 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- SUCC   = { endNode , formatter , }

5275 :	"formatter"
		- NEIGH  = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- SUCC   = { endNode , formatter , }

5276 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , l_baseProjCRS , }

5276 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , l_baseProjCRS , }

5278 :	"l_baseProjCRS"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , l_baseProjCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { endNode , formatter , }

5278 :	"derivingConversionRef"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , l_baseProjCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { endNode , formatter , }

5278 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , l_baseProjCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { endNode , formatter , }

5278 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , l_baseProjCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { endNode , formatter , }

5279 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , l_baseProjCRS , }
		- SUCC   = { setUseDerivingConversion , formatter , }

5279 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , l_baseProjCRS , }
		- SUCC   = { setUseDerivingConversion , formatter , }

5282 :	"formatter"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

5282 :	"setUseDerivingConversion"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

5283 :	"derivingConversionRef"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

5283 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

5283 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

5284 :	"formatter"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

5284 :	"setUseDerivingConversion"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

5286 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

5286 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

5286 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

5287 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

5287 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

5287 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

5288 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

5288 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

5294 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5294 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5295 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5295 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5295 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5295 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5295 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5295 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5295 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5295 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5296 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5296 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5296 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5296 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5297 :	"otherDerivedCRS"
		- NEIGH  = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5297 :	"dynamic_cast"
		- NEIGH  = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5297 :	"<"
		- NEIGH  = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5297 :	"DerivedProjectedCRS"
		- NEIGH  = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5297 :	"*"
		- NEIGH  = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5297 :	">"
		- NEIGH  = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5297 :	"other"
		- NEIGH  = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5298 :	"return"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- SUCC   = { }

5298 :	"otherDerivedCRS"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- SUCC   = { }

5298 :	"!="
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- SUCC   = { }

5298 :	"&&"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- SUCC   = { }

5299 :	"DerivedCRS"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- SUCC   = { }

5299 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- SUCC   = { }

5299 :	"other"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- SUCC   = { }

5299 :	"criterion"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- SUCC   = { }

5299 :	"dbContext"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- SUCC   = { }

5305 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5305 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5311 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5311 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5316 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5316 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5316 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5316 :	"TemporalDatumNNPtr"
		- NEIGH  = { TemporalDatumNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5316 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5316 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5317 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5317 :	"TemporalCSNNPtr"
		- NEIGH  = { TemporalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5317 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5317 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5318 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5318 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5318 :	"as_nullable"
		- NEIGH  = { as_nullable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5318 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5318 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5322 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5322 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5322 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5322 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5322 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5323 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5323 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5323 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5327 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5327 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5327 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5328 :	"crs"
		- NEIGH  = { this , * , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5328 :	"TemporalCRS"
		- NEIGH  = { this , * , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5328 :	"nn_make_shared"
		- NEIGH  = { this , * , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5328 :	"<"
		- NEIGH  = { this , * , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5328 :	"TemporalCRS"
		- NEIGH  = { this , * , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5328 :	">"
		- NEIGH  = { this , * , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5328 :	"*"
		- NEIGH  = { this , * , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5328 :	"this"
		- NEIGH  = { this , * , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5329 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , TemporalCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

5329 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , TemporalCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

5329 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , TemporalCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

5330 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

5330 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

5339 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5339 :	"TemporalDatumNNPtr"
		- NEIGH  = { TemporalDatumNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5339 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5339 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5340 :	"return"
		- NEIGH  = { > , TemporalDatum , SingleCRS , datum , < , getPrivate , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5340 :	"NN_NO_CHECK"
		- NEIGH  = { > , TemporalDatum , SingleCRS , datum , < , getPrivate , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5340 :	"std"
		- NEIGH  = { > , TemporalDatum , SingleCRS , datum , < , getPrivate , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5340 :	"static_pointer_cast"
		- NEIGH  = { > , TemporalDatum , SingleCRS , datum , < , getPrivate , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5340 :	"<"
		- NEIGH  = { > , TemporalDatum , SingleCRS , datum , < , getPrivate , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5340 :	"datum"
		- NEIGH  = { > , TemporalDatum , SingleCRS , datum , < , getPrivate , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5340 :	"TemporalDatum"
		- NEIGH  = { > , TemporalDatum , SingleCRS , datum , < , getPrivate , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5340 :	">"
		- NEIGH  = { > , TemporalDatum , SingleCRS , datum , < , getPrivate , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5341 :	"SingleCRS"
		- NEIGH  = { > , TemporalDatum , SingleCRS , datum , < , getPrivate , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5341 :	"getPrivate"
		- NEIGH  = { > , TemporalDatum , SingleCRS , datum , < , getPrivate , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5341 :	"datum"
		- NEIGH  = { > , TemporalDatum , SingleCRS , datum , < , getPrivate , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5350 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5350 :	"TemporalCSNNPtr"
		- NEIGH  = { TemporalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5350 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5350 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5351 :	"return"
		- NEIGH  = { getPrivate , cs , SingleCRS , TemporalCS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5351 :	"util"
		- NEIGH  = { getPrivate , cs , SingleCRS , TemporalCS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5351 :	"nn_static_pointer_cast"
		- NEIGH  = { getPrivate , cs , SingleCRS , TemporalCS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5351 :	"<"
		- NEIGH  = { getPrivate , cs , SingleCRS , TemporalCS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5351 :	"cs"
		- NEIGH  = { getPrivate , cs , SingleCRS , TemporalCS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5351 :	"TemporalCS"
		- NEIGH  = { getPrivate , cs , SingleCRS , TemporalCS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5351 :	">"
		- NEIGH  = { getPrivate , cs , SingleCRS , TemporalCS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5352 :	"SingleCRS"
		- NEIGH  = { getPrivate , cs , SingleCRS , TemporalCS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5352 :	"getPrivate"
		- NEIGH  = { getPrivate , cs , SingleCRS , TemporalCS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5352 :	"coordinateSystem"
		- NEIGH  = { getPrivate , cs , SingleCRS , TemporalCS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5365 :	"TemporalCRSNNPtr"
		- NEIGH  = { TemporalCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5365 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5365 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5365 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5365 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5365 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5365 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5366 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5366 :	"TemporalDatumNNPtr"
		- NEIGH  = { TemporalDatumNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5366 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5366 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5367 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5367 :	"TemporalCSNNPtr"
		- NEIGH  = { TemporalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5367 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5367 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5368 :	"crs"
		- NEIGH  = { csIn , datumIn , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5368 :	"TemporalCRS"
		- NEIGH  = { csIn , datumIn , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5368 :	"nn_make_shared"
		- NEIGH  = { csIn , datumIn , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5368 :	"<"
		- NEIGH  = { csIn , datumIn , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5368 :	"TemporalCRS"
		- NEIGH  = { csIn , datumIn , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5368 :	">"
		- NEIGH  = { csIn , datumIn , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5368 :	"datumIn"
		- NEIGH  = { csIn , datumIn , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5368 :	"csIn"
		- NEIGH  = { csIn , datumIn , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5369 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , datumIn , < , TemporalCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

5369 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , datumIn , < , TemporalCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

5369 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , datumIn , < , TemporalCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

5370 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

5370 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

5370 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

5371 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { }

5371 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { }

5377 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5377 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5377 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5377 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5377 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5377 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5378 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5378 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5378 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5378 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5378 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5378 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5378 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5378 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5379 :	"if"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }

5379 :	"!"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }

5379 :	"isWKT2"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }

5380 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5380 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5380 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5383 :	"formatter"
		- NEIGH  = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5383 :	"startNode"
		- NEIGH  = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5383 :	"io"
		- NEIGH  = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5383 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5383 :	"TIMECRS"
		- NEIGH  = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5383 :	"!"
		- NEIGH  = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5383 :	"identifiers"
		- NEIGH  = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5383 :	"empty"
		- NEIGH  = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5384 :	"formatter"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , datum , }

5384 :	"addQuotedString"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , datum , }

5384 :	"nameStr"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , datum , }

5385 :	"datum"
		- NEIGH  = { formatter , _exportToWKT , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

5385 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

5385 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

5386 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , datum , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

5386 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , datum , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

5386 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , datum , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

5387 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

5387 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

5387 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

5388 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

5388 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

5395 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5395 :	"_exportToJSON"
		- NEIGH  = { _exportToJSON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5396 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5396 :	"JSONFormatter"
		- NEIGH  = { JSONFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5396 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5396 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5398 :	"&"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

5398 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

5398 :	"formatter"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

5398 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

5399 :	"objectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5400 :	"formatter"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5400 :	"MakeObjectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5400 :	"!"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5400 :	"identifiers"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5400 :	"empty"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5402 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

5402 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

5403 :	"l_name"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

5403 :	"nameStr"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

5404 :	"if"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

5404 :	"l_name"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

5404 :	"empty"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

5405 :	"writer"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5405 :	"Add"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5407 :	"writer"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5407 :	"Add"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5407 :	"l_name"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5410 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

5410 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

5411 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datum , }

5411 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datum , }

5412 :	"datum"
		- NEIGH  = { formatter , _exportToJSON , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

5412 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

5412 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

5414 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , datum , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

5414 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , datum , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

5415 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

5415 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

5416 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

5416 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

5416 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

5418 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

5418 :	"baseExportToJSON"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

5418 :	"formatter"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

5424 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5424 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5425 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5425 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5425 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5425 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5425 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5425 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5425 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5425 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5426 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5426 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5426 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5426 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5427 :	"otherTemporalCRS"
		- NEIGH  = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }

5427 :	"dynamic_cast"
		- NEIGH  = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }

5427 :	"<"
		- NEIGH  = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }

5427 :	"TemporalCRS"
		- NEIGH  = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }

5427 :	"*"
		- NEIGH  = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }

5427 :	">"
		- NEIGH  = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }

5427 :	"other"
		- NEIGH  = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }

5428 :	"return"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- SUCC   = { }

5428 :	"otherTemporalCRS"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- SUCC   = { }

5428 :	"!="
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- SUCC   = { }

5428 :	"&&"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- SUCC   = { }

5429 :	"SingleCRS"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- SUCC   = { }

5429 :	"baseIsEquivalentTo"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- SUCC   = { }

5429 :	"other"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- SUCC   = { }

5429 :	"criterion"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- SUCC   = { }

5429 :	"dbContext"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- SUCC   = { }

5435 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5435 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5441 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5441 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5446 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5446 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5446 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5446 :	"EngineeringDatumNNPtr"
		- NEIGH  = { EngineeringDatumNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5446 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5446 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5447 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5447 :	"CoordinateSystemNNPtr"
		- NEIGH  = { CoordinateSystemNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5447 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5447 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5448 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5448 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5448 :	"as_nullable"
		- NEIGH  = { as_nullable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5448 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5449 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5449 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5449 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5449 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5449 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5449 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5453 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5453 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5453 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5453 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5453 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5454 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5454 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5454 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5454 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5454 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5454 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5454 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5454 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5454 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5454 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5454 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5458 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5458 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5458 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5459 :	"crs"
		- NEIGH  = { this , * , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5459 :	"EngineeringCRS"
		- NEIGH  = { this , * , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5459 :	"nn_make_shared"
		- NEIGH  = { this , * , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5459 :	"<"
		- NEIGH  = { this , * , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5459 :	"EngineeringCRS"
		- NEIGH  = { this , * , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5459 :	">"
		- NEIGH  = { this , * , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5459 :	"*"
		- NEIGH  = { this , * , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5459 :	"this"
		- NEIGH  = { this , * , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5460 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , > , nn_make_shared , EngineeringCRS , crs , }
		- SUCC   = { crs , return , }

5460 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , > , nn_make_shared , EngineeringCRS , crs , }
		- SUCC   = { crs , return , }

5460 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , > , nn_make_shared , EngineeringCRS , crs , }
		- SUCC   = { crs , return , }

5461 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

5461 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

5470 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5470 :	"EngineeringDatumNNPtr"
		- NEIGH  = { EngineeringDatumNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5470 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5470 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5471 :	"return"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , EngineeringDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5471 :	"NN_NO_CHECK"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , EngineeringDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5471 :	"std"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , EngineeringDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5471 :	"static_pointer_cast"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , EngineeringDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5471 :	"<"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , EngineeringDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5471 :	"datum"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , EngineeringDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5471 :	"EngineeringDatum"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , EngineeringDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5471 :	">"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , EngineeringDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5472 :	"SingleCRS"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , EngineeringDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5472 :	"getPrivate"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , EngineeringDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5472 :	"datum"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , EngineeringDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5485 :	"EngineeringCRSNNPtr"
		- NEIGH  = { EngineeringCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5486 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5486 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5486 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5486 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5486 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5486 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5487 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5487 :	"EngineeringDatumNNPtr"
		- NEIGH  = { EngineeringDatumNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5487 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5487 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5488 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5488 :	"CoordinateSystemNNPtr"
		- NEIGH  = { CoordinateSystemNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5488 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5488 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5489 :	"crs"
		- NEIGH  = { csIn , datumIn , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5489 :	"EngineeringCRS"
		- NEIGH  = { csIn , datumIn , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5489 :	"nn_make_shared"
		- NEIGH  = { csIn , datumIn , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5489 :	"<"
		- NEIGH  = { csIn , datumIn , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5489 :	"EngineeringCRS"
		- NEIGH  = { csIn , datumIn , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5489 :	">"
		- NEIGH  = { csIn , datumIn , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5489 :	"datumIn"
		- NEIGH  = { csIn , datumIn , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5489 :	"csIn"
		- NEIGH  = { csIn , datumIn , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5490 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , datumIn , < , > , nn_make_shared , EngineeringCRS , crs , }
		- SUCC   = { properties , setProperties , crs , }

5490 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , datumIn , < , > , nn_make_shared , EngineeringCRS , crs , }
		- SUCC   = { properties , setProperties , crs , }

5490 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , datumIn , < , > , nn_make_shared , EngineeringCRS , crs , }
		- SUCC   = { properties , setProperties , crs , }

5491 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

5491 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

5491 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

5493 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { }

5493 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { }

5499 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5499 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5499 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5499 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5499 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5499 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5500 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }

5500 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }

5500 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }

5500 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }

5500 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }

5500 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }

5500 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }

5500 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }

5501 :	"formatter"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5501 :	"startNode"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5501 :	"isWKT2"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5501 :	"io"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5501 :	"WKTConstants"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5501 :	"ENGCRS"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5502 :	"io"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5502 :	"WKTConstants"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5502 :	"LOCAL_CS"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5503 :	"!"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5503 :	"identifiers"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5503 :	"empty"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5504 :	"formatter"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- SUCC   = { empty , datum , if , ! , || , nameStr , isWKT2 , }

5504 :	"addQuotedString"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- SUCC   = { empty , datum , if , ! , || , nameStr , isWKT2 , }

5504 :	"nameStr"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- SUCC   = { empty , datum , if , ! , || , nameStr , isWKT2 , }

5505 :	"if"
		- NEIGH  = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , datum , }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { isWKT2 , ! , if , }

5505 :	"isWKT2"
		- NEIGH  = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , datum , }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { isWKT2 , ! , if , }

5505 :	"||"
		- NEIGH  = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , datum , }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { isWKT2 , ! , if , }

5505 :	"!"
		- NEIGH  = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , datum , }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { isWKT2 , ! , if , }

5505 :	"datum"
		- NEIGH  = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , datum , }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { isWKT2 , ! , if , }

5505 :	"nameStr"
		- NEIGH  = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , datum , }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { isWKT2 , ! , if , }

5505 :	"empty"
		- NEIGH  = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , datum , }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { isWKT2 , ! , if , }

5506 :	"datum"
		- NEIGH  = { formatter , _exportToWKT , datum , }
		- PARENT = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5506 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , datum , }
		- PARENT = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5506 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , datum , }
		- PARENT = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5508 :	"if"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , axisList , coordinateSystem , }
		- PRED   = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- SUCC   = { outputAxis , formatter , oldAxisOutputRule , }

5508 :	"!"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , axisList , coordinateSystem , }
		- PRED   = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- SUCC   = { outputAxis , formatter , oldAxisOutputRule , }

5508 :	"isWKT2"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , axisList , coordinateSystem , }
		- PRED   = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- SUCC   = { outputAxis , formatter , oldAxisOutputRule , }

5509 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , coordinateSystem , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5509 :	"axisList"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , coordinateSystem , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5509 :	"unit"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , coordinateSystem , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5509 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , coordinateSystem , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5509 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , coordinateSystem , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5512 :	"oldAxisOutputRule"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }

5512 :	"formatter"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }

5512 :	"outputAxis"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }

5513 :	"formatter"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

5513 :	"setOutputAxis"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

5513 :	"io"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

5513 :	"WKTFormatter"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

5513 :	"OutputAxisRule"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

5513 :	"YES"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

5514 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

5514 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

5514 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

5515 :	"formatter"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

5515 :	"setOutputAxis"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

5515 :	"oldAxisOutputRule"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

5517 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { endNode , formatter , }

5517 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { endNode , formatter , }

5517 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { endNode , formatter , }

5518 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

5518 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

5525 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5525 :	"_exportToJSON"
		- NEIGH  = { _exportToJSON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5526 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5526 :	"JSONFormatter"
		- NEIGH  = { JSONFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5526 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5526 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5528 :	"&"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

5528 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

5528 :	"formatter"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

5528 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

5529 :	"objectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5530 :	"formatter"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5530 :	"MakeObjectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5530 :	"!"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5530 :	"identifiers"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5530 :	"empty"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5532 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

5532 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

5533 :	"l_name"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

5533 :	"nameStr"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

5534 :	"if"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

5534 :	"l_name"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

5534 :	"empty"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

5535 :	"writer"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5535 :	"Add"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5537 :	"writer"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5537 :	"Add"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5537 :	"l_name"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5540 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

5540 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

5541 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datum , }

5541 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datum , }

5542 :	"datum"
		- NEIGH  = { formatter , _exportToJSON , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

5542 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

5542 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

5544 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , datum , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

5544 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , datum , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

5545 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

5545 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

5546 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

5546 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

5546 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

5548 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

5548 :	"baseExportToJSON"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

5548 :	"formatter"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

5554 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5554 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5555 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5555 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5555 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5555 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5555 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5555 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5555 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5555 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5556 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5556 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5556 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5556 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5557 :	"otherEngineeringCRS"
		- NEIGH  = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }

5557 :	"dynamic_cast"
		- NEIGH  = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }

5557 :	"<"
		- NEIGH  = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }

5557 :	"EngineeringCRS"
		- NEIGH  = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }

5557 :	"*"
		- NEIGH  = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }

5557 :	">"
		- NEIGH  = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }

5557 :	"other"
		- NEIGH  = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }

5558 :	"return"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- SUCC   = { }

5558 :	"otherEngineeringCRS"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- SUCC   = { }

5558 :	"!="
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- SUCC   = { }

5558 :	"&&"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- SUCC   = { }

5559 :	"SingleCRS"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- SUCC   = { }

5559 :	"baseIsEquivalentTo"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- SUCC   = { }

5559 :	"other"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- SUCC   = { }

5559 :	"criterion"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- SUCC   = { }

5559 :	"dbContext"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- SUCC   = { }

5565 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5565 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5571 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5571 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5576 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5576 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5576 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5576 :	"ParametricDatumNNPtr"
		- NEIGH  = { ParametricDatumNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5576 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5576 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5577 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5577 :	"ParametricCSNNPtr"
		- NEIGH  = { ParametricCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5577 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5577 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5578 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5578 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5578 :	"as_nullable"
		- NEIGH  = { as_nullable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5578 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5578 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5582 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5582 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5582 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5582 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5582 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5583 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5583 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5583 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5587 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5587 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5587 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5588 :	"crs"
		- NEIGH  = { this , * , < , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5588 :	"ParametricCRS"
		- NEIGH  = { this , * , < , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5588 :	"nn_make_shared"
		- NEIGH  = { this , * , < , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5588 :	"<"
		- NEIGH  = { this , * , < , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5588 :	"ParametricCRS"
		- NEIGH  = { this , * , < , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5588 :	">"
		- NEIGH  = { this , * , < , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5588 :	"*"
		- NEIGH  = { this , * , < , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5588 :	"this"
		- NEIGH  = { this , * , < , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5589 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , ParametricCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

5589 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , ParametricCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

5589 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , ParametricCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

5590 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

5590 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

5599 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5599 :	"ParametricDatumNNPtr"
		- NEIGH  = { ParametricDatumNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5599 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5599 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5600 :	"return"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , ParametricDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5600 :	"NN_NO_CHECK"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , ParametricDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5600 :	"std"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , ParametricDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5600 :	"static_pointer_cast"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , ParametricDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5600 :	"<"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , ParametricDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5600 :	"datum"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , ParametricDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5600 :	"ParametricDatum"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , ParametricDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5600 :	">"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , ParametricDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5601 :	"SingleCRS"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , ParametricDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5601 :	"getPrivate"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , ParametricDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5601 :	"datum"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , ParametricDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5610 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5610 :	"ParametricCSNNPtr"
		- NEIGH  = { ParametricCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5610 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5610 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5611 :	"return"
		- NEIGH  = { getPrivate , ParametricCS , cs , SingleCRS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5611 :	"util"
		- NEIGH  = { getPrivate , ParametricCS , cs , SingleCRS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5611 :	"nn_static_pointer_cast"
		- NEIGH  = { getPrivate , ParametricCS , cs , SingleCRS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5611 :	"<"
		- NEIGH  = { getPrivate , ParametricCS , cs , SingleCRS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5611 :	"cs"
		- NEIGH  = { getPrivate , ParametricCS , cs , SingleCRS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5611 :	"ParametricCS"
		- NEIGH  = { getPrivate , ParametricCS , cs , SingleCRS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5611 :	">"
		- NEIGH  = { getPrivate , ParametricCS , cs , SingleCRS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5612 :	"SingleCRS"
		- NEIGH  = { getPrivate , ParametricCS , cs , SingleCRS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5612 :	"getPrivate"
		- NEIGH  = { getPrivate , ParametricCS , cs , SingleCRS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5612 :	"coordinateSystem"
		- NEIGH  = { getPrivate , ParametricCS , cs , SingleCRS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5625 :	"ParametricCRSNNPtr"
		- NEIGH  = { ParametricCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5626 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5626 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5626 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5626 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5626 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5626 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5627 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5627 :	"ParametricDatumNNPtr"
		- NEIGH  = { ParametricDatumNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5627 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5627 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5628 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5628 :	"ParametricCSNNPtr"
		- NEIGH  = { ParametricCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5628 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5628 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5629 :	"crs"
		- NEIGH  = { csIn , < , datumIn , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5629 :	"ParametricCRS"
		- NEIGH  = { csIn , < , datumIn , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5629 :	"nn_make_shared"
		- NEIGH  = { csIn , < , datumIn , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5629 :	"<"
		- NEIGH  = { csIn , < , datumIn , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5629 :	"ParametricCRS"
		- NEIGH  = { csIn , < , datumIn , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5629 :	">"
		- NEIGH  = { csIn , < , datumIn , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5629 :	"datumIn"
		- NEIGH  = { csIn , < , datumIn , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5629 :	"csIn"
		- NEIGH  = { csIn , < , datumIn , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5630 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , datumIn , ParametricCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

5630 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , datumIn , ParametricCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

5630 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , datumIn , ParametricCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

5631 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

5631 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

5631 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

5632 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { }

5632 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { }

5638 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5638 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5638 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5638 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5638 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5638 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5639 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5639 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5639 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5639 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5639 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5639 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5639 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5639 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5640 :	"if"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }

5640 :	"!"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }

5640 :	"isWKT2"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }

5641 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5641 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5641 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5644 :	"formatter"
		- NEIGH  = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5644 :	"startNode"
		- NEIGH  = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5644 :	"io"
		- NEIGH  = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5644 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5644 :	"PARAMETRICCRS"
		- NEIGH  = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5645 :	"!"
		- NEIGH  = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5645 :	"identifiers"
		- NEIGH  = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5645 :	"empty"
		- NEIGH  = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5646 :	"formatter"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , datum , }

5646 :	"addQuotedString"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , datum , }

5646 :	"nameStr"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , datum , }

5647 :	"datum"
		- NEIGH  = { formatter , _exportToWKT , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

5647 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

5647 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

5648 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , datum , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

5648 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , datum , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

5648 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , datum , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

5649 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

5649 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

5649 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

5650 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

5650 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

5657 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5657 :	"_exportToJSON"
		- NEIGH  = { _exportToJSON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5658 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5658 :	"JSONFormatter"
		- NEIGH  = { JSONFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5658 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5658 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5660 :	"&"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

5660 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

5660 :	"formatter"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

5660 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

5661 :	"objectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5662 :	"formatter"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5662 :	"MakeObjectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5662 :	"!"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5662 :	"identifiers"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5662 :	"empty"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5664 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

5664 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

5665 :	"l_name"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

5665 :	"nameStr"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

5666 :	"if"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

5666 :	"l_name"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

5666 :	"empty"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

5667 :	"writer"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5667 :	"Add"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5669 :	"writer"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5669 :	"Add"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5669 :	"l_name"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5672 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

5672 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

5673 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datum , }

5673 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datum , }

5674 :	"datum"
		- NEIGH  = { formatter , _exportToJSON , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

5674 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

5674 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

5676 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , datum , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

5676 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , datum , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

5677 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

5677 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

5678 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

5678 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

5678 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

5680 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

5680 :	"baseExportToJSON"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

5680 :	"formatter"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

5686 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5686 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5687 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5687 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5687 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5687 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5687 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5687 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5687 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5687 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5688 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5688 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5688 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5688 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5689 :	"otherParametricCRS"
		- NEIGH  = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }

5689 :	"dynamic_cast"
		- NEIGH  = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }

5689 :	"<"
		- NEIGH  = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }

5689 :	"ParametricCRS"
		- NEIGH  = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }

5689 :	"*"
		- NEIGH  = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }

5689 :	">"
		- NEIGH  = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }

5689 :	"other"
		- NEIGH  = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }

5690 :	"return"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- SUCC   = { }

5690 :	"otherParametricCRS"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- SUCC   = { }

5690 :	"!="
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- SUCC   = { }

5690 :	"&&"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- SUCC   = { }

5691 :	"SingleCRS"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- SUCC   = { }

5691 :	"baseIsEquivalentTo"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- SUCC   = { }

5691 :	"other"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- SUCC   = { }

5691 :	"criterion"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- SUCC   = { }

5691 :	"dbContext"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- SUCC   = { }

5697 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5697 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5703 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5703 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5708 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5708 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5709 :	"VerticalCRSNNPtr"
		- NEIGH  = { VerticalCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5709 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5709 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5710 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5710 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5710 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5710 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5711 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5711 :	"VerticalCSNNPtr"
		- NEIGH  = { VerticalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5711 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5711 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5712 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5712 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5712 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5712 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5712 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5712 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5713 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5713 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5713 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5713 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5713 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5713 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5714 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5714 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5714 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5714 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5714 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5718 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5718 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5718 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5718 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5718 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5719 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5719 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5719 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5719 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5719 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5719 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5719 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5723 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5723 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5723 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5724 :	"crs"
		- NEIGH  = { this , * , < , DerivedVerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5724 :	"DerivedVerticalCRS"
		- NEIGH  = { this , * , < , DerivedVerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5724 :	"nn_make_shared"
		- NEIGH  = { this , * , < , DerivedVerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5724 :	"<"
		- NEIGH  = { this , * , < , DerivedVerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5724 :	"DerivedVerticalCRS"
		- NEIGH  = { this , * , < , DerivedVerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5724 :	">"
		- NEIGH  = { this , * , < , DerivedVerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5724 :	"*"
		- NEIGH  = { this , * , < , DerivedVerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5724 :	"this"
		- NEIGH  = { this , * , < , DerivedVerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5725 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , DerivedVerticalCRS , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5725 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , DerivedVerticalCRS , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5725 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , DerivedVerticalCRS , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5726 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

5726 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

5727 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5727 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5736 :	"VerticalCRSNNPtr"
		- NEIGH  = { VerticalCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5736 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5736 :	"baseCRS"
		- NEIGH  = { baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5737 :	"return"
		- NEIGH  = { > , DerivedCRS , VerticalCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5737 :	"NN_NO_CHECK"
		- NEIGH  = { > , DerivedCRS , VerticalCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5737 :	"util"
		- NEIGH  = { > , DerivedCRS , VerticalCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5737 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { > , DerivedCRS , VerticalCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5737 :	"<"
		- NEIGH  = { > , DerivedCRS , VerticalCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5737 :	"VerticalCRS"
		- NEIGH  = { > , DerivedCRS , VerticalCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5737 :	">"
		- NEIGH  = { > , DerivedCRS , VerticalCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5738 :	"DerivedCRS"
		- NEIGH  = { > , DerivedCRS , VerticalCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5738 :	"getPrivate"
		- NEIGH  = { > , DerivedCRS , VerticalCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5738 :	"baseCRS_"
		- NEIGH  = { > , DerivedCRS , VerticalCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5754 :	"DerivedVerticalCRSNNPtr"
		- NEIGH  = { DerivedVerticalCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5754 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5754 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5755 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5755 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5755 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5755 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5755 :	"VerticalCRSNNPtr"
		- NEIGH  = { VerticalCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5755 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5755 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5756 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5756 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5756 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5756 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5757 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5757 :	"VerticalCSNNPtr"
		- NEIGH  = { VerticalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5757 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5757 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5758 :	"crs"
		- NEIGH  = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5758 :	"DerivedVerticalCRS"
		- NEIGH  = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5758 :	"nn_make_shared"
		- NEIGH  = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5758 :	"<"
		- NEIGH  = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5758 :	"DerivedVerticalCRS"
		- NEIGH  = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5758 :	">"
		- NEIGH  = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5759 :	"baseCRSIn"
		- NEIGH  = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5759 :	"derivingConversionIn"
		- NEIGH  = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5759 :	"csIn"
		- NEIGH  = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5760 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

5760 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

5760 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

5761 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5761 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5761 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5762 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

5762 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

5763 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5763 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5769 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5769 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5769 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5769 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5769 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5769 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5770 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5770 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5770 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5770 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5770 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5770 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5770 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5770 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5771 :	"if"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { BASEVERTCRS , VERTCRS , WKTConstants , io , formatter , baseExportToWKT , }

5771 :	"!"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { BASEVERTCRS , VERTCRS , WKTConstants , io , formatter , baseExportToWKT , }

5771 :	"isWKT2"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { BASEVERTCRS , VERTCRS , WKTConstants , io , formatter , baseExportToWKT , }

5772 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5772 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5772 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5775 :	"baseExportToWKT"
		- NEIGH  = { BASEVERTCRS , VERTCRS , WKTConstants , io , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { }

5775 :	"formatter"
		- NEIGH  = { BASEVERTCRS , VERTCRS , WKTConstants , io , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { }

5775 :	"io"
		- NEIGH  = { BASEVERTCRS , VERTCRS , WKTConstants , io , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { }

5775 :	"WKTConstants"
		- NEIGH  = { BASEVERTCRS , VERTCRS , WKTConstants , io , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { }

5775 :	"VERTCRS"
		- NEIGH  = { BASEVERTCRS , VERTCRS , WKTConstants , io , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { }

5776 :	"io"
		- NEIGH  = { BASEVERTCRS , VERTCRS , WKTConstants , io , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { }

5776 :	"WKTConstants"
		- NEIGH  = { BASEVERTCRS , VERTCRS , WKTConstants , io , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { }

5776 :	"BASEVERTCRS"
		- NEIGH  = { BASEVERTCRS , VERTCRS , WKTConstants , io , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { }

5782 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5782 :	"_exportToPROJString"
		- NEIGH  = { _exportToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5783 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5783 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5783 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5785 :	"throw"
		- NEIGH  = { FormattingException , io , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5785 :	"io"
		- NEIGH  = { FormattingException , io , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5785 :	"FormattingException"
		- NEIGH  = { FormattingException , io , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5791 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5791 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5792 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5792 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5792 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5792 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5792 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5792 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5792 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5792 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5793 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5793 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5793 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5793 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5794 :	"otherDerivedCRS"
		- NEIGH  = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5794 :	"dynamic_cast"
		- NEIGH  = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5794 :	"<"
		- NEIGH  = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5794 :	"DerivedVerticalCRS"
		- NEIGH  = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5794 :	"*"
		- NEIGH  = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5794 :	">"
		- NEIGH  = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5794 :	"other"
		- NEIGH  = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5795 :	"return"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- SUCC   = { }

5795 :	"otherDerivedCRS"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- SUCC   = { }

5795 :	"!="
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- SUCC   = { }

5795 :	"&&"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- SUCC   = { }

5796 :	"DerivedCRS"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- SUCC   = { }

5796 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- SUCC   = { }

5796 :	"other"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- SUCC   = { }

5796 :	"criterion"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- SUCC   = { }

5796 :	"dbContext"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- SUCC   = { }

5803 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5803 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5803 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5803 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5803 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5803 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5803 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5803 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5804 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5804 :	"_identify"
		- NEIGH  = { _identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5804 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5804 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5804 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5804 :	"factory"
		- NEIGH  = { factory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5805 :	"return"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5805 :	"CRS"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5805 :	"_identify"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5805 :	"factory"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5813 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5813 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5813 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5814 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5814 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5814 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5814 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5814 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5820 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5820 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5820 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5821 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5821 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5821 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5821 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5821 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5826 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5826 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5826 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5827 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5827 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5827 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5827 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5827 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5828 :	"BaseNNPtr"
		- NEIGH  = { BaseNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5828 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5828 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5829 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5829 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5829 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5829 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5829 :	"CSNNPtr"
		- NEIGH  = { CSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5829 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5829 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5830 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5830 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5830 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5830 :	"as_nullable"
		- NEIGH  = { as_nullable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5830 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5831 :	"BaseType"
		- NEIGH  = { BaseType , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5831 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5831 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5831 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5832 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5832 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5832 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5832 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5832 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5836 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5836 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5836 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5837 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5837 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5837 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5837 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5837 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5838 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5838 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5838 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5839 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5839 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5839 :	"BaseType"
		- NEIGH  = { BaseType , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5839 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5839 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5839 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5839 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5843 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5843 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5843 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5844 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5844 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5844 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5844 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5844 :	"BaseNNPtr"
		- NEIGH  = { BaseNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5845 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5845 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5845 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5845 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5845 :	"baseCRS"
		- NEIGH  = { baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5846 :	"l_baseCRS"
		- NEIGH  = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }

5846 :	"DerivedCRS"
		- NEIGH  = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }

5846 :	"getPrivate"
		- NEIGH  = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }

5846 :	"baseCRS_"
		- NEIGH  = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }

5847 :	"return"
		- NEIGH  = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- SUCC   = { }

5847 :	"NN_NO_CHECK"
		- NEIGH  = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- SUCC   = { }

5847 :	"util"
		- NEIGH  = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- SUCC   = { }

5847 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- SUCC   = { }

5847 :	"<"
		- NEIGH  = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- SUCC   = { }

5847 :	"BaseType"
		- NEIGH  = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- SUCC   = { }

5847 :	">"
		- NEIGH  = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- SUCC   = { }

5847 :	"l_baseCRS"
		- NEIGH  = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- SUCC   = { }

5854 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5854 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5854 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5855 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5855 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5855 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5855 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5855 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5855 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5856 :	"crs"
		- NEIGH  = { < , this , * , DerivedCRSTemplate , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5856 :	"DerivedCRSTemplate"
		- NEIGH  = { < , this , * , DerivedCRSTemplate , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5856 :	"nn_make_shared"
		- NEIGH  = { < , this , * , DerivedCRSTemplate , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5856 :	"<"
		- NEIGH  = { < , this , * , DerivedCRSTemplate , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5856 :	"DerivedCRSTemplate"
		- NEIGH  = { < , this , * , DerivedCRSTemplate , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5856 :	">"
		- NEIGH  = { < , this , * , DerivedCRSTemplate , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5856 :	"*"
		- NEIGH  = { < , this , * , DerivedCRSTemplate , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5856 :	"this"
		- NEIGH  = { < , this , * , DerivedCRSTemplate , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5857 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , this , * , DerivedCRSTemplate , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5857 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , this , * , DerivedCRSTemplate , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5857 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , this , * , DerivedCRSTemplate , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5858 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

5858 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

5859 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5859 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5864 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5864 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5864 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5865 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5865 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5865 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5865 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5865 :	"NNPtr"
		- NEIGH  = { NNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5866 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5866 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5866 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5866 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5866 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5867 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5867 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5867 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5867 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5867 :	"BaseNNPtr"
		- NEIGH  = { BaseNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5867 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5867 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5868 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5868 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5868 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5868 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5869 :	"CSNNPtr"
		- NEIGH  = { CSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5869 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5869 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5870 :	"crs"
		- NEIGH  = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5870 :	"DerivedCRSTemplate"
		- NEIGH  = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5870 :	"nn_make_shared"
		- NEIGH  = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5870 :	"<"
		- NEIGH  = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5870 :	"DerivedCRSTemplate"
		- NEIGH  = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5870 :	">"
		- NEIGH  = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5871 :	"baseCRSIn"
		- NEIGH  = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5871 :	"derivingConversionIn"
		- NEIGH  = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5871 :	"csIn"
		- NEIGH  = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5872 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

5872 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

5872 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

5873 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5873 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5873 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5874 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

5874 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

5875 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5875 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5880 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5880 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5880 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5881 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5881 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5881 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5881 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5881 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5881 :	"className"
		- NEIGH  = { className , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5882 :	"return"
		- NEIGH  = { c_str , CRSName , DerivedCRSTraits , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5882 :	"DerivedCRSTraits"
		- NEIGH  = { c_str , CRSName , DerivedCRSTraits , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5882 :	"CRSName"
		- NEIGH  = { c_str , CRSName , DerivedCRSTraits , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5882 :	"c_str"
		- NEIGH  = { c_str , CRSName , DerivedCRSTraits , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5887 :	"DerivedCRSTemplateCheckExportToWKT"
		- NEIGH  = { DerivedCRSTemplateCheckExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5887 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5887 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5887 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5887 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5888 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5888 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5888 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5888 :	"crsName"
		- NEIGH  = { crsName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5889 :	"wkt2_2019_only"
		- NEIGH  = { wkt2_2019_only , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5890 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }

5890 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }

5890 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }

5890 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }

5890 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }

5890 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }

5890 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }

5890 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }

5891 :	"if"
		- NEIGH  = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { }

5891 :	"!"
		- NEIGH  = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { }

5891 :	"isWKT2"
		- NEIGH  = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { }

5891 :	"||"
		- NEIGH  = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { }

5891 :	"wkt2_2019_only"
		- NEIGH  = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { }

5891 :	"&&"
		- NEIGH  = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { }

5891 :	"!"
		- NEIGH  = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { }

5891 :	"formatter"
		- NEIGH  = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { }

5891 :	"use2019Keywords"
		- NEIGH  = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { }

5892 :	"io"
		- NEIGH  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PARENT = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5892 :	"FormattingException"
		- NEIGH  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PARENT = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5892 :	"Throw"
		- NEIGH  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PARENT = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5892 :	"crsName"
		- NEIGH  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PARENT = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5892 :	"+"
		- NEIGH  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PARENT = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5893 :	"+"
		- NEIGH  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PARENT = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5894 :	"wkt2_2019_only"
		- NEIGH  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PARENT = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5900 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5900 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5900 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5901 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5901 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5901 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5901 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5901 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5902 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5902 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5902 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5902 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5903 :	"DerivedCRSTemplateCheckExportToWKT"
		- NEIGH  = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }

5903 :	"formatter"
		- NEIGH  = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }

5903 :	"DerivedCRSTraits"
		- NEIGH  = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }

5903 :	"CRSName"
		- NEIGH  = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }

5904 :	"DerivedCRSTraits"
		- NEIGH  = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }

5904 :	"wkt2_2019_only"
		- NEIGH  = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }

5905 :	"baseExportToWKT"
		- NEIGH  = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- SUCC   = { }

5905 :	"formatter"
		- NEIGH  = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- SUCC   = { }

5905 :	"DerivedCRSTraits"
		- NEIGH  = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- SUCC   = { }

5905 :	"WKTKeyword"
		- NEIGH  = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- SUCC   = { }

5906 :	"DerivedCRSTraits"
		- NEIGH  = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- SUCC   = { }

5906 :	"WKTBaseKeyword"
		- NEIGH  = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- SUCC   = { }

5911 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5911 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5911 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5912 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5912 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5912 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5912 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5912 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5913 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5913 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5913 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5913 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5913 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5913 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5913 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5913 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5914 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5914 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5914 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5914 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5915 :	"otherDerivedCRS"
		- NEIGH  = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5915 :	"dynamic_cast"
		- NEIGH  = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5915 :	"<"
		- NEIGH  = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5915 :	"DerivedCRSTemplate"
		- NEIGH  = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5915 :	"*"
		- NEIGH  = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5915 :	">"
		- NEIGH  = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5915 :	"other"
		- NEIGH  = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5916 :	"return"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- SUCC   = { }

5916 :	"otherDerivedCRS"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- SUCC   = { }

5916 :	"!="
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- SUCC   = { }

5916 :	"&&"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- SUCC   = { }

5917 :	"DerivedCRS"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- SUCC   = { }

5917 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- SUCC   = { }

5917 :	"other"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- SUCC   = { }

5917 :	"criterion"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- SUCC   = { }

5917 :	"dbContext"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- SUCC   = { }

5925 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5925 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5925 :	"STRING_DerivedEngineeringCRS"
		- NEIGH  = { STRING_DerivedEngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5926 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5926 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5926 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5926 :	"DerivedEngineeringCRSTraits"
		- NEIGH  = { DerivedEngineeringCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5926 :	"CRSName"
		- NEIGH  = { CRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5927 :	"return"
		- NEIGH  = { STRING_DerivedEngineeringCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5927 :	"STRING_DerivedEngineeringCRS"
		- NEIGH  = { STRING_DerivedEngineeringCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5929 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5929 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5929 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5929 :	"DerivedEngineeringCRSTraits"
		- NEIGH  = { DerivedEngineeringCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5929 :	"WKTKeyword"
		- NEIGH  = { WKTKeyword , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5930 :	"return"
		- NEIGH  = { ENGCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5930 :	"io"
		- NEIGH  = { ENGCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5930 :	"WKTConstants"
		- NEIGH  = { ENGCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5930 :	"ENGCRS"
		- NEIGH  = { ENGCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5932 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5932 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5932 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5932 :	"DerivedEngineeringCRSTraits"
		- NEIGH  = { DerivedEngineeringCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5932 :	"WKTBaseKeyword"
		- NEIGH  = { WKTBaseKeyword , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5933 :	"return"
		- NEIGH  = { WKTConstants , io , BASEENGCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5933 :	"io"
		- NEIGH  = { WKTConstants , io , BASEENGCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5933 :	"WKTConstants"
		- NEIGH  = { WKTConstants , io , BASEENGCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5933 :	"BASEENGCRS"
		- NEIGH  = { WKTConstants , io , BASEENGCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5936 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5936 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5936 :	"DerivedEngineeringCRSTraits"
		- NEIGH  = { DerivedEngineeringCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5936 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5942 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5942 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5942 :	"STRING_DerivedParametricCRS"
		- NEIGH  = { STRING_DerivedParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5943 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5943 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5943 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5943 :	"DerivedParametricCRSTraits"
		- NEIGH  = { DerivedParametricCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5943 :	"CRSName"
		- NEIGH  = { CRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5944 :	"return"
		- NEIGH  = { STRING_DerivedParametricCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5944 :	"STRING_DerivedParametricCRS"
		- NEIGH  = { STRING_DerivedParametricCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5946 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5946 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5946 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5946 :	"DerivedParametricCRSTraits"
		- NEIGH  = { DerivedParametricCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5946 :	"WKTKeyword"
		- NEIGH  = { WKTKeyword , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5947 :	"return"
		- NEIGH  = { PARAMETRICCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5947 :	"io"
		- NEIGH  = { PARAMETRICCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5947 :	"WKTConstants"
		- NEIGH  = { PARAMETRICCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5947 :	"PARAMETRICCRS"
		- NEIGH  = { PARAMETRICCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5949 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5949 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5949 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5949 :	"DerivedParametricCRSTraits"
		- NEIGH  = { DerivedParametricCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5949 :	"WKTBaseKeyword"
		- NEIGH  = { WKTBaseKeyword , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5950 :	"return"
		- NEIGH  = { BASEPARAMCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5950 :	"io"
		- NEIGH  = { BASEPARAMCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5950 :	"WKTConstants"
		- NEIGH  = { BASEPARAMCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5950 :	"BASEPARAMCRS"
		- NEIGH  = { BASEPARAMCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5953 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5953 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5953 :	"DerivedParametricCRSTraits"
		- NEIGH  = { DerivedParametricCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5953 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5959 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5959 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5959 :	"STRING_DerivedTemporalCRS"
		- NEIGH  = { STRING_DerivedTemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5960 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5960 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5960 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5960 :	"DerivedTemporalCRSTraits"
		- NEIGH  = { DerivedTemporalCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5960 :	"CRSName"
		- NEIGH  = { CRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5961 :	"return"
		- NEIGH  = { STRING_DerivedTemporalCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5961 :	"STRING_DerivedTemporalCRS"
		- NEIGH  = { STRING_DerivedTemporalCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5963 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5963 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5963 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5963 :	"DerivedTemporalCRSTraits"
		- NEIGH  = { DerivedTemporalCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5963 :	"WKTKeyword"
		- NEIGH  = { WKTKeyword , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5964 :	"return"
		- NEIGH  = { TIMECRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5964 :	"io"
		- NEIGH  = { TIMECRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5964 :	"WKTConstants"
		- NEIGH  = { TIMECRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5964 :	"TIMECRS"
		- NEIGH  = { TIMECRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5966 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5966 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5966 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5966 :	"DerivedTemporalCRSTraits"
		- NEIGH  = { DerivedTemporalCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5966 :	"WKTBaseKeyword"
		- NEIGH  = { WKTBaseKeyword , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5967 :	"return"
		- NEIGH  = { BASETIMECRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5967 :	"io"
		- NEIGH  = { BASETIMECRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5967 :	"WKTConstants"
		- NEIGH  = { BASETIMECRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5967 :	"BASETIMECRS"
		- NEIGH  = { BASETIMECRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5970 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5970 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5970 :	"DerivedTemporalCRSTraits"
		- NEIGH  = { DerivedTemporalCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5970 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5976 :	"NS_PROJ_END"
		- NEIGH  = { NS_PROJ_END , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

