89 :	"PROJ_HEAD"
		- NEIGH  = { PROJ_HEAD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

89 :	"horner"
		- NEIGH  = { horner , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

96 :	"horner"
		- NEIGH  = { horner , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

97 :	"uneg"
		- NEIGH  = { uneg , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

98 :	"vneg"
		- NEIGH  = { vneg , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

99 :	"order"
		- NEIGH  = { order , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

100 :	"coefs"
		- NEIGH  = { coefs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

101 :	"range"
		- NEIGH  = { range , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

103 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

103 :	"fwd_u"
		- NEIGH  = { fwd_u , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

104 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

104 :	"fwd_v"
		- NEIGH  = { fwd_v , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

106 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

106 :	"inv_u"
		- NEIGH  = { inv_u , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

107 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

107 :	"inv_v"
		- NEIGH  = { inv_v , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

109 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

109 :	"fwd_c"
		- NEIGH  = { fwd_c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

110 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

110 :	"inv_c"
		- NEIGH  = { inv_c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

112 :	"PJ_UV"
		- NEIGH  = { PJ_UV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

112 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

112 :	"fwd_origin"
		- NEIGH  = { fwd_origin , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

113 :	"PJ_UV"
		- NEIGH  = { PJ_UV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

113 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

113 :	"inv_origin"
		- NEIGH  = { inv_origin , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

117 :	"horner"
		- NEIGH  = { horner , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

117 :	"HORNER"
		- NEIGH  = { HORNER , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

118 :	"PJ_UV"
		- NEIGH  = { PJ_UV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

118 :	"horner_func"
		- NEIGH  = { horner_func , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

118 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

118 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

118 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

118 :	"HORNER"
		- NEIGH  = { HORNER , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

118 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

118 :	"transformation"
		- NEIGH  = { transformation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

118 :	"PJ_DIRECTION"
		- NEIGH  = { PJ_DIRECTION , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

118 :	"direction"
		- NEIGH  = { direction , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

118 :	"PJ_UV"
		- NEIGH  = { PJ_UV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

118 :	"position"
		- NEIGH  = { position , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

119 :	"HORNER"
		- NEIGH  = { HORNER , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

119 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

119 :	"horner_alloc"
		- NEIGH  = { horner_alloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

119 :	"size_t"
		- NEIGH  = { size_t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

119 :	"order"
		- NEIGH  = { order , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

119 :	"complex_polynomia"
		- NEIGH  = { complex_polynomia , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

120 :	"horner_free"
		- NEIGH  = { horner_free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

120 :	"HORNER"
		- NEIGH  = { HORNER , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

120 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

120 :	"h"
		- NEIGH  = { h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

127 :	"horner_free"
		- NEIGH  = { horner_free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

127 :	"HORNER"
		- NEIGH  = { HORNER , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

127 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

127 :	"h"
		- NEIGH  = { h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

128 :	"free"
		- NEIGH  = { inv_v , h , free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { inv_u , h , free , }

128 :	"h"
		- NEIGH  = { inv_v , h , free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { inv_u , h , free , }

128 :	"inv_v"
		- NEIGH  = { inv_v , h , free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { inv_u , h , free , }

129 :	"free"
		- NEIGH  = { inv_u , h , free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { inv_v , h , free , }
		- SUCC   = { fwd_v , h , free , }

129 :	"h"
		- NEIGH  = { inv_u , h , free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { inv_v , h , free , }
		- SUCC   = { fwd_v , h , free , }

129 :	"inv_u"
		- NEIGH  = { inv_u , h , free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { inv_v , h , free , }
		- SUCC   = { fwd_v , h , free , }

130 :	"free"
		- NEIGH  = { fwd_v , h , free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { inv_u , h , free , }
		- SUCC   = { fwd_u , h , free , }

130 :	"h"
		- NEIGH  = { fwd_v , h , free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { inv_u , h , free , }
		- SUCC   = { fwd_u , h , free , }

130 :	"fwd_v"
		- NEIGH  = { fwd_v , h , free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { inv_u , h , free , }
		- SUCC   = { fwd_u , h , free , }

131 :	"free"
		- NEIGH  = { fwd_u , h , free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { fwd_v , h , free , }
		- SUCC   = { fwd_c , h , free , }

131 :	"h"
		- NEIGH  = { fwd_u , h , free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { fwd_v , h , free , }
		- SUCC   = { fwd_c , h , free , }

131 :	"fwd_u"
		- NEIGH  = { fwd_u , h , free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { fwd_v , h , free , }
		- SUCC   = { fwd_c , h , free , }

132 :	"free"
		- NEIGH  = { fwd_c , h , free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { fwd_u , h , free , }
		- SUCC   = { inv_c , h , free , }

132 :	"h"
		- NEIGH  = { fwd_c , h , free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { fwd_u , h , free , }
		- SUCC   = { inv_c , h , free , }

132 :	"fwd_c"
		- NEIGH  = { fwd_c , h , free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { fwd_u , h , free , }
		- SUCC   = { inv_c , h , free , }

133 :	"free"
		- NEIGH  = { inv_c , h , free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { fwd_c , h , free , }
		- SUCC   = { fwd_origin , h , free , }

133 :	"h"
		- NEIGH  = { inv_c , h , free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { fwd_c , h , free , }
		- SUCC   = { fwd_origin , h , free , }

133 :	"inv_c"
		- NEIGH  = { inv_c , h , free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { fwd_c , h , free , }
		- SUCC   = { fwd_origin , h , free , }

134 :	"free"
		- NEIGH  = { fwd_origin , h , free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { inv_c , h , free , }
		- SUCC   = { inv_origin , h , free , }

134 :	"h"
		- NEIGH  = { fwd_origin , h , free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { inv_c , h , free , }
		- SUCC   = { inv_origin , h , free , }

134 :	"fwd_origin"
		- NEIGH  = { fwd_origin , h , free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { inv_c , h , free , }
		- SUCC   = { inv_origin , h , free , }

135 :	"free"
		- NEIGH  = { inv_origin , h , free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { fwd_origin , h , free , }
		- SUCC   = { h , free , }

135 :	"h"
		- NEIGH  = { inv_origin , h , free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { fwd_origin , h , free , }
		- SUCC   = { h , free , }

135 :	"inv_origin"
		- NEIGH  = { inv_origin , h , free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { fwd_origin , h , free , }
		- SUCC   = { h , free , }

136 :	"free"
		- NEIGH  = { h , free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { inv_origin , h , free , }
		- SUCC   = { }

136 :	"h"
		- NEIGH  = { h , free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { inv_origin , h , free , }
		- SUCC   = { }

140 :	"HORNER"
		- NEIGH  = { HORNER , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

140 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

140 :	"horner_alloc"
		- NEIGH  = { horner_alloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

140 :	"size_t"
		- NEIGH  = { size_t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

140 :	"order"
		- NEIGH  = { order , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

140 :	"complex_polynomia"
		- NEIGH  = { complex_polynomia , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

142 :	"n"
		- NEIGH  = { * , / , + , order , n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { polynomia_ok , }

142 :	"order"
		- NEIGH  = { * , / , + , order , n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { polynomia_ok , }

142 :	"+"
		- NEIGH  = { * , / , + , order , n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { polynomia_ok , }

142 :	"*"
		- NEIGH  = { * , / , + , order , n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { polynomia_ok , }

142 :	"order"
		- NEIGH  = { * , / , + , order , n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { polynomia_ok , }

142 :	"+"
		- NEIGH  = { * , / , + , order , n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { polynomia_ok , }

142 :	"/"
		- NEIGH  = { * , / , + , order , n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { polynomia_ok , }

143 :	"polynomia_ok"
		- NEIGH  = { polynomia_ok , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , / , + , order , n , }
		- SUCC   = { > , calloc , < , h , static_cast , * , HORNER , }

144 :	"HORNER"
		- NEIGH  = { > , calloc , < , h , static_cast , * , HORNER , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { polynomia_ok , }
		- SUCC   = { h , == , if , }

144 :	"*"
		- NEIGH  = { > , calloc , < , h , static_cast , * , HORNER , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { polynomia_ok , }
		- SUCC   = { h , == , if , }

144 :	"h"
		- NEIGH  = { > , calloc , < , h , static_cast , * , HORNER , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { polynomia_ok , }
		- SUCC   = { h , == , if , }

144 :	"static_cast"
		- NEIGH  = { > , calloc , < , h , static_cast , * , HORNER , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { polynomia_ok , }
		- SUCC   = { h , == , if , }

144 :	"<"
		- NEIGH  = { > , calloc , < , h , static_cast , * , HORNER , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { polynomia_ok , }
		- SUCC   = { h , == , if , }

144 :	"HORNER"
		- NEIGH  = { > , calloc , < , h , static_cast , * , HORNER , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { polynomia_ok , }
		- SUCC   = { h , == , if , }

144 :	"*"
		- NEIGH  = { > , calloc , < , h , static_cast , * , HORNER , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { polynomia_ok , }
		- SUCC   = { h , == , if , }

144 :	">"
		- NEIGH  = { > , calloc , < , h , static_cast , * , HORNER , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { polynomia_ok , }
		- SUCC   = { h , == , if , }

144 :	"calloc"
		- NEIGH  = { > , calloc , < , h , static_cast , * , HORNER , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { polynomia_ok , }
		- SUCC   = { h , == , if , }

144 :	"HORNER"
		- NEIGH  = { > , calloc , < , h , static_cast , * , HORNER , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { polynomia_ok , }
		- SUCC   = { h , == , if , }

146 :	"if"
		- NEIGH  = { h , == , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , calloc , < , h , static_cast , * , HORNER , }
		- SUCC   = { complex_polynomia , if , }

146 :	"=="
		- NEIGH  = { h , == , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , calloc , < , h , static_cast , * , HORNER , }
		- SUCC   = { complex_polynomia , if , }

146 :	"h"
		- NEIGH  = { h , == , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , calloc , < , h , static_cast , * , HORNER , }
		- SUCC   = { complex_polynomia , if , }

147 :	"return"
		- NEIGH  = { return , }
		- PARENT = { h , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

149 :	"if"
		- NEIGH  = { complex_polynomia , if , }
		- PARENT = { }
		- CHILD  = { + , order , * , n , }
		- PRED   = { h , == , if , }
		- SUCC   = { order , h , }

149 :	"complex_polynomia"
		- NEIGH  = { complex_polynomia , if , }
		- PARENT = { }
		- CHILD  = { + , order , * , n , }
		- PRED   = { h , == , if , }
		- SUCC   = { order , h , }

150 :	"n"
		- NEIGH  = { + , order , * , n , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

150 :	"*"
		- NEIGH  = { + , order , * , n , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

150 :	"order"
		- NEIGH  = { + , order , * , n , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

150 :	"+"
		- NEIGH  = { + , order , * , n , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

151 :	"h"
		- NEIGH  = { order , h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { complex_polynomia , if , }
		- SUCC   = { coefs , n , h , }

151 :	"order"
		- NEIGH  = { order , h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { complex_polynomia , if , }
		- SUCC   = { coefs , n , h , }

151 :	"order"
		- NEIGH  = { order , h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { complex_polynomia , if , }
		- SUCC   = { coefs , n , h , }

152 :	"h"
		- NEIGH  = { coefs , n , h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { order , h , }
		- SUCC   = { complex_polynomia , if , }

152 :	"coefs"
		- NEIGH  = { coefs , n , h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { order , h , }
		- SUCC   = { complex_polynomia , if , }

152 :	"n"
		- NEIGH  = { coefs , n , h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { order , h , }
		- SUCC   = { complex_polynomia , if , }

154 :	"if"
		- NEIGH  = { complex_polynomia , if , }
		- PARENT = { }
		- CHILD  = { inv_v , inv_u , fwd_v , > , && , calloc , inv_c , * , if , static_cast , n , fwd_c , < , fwd_u , h , }
		- PRED   = { coefs , n , h , }
		- SUCC   = { > , static_cast , h , PJ_UV , * , fwd_origin , calloc , < , }

154 :	"complex_polynomia"
		- NEIGH  = { complex_polynomia , if , }
		- PARENT = { }
		- CHILD  = { inv_v , inv_u , fwd_v , > , && , calloc , inv_c , * , if , static_cast , n , fwd_c , < , fwd_u , h , }
		- PRED   = { coefs , n , h , }
		- SUCC   = { > , static_cast , h , PJ_UV , * , fwd_origin , calloc , < , }

155 :	"h"
		- NEIGH  = { > , * , static_cast , fwd_c , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , * , static_cast , inv_c , calloc , < , n , h , }

155 :	"fwd_c"
		- NEIGH  = { > , * , static_cast , fwd_c , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , * , static_cast , inv_c , calloc , < , n , h , }

155 :	"static_cast"
		- NEIGH  = { > , * , static_cast , fwd_c , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , * , static_cast , inv_c , calloc , < , n , h , }

155 :	"<"
		- NEIGH  = { > , * , static_cast , fwd_c , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , * , static_cast , inv_c , calloc , < , n , h , }

155 :	"*"
		- NEIGH  = { > , * , static_cast , fwd_c , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , * , static_cast , inv_c , calloc , < , n , h , }

155 :	">"
		- NEIGH  = { > , * , static_cast , fwd_c , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , * , static_cast , inv_c , calloc , < , n , h , }

155 :	"calloc"
		- NEIGH  = { > , * , static_cast , fwd_c , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , * , static_cast , inv_c , calloc , < , n , h , }

155 :	"n"
		- NEIGH  = { > , * , static_cast , fwd_c , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , * , static_cast , inv_c , calloc , < , n , h , }

156 :	"h"
		- NEIGH  = { > , * , static_cast , inv_c , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , fwd_c , calloc , < , n , h , }
		- SUCC   = { && , inv_c , fwd_c , h , if , }

156 :	"inv_c"
		- NEIGH  = { > , * , static_cast , inv_c , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , fwd_c , calloc , < , n , h , }
		- SUCC   = { && , inv_c , fwd_c , h , if , }

156 :	"static_cast"
		- NEIGH  = { > , * , static_cast , inv_c , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , fwd_c , calloc , < , n , h , }
		- SUCC   = { && , inv_c , fwd_c , h , if , }

156 :	"<"
		- NEIGH  = { > , * , static_cast , inv_c , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , fwd_c , calloc , < , n , h , }
		- SUCC   = { && , inv_c , fwd_c , h , if , }

156 :	"*"
		- NEIGH  = { > , * , static_cast , inv_c , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , fwd_c , calloc , < , n , h , }
		- SUCC   = { && , inv_c , fwd_c , h , if , }

156 :	">"
		- NEIGH  = { > , * , static_cast , inv_c , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , fwd_c , calloc , < , n , h , }
		- SUCC   = { && , inv_c , fwd_c , h , if , }

156 :	"calloc"
		- NEIGH  = { > , * , static_cast , inv_c , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , fwd_c , calloc , < , n , h , }
		- SUCC   = { && , inv_c , fwd_c , h , if , }

156 :	"n"
		- NEIGH  = { > , * , static_cast , inv_c , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , fwd_c , calloc , < , n , h , }
		- SUCC   = { && , inv_c , fwd_c , h , if , }

157 :	"if"
		- NEIGH  = { && , inv_c , fwd_c , h , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { polynomia_ok , }
		- PRED   = { > , * , static_cast , inv_c , calloc , < , n , h , }
		- SUCC   = { }

157 :	"h"
		- NEIGH  = { && , inv_c , fwd_c , h , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { polynomia_ok , }
		- PRED   = { > , * , static_cast , inv_c , calloc , < , n , h , }
		- SUCC   = { }

157 :	"fwd_c"
		- NEIGH  = { && , inv_c , fwd_c , h , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { polynomia_ok , }
		- PRED   = { > , * , static_cast , inv_c , calloc , < , n , h , }
		- SUCC   = { }

157 :	"&&"
		- NEIGH  = { && , inv_c , fwd_c , h , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { polynomia_ok , }
		- PRED   = { > , * , static_cast , inv_c , calloc , < , n , h , }
		- SUCC   = { }

157 :	"h"
		- NEIGH  = { && , inv_c , fwd_c , h , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { polynomia_ok , }
		- PRED   = { > , * , static_cast , inv_c , calloc , < , n , h , }
		- SUCC   = { }

157 :	"inv_c"
		- NEIGH  = { && , inv_c , fwd_c , h , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { polynomia_ok , }
		- PRED   = { > , * , static_cast , inv_c , calloc , < , n , h , }
		- SUCC   = { }

158 :	"polynomia_ok"
		- NEIGH  = { polynomia_ok , }
		- PARENT = { && , inv_c , fwd_c , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

161 :	"h"
		- NEIGH  = { > , * , static_cast , fwd_u , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , * , static_cast , fwd_v , calloc , < , n , h , }

161 :	"fwd_u"
		- NEIGH  = { > , * , static_cast , fwd_u , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , * , static_cast , fwd_v , calloc , < , n , h , }

161 :	"static_cast"
		- NEIGH  = { > , * , static_cast , fwd_u , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , * , static_cast , fwd_v , calloc , < , n , h , }

161 :	"<"
		- NEIGH  = { > , * , static_cast , fwd_u , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , * , static_cast , fwd_v , calloc , < , n , h , }

161 :	"*"
		- NEIGH  = { > , * , static_cast , fwd_u , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , * , static_cast , fwd_v , calloc , < , n , h , }

161 :	">"
		- NEIGH  = { > , * , static_cast , fwd_u , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , * , static_cast , fwd_v , calloc , < , n , h , }

161 :	"calloc"
		- NEIGH  = { > , * , static_cast , fwd_u , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , * , static_cast , fwd_v , calloc , < , n , h , }

161 :	"n"
		- NEIGH  = { > , * , static_cast , fwd_u , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , * , static_cast , fwd_v , calloc , < , n , h , }

162 :	"h"
		- NEIGH  = { > , * , static_cast , fwd_v , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , fwd_u , calloc , < , n , h , }
		- SUCC   = { > , * , static_cast , inv_u , calloc , < , n , h , }

162 :	"fwd_v"
		- NEIGH  = { > , * , static_cast , fwd_v , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , fwd_u , calloc , < , n , h , }
		- SUCC   = { > , * , static_cast , inv_u , calloc , < , n , h , }

162 :	"static_cast"
		- NEIGH  = { > , * , static_cast , fwd_v , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , fwd_u , calloc , < , n , h , }
		- SUCC   = { > , * , static_cast , inv_u , calloc , < , n , h , }

162 :	"<"
		- NEIGH  = { > , * , static_cast , fwd_v , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , fwd_u , calloc , < , n , h , }
		- SUCC   = { > , * , static_cast , inv_u , calloc , < , n , h , }

162 :	"*"
		- NEIGH  = { > , * , static_cast , fwd_v , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , fwd_u , calloc , < , n , h , }
		- SUCC   = { > , * , static_cast , inv_u , calloc , < , n , h , }

162 :	">"
		- NEIGH  = { > , * , static_cast , fwd_v , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , fwd_u , calloc , < , n , h , }
		- SUCC   = { > , * , static_cast , inv_u , calloc , < , n , h , }

162 :	"calloc"
		- NEIGH  = { > , * , static_cast , fwd_v , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , fwd_u , calloc , < , n , h , }
		- SUCC   = { > , * , static_cast , inv_u , calloc , < , n , h , }

162 :	"n"
		- NEIGH  = { > , * , static_cast , fwd_v , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , fwd_u , calloc , < , n , h , }
		- SUCC   = { > , * , static_cast , inv_u , calloc , < , n , h , }

163 :	"h"
		- NEIGH  = { > , * , static_cast , inv_u , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , fwd_v , calloc , < , n , h , }
		- SUCC   = { > , * , static_cast , calloc , < , inv_v , n , h , }

163 :	"inv_u"
		- NEIGH  = { > , * , static_cast , inv_u , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , fwd_v , calloc , < , n , h , }
		- SUCC   = { > , * , static_cast , calloc , < , inv_v , n , h , }

163 :	"static_cast"
		- NEIGH  = { > , * , static_cast , inv_u , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , fwd_v , calloc , < , n , h , }
		- SUCC   = { > , * , static_cast , calloc , < , inv_v , n , h , }

163 :	"<"
		- NEIGH  = { > , * , static_cast , inv_u , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , fwd_v , calloc , < , n , h , }
		- SUCC   = { > , * , static_cast , calloc , < , inv_v , n , h , }

163 :	"*"
		- NEIGH  = { > , * , static_cast , inv_u , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , fwd_v , calloc , < , n , h , }
		- SUCC   = { > , * , static_cast , calloc , < , inv_v , n , h , }

163 :	">"
		- NEIGH  = { > , * , static_cast , inv_u , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , fwd_v , calloc , < , n , h , }
		- SUCC   = { > , * , static_cast , calloc , < , inv_v , n , h , }

163 :	"calloc"
		- NEIGH  = { > , * , static_cast , inv_u , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , fwd_v , calloc , < , n , h , }
		- SUCC   = { > , * , static_cast , calloc , < , inv_v , n , h , }

163 :	"n"
		- NEIGH  = { > , * , static_cast , inv_u , calloc , < , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , fwd_v , calloc , < , n , h , }
		- SUCC   = { > , * , static_cast , calloc , < , inv_v , n , h , }

164 :	"h"
		- NEIGH  = { > , * , static_cast , calloc , < , inv_v , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , inv_u , calloc , < , n , h , }
		- SUCC   = { inv_v , inv_u , fwd_v , && , h , fwd_u , if , }

164 :	"inv_v"
		- NEIGH  = { > , * , static_cast , calloc , < , inv_v , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , inv_u , calloc , < , n , h , }
		- SUCC   = { inv_v , inv_u , fwd_v , && , h , fwd_u , if , }

164 :	"static_cast"
		- NEIGH  = { > , * , static_cast , calloc , < , inv_v , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , inv_u , calloc , < , n , h , }
		- SUCC   = { inv_v , inv_u , fwd_v , && , h , fwd_u , if , }

164 :	"<"
		- NEIGH  = { > , * , static_cast , calloc , < , inv_v , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , inv_u , calloc , < , n , h , }
		- SUCC   = { inv_v , inv_u , fwd_v , && , h , fwd_u , if , }

164 :	"*"
		- NEIGH  = { > , * , static_cast , calloc , < , inv_v , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , inv_u , calloc , < , n , h , }
		- SUCC   = { inv_v , inv_u , fwd_v , && , h , fwd_u , if , }

164 :	">"
		- NEIGH  = { > , * , static_cast , calloc , < , inv_v , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , inv_u , calloc , < , n , h , }
		- SUCC   = { inv_v , inv_u , fwd_v , && , h , fwd_u , if , }

164 :	"calloc"
		- NEIGH  = { > , * , static_cast , calloc , < , inv_v , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , inv_u , calloc , < , n , h , }
		- SUCC   = { inv_v , inv_u , fwd_v , && , h , fwd_u , if , }

164 :	"n"
		- NEIGH  = { > , * , static_cast , calloc , < , inv_v , n , h , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , inv_u , calloc , < , n , h , }
		- SUCC   = { inv_v , inv_u , fwd_v , && , h , fwd_u , if , }

165 :	"if"
		- NEIGH  = { inv_v , inv_u , fwd_v , && , h , fwd_u , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { polynomia_ok , }
		- PRED   = { > , * , static_cast , calloc , < , inv_v , n , h , }
		- SUCC   = { }

165 :	"h"
		- NEIGH  = { inv_v , inv_u , fwd_v , && , h , fwd_u , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { polynomia_ok , }
		- PRED   = { > , * , static_cast , calloc , < , inv_v , n , h , }
		- SUCC   = { }

165 :	"fwd_u"
		- NEIGH  = { inv_v , inv_u , fwd_v , && , h , fwd_u , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { polynomia_ok , }
		- PRED   = { > , * , static_cast , calloc , < , inv_v , n , h , }
		- SUCC   = { }

165 :	"&&"
		- NEIGH  = { inv_v , inv_u , fwd_v , && , h , fwd_u , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { polynomia_ok , }
		- PRED   = { > , * , static_cast , calloc , < , inv_v , n , h , }
		- SUCC   = { }

165 :	"h"
		- NEIGH  = { inv_v , inv_u , fwd_v , && , h , fwd_u , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { polynomia_ok , }
		- PRED   = { > , * , static_cast , calloc , < , inv_v , n , h , }
		- SUCC   = { }

165 :	"fwd_v"
		- NEIGH  = { inv_v , inv_u , fwd_v , && , h , fwd_u , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { polynomia_ok , }
		- PRED   = { > , * , static_cast , calloc , < , inv_v , n , h , }
		- SUCC   = { }

165 :	"&&"
		- NEIGH  = { inv_v , inv_u , fwd_v , && , h , fwd_u , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { polynomia_ok , }
		- PRED   = { > , * , static_cast , calloc , < , inv_v , n , h , }
		- SUCC   = { }

165 :	"h"
		- NEIGH  = { inv_v , inv_u , fwd_v , && , h , fwd_u , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { polynomia_ok , }
		- PRED   = { > , * , static_cast , calloc , < , inv_v , n , h , }
		- SUCC   = { }

165 :	"inv_u"
		- NEIGH  = { inv_v , inv_u , fwd_v , && , h , fwd_u , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { polynomia_ok , }
		- PRED   = { > , * , static_cast , calloc , < , inv_v , n , h , }
		- SUCC   = { }

165 :	"&&"
		- NEIGH  = { inv_v , inv_u , fwd_v , && , h , fwd_u , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { polynomia_ok , }
		- PRED   = { > , * , static_cast , calloc , < , inv_v , n , h , }
		- SUCC   = { }

165 :	"h"
		- NEIGH  = { inv_v , inv_u , fwd_v , && , h , fwd_u , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { polynomia_ok , }
		- PRED   = { > , * , static_cast , calloc , < , inv_v , n , h , }
		- SUCC   = { }

165 :	"inv_v"
		- NEIGH  = { inv_v , inv_u , fwd_v , && , h , fwd_u , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { polynomia_ok , }
		- PRED   = { > , * , static_cast , calloc , < , inv_v , n , h , }
		- SUCC   = { }

166 :	"polynomia_ok"
		- NEIGH  = { polynomia_ok , }
		- PARENT = { inv_v , inv_u , fwd_v , && , h , fwd_u , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

169 :	"h"
		- NEIGH  = { > , static_cast , h , PJ_UV , * , fwd_origin , calloc , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { complex_polynomia , if , }
		- SUCC   = { > , * , static_cast , h , PJ_UV , inv_origin , calloc , < , }

169 :	"fwd_origin"
		- NEIGH  = { > , static_cast , h , PJ_UV , * , fwd_origin , calloc , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { complex_polynomia , if , }
		- SUCC   = { > , * , static_cast , h , PJ_UV , inv_origin , calloc , < , }

169 :	"static_cast"
		- NEIGH  = { > , static_cast , h , PJ_UV , * , fwd_origin , calloc , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { complex_polynomia , if , }
		- SUCC   = { > , * , static_cast , h , PJ_UV , inv_origin , calloc , < , }

169 :	"<"
		- NEIGH  = { > , static_cast , h , PJ_UV , * , fwd_origin , calloc , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { complex_polynomia , if , }
		- SUCC   = { > , * , static_cast , h , PJ_UV , inv_origin , calloc , < , }

169 :	"PJ_UV"
		- NEIGH  = { > , static_cast , h , PJ_UV , * , fwd_origin , calloc , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { complex_polynomia , if , }
		- SUCC   = { > , * , static_cast , h , PJ_UV , inv_origin , calloc , < , }

169 :	"*"
		- NEIGH  = { > , static_cast , h , PJ_UV , * , fwd_origin , calloc , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { complex_polynomia , if , }
		- SUCC   = { > , * , static_cast , h , PJ_UV , inv_origin , calloc , < , }

169 :	">"
		- NEIGH  = { > , static_cast , h , PJ_UV , * , fwd_origin , calloc , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { complex_polynomia , if , }
		- SUCC   = { > , * , static_cast , h , PJ_UV , inv_origin , calloc , < , }

169 :	"calloc"
		- NEIGH  = { > , static_cast , h , PJ_UV , * , fwd_origin , calloc , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { complex_polynomia , if , }
		- SUCC   = { > , * , static_cast , h , PJ_UV , inv_origin , calloc , < , }

169 :	"PJ_UV"
		- NEIGH  = { > , static_cast , h , PJ_UV , * , fwd_origin , calloc , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { complex_polynomia , if , }
		- SUCC   = { > , * , static_cast , h , PJ_UV , inv_origin , calloc , < , }

170 :	"h"
		- NEIGH  = { > , * , static_cast , h , PJ_UV , inv_origin , calloc , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , static_cast , h , PJ_UV , * , fwd_origin , calloc , < , }
		- SUCC   = { inv_origin , h , && , polynomia_ok , fwd_origin , if , }

170 :	"inv_origin"
		- NEIGH  = { > , * , static_cast , h , PJ_UV , inv_origin , calloc , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , static_cast , h , PJ_UV , * , fwd_origin , calloc , < , }
		- SUCC   = { inv_origin , h , && , polynomia_ok , fwd_origin , if , }

170 :	"static_cast"
		- NEIGH  = { > , * , static_cast , h , PJ_UV , inv_origin , calloc , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , static_cast , h , PJ_UV , * , fwd_origin , calloc , < , }
		- SUCC   = { inv_origin , h , && , polynomia_ok , fwd_origin , if , }

170 :	"<"
		- NEIGH  = { > , * , static_cast , h , PJ_UV , inv_origin , calloc , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , static_cast , h , PJ_UV , * , fwd_origin , calloc , < , }
		- SUCC   = { inv_origin , h , && , polynomia_ok , fwd_origin , if , }

170 :	"PJ_UV"
		- NEIGH  = { > , * , static_cast , h , PJ_UV , inv_origin , calloc , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , static_cast , h , PJ_UV , * , fwd_origin , calloc , < , }
		- SUCC   = { inv_origin , h , && , polynomia_ok , fwd_origin , if , }

170 :	"*"
		- NEIGH  = { > , * , static_cast , h , PJ_UV , inv_origin , calloc , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , static_cast , h , PJ_UV , * , fwd_origin , calloc , < , }
		- SUCC   = { inv_origin , h , && , polynomia_ok , fwd_origin , if , }

170 :	">"
		- NEIGH  = { > , * , static_cast , h , PJ_UV , inv_origin , calloc , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , static_cast , h , PJ_UV , * , fwd_origin , calloc , < , }
		- SUCC   = { inv_origin , h , && , polynomia_ok , fwd_origin , if , }

170 :	"calloc"
		- NEIGH  = { > , * , static_cast , h , PJ_UV , inv_origin , calloc , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , static_cast , h , PJ_UV , * , fwd_origin , calloc , < , }
		- SUCC   = { inv_origin , h , && , polynomia_ok , fwd_origin , if , }

170 :	"PJ_UV"
		- NEIGH  = { > , * , static_cast , h , PJ_UV , inv_origin , calloc , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , static_cast , h , PJ_UV , * , fwd_origin , calloc , < , }
		- SUCC   = { inv_origin , h , && , polynomia_ok , fwd_origin , if , }

172 :	"if"
		- NEIGH  = { inv_origin , h , && , polynomia_ok , fwd_origin , if , }
		- PARENT = { }
		- CHILD  = { h , return , }
		- PRED   = { > , * , static_cast , h , PJ_UV , inv_origin , calloc , < , }
		- SUCC   = { h , horner_free , }

172 :	"polynomia_ok"
		- NEIGH  = { inv_origin , h , && , polynomia_ok , fwd_origin , if , }
		- PARENT = { }
		- CHILD  = { h , return , }
		- PRED   = { > , * , static_cast , h , PJ_UV , inv_origin , calloc , < , }
		- SUCC   = { h , horner_free , }

172 :	"&&"
		- NEIGH  = { inv_origin , h , && , polynomia_ok , fwd_origin , if , }
		- PARENT = { }
		- CHILD  = { h , return , }
		- PRED   = { > , * , static_cast , h , PJ_UV , inv_origin , calloc , < , }
		- SUCC   = { h , horner_free , }

172 :	"h"
		- NEIGH  = { inv_origin , h , && , polynomia_ok , fwd_origin , if , }
		- PARENT = { }
		- CHILD  = { h , return , }
		- PRED   = { > , * , static_cast , h , PJ_UV , inv_origin , calloc , < , }
		- SUCC   = { h , horner_free , }

172 :	"fwd_origin"
		- NEIGH  = { inv_origin , h , && , polynomia_ok , fwd_origin , if , }
		- PARENT = { }
		- CHILD  = { h , return , }
		- PRED   = { > , * , static_cast , h , PJ_UV , inv_origin , calloc , < , }
		- SUCC   = { h , horner_free , }

172 :	"&&"
		- NEIGH  = { inv_origin , h , && , polynomia_ok , fwd_origin , if , }
		- PARENT = { }
		- CHILD  = { h , return , }
		- PRED   = { > , * , static_cast , h , PJ_UV , inv_origin , calloc , < , }
		- SUCC   = { h , horner_free , }

172 :	"h"
		- NEIGH  = { inv_origin , h , && , polynomia_ok , fwd_origin , if , }
		- PARENT = { }
		- CHILD  = { h , return , }
		- PRED   = { > , * , static_cast , h , PJ_UV , inv_origin , calloc , < , }
		- SUCC   = { h , horner_free , }

172 :	"inv_origin"
		- NEIGH  = { inv_origin , h , && , polynomia_ok , fwd_origin , if , }
		- PARENT = { }
		- CHILD  = { h , return , }
		- PRED   = { > , * , static_cast , h , PJ_UV , inv_origin , calloc , < , }
		- SUCC   = { h , horner_free , }

173 :	"return"
		- NEIGH  = { h , return , }
		- PARENT = { inv_origin , h , && , polynomia_ok , fwd_origin , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

173 :	"h"
		- NEIGH  = { h , return , }
		- PARENT = { inv_origin , h , && , polynomia_ok , fwd_origin , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

176 :	"horner_free"
		- NEIGH  = { h , horner_free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { inv_origin , h , && , polynomia_ok , fwd_origin , if , }
		- SUCC   = { return , }

176 :	"h"
		- NEIGH  = { h , horner_free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { inv_origin , h , && , polynomia_ok , fwd_origin , if , }
		- SUCC   = { return , }

177 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , horner_free , }
		- SUCC   = { }

184 :	"PJ_UV"
		- NEIGH  = { PJ_UV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

184 :	"horner_func"
		- NEIGH  = { horner_func , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

184 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

184 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

184 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

184 :	"HORNER"
		- NEIGH  = { HORNER , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

184 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

184 :	"transformation"
		- NEIGH  = { transformation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

184 :	"PJ_DIRECTION"
		- NEIGH  = { PJ_DIRECTION , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

184 :	"direction"
		- NEIGH  = { direction , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

184 :	"PJ_UV"
		- NEIGH  = { PJ_UV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

184 :	"position"
		- NEIGH  = { position , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

222 :	"sz"
		- NEIGH  = { sz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { tcy , tcx , * , }

223 :	"*"
		- NEIGH  = { tcy , tcx , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sz , }
		- SUCC   = { range , }

223 :	"tcx"
		- NEIGH  = { tcy , tcx , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sz , }
		- SUCC   = { range , }

223 :	"*"
		- NEIGH  = { tcy , tcx , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sz , }
		- SUCC   = { range , }

223 :	"tcy"
		- NEIGH  = { tcy , tcx , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sz , }
		- SUCC   = { range , }

224 :	"range"
		- NEIGH  = { range , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tcy , tcx , * , }
		- SUCC   = { e , n , }

225 :	"n"
		- NEIGH  = { e , n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { range , }
		- SUCC   = { uv_error , PJ_UV , }

225 :	"e"
		- NEIGH  = { e , n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { range , }
		- SUCC   = { uv_error , PJ_UV , }

226 :	"PJ_UV"
		- NEIGH  = { uv_error , PJ_UV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , n , }
		- SUCC   = { HUGE_VAL , v , u , uv_error , }

226 :	"uv_error"
		- NEIGH  = { uv_error , PJ_UV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , n , }
		- SUCC   = { HUGE_VAL , v , u , uv_error , }

227 :	"uv_error"
		- NEIGH  = { HUGE_VAL , v , u , uv_error , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { uv_error , PJ_UV , }
		- SUCC   = { transformation , == , if , }

227 :	"u"
		- NEIGH  = { HUGE_VAL , v , u , uv_error , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { uv_error , PJ_UV , }
		- SUCC   = { transformation , == , if , }

227 :	"uv_error"
		- NEIGH  = { HUGE_VAL , v , u , uv_error , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { uv_error , PJ_UV , }
		- SUCC   = { transformation , == , if , }

227 :	"v"
		- NEIGH  = { HUGE_VAL , v , u , uv_error , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { uv_error , PJ_UV , }
		- SUCC   = { transformation , == , if , }

227 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , v , u , uv_error , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { uv_error , PJ_UV , }
		- SUCC   = { transformation , == , if , }

229 :	"if"
		- NEIGH  = { transformation , == , if , }
		- PARENT = { }
		- CHILD  = { uv_error , return , }
		- PRED   = { HUGE_VAL , v , u , uv_error , }
		- SUCC   = { direction , switch , }

229 :	"=="
		- NEIGH  = { transformation , == , if , }
		- PARENT = { }
		- CHILD  = { uv_error , return , }
		- PRED   = { HUGE_VAL , v , u , uv_error , }
		- SUCC   = { direction , switch , }

229 :	"transformation"
		- NEIGH  = { transformation , == , if , }
		- PARENT = { }
		- CHILD  = { uv_error , return , }
		- PRED   = { HUGE_VAL , v , u , uv_error , }
		- SUCC   = { direction , switch , }

230 :	"return"
		- NEIGH  = { uv_error , return , }
		- PARENT = { transformation , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

230 :	"uv_error"
		- NEIGH  = { uv_error , return , }
		- PARENT = { transformation , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

233 :	"switch"
		- NEIGH  = { direction , switch , }
		- PARENT = { }
		- CHILD  = { uv_error , PJ_FWD , PJ_INV , break , return , position , PJ_IDENT , }
		- PRED   = { transformation , == , if , }
		- SUCC   = { / , * , order , + , transformation , sz , }

233 :	"direction"
		- NEIGH  = { direction , switch , }
		- PARENT = { }
		- CHILD  = { uv_error , PJ_FWD , PJ_INV , break , return , position , PJ_IDENT , }
		- PRED   = { transformation , == , if , }
		- SUCC   = { / , * , order , + , transformation , sz , }

234 :	"PJ_IDENT"
		- NEIGH  = { PJ_IDENT , }
		- PARENT = { direction , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { position , return , }

235 :	"return"
		- NEIGH  = { position , return , }
		- PARENT = { direction , switch , }
		- CHILD  = { }
		- PRED   = { PJ_IDENT , }
		- SUCC   = { PJ_FWD , }

235 :	"position"
		- NEIGH  = { position , return , }
		- PARENT = { direction , switch , }
		- CHILD  = { }
		- PRED   = { PJ_IDENT , }
		- SUCC   = { PJ_FWD , }

236 :	"PJ_FWD"
		- NEIGH  = { PJ_FWD , }
		- PARENT = { direction , switch , }
		- CHILD  = { }
		- PRED   = { position , return , }
		- SUCC   = { PJ_INV , }

237 :	"PJ_INV"
		- NEIGH  = { PJ_INV , }
		- PARENT = { direction , switch , }
		- CHILD  = { }
		- PRED   = { PJ_FWD , }
		- SUCC   = { break , }

238 :	"break"
		- NEIGH  = { break , }
		- PARENT = { direction , switch , }
		- CHILD  = { }
		- PRED   = { PJ_INV , }
		- SUCC   = { }

240 :	"return"
		- NEIGH  = { uv_error , return , }
		- PARENT = { direction , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

240 :	"uv_error"
		- NEIGH  = { uv_error , return , }
		- PARENT = { direction , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

244 :	"sz"
		- NEIGH  = { / , * , order , + , transformation , sz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { direction , switch , }
		- SUCC   = { transformation , range , }

244 :	"transformation"
		- NEIGH  = { / , * , order , + , transformation , sz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { direction , switch , }
		- SUCC   = { transformation , range , }

244 :	"order"
		- NEIGH  = { / , * , order , + , transformation , sz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { direction , switch , }
		- SUCC   = { transformation , range , }

244 :	"+"
		- NEIGH  = { / , * , order , + , transformation , sz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { direction , switch , }
		- SUCC   = { transformation , range , }

244 :	"*"
		- NEIGH  = { / , * , order , + , transformation , sz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { direction , switch , }
		- SUCC   = { transformation , range , }

244 :	"transformation"
		- NEIGH  = { / , * , order , + , transformation , sz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { direction , switch , }
		- SUCC   = { transformation , range , }

244 :	"order"
		- NEIGH  = { / , * , order , + , transformation , sz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { direction , switch , }
		- SUCC   = { transformation , range , }

244 :	"+"
		- NEIGH  = { / , * , order , + , transformation , sz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { direction , switch , }
		- SUCC   = { transformation , range , }

244 :	"/"
		- NEIGH  = { / , * , order , + , transformation , sz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { direction , switch , }
		- SUCC   = { transformation , range , }

245 :	"range"
		- NEIGH  = { transformation , range , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , * , order , + , transformation , sz , }
		- SUCC   = { == , direction , PJ_FWD , if , }

245 :	"transformation"
		- NEIGH  = { transformation , range , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , * , order , + , transformation , sz , }
		- SUCC   = { == , direction , PJ_FWD , if , }

245 :	"range"
		- NEIGH  = { transformation , range , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , * , order , + , transformation , sz , }
		- SUCC   = { == , direction , PJ_FWD , if , }

248 :	"if"
		- NEIGH  = { == , direction , PJ_FWD , if , }
		- PARENT = { }
		- CHILD  = { inv_origin , inv_v , v , fwd_origin , - , n , tcx , u , e , inv_u , fwd_v , position , tcy , sz , fwd_u , + , transformation , }
		- PRED   = { transformation , range , }
		- SUCC   = { || , e , range , > , n , fabs , if , }

248 :	"direction"
		- NEIGH  = { == , direction , PJ_FWD , if , }
		- PARENT = { }
		- CHILD  = { inv_origin , inv_v , v , fwd_origin , - , n , tcx , u , e , inv_u , fwd_v , position , tcy , sz , fwd_u , + , transformation , }
		- PRED   = { transformation , range , }
		- SUCC   = { || , e , range , > , n , fabs , if , }

248 :	"=="
		- NEIGH  = { == , direction , PJ_FWD , if , }
		- PARENT = { }
		- CHILD  = { inv_origin , inv_v , v , fwd_origin , - , n , tcx , u , e , inv_u , fwd_v , position , tcy , sz , fwd_u , + , transformation , }
		- PRED   = { transformation , range , }
		- SUCC   = { || , e , range , > , n , fabs , if , }

248 :	"PJ_FWD"
		- NEIGH  = { == , direction , PJ_FWD , if , }
		- PARENT = { }
		- CHILD  = { inv_origin , inv_v , v , fwd_origin , - , n , tcx , u , e , inv_u , fwd_v , position , tcy , sz , fwd_u , + , transformation , }
		- PRED   = { transformation , range , }
		- SUCC   = { || , e , range , > , n , fabs , if , }

249 :	"tcx"
		- NEIGH  = { sz , + , transformation , fwd_u , tcx , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { fwd_v , + , transformation , sz , tcy , }

249 :	"transformation"
		- NEIGH  = { sz , + , transformation , fwd_u , tcx , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { fwd_v , + , transformation , sz , tcy , }

249 :	"fwd_u"
		- NEIGH  = { sz , + , transformation , fwd_u , tcx , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { fwd_v , + , transformation , sz , tcy , }

249 :	"+"
		- NEIGH  = { sz , + , transformation , fwd_u , tcx , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { fwd_v , + , transformation , sz , tcy , }

249 :	"sz"
		- NEIGH  = { sz , + , transformation , fwd_u , tcx , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { fwd_v , + , transformation , sz , tcy , }

250 :	"tcy"
		- NEIGH  = { fwd_v , + , transformation , sz , tcy , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { sz , + , transformation , fwd_u , tcx , }
		- SUCC   = { fwd_origin , transformation , - , e , u , position , }

250 :	"transformation"
		- NEIGH  = { fwd_v , + , transformation , sz , tcy , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { sz , + , transformation , fwd_u , tcx , }
		- SUCC   = { fwd_origin , transformation , - , e , u , position , }

250 :	"fwd_v"
		- NEIGH  = { fwd_v , + , transformation , sz , tcy , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { sz , + , transformation , fwd_u , tcx , }
		- SUCC   = { fwd_origin , transformation , - , e , u , position , }

250 :	"+"
		- NEIGH  = { fwd_v , + , transformation , sz , tcy , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { sz , + , transformation , fwd_u , tcx , }
		- SUCC   = { fwd_origin , transformation , - , e , u , position , }

250 :	"sz"
		- NEIGH  = { fwd_v , + , transformation , sz , tcy , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { sz , + , transformation , fwd_u , tcx , }
		- SUCC   = { fwd_origin , transformation , - , e , u , position , }

251 :	"e"
		- NEIGH  = { fwd_origin , transformation , - , e , u , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { fwd_v , + , transformation , sz , tcy , }
		- SUCC   = { fwd_origin , n , transformation , v , - , position , }

251 :	"position"
		- NEIGH  = { fwd_origin , transformation , - , e , u , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { fwd_v , + , transformation , sz , tcy , }
		- SUCC   = { fwd_origin , n , transformation , v , - , position , }

251 :	"u"
		- NEIGH  = { fwd_origin , transformation , - , e , u , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { fwd_v , + , transformation , sz , tcy , }
		- SUCC   = { fwd_origin , n , transformation , v , - , position , }

251 :	"-"
		- NEIGH  = { fwd_origin , transformation , - , e , u , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { fwd_v , + , transformation , sz , tcy , }
		- SUCC   = { fwd_origin , n , transformation , v , - , position , }

251 :	"transformation"
		- NEIGH  = { fwd_origin , transformation , - , e , u , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { fwd_v , + , transformation , sz , tcy , }
		- SUCC   = { fwd_origin , n , transformation , v , - , position , }

251 :	"fwd_origin"
		- NEIGH  = { fwd_origin , transformation , - , e , u , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { fwd_v , + , transformation , sz , tcy , }
		- SUCC   = { fwd_origin , n , transformation , v , - , position , }

251 :	"u"
		- NEIGH  = { fwd_origin , transformation , - , e , u , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { fwd_v , + , transformation , sz , tcy , }
		- SUCC   = { fwd_origin , n , transformation , v , - , position , }

252 :	"n"
		- NEIGH  = { fwd_origin , n , transformation , v , - , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { fwd_origin , transformation , - , e , u , position , }
		- SUCC   = { }

252 :	"position"
		- NEIGH  = { fwd_origin , n , transformation , v , - , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { fwd_origin , transformation , - , e , u , position , }
		- SUCC   = { }

252 :	"v"
		- NEIGH  = { fwd_origin , n , transformation , v , - , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { fwd_origin , transformation , - , e , u , position , }
		- SUCC   = { }

252 :	"-"
		- NEIGH  = { fwd_origin , n , transformation , v , - , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { fwd_origin , transformation , - , e , u , position , }
		- SUCC   = { }

252 :	"transformation"
		- NEIGH  = { fwd_origin , n , transformation , v , - , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { fwd_origin , transformation , - , e , u , position , }
		- SUCC   = { }

252 :	"fwd_origin"
		- NEIGH  = { fwd_origin , n , transformation , v , - , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { fwd_origin , transformation , - , e , u , position , }
		- SUCC   = { }

252 :	"v"
		- NEIGH  = { fwd_origin , n , transformation , v , - , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { fwd_origin , transformation , - , e , u , position , }
		- SUCC   = { }

254 :	"tcx"
		- NEIGH  = { sz , inv_u , + , transformation , tcx , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { + , transformation , sz , inv_v , tcy , }

254 :	"transformation"
		- NEIGH  = { sz , inv_u , + , transformation , tcx , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { + , transformation , sz , inv_v , tcy , }

254 :	"inv_u"
		- NEIGH  = { sz , inv_u , + , transformation , tcx , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { + , transformation , sz , inv_v , tcy , }

254 :	"+"
		- NEIGH  = { sz , inv_u , + , transformation , tcx , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { + , transformation , sz , inv_v , tcy , }

254 :	"sz"
		- NEIGH  = { sz , inv_u , + , transformation , tcx , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { + , transformation , sz , inv_v , tcy , }

255 :	"tcy"
		- NEIGH  = { + , transformation , sz , inv_v , tcy , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { sz , inv_u , + , transformation , tcx , }
		- SUCC   = { inv_origin , transformation , - , e , u , position , }

255 :	"transformation"
		- NEIGH  = { + , transformation , sz , inv_v , tcy , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { sz , inv_u , + , transformation , tcx , }
		- SUCC   = { inv_origin , transformation , - , e , u , position , }

255 :	"inv_v"
		- NEIGH  = { + , transformation , sz , inv_v , tcy , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { sz , inv_u , + , transformation , tcx , }
		- SUCC   = { inv_origin , transformation , - , e , u , position , }

255 :	"+"
		- NEIGH  = { + , transformation , sz , inv_v , tcy , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { sz , inv_u , + , transformation , tcx , }
		- SUCC   = { inv_origin , transformation , - , e , u , position , }

255 :	"sz"
		- NEIGH  = { + , transformation , sz , inv_v , tcy , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { sz , inv_u , + , transformation , tcx , }
		- SUCC   = { inv_origin , transformation , - , e , u , position , }

256 :	"e"
		- NEIGH  = { inv_origin , transformation , - , e , u , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { + , transformation , sz , inv_v , tcy , }
		- SUCC   = { inv_origin , n , transformation , v , - , position , }

256 :	"position"
		- NEIGH  = { inv_origin , transformation , - , e , u , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { + , transformation , sz , inv_v , tcy , }
		- SUCC   = { inv_origin , n , transformation , v , - , position , }

256 :	"u"
		- NEIGH  = { inv_origin , transformation , - , e , u , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { + , transformation , sz , inv_v , tcy , }
		- SUCC   = { inv_origin , n , transformation , v , - , position , }

256 :	"-"
		- NEIGH  = { inv_origin , transformation , - , e , u , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { + , transformation , sz , inv_v , tcy , }
		- SUCC   = { inv_origin , n , transformation , v , - , position , }

256 :	"transformation"
		- NEIGH  = { inv_origin , transformation , - , e , u , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { + , transformation , sz , inv_v , tcy , }
		- SUCC   = { inv_origin , n , transformation , v , - , position , }

256 :	"inv_origin"
		- NEIGH  = { inv_origin , transformation , - , e , u , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { + , transformation , sz , inv_v , tcy , }
		- SUCC   = { inv_origin , n , transformation , v , - , position , }

256 :	"u"
		- NEIGH  = { inv_origin , transformation , - , e , u , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { + , transformation , sz , inv_v , tcy , }
		- SUCC   = { inv_origin , n , transformation , v , - , position , }

257 :	"n"
		- NEIGH  = { inv_origin , n , transformation , v , - , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { inv_origin , transformation , - , e , u , position , }
		- SUCC   = { }

257 :	"position"
		- NEIGH  = { inv_origin , n , transformation , v , - , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { inv_origin , transformation , - , e , u , position , }
		- SUCC   = { }

257 :	"v"
		- NEIGH  = { inv_origin , n , transformation , v , - , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { inv_origin , transformation , - , e , u , position , }
		- SUCC   = { }

257 :	"-"
		- NEIGH  = { inv_origin , n , transformation , v , - , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { inv_origin , transformation , - , e , u , position , }
		- SUCC   = { }

257 :	"transformation"
		- NEIGH  = { inv_origin , n , transformation , v , - , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { inv_origin , transformation , - , e , u , position , }
		- SUCC   = { }

257 :	"inv_origin"
		- NEIGH  = { inv_origin , n , transformation , v , - , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { inv_origin , transformation , - , e , u , position , }
		- SUCC   = { }

257 :	"v"
		- NEIGH  = { inv_origin , n , transformation , v , - , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { inv_origin , transformation , - , e , u , position , }
		- SUCC   = { }

260 :	"if"
		- NEIGH  = { || , e , range , > , n , fabs , if , }
		- PARENT = { }
		- CHILD  = { position , for , tcy , * , E , v , tcx , u , c , N , transformation , -- , P , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , order , g , return , r , proj_errno_set , > , uv_error , }
		- PRED   = { == , direction , PJ_FWD , if , }
		- SUCC   = { position , return , }

260 :	"fabs"
		- NEIGH  = { || , e , range , > , n , fabs , if , }
		- PARENT = { }
		- CHILD  = { position , for , tcy , * , E , v , tcx , u , c , N , transformation , -- , P , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , order , g , return , r , proj_errno_set , > , uv_error , }
		- PRED   = { == , direction , PJ_FWD , if , }
		- SUCC   = { position , return , }

260 :	"n"
		- NEIGH  = { || , e , range , > , n , fabs , if , }
		- PARENT = { }
		- CHILD  = { position , for , tcy , * , E , v , tcx , u , c , N , transformation , -- , P , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , order , g , return , r , proj_errno_set , > , uv_error , }
		- PRED   = { == , direction , PJ_FWD , if , }
		- SUCC   = { position , return , }

260 :	">"
		- NEIGH  = { || , e , range , > , n , fabs , if , }
		- PARENT = { }
		- CHILD  = { position , for , tcy , * , E , v , tcx , u , c , N , transformation , -- , P , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , order , g , return , r , proj_errno_set , > , uv_error , }
		- PRED   = { == , direction , PJ_FWD , if , }
		- SUCC   = { position , return , }

260 :	"range"
		- NEIGH  = { || , e , range , > , n , fabs , if , }
		- PARENT = { }
		- CHILD  = { position , for , tcy , * , E , v , tcx , u , c , N , transformation , -- , P , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , order , g , return , r , proj_errno_set , > , uv_error , }
		- PRED   = { == , direction , PJ_FWD , if , }
		- SUCC   = { position , return , }

260 :	"||"
		- NEIGH  = { || , e , range , > , n , fabs , if , }
		- PARENT = { }
		- CHILD  = { position , for , tcy , * , E , v , tcx , u , c , N , transformation , -- , P , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , order , g , return , r , proj_errno_set , > , uv_error , }
		- PRED   = { == , direction , PJ_FWD , if , }
		- SUCC   = { position , return , }

260 :	"fabs"
		- NEIGH  = { || , e , range , > , n , fabs , if , }
		- PARENT = { }
		- CHILD  = { position , for , tcy , * , E , v , tcx , u , c , N , transformation , -- , P , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , order , g , return , r , proj_errno_set , > , uv_error , }
		- PRED   = { == , direction , PJ_FWD , if , }
		- SUCC   = { position , return , }

260 :	"e"
		- NEIGH  = { || , e , range , > , n , fabs , if , }
		- PARENT = { }
		- CHILD  = { position , for , tcy , * , E , v , tcx , u , c , N , transformation , -- , P , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , order , g , return , r , proj_errno_set , > , uv_error , }
		- PRED   = { == , direction , PJ_FWD , if , }
		- SUCC   = { position , return , }

260 :	">"
		- NEIGH  = { || , e , range , > , n , fabs , if , }
		- PARENT = { }
		- CHILD  = { position , for , tcy , * , E , v , tcx , u , c , N , transformation , -- , P , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , order , g , return , r , proj_errno_set , > , uv_error , }
		- PRED   = { == , direction , PJ_FWD , if , }
		- SUCC   = { position , return , }

260 :	"range"
		- NEIGH  = { || , e , range , > , n , fabs , if , }
		- PARENT = { }
		- CHILD  = { position , for , tcy , * , E , v , tcx , u , c , N , transformation , -- , P , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , order , g , return , r , proj_errno_set , > , uv_error , }
		- PRED   = { == , direction , PJ_FWD , if , }
		- SUCC   = { position , return , }

261 :	"proj_errno_set"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { uv_error , return , }

261 :	"P"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { uv_error , return , }

261 :	"PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { uv_error , return , }

262 :	"return"
		- NEIGH  = { uv_error , return , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { }
		- PRED   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- SUCC   = { }

262 :	"uv_error"
		- NEIGH  = { uv_error , return , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { }
		- PRED   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- SUCC   = { }

267 :	"g"
		- NEIGH  = { order , transformation , g , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { g , c , r , }

267 :	"transformation"
		- NEIGH  = { order , transformation , g , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { g , c , r , }

267 :	"order"
		- NEIGH  = { order , transformation , g , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { g , c , r , }

268 :	"r"
		- NEIGH  = { g , c , r , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { }
		- PRED   = { order , transformation , g , }
		- SUCC   = { E , N , v , u , }

268 :	"g"
		- NEIGH  = { g , c , r , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { }
		- PRED   = { order , transformation , g , }
		- SUCC   = { E , N , v , u , }

268 :	"c"
		- NEIGH  = { g , c , r , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { }
		- PRED   = { order , transformation , g , }
		- SUCC   = { E , N , v , u , }

269 :	"u"
		- NEIGH  = { E , N , v , u , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { }
		- PRED   = { g , c , r , }
		- SUCC   = { tcy , -- , * , N , }

269 :	"v"
		- NEIGH  = { E , N , v , u , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { }
		- PRED   = { g , c , r , }
		- SUCC   = { tcy , -- , * , N , }

269 :	"N"
		- NEIGH  = { E , N , v , u , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { }
		- PRED   = { g , c , r , }
		- SUCC   = { tcy , -- , * , N , }

269 :	"E"
		- NEIGH  = { E , N , v , u , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { }
		- PRED   = { g , c , r , }
		- SUCC   = { tcy , -- , * , N , }

272 :	"N"
		- NEIGH  = { tcy , -- , * , N , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { }
		- PRED   = { E , N , v , u , }
		- SUCC   = { tcx , -- , * , E , }

272 :	"*"
		- NEIGH  = { tcy , -- , * , N , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { }
		- PRED   = { E , N , v , u , }
		- SUCC   = { tcx , -- , * , E , }

272 :	"--"
		- NEIGH  = { tcy , -- , * , N , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { }
		- PRED   = { E , N , v , u , }
		- SUCC   = { tcx , -- , * , E , }

272 :	"tcy"
		- NEIGH  = { tcy , -- , * , N , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { }
		- PRED   = { E , N , v , u , }
		- SUCC   = { tcx , -- , * , E , }

273 :	"E"
		- NEIGH  = { tcx , -- , * , E , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { }
		- PRED   = { tcy , -- , * , N , }
		- SUCC   = { > , -- , r , for , }

273 :	"*"
		- NEIGH  = { tcx , -- , * , E , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { }
		- PRED   = { tcy , -- , * , N , }
		- SUCC   = { > , -- , r , for , }

273 :	"--"
		- NEIGH  = { tcx , -- , * , E , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { }
		- PRED   = { tcy , -- , * , N , }
		- SUCC   = { > , -- , r , for , }

273 :	"tcx"
		- NEIGH  = { tcx , -- , * , E , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { }
		- PRED   = { tcy , -- , * , N , }
		- SUCC   = { > , -- , r , for , }

274 :	"for"
		- NEIGH  = { > , -- , r , for , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { E , + , N , >= , g , for , r , n , u , tcx , tcy , e , -- , v , * , c , }
		- PRED   = { tcx , -- , * , E , }
		- SUCC   = { E , u , position , }

274 :	"r"
		- NEIGH  = { > , -- , r , for , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { E , + , N , >= , g , for , r , n , u , tcx , tcy , e , -- , v , * , c , }
		- PRED   = { tcx , -- , * , E , }
		- SUCC   = { E , u , position , }

274 :	">"
		- NEIGH  = { > , -- , r , for , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { E , + , N , >= , g , for , r , n , u , tcx , tcy , e , -- , v , * , c , }
		- PRED   = { tcx , -- , * , E , }
		- SUCC   = { E , u , position , }

274 :	"r"
		- NEIGH  = { > , -- , r , for , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { E , + , N , >= , g , for , r , n , u , tcx , tcy , e , -- , v , * , c , }
		- PRED   = { tcx , -- , * , E , }
		- SUCC   = { E , u , position , }

274 :	"--"
		- NEIGH  = { > , -- , r , for , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { E , + , N , >= , g , for , r , n , u , tcx , tcy , e , -- , v , * , c , }
		- PRED   = { tcx , -- , * , E , }
		- SUCC   = { E , u , position , }

275 :	"u"
		- NEIGH  = { tcy , -- , * , u , }
		- PARENT = { > , -- , r , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { tcx , -- , * , v , }

275 :	"*"
		- NEIGH  = { tcy , -- , * , u , }
		- PARENT = { > , -- , r , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { tcx , -- , * , v , }

275 :	"--"
		- NEIGH  = { tcy , -- , * , u , }
		- PARENT = { > , -- , r , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { tcx , -- , * , v , }

275 :	"tcy"
		- NEIGH  = { tcy , -- , * , u , }
		- PARENT = { > , -- , r , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { tcx , -- , * , v , }

276 :	"v"
		- NEIGH  = { tcx , -- , * , v , }
		- PARENT = { > , -- , r , for , }
		- CHILD  = { }
		- PRED   = { tcy , -- , * , u , }
		- SUCC   = { -- , >= , r , c , g , for , }

276 :	"*"
		- NEIGH  = { tcx , -- , * , v , }
		- PARENT = { > , -- , r , for , }
		- CHILD  = { }
		- PRED   = { tcy , -- , * , u , }
		- SUCC   = { -- , >= , r , c , g , for , }

276 :	"--"
		- NEIGH  = { tcx , -- , * , v , }
		- PARENT = { > , -- , r , for , }
		- CHILD  = { }
		- PRED   = { tcy , -- , * , u , }
		- SUCC   = { -- , >= , r , c , g , for , }

276 :	"tcx"
		- NEIGH  = { tcx , -- , * , v , }
		- PARENT = { > , -- , r , for , }
		- CHILD  = { }
		- PRED   = { tcy , -- , * , u , }
		- SUCC   = { -- , >= , r , c , g , for , }

277 :	"for"
		- NEIGH  = { -- , >= , r , c , g , for , }
		- PARENT = { > , -- , r , for , }
		- CHILD  = { tcx , tcy , + , * , v , -- , n , e , u , }
		- PRED   = { tcx , -- , * , v , }
		- SUCC   = { + , u , e , * , N , }

277 :	"c"
		- NEIGH  = { -- , >= , r , c , g , for , }
		- PARENT = { > , -- , r , for , }
		- CHILD  = { tcx , tcy , + , * , v , -- , n , e , u , }
		- PRED   = { tcx , -- , * , v , }
		- SUCC   = { + , u , e , * , N , }

277 :	"g"
		- NEIGH  = { -- , >= , r , c , g , for , }
		- PARENT = { > , -- , r , for , }
		- CHILD  = { tcx , tcy , + , * , v , -- , n , e , u , }
		- PRED   = { tcx , -- , * , v , }
		- SUCC   = { + , u , e , * , N , }

277 :	"c"
		- NEIGH  = { -- , >= , r , c , g , for , }
		- PARENT = { > , -- , r , for , }
		- CHILD  = { tcx , tcy , + , * , v , -- , n , e , u , }
		- PRED   = { tcx , -- , * , v , }
		- SUCC   = { + , u , e , * , N , }

277 :	">="
		- NEIGH  = { -- , >= , r , c , g , for , }
		- PARENT = { > , -- , r , for , }
		- CHILD  = { tcx , tcy , + , * , v , -- , n , e , u , }
		- PRED   = { tcx , -- , * , v , }
		- SUCC   = { + , u , e , * , N , }

277 :	"r"
		- NEIGH  = { -- , >= , r , c , g , for , }
		- PARENT = { > , -- , r , for , }
		- CHILD  = { tcx , tcy , + , * , v , -- , n , e , u , }
		- PRED   = { tcx , -- , * , v , }
		- SUCC   = { + , u , e , * , N , }

277 :	"c"
		- NEIGH  = { -- , >= , r , c , g , for , }
		- PARENT = { > , -- , r , for , }
		- CHILD  = { tcx , tcy , + , * , v , -- , n , e , u , }
		- PRED   = { tcx , -- , * , v , }
		- SUCC   = { + , u , e , * , N , }

277 :	"--"
		- NEIGH  = { -- , >= , r , c , g , for , }
		- PARENT = { > , -- , r , for , }
		- CHILD  = { tcx , tcy , + , * , v , -- , n , e , u , }
		- PRED   = { tcx , -- , * , v , }
		- SUCC   = { + , u , e , * , N , }

278 :	"u"
		- NEIGH  = { tcy , + , * , -- , n , u , }
		- PARENT = { -- , >= , r , c , g , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { tcx , v , -- , + , e , * , }

278 :	"n"
		- NEIGH  = { tcy , + , * , -- , n , u , }
		- PARENT = { -- , >= , r , c , g , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { tcx , v , -- , + , e , * , }

278 :	"*"
		- NEIGH  = { tcy , + , * , -- , n , u , }
		- PARENT = { -- , >= , r , c , g , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { tcx , v , -- , + , e , * , }

278 :	"u"
		- NEIGH  = { tcy , + , * , -- , n , u , }
		- PARENT = { -- , >= , r , c , g , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { tcx , v , -- , + , e , * , }

278 :	"+"
		- NEIGH  = { tcy , + , * , -- , n , u , }
		- PARENT = { -- , >= , r , c , g , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { tcx , v , -- , + , e , * , }

278 :	"*"
		- NEIGH  = { tcy , + , * , -- , n , u , }
		- PARENT = { -- , >= , r , c , g , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { tcx , v , -- , + , e , * , }

278 :	"--"
		- NEIGH  = { tcy , + , * , -- , n , u , }
		- PARENT = { -- , >= , r , c , g , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { tcx , v , -- , + , e , * , }

278 :	"tcy"
		- NEIGH  = { tcy , + , * , -- , n , u , }
		- PARENT = { -- , >= , r , c , g , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { tcx , v , -- , + , e , * , }

279 :	"v"
		- NEIGH  = { tcx , v , -- , + , e , * , }
		- PARENT = { -- , >= , r , c , g , for , }
		- CHILD  = { }
		- PRED   = { tcy , + , * , -- , n , u , }
		- SUCC   = { }

279 :	"e"
		- NEIGH  = { tcx , v , -- , + , e , * , }
		- PARENT = { -- , >= , r , c , g , for , }
		- CHILD  = { }
		- PRED   = { tcy , + , * , -- , n , u , }
		- SUCC   = { }

279 :	"*"
		- NEIGH  = { tcx , v , -- , + , e , * , }
		- PARENT = { -- , >= , r , c , g , for , }
		- CHILD  = { }
		- PRED   = { tcy , + , * , -- , n , u , }
		- SUCC   = { }

279 :	"v"
		- NEIGH  = { tcx , v , -- , + , e , * , }
		- PARENT = { -- , >= , r , c , g , for , }
		- CHILD  = { }
		- PRED   = { tcy , + , * , -- , n , u , }
		- SUCC   = { }

279 :	"+"
		- NEIGH  = { tcx , v , -- , + , e , * , }
		- PARENT = { -- , >= , r , c , g , for , }
		- CHILD  = { }
		- PRED   = { tcy , + , * , -- , n , u , }
		- SUCC   = { }

279 :	"*"
		- NEIGH  = { tcx , v , -- , + , e , * , }
		- PARENT = { -- , >= , r , c , g , for , }
		- CHILD  = { }
		- PRED   = { tcy , + , * , -- , n , u , }
		- SUCC   = { }

279 :	"--"
		- NEIGH  = { tcx , v , -- , + , e , * , }
		- PARENT = { -- , >= , r , c , g , for , }
		- CHILD  = { }
		- PRED   = { tcy , + , * , -- , n , u , }
		- SUCC   = { }

279 :	"tcx"
		- NEIGH  = { tcx , v , -- , + , e , * , }
		- PARENT = { -- , >= , r , c , g , for , }
		- CHILD  = { }
		- PRED   = { tcy , + , * , -- , n , u , }
		- SUCC   = { }

281 :	"N"
		- NEIGH  = { + , u , e , * , N , }
		- PARENT = { > , -- , r , for , }
		- CHILD  = { }
		- PRED   = { -- , >= , r , c , g , for , }
		- SUCC   = { v , * , n , + , E , }

281 :	"e"
		- NEIGH  = { + , u , e , * , N , }
		- PARENT = { > , -- , r , for , }
		- CHILD  = { }
		- PRED   = { -- , >= , r , c , g , for , }
		- SUCC   = { v , * , n , + , E , }

281 :	"*"
		- NEIGH  = { + , u , e , * , N , }
		- PARENT = { > , -- , r , for , }
		- CHILD  = { }
		- PRED   = { -- , >= , r , c , g , for , }
		- SUCC   = { v , * , n , + , E , }

281 :	"N"
		- NEIGH  = { + , u , e , * , N , }
		- PARENT = { > , -- , r , for , }
		- CHILD  = { }
		- PRED   = { -- , >= , r , c , g , for , }
		- SUCC   = { v , * , n , + , E , }

281 :	"+"
		- NEIGH  = { + , u , e , * , N , }
		- PARENT = { > , -- , r , for , }
		- CHILD  = { }
		- PRED   = { -- , >= , r , c , g , for , }
		- SUCC   = { v , * , n , + , E , }

281 :	"u"
		- NEIGH  = { + , u , e , * , N , }
		- PARENT = { > , -- , r , for , }
		- CHILD  = { }
		- PRED   = { -- , >= , r , c , g , for , }
		- SUCC   = { v , * , n , + , E , }

282 :	"E"
		- NEIGH  = { v , * , n , + , E , }
		- PARENT = { > , -- , r , for , }
		- CHILD  = { }
		- PRED   = { + , u , e , * , N , }
		- SUCC   = { }

282 :	"n"
		- NEIGH  = { v , * , n , + , E , }
		- PARENT = { > , -- , r , for , }
		- CHILD  = { }
		- PRED   = { + , u , e , * , N , }
		- SUCC   = { }

282 :	"*"
		- NEIGH  = { v , * , n , + , E , }
		- PARENT = { > , -- , r , for , }
		- CHILD  = { }
		- PRED   = { + , u , e , * , N , }
		- SUCC   = { }

282 :	"E"
		- NEIGH  = { v , * , n , + , E , }
		- PARENT = { > , -- , r , for , }
		- CHILD  = { }
		- PRED   = { + , u , e , * , N , }
		- SUCC   = { }

282 :	"+"
		- NEIGH  = { v , * , n , + , E , }
		- PARENT = { > , -- , r , for , }
		- CHILD  = { }
		- PRED   = { + , u , e , * , N , }
		- SUCC   = { }

282 :	"v"
		- NEIGH  = { v , * , n , + , E , }
		- PARENT = { > , -- , r , for , }
		- CHILD  = { }
		- PRED   = { + , u , e , * , N , }
		- SUCC   = { }

285 :	"position"
		- NEIGH  = { E , u , position , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { }
		- PRED   = { > , -- , r , for , }
		- SUCC   = { N , v , position , }

285 :	"u"
		- NEIGH  = { E , u , position , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { }
		- PRED   = { > , -- , r , for , }
		- SUCC   = { N , v , position , }

285 :	"E"
		- NEIGH  = { E , u , position , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { }
		- PRED   = { > , -- , r , for , }
		- SUCC   = { N , v , position , }

286 :	"position"
		- NEIGH  = { N , v , position , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { }
		- PRED   = { E , u , position , }
		- SUCC   = { }

286 :	"v"
		- NEIGH  = { N , v , position , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { }
		- PRED   = { E , u , position , }
		- SUCC   = { }

286 :	"N"
		- NEIGH  = { N , v , position , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { }
		- PRED   = { E , u , position , }
		- SUCC   = { }

289 :	"return"
		- NEIGH  = { position , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { || , e , range , > , n , fabs , if , }
		- SUCC   = { }

289 :	"position"
		- NEIGH  = { position , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { || , e , range , > , n , fabs , if , }
		- SUCC   = { }

298 :	"PJ_COORD"
		- NEIGH  = { PJ_COORD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

298 :	"horner_forward_4d"
		- NEIGH  = { horner_forward_4d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

298 :	"PJ_COORD"
		- NEIGH  = { PJ_COORD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

298 :	"point"
		- NEIGH  = { point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

298 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

298 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

298 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

299 :	"point"
		- NEIGH  = { PJ_FWD , * , HORNER , opaque , horner_func , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

299 :	"uv"
		- NEIGH  = { PJ_FWD , * , HORNER , opaque , horner_func , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

299 :	"horner_func"
		- NEIGH  = { PJ_FWD , * , HORNER , opaque , horner_func , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

299 :	"P"
		- NEIGH  = { PJ_FWD , * , HORNER , opaque , horner_func , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

299 :	"HORNER"
		- NEIGH  = { PJ_FWD , * , HORNER , opaque , horner_func , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

299 :	"*"
		- NEIGH  = { PJ_FWD , * , HORNER , opaque , horner_func , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

299 :	"P"
		- NEIGH  = { PJ_FWD , * , HORNER , opaque , horner_func , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

299 :	"opaque"
		- NEIGH  = { PJ_FWD , * , HORNER , opaque , horner_func , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

299 :	"PJ_FWD"
		- NEIGH  = { PJ_FWD , * , HORNER , opaque , horner_func , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

299 :	"point"
		- NEIGH  = { PJ_FWD , * , HORNER , opaque , horner_func , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

299 :	"uv"
		- NEIGH  = { PJ_FWD , * , HORNER , opaque , horner_func , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

300 :	"return"
		- NEIGH  = { point , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PJ_FWD , * , HORNER , opaque , horner_func , uv , P , point , }
		- SUCC   = { }

300 :	"point"
		- NEIGH  = { point , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PJ_FWD , * , HORNER , opaque , horner_func , uv , P , point , }
		- SUCC   = { }

303 :	"PJ_COORD"
		- NEIGH  = { PJ_COORD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

303 :	"horner_reverse_4d"
		- NEIGH  = { horner_reverse_4d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

303 :	"PJ_COORD"
		- NEIGH  = { PJ_COORD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

303 :	"point"
		- NEIGH  = { point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

303 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

303 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

303 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

304 :	"point"
		- NEIGH  = { PJ_INV , * , HORNER , opaque , horner_func , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

304 :	"uv"
		- NEIGH  = { PJ_INV , * , HORNER , opaque , horner_func , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

304 :	"horner_func"
		- NEIGH  = { PJ_INV , * , HORNER , opaque , horner_func , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

304 :	"P"
		- NEIGH  = { PJ_INV , * , HORNER , opaque , horner_func , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

304 :	"HORNER"
		- NEIGH  = { PJ_INV , * , HORNER , opaque , horner_func , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

304 :	"*"
		- NEIGH  = { PJ_INV , * , HORNER , opaque , horner_func , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

304 :	"P"
		- NEIGH  = { PJ_INV , * , HORNER , opaque , horner_func , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

304 :	"opaque"
		- NEIGH  = { PJ_INV , * , HORNER , opaque , horner_func , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

304 :	"PJ_INV"
		- NEIGH  = { PJ_INV , * , HORNER , opaque , horner_func , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

304 :	"point"
		- NEIGH  = { PJ_INV , * , HORNER , opaque , horner_func , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

304 :	"uv"
		- NEIGH  = { PJ_INV , * , HORNER , opaque , horner_func , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

305 :	"return"
		- NEIGH  = { point , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PJ_INV , * , HORNER , opaque , horner_func , uv , P , point , }
		- SUCC   = { }

305 :	"point"
		- NEIGH  = { point , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PJ_INV , * , HORNER , opaque , horner_func , uv , P , point , }
		- SUCC   = { }

312 :	"PJ_UV"
		- NEIGH  = { PJ_UV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

312 :	"complex_horner"
		- NEIGH  = { complex_horner , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

312 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

312 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

312 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

312 :	"HORNER"
		- NEIGH  = { HORNER , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

312 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

312 :	"transformation"
		- NEIGH  = { transformation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

312 :	"PJ_DIRECTION"
		- NEIGH  = { PJ_DIRECTION , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

312 :	"direction"
		- NEIGH  = { direction , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

312 :	"PJ_UV"
		- NEIGH  = { PJ_UV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

312 :	"position"
		- NEIGH  = { position , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

321 :	"sz"
		- NEIGH  = { sz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { c , cb , * , }

322 :	"*"
		- NEIGH  = { c , cb , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sz , }
		- SUCC   = { range , }

322 :	"c"
		- NEIGH  = { c , cb , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sz , }
		- SUCC   = { range , }

322 :	"*"
		- NEIGH  = { c , cb , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sz , }
		- SUCC   = { range , }

322 :	"cb"
		- NEIGH  = { c , cb , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sz , }
		- SUCC   = { range , }

323 :	"range"
		- NEIGH  = { range , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , cb , * , }
		- SUCC   = { E , N , w , e , n , }

324 :	"n"
		- NEIGH  = { E , N , w , e , n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { range , }
		- SUCC   = { uv_error , PJ_UV , }

324 :	"e"
		- NEIGH  = { E , N , w , e , n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { range , }
		- SUCC   = { uv_error , PJ_UV , }

324 :	"w"
		- NEIGH  = { E , N , w , e , n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { range , }
		- SUCC   = { uv_error , PJ_UV , }

324 :	"N"
		- NEIGH  = { E , N , w , e , n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { range , }
		- SUCC   = { uv_error , PJ_UV , }

324 :	"E"
		- NEIGH  = { E , N , w , e , n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { range , }
		- SUCC   = { uv_error , PJ_UV , }

325 :	"PJ_UV"
		- NEIGH  = { uv_error , PJ_UV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { E , N , w , e , n , }
		- SUCC   = { HUGE_VAL , v , u , uv_error , }

325 :	"uv_error"
		- NEIGH  = { uv_error , PJ_UV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { E , N , w , e , n , }
		- SUCC   = { HUGE_VAL , v , u , uv_error , }

326 :	"uv_error"
		- NEIGH  = { HUGE_VAL , v , u , uv_error , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { uv_error , PJ_UV , }
		- SUCC   = { transformation , == , if , }

326 :	"u"
		- NEIGH  = { HUGE_VAL , v , u , uv_error , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { uv_error , PJ_UV , }
		- SUCC   = { transformation , == , if , }

326 :	"uv_error"
		- NEIGH  = { HUGE_VAL , v , u , uv_error , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { uv_error , PJ_UV , }
		- SUCC   = { transformation , == , if , }

326 :	"v"
		- NEIGH  = { HUGE_VAL , v , u , uv_error , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { uv_error , PJ_UV , }
		- SUCC   = { transformation , == , if , }

326 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , v , u , uv_error , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { uv_error , PJ_UV , }
		- SUCC   = { transformation , == , if , }

328 :	"if"
		- NEIGH  = { transformation , == , if , }
		- PARENT = { }
		- CHILD  = { uv_error , return , }
		- PRED   = { HUGE_VAL , v , u , uv_error , }
		- SUCC   = { direction , switch , }

328 :	"=="
		- NEIGH  = { transformation , == , if , }
		- PARENT = { }
		- CHILD  = { uv_error , return , }
		- PRED   = { HUGE_VAL , v , u , uv_error , }
		- SUCC   = { direction , switch , }

328 :	"transformation"
		- NEIGH  = { transformation , == , if , }
		- PARENT = { }
		- CHILD  = { uv_error , return , }
		- PRED   = { HUGE_VAL , v , u , uv_error , }
		- SUCC   = { direction , switch , }

329 :	"return"
		- NEIGH  = { uv_error , return , }
		- PARENT = { transformation , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

329 :	"uv_error"
		- NEIGH  = { uv_error , return , }
		- PARENT = { transformation , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

332 :	"switch"
		- NEIGH  = { direction , switch , }
		- PARENT = { }
		- CHILD  = { uv_error , PJ_FWD , PJ_INV , break , return , position , PJ_IDENT , }
		- PRED   = { transformation , == , if , }
		- SUCC   = { order , + , transformation , * , sz , }

332 :	"direction"
		- NEIGH  = { direction , switch , }
		- PARENT = { }
		- CHILD  = { uv_error , PJ_FWD , PJ_INV , break , return , position , PJ_IDENT , }
		- PRED   = { transformation , == , if , }
		- SUCC   = { order , + , transformation , * , sz , }

333 :	"PJ_IDENT"
		- NEIGH  = { PJ_IDENT , }
		- PARENT = { direction , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { position , return , }

334 :	"return"
		- NEIGH  = { position , return , }
		- PARENT = { direction , switch , }
		- CHILD  = { }
		- PRED   = { PJ_IDENT , }
		- SUCC   = { PJ_FWD , }

334 :	"position"
		- NEIGH  = { position , return , }
		- PARENT = { direction , switch , }
		- CHILD  = { }
		- PRED   = { PJ_IDENT , }
		- SUCC   = { PJ_FWD , }

335 :	"PJ_FWD"
		- NEIGH  = { PJ_FWD , }
		- PARENT = { direction , switch , }
		- CHILD  = { }
		- PRED   = { position , return , }
		- SUCC   = { PJ_INV , }

336 :	"PJ_INV"
		- NEIGH  = { PJ_INV , }
		- PARENT = { direction , switch , }
		- CHILD  = { }
		- PRED   = { PJ_FWD , }
		- SUCC   = { break , }

337 :	"break"
		- NEIGH  = { break , }
		- PARENT = { direction , switch , }
		- CHILD  = { }
		- PRED   = { PJ_INV , }
		- SUCC   = { }

339 :	"return"
		- NEIGH  = { uv_error , return , }
		- PARENT = { direction , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

339 :	"uv_error"
		- NEIGH  = { uv_error , return , }
		- PARENT = { direction , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

343 :	"sz"
		- NEIGH  = { order , + , transformation , * , sz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { direction , switch , }
		- SUCC   = { transformation , range , }

343 :	"*"
		- NEIGH  = { order , + , transformation , * , sz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { direction , switch , }
		- SUCC   = { transformation , range , }

343 :	"transformation"
		- NEIGH  = { order , + , transformation , * , sz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { direction , switch , }
		- SUCC   = { transformation , range , }

343 :	"order"
		- NEIGH  = { order , + , transformation , * , sz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { direction , switch , }
		- SUCC   = { transformation , range , }

343 :	"+"
		- NEIGH  = { order , + , transformation , * , sz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { direction , switch , }
		- SUCC   = { transformation , range , }

344 :	"range"
		- NEIGH  = { transformation , range , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { order , + , transformation , * , sz , }
		- SUCC   = { == , direction , PJ_FWD , if , }

344 :	"transformation"
		- NEIGH  = { transformation , range , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { order , + , transformation , * , sz , }
		- SUCC   = { == , direction , PJ_FWD , if , }

344 :	"range"
		- NEIGH  = { transformation , range , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { order , + , transformation , * , sz , }
		- SUCC   = { == , direction , PJ_FWD , if , }

346 :	"if"
		- NEIGH  = { == , direction , PJ_FWD , if , }
		- PARENT = { }
		- CHILD  = { inv_c , vneg , uneg , v , - , position , sz , n , fwd_c , u , e , inv_origin , c , + , transformation , if , fwd_origin , cb , }
		- PRED   = { transformation , range , }
		- SUCC   = { || , e , range , > , n , fabs , if , }

346 :	"direction"
		- NEIGH  = { == , direction , PJ_FWD , if , }
		- PARENT = { }
		- CHILD  = { inv_c , vneg , uneg , v , - , position , sz , n , fwd_c , u , e , inv_origin , c , + , transformation , if , fwd_origin , cb , }
		- PRED   = { transformation , range , }
		- SUCC   = { || , e , range , > , n , fabs , if , }

346 :	"=="
		- NEIGH  = { == , direction , PJ_FWD , if , }
		- PARENT = { }
		- CHILD  = { inv_c , vneg , uneg , v , - , position , sz , n , fwd_c , u , e , inv_origin , c , + , transformation , if , fwd_origin , cb , }
		- PRED   = { transformation , range , }
		- SUCC   = { || , e , range , > , n , fabs , if , }

346 :	"PJ_FWD"
		- NEIGH  = { == , direction , PJ_FWD , if , }
		- PARENT = { }
		- CHILD  = { inv_c , vneg , uneg , v , - , position , sz , n , fwd_c , u , e , inv_origin , c , + , transformation , if , fwd_origin , cb , }
		- PRED   = { transformation , range , }
		- SUCC   = { || , e , range , > , n , fabs , if , }

347 :	"cb"
		- NEIGH  = { fwd_c , transformation , cb , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { + , cb , sz , c , }

347 :	"transformation"
		- NEIGH  = { fwd_c , transformation , cb , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { + , cb , sz , c , }

347 :	"fwd_c"
		- NEIGH  = { fwd_c , transformation , cb , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { + , cb , sz , c , }

348 :	"c"
		- NEIGH  = { + , cb , sz , c , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { fwd_c , transformation , cb , }
		- SUCC   = { fwd_origin , transformation , - , e , u , position , }

348 :	"cb"
		- NEIGH  = { + , cb , sz , c , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { fwd_c , transformation , cb , }
		- SUCC   = { fwd_origin , transformation , - , e , u , position , }

348 :	"+"
		- NEIGH  = { + , cb , sz , c , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { fwd_c , transformation , cb , }
		- SUCC   = { fwd_origin , transformation , - , e , u , position , }

348 :	"sz"
		- NEIGH  = { + , cb , sz , c , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { fwd_c , transformation , cb , }
		- SUCC   = { fwd_origin , transformation , - , e , u , position , }

349 :	"e"
		- NEIGH  = { fwd_origin , transformation , - , e , u , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { + , cb , sz , c , }
		- SUCC   = { fwd_origin , n , transformation , v , - , position , }

349 :	"position"
		- NEIGH  = { fwd_origin , transformation , - , e , u , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { + , cb , sz , c , }
		- SUCC   = { fwd_origin , n , transformation , v , - , position , }

349 :	"u"
		- NEIGH  = { fwd_origin , transformation , - , e , u , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { + , cb , sz , c , }
		- SUCC   = { fwd_origin , n , transformation , v , - , position , }

349 :	"-"
		- NEIGH  = { fwd_origin , transformation , - , e , u , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { + , cb , sz , c , }
		- SUCC   = { fwd_origin , n , transformation , v , - , position , }

349 :	"transformation"
		- NEIGH  = { fwd_origin , transformation , - , e , u , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { + , cb , sz , c , }
		- SUCC   = { fwd_origin , n , transformation , v , - , position , }

349 :	"fwd_origin"
		- NEIGH  = { fwd_origin , transformation , - , e , u , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { + , cb , sz , c , }
		- SUCC   = { fwd_origin , n , transformation , v , - , position , }

349 :	"u"
		- NEIGH  = { fwd_origin , transformation , - , e , u , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { + , cb , sz , c , }
		- SUCC   = { fwd_origin , n , transformation , v , - , position , }

350 :	"n"
		- NEIGH  = { fwd_origin , n , transformation , v , - , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { fwd_origin , transformation , - , e , u , position , }
		- SUCC   = { uneg , transformation , if , }

350 :	"position"
		- NEIGH  = { fwd_origin , n , transformation , v , - , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { fwd_origin , transformation , - , e , u , position , }
		- SUCC   = { uneg , transformation , if , }

350 :	"v"
		- NEIGH  = { fwd_origin , n , transformation , v , - , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { fwd_origin , transformation , - , e , u , position , }
		- SUCC   = { uneg , transformation , if , }

350 :	"-"
		- NEIGH  = { fwd_origin , n , transformation , v , - , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { fwd_origin , transformation , - , e , u , position , }
		- SUCC   = { uneg , transformation , if , }

350 :	"transformation"
		- NEIGH  = { fwd_origin , n , transformation , v , - , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { fwd_origin , transformation , - , e , u , position , }
		- SUCC   = { uneg , transformation , if , }

350 :	"fwd_origin"
		- NEIGH  = { fwd_origin , n , transformation , v , - , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { fwd_origin , transformation , - , e , u , position , }
		- SUCC   = { uneg , transformation , if , }

350 :	"v"
		- NEIGH  = { fwd_origin , n , transformation , v , - , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { fwd_origin , transformation , - , e , u , position , }
		- SUCC   = { uneg , transformation , if , }

351 :	"if"
		- NEIGH  = { uneg , transformation , if , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { - , e , }
		- PRED   = { fwd_origin , n , transformation , v , - , position , }
		- SUCC   = { vneg , transformation , if , }

351 :	"transformation"
		- NEIGH  = { uneg , transformation , if , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { - , e , }
		- PRED   = { fwd_origin , n , transformation , v , - , position , }
		- SUCC   = { vneg , transformation , if , }

351 :	"uneg"
		- NEIGH  = { uneg , transformation , if , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { - , e , }
		- PRED   = { fwd_origin , n , transformation , v , - , position , }
		- SUCC   = { vneg , transformation , if , }

352 :	"e"
		- NEIGH  = { - , e , }
		- PARENT = { uneg , transformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

352 :	"-"
		- NEIGH  = { - , e , }
		- PARENT = { uneg , transformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

352 :	"e"
		- NEIGH  = { - , e , }
		- PARENT = { uneg , transformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

353 :	"if"
		- NEIGH  = { vneg , transformation , if , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { - , n , }
		- PRED   = { uneg , transformation , if , }
		- SUCC   = { }

353 :	"transformation"
		- NEIGH  = { vneg , transformation , if , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { - , n , }
		- PRED   = { uneg , transformation , if , }
		- SUCC   = { }

353 :	"vneg"
		- NEIGH  = { vneg , transformation , if , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { - , n , }
		- PRED   = { uneg , transformation , if , }
		- SUCC   = { }

354 :	"n"
		- NEIGH  = { - , n , }
		- PARENT = { vneg , transformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

354 :	"-"
		- NEIGH  = { - , n , }
		- PARENT = { vneg , transformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

354 :	"n"
		- NEIGH  = { - , n , }
		- PARENT = { vneg , transformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

356 :	"cb"
		- NEIGH  = { inv_c , transformation , cb , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { + , cb , sz , c , }

356 :	"transformation"
		- NEIGH  = { inv_c , transformation , cb , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { + , cb , sz , c , }

356 :	"inv_c"
		- NEIGH  = { inv_c , transformation , cb , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { + , cb , sz , c , }

357 :	"c"
		- NEIGH  = { + , cb , sz , c , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { inv_c , transformation , cb , }
		- SUCC   = { inv_origin , transformation , - , e , u , position , }

357 :	"cb"
		- NEIGH  = { + , cb , sz , c , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { inv_c , transformation , cb , }
		- SUCC   = { inv_origin , transformation , - , e , u , position , }

357 :	"+"
		- NEIGH  = { + , cb , sz , c , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { inv_c , transformation , cb , }
		- SUCC   = { inv_origin , transformation , - , e , u , position , }

357 :	"sz"
		- NEIGH  = { + , cb , sz , c , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { inv_c , transformation , cb , }
		- SUCC   = { inv_origin , transformation , - , e , u , position , }

358 :	"e"
		- NEIGH  = { inv_origin , transformation , - , e , u , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { + , cb , sz , c , }
		- SUCC   = { inv_origin , n , transformation , v , - , position , }

358 :	"position"
		- NEIGH  = { inv_origin , transformation , - , e , u , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { + , cb , sz , c , }
		- SUCC   = { inv_origin , n , transformation , v , - , position , }

358 :	"u"
		- NEIGH  = { inv_origin , transformation , - , e , u , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { + , cb , sz , c , }
		- SUCC   = { inv_origin , n , transformation , v , - , position , }

358 :	"-"
		- NEIGH  = { inv_origin , transformation , - , e , u , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { + , cb , sz , c , }
		- SUCC   = { inv_origin , n , transformation , v , - , position , }

358 :	"transformation"
		- NEIGH  = { inv_origin , transformation , - , e , u , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { + , cb , sz , c , }
		- SUCC   = { inv_origin , n , transformation , v , - , position , }

358 :	"inv_origin"
		- NEIGH  = { inv_origin , transformation , - , e , u , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { + , cb , sz , c , }
		- SUCC   = { inv_origin , n , transformation , v , - , position , }

358 :	"u"
		- NEIGH  = { inv_origin , transformation , - , e , u , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { + , cb , sz , c , }
		- SUCC   = { inv_origin , n , transformation , v , - , position , }

359 :	"n"
		- NEIGH  = { inv_origin , n , transformation , v , - , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { inv_origin , transformation , - , e , u , position , }
		- SUCC   = { uneg , transformation , if , }

359 :	"position"
		- NEIGH  = { inv_origin , n , transformation , v , - , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { inv_origin , transformation , - , e , u , position , }
		- SUCC   = { uneg , transformation , if , }

359 :	"v"
		- NEIGH  = { inv_origin , n , transformation , v , - , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { inv_origin , transformation , - , e , u , position , }
		- SUCC   = { uneg , transformation , if , }

359 :	"-"
		- NEIGH  = { inv_origin , n , transformation , v , - , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { inv_origin , transformation , - , e , u , position , }
		- SUCC   = { uneg , transformation , if , }

359 :	"transformation"
		- NEIGH  = { inv_origin , n , transformation , v , - , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { inv_origin , transformation , - , e , u , position , }
		- SUCC   = { uneg , transformation , if , }

359 :	"inv_origin"
		- NEIGH  = { inv_origin , n , transformation , v , - , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { inv_origin , transformation , - , e , u , position , }
		- SUCC   = { uneg , transformation , if , }

359 :	"v"
		- NEIGH  = { inv_origin , n , transformation , v , - , position , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { }
		- PRED   = { inv_origin , transformation , - , e , u , position , }
		- SUCC   = { uneg , transformation , if , }

360 :	"if"
		- NEIGH  = { uneg , transformation , if , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { - , e , }
		- PRED   = { inv_origin , n , transformation , v , - , position , }
		- SUCC   = { vneg , transformation , if , }

360 :	"transformation"
		- NEIGH  = { uneg , transformation , if , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { - , e , }
		- PRED   = { inv_origin , n , transformation , v , - , position , }
		- SUCC   = { vneg , transformation , if , }

360 :	"uneg"
		- NEIGH  = { uneg , transformation , if , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { - , e , }
		- PRED   = { inv_origin , n , transformation , v , - , position , }
		- SUCC   = { vneg , transformation , if , }

361 :	"e"
		- NEIGH  = { - , e , }
		- PARENT = { uneg , transformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

361 :	"-"
		- NEIGH  = { - , e , }
		- PARENT = { uneg , transformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

361 :	"e"
		- NEIGH  = { - , e , }
		- PARENT = { uneg , transformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

362 :	"if"
		- NEIGH  = { vneg , transformation , if , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { - , n , }
		- PRED   = { uneg , transformation , if , }
		- SUCC   = { }

362 :	"transformation"
		- NEIGH  = { vneg , transformation , if , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { - , n , }
		- PRED   = { uneg , transformation , if , }
		- SUCC   = { }

362 :	"vneg"
		- NEIGH  = { vneg , transformation , if , }
		- PARENT = { == , direction , PJ_FWD , if , }
		- CHILD  = { - , n , }
		- PRED   = { uneg , transformation , if , }
		- SUCC   = { }

363 :	"n"
		- NEIGH  = { - , n , }
		- PARENT = { vneg , transformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

363 :	"-"
		- NEIGH  = { - , n , }
		- PARENT = { vneg , transformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

363 :	"n"
		- NEIGH  = { - , n , }
		- PARENT = { vneg , transformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

366 :	"if"
		- NEIGH  = { || , e , range , > , n , fabs , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , uv_error , proj_errno_set , }
		- PRED   = { == , direction , PJ_FWD , if , }
		- SUCC   = { c , -- , * , E , }

366 :	"fabs"
		- NEIGH  = { || , e , range , > , n , fabs , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , uv_error , proj_errno_set , }
		- PRED   = { == , direction , PJ_FWD , if , }
		- SUCC   = { c , -- , * , E , }

366 :	"n"
		- NEIGH  = { || , e , range , > , n , fabs , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , uv_error , proj_errno_set , }
		- PRED   = { == , direction , PJ_FWD , if , }
		- SUCC   = { c , -- , * , E , }

366 :	">"
		- NEIGH  = { || , e , range , > , n , fabs , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , uv_error , proj_errno_set , }
		- PRED   = { == , direction , PJ_FWD , if , }
		- SUCC   = { c , -- , * , E , }

366 :	"range"
		- NEIGH  = { || , e , range , > , n , fabs , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , uv_error , proj_errno_set , }
		- PRED   = { == , direction , PJ_FWD , if , }
		- SUCC   = { c , -- , * , E , }

366 :	"||"
		- NEIGH  = { || , e , range , > , n , fabs , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , uv_error , proj_errno_set , }
		- PRED   = { == , direction , PJ_FWD , if , }
		- SUCC   = { c , -- , * , E , }

366 :	"fabs"
		- NEIGH  = { || , e , range , > , n , fabs , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , uv_error , proj_errno_set , }
		- PRED   = { == , direction , PJ_FWD , if , }
		- SUCC   = { c , -- , * , E , }

366 :	"e"
		- NEIGH  = { || , e , range , > , n , fabs , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , uv_error , proj_errno_set , }
		- PRED   = { == , direction , PJ_FWD , if , }
		- SUCC   = { c , -- , * , E , }

366 :	">"
		- NEIGH  = { || , e , range , > , n , fabs , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , uv_error , proj_errno_set , }
		- PRED   = { == , direction , PJ_FWD , if , }
		- SUCC   = { c , -- , * , E , }

366 :	"range"
		- NEIGH  = { || , e , range , > , n , fabs , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , uv_error , proj_errno_set , }
		- PRED   = { == , direction , PJ_FWD , if , }
		- SUCC   = { c , -- , * , E , }

367 :	"proj_errno_set"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { uv_error , return , }

367 :	"P"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { uv_error , return , }

367 :	"PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { uv_error , return , }

368 :	"return"
		- NEIGH  = { uv_error , return , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { }
		- PRED   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- SUCC   = { }

368 :	"uv_error"
		- NEIGH  = { uv_error , return , }
		- PARENT = { || , e , range , > , n , fabs , if , }
		- CHILD  = { }
		- PRED   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- SUCC   = { }

372 :	"E"
		- NEIGH  = { c , -- , * , E , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { || , e , range , > , n , fabs , if , }
		- SUCC   = { c , -- , * , N , }

372 :	"*"
		- NEIGH  = { c , -- , * , E , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { || , e , range , > , n , fabs , if , }
		- SUCC   = { c , -- , * , N , }

372 :	"--"
		- NEIGH  = { c , -- , * , E , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { || , e , range , > , n , fabs , if , }
		- SUCC   = { c , -- , * , N , }

372 :	"c"
		- NEIGH  = { c , -- , * , E , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { || , e , range , > , n , fabs , if , }
		- SUCC   = { c , -- , * , N , }

373 :	"N"
		- NEIGH  = { c , -- , * , N , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , -- , * , E , }
		- SUCC   = { cb , c , > , while , }

373 :	"*"
		- NEIGH  = { c , -- , * , N , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , -- , * , E , }
		- SUCC   = { cb , c , > , while , }

373 :	"--"
		- NEIGH  = { c , -- , * , N , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , -- , * , E , }
		- SUCC   = { cb , c , > , while , }

373 :	"c"
		- NEIGH  = { c , -- , * , N , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , -- , * , E , }
		- SUCC   = { cb , c , > , while , }

374 :	"while"
		- NEIGH  = { cb , c , > , while , }
		- PARENT = { }
		- CHILD  = { - , c , N , e , w , + , -- , n , E , * , }
		- PRED   = { c , -- , * , N , }
		- SUCC   = { E , u , position , }

374 :	"c"
		- NEIGH  = { cb , c , > , while , }
		- PARENT = { }
		- CHILD  = { - , c , N , e , w , + , -- , n , E , * , }
		- PRED   = { c , -- , * , N , }
		- SUCC   = { E , u , position , }

374 :	">"
		- NEIGH  = { cb , c , > , while , }
		- PARENT = { }
		- CHILD  = { - , c , N , e , w , + , -- , n , E , * , }
		- PRED   = { c , -- , * , N , }
		- SUCC   = { E , u , position , }

374 :	"cb"
		- NEIGH  = { cb , c , > , while , }
		- PARENT = { }
		- CHILD  = { - , c , N , e , w , + , -- , n , E , * , }
		- PRED   = { c , -- , * , N , }
		- SUCC   = { E , u , position , }

375 :	"w"
		- NEIGH  = { c , N , e , w , + , -- , n , E , * , }
		- PARENT = { cb , c , > , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { + , c , N , e , - , -- , E , n , * , }

375 :	"n"
		- NEIGH  = { c , N , e , w , + , -- , n , E , * , }
		- PARENT = { cb , c , > , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { + , c , N , e , - , -- , E , n , * , }

375 :	"*"
		- NEIGH  = { c , N , e , w , + , -- , n , E , * , }
		- PARENT = { cb , c , > , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { + , c , N , e , - , -- , E , n , * , }

375 :	"E"
		- NEIGH  = { c , N , e , w , + , -- , n , E , * , }
		- PARENT = { cb , c , > , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { + , c , N , e , - , -- , E , n , * , }

375 :	"+"
		- NEIGH  = { c , N , e , w , + , -- , n , E , * , }
		- PARENT = { cb , c , > , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { + , c , N , e , - , -- , E , n , * , }

375 :	"e"
		- NEIGH  = { c , N , e , w , + , -- , n , E , * , }
		- PARENT = { cb , c , > , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { + , c , N , e , - , -- , E , n , * , }

375 :	"*"
		- NEIGH  = { c , N , e , w , + , -- , n , E , * , }
		- PARENT = { cb , c , > , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { + , c , N , e , - , -- , E , n , * , }

375 :	"N"
		- NEIGH  = { c , N , e , w , + , -- , n , E , * , }
		- PARENT = { cb , c , > , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { + , c , N , e , - , -- , E , n , * , }

375 :	"+"
		- NEIGH  = { c , N , e , w , + , -- , n , E , * , }
		- PARENT = { cb , c , > , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { + , c , N , e , - , -- , E , n , * , }

375 :	"*"
		- NEIGH  = { c , N , e , w , + , -- , n , E , * , }
		- PARENT = { cb , c , > , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { + , c , N , e , - , -- , E , n , * , }

375 :	"--"
		- NEIGH  = { c , N , e , w , + , -- , n , E , * , }
		- PARENT = { cb , c , > , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { + , c , N , e , - , -- , E , n , * , }

375 :	"c"
		- NEIGH  = { c , N , e , w , + , -- , n , E , * , }
		- PARENT = { cb , c , > , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { + , c , N , e , - , -- , E , n , * , }

376 :	"N"
		- NEIGH  = { + , c , N , e , - , -- , E , n , * , }
		- PARENT = { cb , c , > , while , }
		- CHILD  = { }
		- PRED   = { c , N , e , w , + , -- , n , E , * , }
		- SUCC   = { w , E , }

376 :	"n"
		- NEIGH  = { + , c , N , e , - , -- , E , n , * , }
		- PARENT = { cb , c , > , while , }
		- CHILD  = { }
		- PRED   = { c , N , e , w , + , -- , n , E , * , }
		- SUCC   = { w , E , }

376 :	"*"
		- NEIGH  = { + , c , N , e , - , -- , E , n , * , }
		- PARENT = { cb , c , > , while , }
		- CHILD  = { }
		- PRED   = { c , N , e , w , + , -- , n , E , * , }
		- SUCC   = { w , E , }

376 :	"N"
		- NEIGH  = { + , c , N , e , - , -- , E , n , * , }
		- PARENT = { cb , c , > , while , }
		- CHILD  = { }
		- PRED   = { c , N , e , w , + , -- , n , E , * , }
		- SUCC   = { w , E , }

376 :	"-"
		- NEIGH  = { + , c , N , e , - , -- , E , n , * , }
		- PARENT = { cb , c , > , while , }
		- CHILD  = { }
		- PRED   = { c , N , e , w , + , -- , n , E , * , }
		- SUCC   = { w , E , }

376 :	"e"
		- NEIGH  = { + , c , N , e , - , -- , E , n , * , }
		- PARENT = { cb , c , > , while , }
		- CHILD  = { }
		- PRED   = { c , N , e , w , + , -- , n , E , * , }
		- SUCC   = { w , E , }

376 :	"*"
		- NEIGH  = { + , c , N , e , - , -- , E , n , * , }
		- PARENT = { cb , c , > , while , }
		- CHILD  = { }
		- PRED   = { c , N , e , w , + , -- , n , E , * , }
		- SUCC   = { w , E , }

376 :	"E"
		- NEIGH  = { + , c , N , e , - , -- , E , n , * , }
		- PARENT = { cb , c , > , while , }
		- CHILD  = { }
		- PRED   = { c , N , e , w , + , -- , n , E , * , }
		- SUCC   = { w , E , }

376 :	"+"
		- NEIGH  = { + , c , N , e , - , -- , E , n , * , }
		- PARENT = { cb , c , > , while , }
		- CHILD  = { }
		- PRED   = { c , N , e , w , + , -- , n , E , * , }
		- SUCC   = { w , E , }

376 :	"*"
		- NEIGH  = { + , c , N , e , - , -- , E , n , * , }
		- PARENT = { cb , c , > , while , }
		- CHILD  = { }
		- PRED   = { c , N , e , w , + , -- , n , E , * , }
		- SUCC   = { w , E , }

376 :	"--"
		- NEIGH  = { + , c , N , e , - , -- , E , n , * , }
		- PARENT = { cb , c , > , while , }
		- CHILD  = { }
		- PRED   = { c , N , e , w , + , -- , n , E , * , }
		- SUCC   = { w , E , }

376 :	"c"
		- NEIGH  = { + , c , N , e , - , -- , E , n , * , }
		- PARENT = { cb , c , > , while , }
		- CHILD  = { }
		- PRED   = { c , N , e , w , + , -- , n , E , * , }
		- SUCC   = { w , E , }

377 :	"E"
		- NEIGH  = { w , E , }
		- PARENT = { cb , c , > , while , }
		- CHILD  = { }
		- PRED   = { + , c , N , e , - , -- , E , n , * , }
		- SUCC   = { }

377 :	"w"
		- NEIGH  = { w , E , }
		- PARENT = { cb , c , > , while , }
		- CHILD  = { }
		- PRED   = { + , c , N , e , - , -- , E , n , * , }
		- SUCC   = { }

380 :	"position"
		- NEIGH  = { E , u , position , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cb , c , > , while , }
		- SUCC   = { N , v , position , }

380 :	"u"
		- NEIGH  = { E , u , position , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cb , c , > , while , }
		- SUCC   = { N , v , position , }

380 :	"E"
		- NEIGH  = { E , u , position , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cb , c , > , while , }
		- SUCC   = { N , v , position , }

381 :	"position"
		- NEIGH  = { N , v , position , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { E , u , position , }
		- SUCC   = { position , return , }

381 :	"v"
		- NEIGH  = { N , v , position , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { E , u , position , }
		- SUCC   = { position , return , }

381 :	"N"
		- NEIGH  = { N , v , position , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { E , u , position , }
		- SUCC   = { position , return , }

382 :	"return"
		- NEIGH  = { position , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { N , v , position , }
		- SUCC   = { }

382 :	"position"
		- NEIGH  = { position , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { N , v , position , }
		- SUCC   = { }

387 :	"PJ_COORD"
		- NEIGH  = { PJ_COORD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

387 :	"complex_horner_forward_4d"
		- NEIGH  = { complex_horner_forward_4d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

387 :	"PJ_COORD"
		- NEIGH  = { PJ_COORD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

387 :	"point"
		- NEIGH  = { point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

387 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

387 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

387 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

388 :	"point"
		- NEIGH  = { PJ_FWD , opaque , * , HORNER , complex_horner , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

388 :	"uv"
		- NEIGH  = { PJ_FWD , opaque , * , HORNER , complex_horner , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

388 :	"complex_horner"
		- NEIGH  = { PJ_FWD , opaque , * , HORNER , complex_horner , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

388 :	"P"
		- NEIGH  = { PJ_FWD , opaque , * , HORNER , complex_horner , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

388 :	"HORNER"
		- NEIGH  = { PJ_FWD , opaque , * , HORNER , complex_horner , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

388 :	"*"
		- NEIGH  = { PJ_FWD , opaque , * , HORNER , complex_horner , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

388 :	"P"
		- NEIGH  = { PJ_FWD , opaque , * , HORNER , complex_horner , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

388 :	"opaque"
		- NEIGH  = { PJ_FWD , opaque , * , HORNER , complex_horner , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

388 :	"PJ_FWD"
		- NEIGH  = { PJ_FWD , opaque , * , HORNER , complex_horner , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

388 :	"point"
		- NEIGH  = { PJ_FWD , opaque , * , HORNER , complex_horner , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

388 :	"uv"
		- NEIGH  = { PJ_FWD , opaque , * , HORNER , complex_horner , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

389 :	"return"
		- NEIGH  = { point , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PJ_FWD , opaque , * , HORNER , complex_horner , uv , P , point , }
		- SUCC   = { }

389 :	"point"
		- NEIGH  = { point , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PJ_FWD , opaque , * , HORNER , complex_horner , uv , P , point , }
		- SUCC   = { }

392 :	"PJ_COORD"
		- NEIGH  = { PJ_COORD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

392 :	"complex_horner_reverse_4d"
		- NEIGH  = { complex_horner_reverse_4d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

392 :	"PJ_COORD"
		- NEIGH  = { PJ_COORD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

392 :	"point"
		- NEIGH  = { point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

392 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

392 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

392 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

393 :	"point"
		- NEIGH  = { PJ_INV , opaque , * , HORNER , complex_horner , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

393 :	"uv"
		- NEIGH  = { PJ_INV , opaque , * , HORNER , complex_horner , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

393 :	"complex_horner"
		- NEIGH  = { PJ_INV , opaque , * , HORNER , complex_horner , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

393 :	"P"
		- NEIGH  = { PJ_INV , opaque , * , HORNER , complex_horner , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

393 :	"HORNER"
		- NEIGH  = { PJ_INV , opaque , * , HORNER , complex_horner , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

393 :	"*"
		- NEIGH  = { PJ_INV , opaque , * , HORNER , complex_horner , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

393 :	"P"
		- NEIGH  = { PJ_INV , opaque , * , HORNER , complex_horner , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

393 :	"opaque"
		- NEIGH  = { PJ_INV , opaque , * , HORNER , complex_horner , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

393 :	"PJ_INV"
		- NEIGH  = { PJ_INV , opaque , * , HORNER , complex_horner , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

393 :	"point"
		- NEIGH  = { PJ_INV , opaque , * , HORNER , complex_horner , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

393 :	"uv"
		- NEIGH  = { PJ_INV , opaque , * , HORNER , complex_horner , uv , P , point , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { point , return , }

394 :	"return"
		- NEIGH  = { point , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PJ_INV , opaque , * , HORNER , complex_horner , uv , P , point , }
		- SUCC   = { }

394 :	"point"
		- NEIGH  = { point , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PJ_INV , opaque , * , HORNER , complex_horner , uv , P , point , }
		- SUCC   = { }

398 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

398 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

398 :	"horner_freeup"
		- NEIGH  = { horner_freeup , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

398 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

398 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

398 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

398 :	"errlev"
		- NEIGH  = { errlev , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

399 :	"if"
		- NEIGH  = { P , == , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { P , opaque , == , if , }

399 :	"=="
		- NEIGH  = { P , == , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { P , opaque , == , if , }

399 :	"P"
		- NEIGH  = { P , == , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { P , opaque , == , if , }

400 :	"return"
		- NEIGH  = { return , }
		- PARENT = { P , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

401 :	"if"
		- NEIGH  = { P , opaque , == , if , }
		- PARENT = { }
		- CHILD  = { errlev , P , pj_default_destructor , return , }
		- PRED   = { P , == , if , }
		- SUCC   = { opaque , P , * , HORNER , horner_free , }

401 :	"=="
		- NEIGH  = { P , opaque , == , if , }
		- PARENT = { }
		- CHILD  = { errlev , P , pj_default_destructor , return , }
		- PRED   = { P , == , if , }
		- SUCC   = { opaque , P , * , HORNER , horner_free , }

401 :	"P"
		- NEIGH  = { P , opaque , == , if , }
		- PARENT = { }
		- CHILD  = { errlev , P , pj_default_destructor , return , }
		- PRED   = { P , == , if , }
		- SUCC   = { opaque , P , * , HORNER , horner_free , }

401 :	"opaque"
		- NEIGH  = { P , opaque , == , if , }
		- PARENT = { }
		- CHILD  = { errlev , P , pj_default_destructor , return , }
		- PRED   = { P , == , if , }
		- SUCC   = { opaque , P , * , HORNER , horner_free , }

402 :	"return"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { P , opaque , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

402 :	"pj_default_destructor"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { P , opaque , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

402 :	"P"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { P , opaque , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

402 :	"errlev"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { P , opaque , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

403 :	"horner_free"
		- NEIGH  = { opaque , P , * , HORNER , horner_free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { opaque , P , }

403 :	"HORNER"
		- NEIGH  = { opaque , P , * , HORNER , horner_free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { opaque , P , }

403 :	"*"
		- NEIGH  = { opaque , P , * , HORNER , horner_free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { opaque , P , }

403 :	"P"
		- NEIGH  = { opaque , P , * , HORNER , horner_free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { opaque , P , }

403 :	"opaque"
		- NEIGH  = { opaque , P , * , HORNER , horner_free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { opaque , P , }

404 :	"P"
		- NEIGH  = { opaque , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , P , * , HORNER , horner_free , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

404 :	"opaque"
		- NEIGH  = { opaque , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , P , * , HORNER , horner_free , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

405 :	"return"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , P , }
		- SUCC   = { }

405 :	"pj_default_destructor"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , P , }
		- SUCC   = { }

405 :	"P"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , P , }
		- SUCC   = { }

405 :	"errlev"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , P , }
		- SUCC   = { }

409 :	"parse_coefs"
		- NEIGH  = { parse_coefs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

409 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

409 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

409 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

409 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

409 :	"coefs"
		- NEIGH  = { coefs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

409 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

409 :	"param"
		- NEIGH  = { param , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

409 :	"ncoefs"
		- NEIGH  = { ncoefs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

410 :	"*"
		- NEIGH  = { init , next , buf , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { i , }

410 :	"buf"
		- NEIGH  = { init , next , buf , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { i , }

410 :	"*"
		- NEIGH  = { init , next , buf , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { i , }

410 :	"init"
		- NEIGH  = { init , next , buf , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { i , }

410 :	"*"
		- NEIGH  = { init , next , buf , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { i , }

410 :	"next"
		- NEIGH  = { init , next , buf , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { i , }

411 :	"i"
		- NEIGH  = { i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { init , next , buf , * , }
		- SUCC   = { param , > , calloc , < , strlen , buf , * , + , static_cast , }

413 :	"buf"
		- NEIGH  = { param , > , calloc , < , strlen , buf , * , + , static_cast , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { == , buf , if , }

413 :	"static_cast"
		- NEIGH  = { param , > , calloc , < , strlen , buf , * , + , static_cast , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { == , buf , if , }

413 :	"<"
		- NEIGH  = { param , > , calloc , < , strlen , buf , * , + , static_cast , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { == , buf , if , }

413 :	"*"
		- NEIGH  = { param , > , calloc , < , strlen , buf , * , + , static_cast , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { == , buf , if , }

413 :	">"
		- NEIGH  = { param , > , calloc , < , strlen , buf , * , + , static_cast , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { == , buf , if , }

413 :	"calloc"
		- NEIGH  = { param , > , calloc , < , strlen , buf , * , + , static_cast , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { == , buf , if , }

413 :	"strlen"
		- NEIGH  = { param , > , calloc , < , strlen , buf , * , + , static_cast , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { == , buf , if , }

413 :	"param"
		- NEIGH  = { param , > , calloc , < , strlen , buf , * , + , static_cast , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { == , buf , if , }

413 :	"+"
		- NEIGH  = { param , > , calloc , < , strlen , buf , * , + , static_cast , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { == , buf , if , }

414 :	"if"
		- NEIGH  = { == , buf , if , }
		- PARENT = { }
		- CHILD  = { return , P , proj_log_error , }
		- PRED   = { param , > , calloc , < , strlen , buf , * , + , static_cast , }
		- SUCC   = { buf , param , sprintf , }

414 :	"=="
		- NEIGH  = { == , buf , if , }
		- PARENT = { }
		- CHILD  = { return , P , proj_log_error , }
		- PRED   = { param , > , calloc , < , strlen , buf , * , + , static_cast , }
		- SUCC   = { buf , param , sprintf , }

414 :	"buf"
		- NEIGH  = { == , buf , if , }
		- PARENT = { }
		- CHILD  = { return , P , proj_log_error , }
		- PRED   = { param , > , calloc , < , strlen , buf , * , + , static_cast , }
		- SUCC   = { buf , param , sprintf , }

415 :	"proj_log_error"
		- NEIGH  = { P , proj_log_error , }
		- PARENT = { == , buf , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

415 :	"P"
		- NEIGH  = { P , proj_log_error , }
		- PARENT = { == , buf , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

416 :	"return"
		- NEIGH  = { return , }
		- PARENT = { == , buf , if , }
		- CHILD  = { }
		- PRED   = { P , proj_log_error , }
		- SUCC   = { }

419 :	"sprintf"
		- NEIGH  = { buf , param , sprintf , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , buf , if , }
		- SUCC   = { buf , i , params , ctx , P , pj_param , == , if , }

419 :	"buf"
		- NEIGH  = { buf , param , sprintf , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , buf , if , }
		- SUCC   = { buf , i , params , ctx , P , pj_param , == , if , }

419 :	"param"
		- NEIGH  = { buf , param , sprintf , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , buf , if , }
		- SUCC   = { buf , i , params , ctx , P , pj_param , == , if , }

420 :	"if"
		- NEIGH  = { buf , i , params , ctx , P , pj_param , == , if , }
		- PARENT = { }
		- CHILD  = { return , buf , free , }
		- PRED   = { buf , param , sprintf , }
		- SUCC   = { buf , param , sprintf , }

420 :	"=="
		- NEIGH  = { buf , i , params , ctx , P , pj_param , == , if , }
		- PARENT = { }
		- CHILD  = { return , buf , free , }
		- PRED   = { buf , param , sprintf , }
		- SUCC   = { buf , param , sprintf , }

420 :	"pj_param"
		- NEIGH  = { buf , i , params , ctx , P , pj_param , == , if , }
		- PARENT = { }
		- CHILD  = { return , buf , free , }
		- PRED   = { buf , param , sprintf , }
		- SUCC   = { buf , param , sprintf , }

420 :	"P"
		- NEIGH  = { buf , i , params , ctx , P , pj_param , == , if , }
		- PARENT = { }
		- CHILD  = { return , buf , free , }
		- PRED   = { buf , param , sprintf , }
		- SUCC   = { buf , param , sprintf , }

420 :	"ctx"
		- NEIGH  = { buf , i , params , ctx , P , pj_param , == , if , }
		- PARENT = { }
		- CHILD  = { return , buf , free , }
		- PRED   = { buf , param , sprintf , }
		- SUCC   = { buf , param , sprintf , }

420 :	"P"
		- NEIGH  = { buf , i , params , ctx , P , pj_param , == , if , }
		- PARENT = { }
		- CHILD  = { return , buf , free , }
		- PRED   = { buf , param , sprintf , }
		- SUCC   = { buf , param , sprintf , }

420 :	"params"
		- NEIGH  = { buf , i , params , ctx , P , pj_param , == , if , }
		- PARENT = { }
		- CHILD  = { return , buf , free , }
		- PRED   = { buf , param , sprintf , }
		- SUCC   = { buf , param , sprintf , }

420 :	"buf"
		- NEIGH  = { buf , i , params , ctx , P , pj_param , == , if , }
		- PARENT = { }
		- CHILD  = { return , buf , free , }
		- PRED   = { buf , param , sprintf , }
		- SUCC   = { buf , param , sprintf , }

420 :	"i"
		- NEIGH  = { buf , i , params , ctx , P , pj_param , == , if , }
		- PARENT = { }
		- CHILD  = { return , buf , free , }
		- PRED   = { buf , param , sprintf , }
		- SUCC   = { buf , param , sprintf , }

421 :	"free"
		- NEIGH  = { buf , free , }
		- PARENT = { buf , i , params , ctx , P , pj_param , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

421 :	"buf"
		- NEIGH  = { buf , free , }
		- PARENT = { buf , i , params , ctx , P , pj_param , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

422 :	"return"
		- NEIGH  = { return , }
		- PARENT = { buf , i , params , ctx , P , pj_param , == , if , }
		- CHILD  = { }
		- PRED   = { buf , free , }
		- SUCC   = { }

424 :	"sprintf"
		- NEIGH  = { buf , param , sprintf , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { buf , i , params , ctx , P , pj_param , == , if , }
		- SUCC   = { s , buf , params , init , ctx , pj_param , P , }

424 :	"buf"
		- NEIGH  = { buf , param , sprintf , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { buf , i , params , ctx , P , pj_param , == , if , }
		- SUCC   = { s , buf , params , init , ctx , pj_param , P , }

424 :	"param"
		- NEIGH  = { buf , param , sprintf , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { buf , i , params , ctx , P , pj_param , == , if , }
		- SUCC   = { s , buf , params , init , ctx , pj_param , P , }

425 :	"init"
		- NEIGH  = { s , buf , params , init , ctx , pj_param , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { buf , param , sprintf , }
		- SUCC   = { buf , free , }

425 :	"pj_param"
		- NEIGH  = { s , buf , params , init , ctx , pj_param , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { buf , param , sprintf , }
		- SUCC   = { buf , free , }

425 :	"P"
		- NEIGH  = { s , buf , params , init , ctx , pj_param , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { buf , param , sprintf , }
		- SUCC   = { buf , free , }

425 :	"ctx"
		- NEIGH  = { s , buf , params , init , ctx , pj_param , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { buf , param , sprintf , }
		- SUCC   = { buf , free , }

425 :	"P"
		- NEIGH  = { s , buf , params , init , ctx , pj_param , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { buf , param , sprintf , }
		- SUCC   = { buf , free , }

425 :	"params"
		- NEIGH  = { s , buf , params , init , ctx , pj_param , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { buf , param , sprintf , }
		- SUCC   = { buf , free , }

425 :	"buf"
		- NEIGH  = { s , buf , params , init , ctx , pj_param , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { buf , param , sprintf , }
		- SUCC   = { buf , free , }

425 :	"s"
		- NEIGH  = { s , buf , params , init , ctx , pj_param , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { buf , param , sprintf , }
		- SUCC   = { buf , free , }

426 :	"free"
		- NEIGH  = { buf , free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { s , buf , params , init , ctx , pj_param , P , }
		- SUCC   = { ++ , ncoefs , < , i , for , }

426 :	"buf"
		- NEIGH  = { buf , free , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { s , buf , params , init , ctx , pj_param , P , }
		- SUCC   = { ++ , ncoefs , < , i , for , }

428 :	"for"
		- NEIGH  = { ++ , ncoefs , < , i , for , }
		- PARENT = { }
		- CHILD  = { next , & , init , pj_strtod , coefs , > , i , if , }
		- PRED   = { buf , free , }
		- SUCC   = { return , }

428 :	"i"
		- NEIGH  = { ++ , ncoefs , < , i , for , }
		- PARENT = { }
		- CHILD  = { next , & , init , pj_strtod , coefs , > , i , if , }
		- PRED   = { buf , free , }
		- SUCC   = { return , }

428 :	"i"
		- NEIGH  = { ++ , ncoefs , < , i , for , }
		- PARENT = { }
		- CHILD  = { next , & , init , pj_strtod , coefs , > , i , if , }
		- PRED   = { buf , free , }
		- SUCC   = { return , }

428 :	"<"
		- NEIGH  = { ++ , ncoefs , < , i , for , }
		- PARENT = { }
		- CHILD  = { next , & , init , pj_strtod , coefs , > , i , if , }
		- PRED   = { buf , free , }
		- SUCC   = { return , }

428 :	"ncoefs"
		- NEIGH  = { ++ , ncoefs , < , i , for , }
		- PARENT = { }
		- CHILD  = { next , & , init , pj_strtod , coefs , > , i , if , }
		- PRED   = { buf , free , }
		- SUCC   = { return , }

428 :	"i"
		- NEIGH  = { ++ , ncoefs , < , i , for , }
		- PARENT = { }
		- CHILD  = { next , & , init , pj_strtod , coefs , > , i , if , }
		- PRED   = { buf , free , }
		- SUCC   = { return , }

428 :	"++"
		- NEIGH  = { ++ , ncoefs , < , i , for , }
		- PARENT = { }
		- CHILD  = { next , & , init , pj_strtod , coefs , > , i , if , }
		- PRED   = { buf , free , }
		- SUCC   = { return , }

429 :	"if"
		- NEIGH  = { > , i , if , }
		- PARENT = { ++ , ncoefs , < , i , for , }
		- CHILD  = { ++ , init , * , || , != , == , next , if , }
		- PRED   = { }
		- SUCC   = { next , init , & , coefs , pj_strtod , i , }

429 :	"i"
		- NEIGH  = { > , i , if , }
		- PARENT = { ++ , ncoefs , < , i , for , }
		- CHILD  = { ++ , init , * , || , != , == , next , if , }
		- PRED   = { }
		- SUCC   = { next , init , & , coefs , pj_strtod , i , }

429 :	">"
		- NEIGH  = { > , i , if , }
		- PARENT = { ++ , ncoefs , < , i , for , }
		- CHILD  = { ++ , init , * , || , != , == , next , if , }
		- PRED   = { }
		- SUCC   = { next , init , & , coefs , pj_strtod , i , }

430 :	"if"
		- NEIGH  = { * , || , != , == , next , if , }
		- PARENT = { > , i , if , }
		- CHILD  = { param , return , ncoefs , P , proj_log_error , }
		- PRED   = { }
		- SUCC   = { next , ++ , init , }

430 :	"next"
		- NEIGH  = { * , || , != , == , next , if , }
		- PARENT = { > , i , if , }
		- CHILD  = { param , return , ncoefs , P , proj_log_error , }
		- PRED   = { }
		- SUCC   = { next , ++ , init , }

430 :	"=="
		- NEIGH  = { * , || , != , == , next , if , }
		- PARENT = { > , i , if , }
		- CHILD  = { param , return , ncoefs , P , proj_log_error , }
		- PRED   = { }
		- SUCC   = { next , ++ , init , }

430 :	"||"
		- NEIGH  = { * , || , != , == , next , if , }
		- PARENT = { > , i , if , }
		- CHILD  = { param , return , ncoefs , P , proj_log_error , }
		- PRED   = { }
		- SUCC   = { next , ++ , init , }

430 :	"!="
		- NEIGH  = { * , || , != , == , next , if , }
		- PARENT = { > , i , if , }
		- CHILD  = { param , return , ncoefs , P , proj_log_error , }
		- PRED   = { }
		- SUCC   = { next , ++ , init , }

430 :	"*"
		- NEIGH  = { * , || , != , == , next , if , }
		- PARENT = { > , i , if , }
		- CHILD  = { param , return , ncoefs , P , proj_log_error , }
		- PRED   = { }
		- SUCC   = { next , ++ , init , }

430 :	"next"
		- NEIGH  = { * , || , != , == , next , if , }
		- PARENT = { > , i , if , }
		- CHILD  = { param , return , ncoefs , P , proj_log_error , }
		- PRED   = { }
		- SUCC   = { next , ++ , init , }

431 :	"proj_log_error"
		- NEIGH  = { param , ncoefs , P , proj_log_error , }
		- PARENT = { * , || , != , == , next , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

431 :	"P"
		- NEIGH  = { param , ncoefs , P , proj_log_error , }
		- PARENT = { * , || , != , == , next , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

431 :	"param"
		- NEIGH  = { param , ncoefs , P , proj_log_error , }
		- PARENT = { * , || , != , == , next , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

431 :	"ncoefs"
		- NEIGH  = { param , ncoefs , P , proj_log_error , }
		- PARENT = { * , || , != , == , next , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

432 :	"return"
		- NEIGH  = { return , }
		- PARENT = { * , || , != , == , next , if , }
		- CHILD  = { }
		- PRED   = { param , ncoefs , P , proj_log_error , }
		- SUCC   = { }

434 :	"init"
		- NEIGH  = { next , ++ , init , }
		- PARENT = { > , i , if , }
		- CHILD  = { }
		- PRED   = { * , || , != , == , next , if , }
		- SUCC   = { }

434 :	"++"
		- NEIGH  = { next , ++ , init , }
		- PARENT = { > , i , if , }
		- CHILD  = { }
		- PRED   = { * , || , != , == , next , if , }
		- SUCC   = { }

434 :	"next"
		- NEIGH  = { next , ++ , init , }
		- PARENT = { > , i , if , }
		- CHILD  = { }
		- PRED   = { * , || , != , == , next , if , }
		- SUCC   = { }

436 :	"coefs"
		- NEIGH  = { next , init , & , coefs , pj_strtod , i , }
		- PARENT = { ++ , ncoefs , < , i , for , }
		- CHILD  = { }
		- PRED   = { > , i , if , }
		- SUCC   = { }

436 :	"i"
		- NEIGH  = { next , init , & , coefs , pj_strtod , i , }
		- PARENT = { ++ , ncoefs , < , i , for , }
		- CHILD  = { }
		- PRED   = { > , i , if , }
		- SUCC   = { }

436 :	"pj_strtod"
		- NEIGH  = { next , init , & , coefs , pj_strtod , i , }
		- PARENT = { ++ , ncoefs , < , i , for , }
		- CHILD  = { }
		- PRED   = { > , i , if , }
		- SUCC   = { }

436 :	"init"
		- NEIGH  = { next , init , & , coefs , pj_strtod , i , }
		- PARENT = { ++ , ncoefs , < , i , for , }
		- CHILD  = { }
		- PRED   = { > , i , if , }
		- SUCC   = { }

436 :	"&"
		- NEIGH  = { next , init , & , coefs , pj_strtod , i , }
		- PARENT = { ++ , ncoefs , < , i , for , }
		- CHILD  = { }
		- PRED   = { > , i , if , }
		- SUCC   = { }

436 :	"next"
		- NEIGH  = { next , init , & , coefs , pj_strtod , i , }
		- PARENT = { ++ , ncoefs , < , i , for , }
		- CHILD  = { }
		- PRED   = { > , i , if , }
		- SUCC   = { }

438 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ++ , ncoefs , < , i , for , }
		- SUCC   = { }

443 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

443 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

443 :	"PROJECTION"
		- NEIGH  = { PROJECTION , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

443 :	"horner"
		- NEIGH  = { horner , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

445 :	"degree"
		- NEIGH  = { complex_polynomia , n , degree , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , * , HORNER , }

445 :	"n"
		- NEIGH  = { complex_polynomia , n , degree , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , * , HORNER , }

445 :	"complex_polynomia"
		- NEIGH  = { complex_polynomia , n , degree , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , * , HORNER , }

446 :	"HORNER"
		- NEIGH  = { Q , * , HORNER , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { complex_polynomia , n , degree , }
		- SUCC   = { horner_forward_4d , fwd4d , P , }

446 :	"*"
		- NEIGH  = { Q , * , HORNER , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { complex_polynomia , n , degree , }
		- SUCC   = { horner_forward_4d , fwd4d , P , }

446 :	"Q"
		- NEIGH  = { Q , * , HORNER , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { complex_polynomia , n , degree , }
		- SUCC   = { horner_forward_4d , fwd4d , P , }

447 :	"P"
		- NEIGH  = { horner_forward_4d , fwd4d , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , * , HORNER , }
		- SUCC   = { horner_reverse_4d , inv4d , P , }

447 :	"fwd4d"
		- NEIGH  = { horner_forward_4d , fwd4d , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , * , HORNER , }
		- SUCC   = { horner_reverse_4d , inv4d , P , }

447 :	"horner_forward_4d"
		- NEIGH  = { horner_forward_4d , fwd4d , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , * , HORNER , }
		- SUCC   = { horner_reverse_4d , inv4d , P , }

448 :	"P"
		- NEIGH  = { horner_reverse_4d , inv4d , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { horner_forward_4d , fwd4d , P , }
		- SUCC   = { fwd3d , P , }

448 :	"inv4d"
		- NEIGH  = { horner_reverse_4d , inv4d , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { horner_forward_4d , fwd4d , P , }
		- SUCC   = { fwd3d , P , }

448 :	"horner_reverse_4d"
		- NEIGH  = { horner_reverse_4d , inv4d , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { horner_forward_4d , fwd4d , P , }
		- SUCC   = { fwd3d , P , }

449 :	"P"
		- NEIGH  = { fwd3d , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { horner_reverse_4d , inv4d , P , }
		- SUCC   = { inv3d , P , }

449 :	"fwd3d"
		- NEIGH  = { fwd3d , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { horner_reverse_4d , inv4d , P , }
		- SUCC   = { inv3d , P , }

450 :	"P"
		- NEIGH  = { inv3d , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { fwd3d , P , }
		- SUCC   = { fwd , P , }

450 :	"inv3d"
		- NEIGH  = { inv3d , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { fwd3d , P , }
		- SUCC   = { fwd , P , }

451 :	"P"
		- NEIGH  = { fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { inv3d , P , }
		- SUCC   = { inv , P , }

451 :	"fwd"
		- NEIGH  = { fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { inv3d , P , }
		- SUCC   = { inv , P , }

452 :	"P"
		- NEIGH  = { inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { fwd , P , }
		- SUCC   = { right , left , PJ_IO_UNITS_PROJECTED , P , }

452 :	"inv"
		- NEIGH  = { inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { fwd , P , }
		- SUCC   = { right , left , PJ_IO_UNITS_PROJECTED , P , }

453 :	"P"
		- NEIGH  = { right , left , PJ_IO_UNITS_PROJECTED , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { inv , P , }
		- SUCC   = { horner_freeup , destructor , P , }

453 :	"left"
		- NEIGH  = { right , left , PJ_IO_UNITS_PROJECTED , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { inv , P , }
		- SUCC   = { horner_freeup , destructor , P , }

453 :	"P"
		- NEIGH  = { right , left , PJ_IO_UNITS_PROJECTED , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { inv , P , }
		- SUCC   = { horner_freeup , destructor , P , }

453 :	"right"
		- NEIGH  = { right , left , PJ_IO_UNITS_PROJECTED , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { inv , P , }
		- SUCC   = { horner_freeup , destructor , P , }

453 :	"PJ_IO_UNITS_PROJECTED"
		- NEIGH  = { right , left , PJ_IO_UNITS_PROJECTED , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { inv , P , }
		- SUCC   = { horner_freeup , destructor , P , }

454 :	"P"
		- NEIGH  = { horner_freeup , destructor , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { right , left , PJ_IO_UNITS_PROJECTED , P , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

454 :	"destructor"
		- NEIGH  = { horner_freeup , destructor , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { right , left , PJ_IO_UNITS_PROJECTED , P , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

454 :	"horner_freeup"
		- NEIGH  = { horner_freeup , destructor , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { right , left , PJ_IO_UNITS_PROJECTED , P , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

457 :	"if"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , > , < , if , proj_log_error , i , params , ctx , pj_param , P , return , || , _ , degree , }
		- PRED   = { horner_freeup , destructor , P , }
		- SUCC   = { i , params , ctx , P , || , pj_param , if , }

457 :	"pj_param"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , > , < , if , proj_log_error , i , params , ctx , pj_param , P , return , || , _ , degree , }
		- PRED   = { horner_freeup , destructor , P , }
		- SUCC   = { i , params , ctx , P , || , pj_param , if , }

457 :	"P"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , > , < , if , proj_log_error , i , params , ctx , pj_param , P , return , || , _ , degree , }
		- PRED   = { horner_freeup , destructor , P , }
		- SUCC   = { i , params , ctx , P , || , pj_param , if , }

457 :	"ctx"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , > , < , if , proj_log_error , i , params , ctx , pj_param , P , return , || , _ , degree , }
		- PRED   = { horner_freeup , destructor , P , }
		- SUCC   = { i , params , ctx , P , || , pj_param , if , }

457 :	"P"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , > , < , if , proj_log_error , i , params , ctx , pj_param , P , return , || , _ , degree , }
		- PRED   = { horner_freeup , destructor , P , }
		- SUCC   = { i , params , ctx , P , || , pj_param , if , }

457 :	"params"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , > , < , if , proj_log_error , i , params , ctx , pj_param , P , return , || , _ , degree , }
		- PRED   = { horner_freeup , destructor , P , }
		- SUCC   = { i , params , ctx , P , || , pj_param , if , }

457 :	"i"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , > , < , if , proj_log_error , i , params , ctx , pj_param , P , return , || , _ , degree , }
		- PRED   = { horner_freeup , destructor , P , }
		- SUCC   = { i , params , ctx , P , || , pj_param , if , }

458 :	"degree"
		- NEIGH  = { i , params , ctx , P , pj_param , degree , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , || , < , degree , if , }

458 :	"pj_param"
		- NEIGH  = { i , params , ctx , P , pj_param , degree , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , || , < , degree , if , }

458 :	"P"
		- NEIGH  = { i , params , ctx , P , pj_param , degree , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , || , < , degree , if , }

458 :	"ctx"
		- NEIGH  = { i , params , ctx , P , pj_param , degree , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , || , < , degree , if , }

458 :	"P"
		- NEIGH  = { i , params , ctx , P , pj_param , degree , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , || , < , degree , if , }

458 :	"params"
		- NEIGH  = { i , params , ctx , P , pj_param , degree , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , || , < , degree , if , }

458 :	"i"
		- NEIGH  = { i , params , ctx , P , pj_param , degree , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , || , < , degree , if , }

459 :	"if"
		- NEIGH  = { > , || , < , degree , if , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { horner_freeup , degree , P , _ , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { i , params , ctx , P , pj_param , degree , }
		- SUCC   = { }

459 :	"degree"
		- NEIGH  = { > , || , < , degree , if , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { horner_freeup , degree , P , _ , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { i , params , ctx , P , pj_param , degree , }
		- SUCC   = { }

459 :	"<"
		- NEIGH  = { > , || , < , degree , if , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { horner_freeup , degree , P , _ , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { i , params , ctx , P , pj_param , degree , }
		- SUCC   = { }

459 :	"||"
		- NEIGH  = { > , || , < , degree , if , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { horner_freeup , degree , P , _ , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { i , params , ctx , P , pj_param , degree , }
		- SUCC   = { }

459 :	"degree"
		- NEIGH  = { > , || , < , degree , if , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { horner_freeup , degree , P , _ , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { i , params , ctx , P , pj_param , degree , }
		- SUCC   = { }

459 :	">"
		- NEIGH  = { > , || , < , degree , if , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { horner_freeup , degree , P , _ , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { i , params , ctx , P , pj_param , degree , }
		- SUCC   = { }

461 :	"proj_log_error"
		- NEIGH  = { degree , _ , P , proj_log_error , }
		- PARENT = { > , || , < , degree , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { horner_freeup , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , return , }

461 :	"P"
		- NEIGH  = { degree , _ , P , proj_log_error , }
		- PARENT = { > , || , < , degree , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { horner_freeup , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , return , }

461 :	"_"
		- NEIGH  = { degree , _ , P , proj_log_error , }
		- PARENT = { > , || , < , degree , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { horner_freeup , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , return , }

461 :	"degree"
		- NEIGH  = { degree , _ , P , proj_log_error , }
		- PARENT = { > , || , < , degree , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { horner_freeup , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , return , }

462 :	"return"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , return , }
		- PARENT = { > , || , < , degree , if , }
		- CHILD  = { }
		- PRED   = { degree , _ , P , proj_log_error , }
		- SUCC   = { }

462 :	"horner_freeup"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , return , }
		- PARENT = { > , || , < , degree , if , }
		- CHILD  = { }
		- PRED   = { degree , _ , P , proj_log_error , }
		- SUCC   = { }

462 :	"P"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , return , }
		- PARENT = { > , || , < , degree , if , }
		- CHILD  = { }
		- PRED   = { degree , _ , P , proj_log_error , }
		- SUCC   = { }

462 :	"PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , return , }
		- PARENT = { > , || , < , degree , if , }
		- CHILD  = { }
		- PRED   = { degree , _ , P , proj_log_error , }
		- SUCC   = { }

465 :	"proj_log_error"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }

465 :	"P"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }

465 :	"_"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }

466 :	"return"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

466 :	"horner_freeup"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

466 :	"P"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

466 :	"PROJ_ERR_INVALID_OP_MISSING_ARG"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

469 :	"if"
		- NEIGH  = { i , params , ctx , P , || , pj_param , if , }
		- PARENT = { }
		- CHILD  = { complex_polynomia , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { complex_polynomia , degree , horner_alloc , Q , }

469 :	"pj_param"
		- NEIGH  = { i , params , ctx , P , || , pj_param , if , }
		- PARENT = { }
		- CHILD  = { complex_polynomia , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { complex_polynomia , degree , horner_alloc , Q , }

469 :	"P"
		- NEIGH  = { i , params , ctx , P , || , pj_param , if , }
		- PARENT = { }
		- CHILD  = { complex_polynomia , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { complex_polynomia , degree , horner_alloc , Q , }

469 :	"ctx"
		- NEIGH  = { i , params , ctx , P , || , pj_param , if , }
		- PARENT = { }
		- CHILD  = { complex_polynomia , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { complex_polynomia , degree , horner_alloc , Q , }

469 :	"P"
		- NEIGH  = { i , params , ctx , P , || , pj_param , if , }
		- PARENT = { }
		- CHILD  = { complex_polynomia , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { complex_polynomia , degree , horner_alloc , Q , }

469 :	"params"
		- NEIGH  = { i , params , ctx , P , || , pj_param , if , }
		- PARENT = { }
		- CHILD  = { complex_polynomia , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { complex_polynomia , degree , horner_alloc , Q , }

469 :	"i"
		- NEIGH  = { i , params , ctx , P , || , pj_param , if , }
		- PARENT = { }
		- CHILD  = { complex_polynomia , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { complex_polynomia , degree , horner_alloc , Q , }

469 :	"||"
		- NEIGH  = { i , params , ctx , P , || , pj_param , if , }
		- PARENT = { }
		- CHILD  = { complex_polynomia , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { complex_polynomia , degree , horner_alloc , Q , }

469 :	"pj_param"
		- NEIGH  = { i , params , ctx , P , || , pj_param , if , }
		- PARENT = { }
		- CHILD  = { complex_polynomia , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { complex_polynomia , degree , horner_alloc , Q , }

469 :	"P"
		- NEIGH  = { i , params , ctx , P , || , pj_param , if , }
		- PARENT = { }
		- CHILD  = { complex_polynomia , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { complex_polynomia , degree , horner_alloc , Q , }

469 :	"ctx"
		- NEIGH  = { i , params , ctx , P , || , pj_param , if , }
		- PARENT = { }
		- CHILD  = { complex_polynomia , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { complex_polynomia , degree , horner_alloc , Q , }

469 :	"P"
		- NEIGH  = { i , params , ctx , P , || , pj_param , if , }
		- PARENT = { }
		- CHILD  = { complex_polynomia , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { complex_polynomia , degree , horner_alloc , Q , }

469 :	"params"
		- NEIGH  = { i , params , ctx , P , || , pj_param , if , }
		- PARENT = { }
		- CHILD  = { complex_polynomia , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { complex_polynomia , degree , horner_alloc , Q , }

469 :	"i"
		- NEIGH  = { i , params , ctx , P , || , pj_param , if , }
		- PARENT = { }
		- CHILD  = { complex_polynomia , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { complex_polynomia , degree , horner_alloc , Q , }

470 :	"complex_polynomia"
		- NEIGH  = { complex_polynomia , }
		- PARENT = { i , params , ctx , P , || , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

472 :	"Q"
		- NEIGH  = { complex_polynomia , degree , horner_alloc , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , params , ctx , P , || , pj_param , if , }
		- SUCC   = { == , Q , if , }

472 :	"horner_alloc"
		- NEIGH  = { complex_polynomia , degree , horner_alloc , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , params , ctx , P , || , pj_param , if , }
		- SUCC   = { == , Q , if , }

472 :	"degree"
		- NEIGH  = { complex_polynomia , degree , horner_alloc , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , params , ctx , P , || , pj_param , if , }
		- SUCC   = { == , Q , if , }

472 :	"complex_polynomia"
		- NEIGH  = { complex_polynomia , degree , horner_alloc , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , params , ctx , P , || , pj_param , if , }
		- SUCC   = { == , Q , if , }

473 :	"if"
		- NEIGH  = { == , Q , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_OTHER , horner_freeup , P , return , }
		- PRED   = { complex_polynomia , degree , horner_alloc , Q , }
		- SUCC   = { opaque , Q , P , }

473 :	"Q"
		- NEIGH  = { == , Q , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_OTHER , horner_freeup , P , return , }
		- PRED   = { complex_polynomia , degree , horner_alloc , Q , }
		- SUCC   = { opaque , Q , P , }

473 :	"=="
		- NEIGH  = { == , Q , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_OTHER , horner_freeup , P , return , }
		- PRED   = { complex_polynomia , degree , horner_alloc , Q , }
		- SUCC   = { opaque , Q , P , }

474 :	"return"
		- NEIGH  = { PROJ_ERR_OTHER , horner_freeup , P , return , }
		- PARENT = { == , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

474 :	"horner_freeup"
		- NEIGH  = { PROJ_ERR_OTHER , horner_freeup , P , return , }
		- PARENT = { == , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

474 :	"P"
		- NEIGH  = { PROJ_ERR_OTHER , horner_freeup , P , return , }
		- PARENT = { == , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

474 :	"PROJ_ERR_OTHER"
		- NEIGH  = { PROJ_ERR_OTHER , horner_freeup , P , return , }
		- PARENT = { == , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

475 :	"P"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , Q , if , }
		- SUCC   = { complex_polynomia , if , }

475 :	"opaque"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , Q , if , }
		- SUCC   = { complex_polynomia , if , }

475 :	"Q"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , Q , if , }
		- SUCC   = { complex_polynomia , if , }

477 :	"if"
		- NEIGH  = { complex_polynomia , if , }
		- PARENT = { }
		- CHILD  = { inv_v , inv_u , fwd_v , fwd_u , / , complex_horner_reverse_4d , Q , complex_horner_forward_4d , == , fwd4d , inv_c , parse_coefs , if , + , uneg , degree , * , fwd_c , params , n , inv4d , vneg , pj_param_exists , P , }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { Q , fwd_origin , * , P , parse_coefs , == , if , }

477 :	"complex_polynomia"
		- NEIGH  = { complex_polynomia , if , }
		- PARENT = { }
		- CHILD  = { inv_v , inv_u , fwd_v , fwd_u , / , complex_horner_reverse_4d , Q , complex_horner_forward_4d , == , fwd4d , inv_c , parse_coefs , if , + , uneg , degree , * , fwd_c , params , n , inv4d , vneg , pj_param_exists , P , }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { Q , fwd_origin , * , P , parse_coefs , == , if , }

479 :	"Q"
		- NEIGH  = { pj_param_exists , params , uneg , P , Q , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { params , pj_param_exists , P , vneg , Q , }

479 :	"uneg"
		- NEIGH  = { pj_param_exists , params , uneg , P , Q , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { params , pj_param_exists , P , vneg , Q , }

479 :	"pj_param_exists"
		- NEIGH  = { pj_param_exists , params , uneg , P , Q , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { params , pj_param_exists , P , vneg , Q , }

479 :	"P"
		- NEIGH  = { pj_param_exists , params , uneg , P , Q , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { params , pj_param_exists , P , vneg , Q , }

479 :	"params"
		- NEIGH  = { pj_param_exists , params , uneg , P , Q , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { params , pj_param_exists , P , vneg , Q , }

480 :	"Q"
		- NEIGH  = { params , pj_param_exists , P , vneg , Q , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { pj_param_exists , params , uneg , P , Q , }
		- SUCC   = { + , degree , * , n , }

480 :	"vneg"
		- NEIGH  = { params , pj_param_exists , P , vneg , Q , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { pj_param_exists , params , uneg , P , Q , }
		- SUCC   = { + , degree , * , n , }

480 :	"pj_param_exists"
		- NEIGH  = { params , pj_param_exists , P , vneg , Q , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { pj_param_exists , params , uneg , P , Q , }
		- SUCC   = { + , degree , * , n , }

480 :	"P"
		- NEIGH  = { params , pj_param_exists , P , vneg , Q , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { pj_param_exists , params , uneg , P , Q , }
		- SUCC   = { + , degree , * , n , }

480 :	"params"
		- NEIGH  = { params , pj_param_exists , P , vneg , Q , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { pj_param_exists , params , uneg , P , Q , }
		- SUCC   = { + , degree , * , n , }

482 :	"n"
		- NEIGH  = { + , degree , * , n , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { params , pj_param_exists , P , vneg , Q , }
		- SUCC   = { n , Q , P , fwd_c , parse_coefs , == , if , }

482 :	"*"
		- NEIGH  = { + , degree , * , n , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { params , pj_param_exists , P , vneg , Q , }
		- SUCC   = { n , Q , P , fwd_c , parse_coefs , == , if , }

482 :	"degree"
		- NEIGH  = { + , degree , * , n , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { params , pj_param_exists , P , vneg , Q , }
		- SUCC   = { n , Q , P , fwd_c , parse_coefs , == , if , }

482 :	"+"
		- NEIGH  = { + , degree , * , n , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { params , pj_param_exists , P , vneg , Q , }
		- SUCC   = { n , Q , P , fwd_c , parse_coefs , == , if , }

483 :	"if"
		- NEIGH  = { n , Q , P , fwd_c , parse_coefs , == , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { + , degree , * , n , }
		- SUCC   = { n , inv_c , Q , P , parse_coefs , == , if , }

483 :	"=="
		- NEIGH  = { n , Q , P , fwd_c , parse_coefs , == , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { + , degree , * , n , }
		- SUCC   = { n , inv_c , Q , P , parse_coefs , == , if , }

483 :	"parse_coefs"
		- NEIGH  = { n , Q , P , fwd_c , parse_coefs , == , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { + , degree , * , n , }
		- SUCC   = { n , inv_c , Q , P , parse_coefs , == , if , }

483 :	"P"
		- NEIGH  = { n , Q , P , fwd_c , parse_coefs , == , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { + , degree , * , n , }
		- SUCC   = { n , inv_c , Q , P , parse_coefs , == , if , }

483 :	"Q"
		- NEIGH  = { n , Q , P , fwd_c , parse_coefs , == , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { + , degree , * , n , }
		- SUCC   = { n , inv_c , Q , P , parse_coefs , == , if , }

483 :	"fwd_c"
		- NEIGH  = { n , Q , P , fwd_c , parse_coefs , == , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { + , degree , * , n , }
		- SUCC   = { n , inv_c , Q , P , parse_coefs , == , if , }

483 :	"n"
		- NEIGH  = { n , Q , P , fwd_c , parse_coefs , == , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { + , degree , * , n , }
		- SUCC   = { n , inv_c , Q , P , parse_coefs , == , if , }

485 :	"proj_log_error"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { n , Q , P , fwd_c , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }

485 :	"P"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { n , Q , P , fwd_c , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }

485 :	"_"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { n , Q , P , fwd_c , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }

486 :	"return"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { n , Q , P , fwd_c , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

486 :	"horner_freeup"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { n , Q , P , fwd_c , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

486 :	"P"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { n , Q , P , fwd_c , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

486 :	"PROJ_ERR_INVALID_OP_MISSING_ARG"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { n , Q , P , fwd_c , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

488 :	"if"
		- NEIGH  = { n , inv_c , Q , P , parse_coefs , == , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { n , Q , P , fwd_c , parse_coefs , == , if , }
		- SUCC   = { fwd4d , complex_horner_forward_4d , P , }

488 :	"=="
		- NEIGH  = { n , inv_c , Q , P , parse_coefs , == , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { n , Q , P , fwd_c , parse_coefs , == , if , }
		- SUCC   = { fwd4d , complex_horner_forward_4d , P , }

488 :	"parse_coefs"
		- NEIGH  = { n , inv_c , Q , P , parse_coefs , == , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { n , Q , P , fwd_c , parse_coefs , == , if , }
		- SUCC   = { fwd4d , complex_horner_forward_4d , P , }

488 :	"P"
		- NEIGH  = { n , inv_c , Q , P , parse_coefs , == , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { n , Q , P , fwd_c , parse_coefs , == , if , }
		- SUCC   = { fwd4d , complex_horner_forward_4d , P , }

488 :	"Q"
		- NEIGH  = { n , inv_c , Q , P , parse_coefs , == , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { n , Q , P , fwd_c , parse_coefs , == , if , }
		- SUCC   = { fwd4d , complex_horner_forward_4d , P , }

488 :	"inv_c"
		- NEIGH  = { n , inv_c , Q , P , parse_coefs , == , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { n , Q , P , fwd_c , parse_coefs , == , if , }
		- SUCC   = { fwd4d , complex_horner_forward_4d , P , }

488 :	"n"
		- NEIGH  = { n , inv_c , Q , P , parse_coefs , == , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { n , Q , P , fwd_c , parse_coefs , == , if , }
		- SUCC   = { fwd4d , complex_horner_forward_4d , P , }

490 :	"proj_log_error"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { n , inv_c , Q , P , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }

490 :	"P"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { n , inv_c , Q , P , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }

490 :	"_"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { n , inv_c , Q , P , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }

491 :	"return"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { n , inv_c , Q , P , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

491 :	"horner_freeup"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { n , inv_c , Q , P , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

491 :	"P"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { n , inv_c , Q , P , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

491 :	"PROJ_ERR_INVALID_OP_MISSING_ARG"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { n , inv_c , Q , P , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

493 :	"P"
		- NEIGH  = { fwd4d , complex_horner_forward_4d , P , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { n , inv_c , Q , P , parse_coefs , == , if , }
		- SUCC   = { complex_horner_reverse_4d , inv4d , P , }

493 :	"fwd4d"
		- NEIGH  = { fwd4d , complex_horner_forward_4d , P , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { n , inv_c , Q , P , parse_coefs , == , if , }
		- SUCC   = { complex_horner_reverse_4d , inv4d , P , }

493 :	"complex_horner_forward_4d"
		- NEIGH  = { fwd4d , complex_horner_forward_4d , P , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { n , inv_c , Q , P , parse_coefs , == , if , }
		- SUCC   = { complex_horner_reverse_4d , inv4d , P , }

494 :	"P"
		- NEIGH  = { complex_horner_reverse_4d , inv4d , P , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { fwd4d , complex_horner_forward_4d , P , }
		- SUCC   = { }

494 :	"inv4d"
		- NEIGH  = { complex_horner_reverse_4d , inv4d , P , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { fwd4d , complex_horner_forward_4d , P , }
		- SUCC   = { }

494 :	"complex_horner_reverse_4d"
		- NEIGH  = { complex_horner_reverse_4d , inv4d , P , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { fwd4d , complex_horner_forward_4d , P , }
		- SUCC   = { }

498 :	"n"
		- NEIGH  = { / , + , * , degree , n , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { n , Q , P , parse_coefs , == , fwd_u , if , }

498 :	"degree"
		- NEIGH  = { / , + , * , degree , n , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { n , Q , P , parse_coefs , == , fwd_u , if , }

498 :	"+"
		- NEIGH  = { / , + , * , degree , n , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { n , Q , P , parse_coefs , == , fwd_u , if , }

498 :	"*"
		- NEIGH  = { / , + , * , degree , n , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { n , Q , P , parse_coefs , == , fwd_u , if , }

498 :	"degree"
		- NEIGH  = { / , + , * , degree , n , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { n , Q , P , parse_coefs , == , fwd_u , if , }

498 :	"+"
		- NEIGH  = { / , + , * , degree , n , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { n , Q , P , parse_coefs , == , fwd_u , if , }

498 :	"/"
		- NEIGH  = { / , + , * , degree , n , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { n , Q , P , parse_coefs , == , fwd_u , if , }

499 :	"if"
		- NEIGH  = { n , Q , P , parse_coefs , == , fwd_u , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { / , + , * , degree , n , }
		- SUCC   = { n , fwd_v , Q , P , parse_coefs , == , if , }

499 :	"=="
		- NEIGH  = { n , Q , P , parse_coefs , == , fwd_u , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { / , + , * , degree , n , }
		- SUCC   = { n , fwd_v , Q , P , parse_coefs , == , if , }

499 :	"parse_coefs"
		- NEIGH  = { n , Q , P , parse_coefs , == , fwd_u , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { / , + , * , degree , n , }
		- SUCC   = { n , fwd_v , Q , P , parse_coefs , == , if , }

499 :	"P"
		- NEIGH  = { n , Q , P , parse_coefs , == , fwd_u , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { / , + , * , degree , n , }
		- SUCC   = { n , fwd_v , Q , P , parse_coefs , == , if , }

499 :	"Q"
		- NEIGH  = { n , Q , P , parse_coefs , == , fwd_u , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { / , + , * , degree , n , }
		- SUCC   = { n , fwd_v , Q , P , parse_coefs , == , if , }

499 :	"fwd_u"
		- NEIGH  = { n , Q , P , parse_coefs , == , fwd_u , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { / , + , * , degree , n , }
		- SUCC   = { n , fwd_v , Q , P , parse_coefs , == , if , }

499 :	"n"
		- NEIGH  = { n , Q , P , parse_coefs , == , fwd_u , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { / , + , * , degree , n , }
		- SUCC   = { n , fwd_v , Q , P , parse_coefs , == , if , }

501 :	"proj_log_error"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { n , Q , P , parse_coefs , == , fwd_u , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }

501 :	"P"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { n , Q , P , parse_coefs , == , fwd_u , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }

501 :	"_"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { n , Q , P , parse_coefs , == , fwd_u , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }

502 :	"return"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { n , Q , P , parse_coefs , == , fwd_u , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

502 :	"horner_freeup"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { n , Q , P , parse_coefs , == , fwd_u , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

502 :	"P"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { n , Q , P , parse_coefs , == , fwd_u , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

502 :	"PROJ_ERR_INVALID_OP_MISSING_ARG"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { n , Q , P , parse_coefs , == , fwd_u , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

504 :	"if"
		- NEIGH  = { n , fwd_v , Q , P , parse_coefs , == , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { n , Q , P , parse_coefs , == , fwd_u , if , }
		- SUCC   = { n , Q , P , inv_u , parse_coefs , == , if , }

504 :	"=="
		- NEIGH  = { n , fwd_v , Q , P , parse_coefs , == , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { n , Q , P , parse_coefs , == , fwd_u , if , }
		- SUCC   = { n , Q , P , inv_u , parse_coefs , == , if , }

504 :	"parse_coefs"
		- NEIGH  = { n , fwd_v , Q , P , parse_coefs , == , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { n , Q , P , parse_coefs , == , fwd_u , if , }
		- SUCC   = { n , Q , P , inv_u , parse_coefs , == , if , }

504 :	"P"
		- NEIGH  = { n , fwd_v , Q , P , parse_coefs , == , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { n , Q , P , parse_coefs , == , fwd_u , if , }
		- SUCC   = { n , Q , P , inv_u , parse_coefs , == , if , }

504 :	"Q"
		- NEIGH  = { n , fwd_v , Q , P , parse_coefs , == , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { n , Q , P , parse_coefs , == , fwd_u , if , }
		- SUCC   = { n , Q , P , inv_u , parse_coefs , == , if , }

504 :	"fwd_v"
		- NEIGH  = { n , fwd_v , Q , P , parse_coefs , == , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { n , Q , P , parse_coefs , == , fwd_u , if , }
		- SUCC   = { n , Q , P , inv_u , parse_coefs , == , if , }

504 :	"n"
		- NEIGH  = { n , fwd_v , Q , P , parse_coefs , == , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { n , Q , P , parse_coefs , == , fwd_u , if , }
		- SUCC   = { n , Q , P , inv_u , parse_coefs , == , if , }

506 :	"proj_log_error"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { n , fwd_v , Q , P , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }

506 :	"P"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { n , fwd_v , Q , P , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }

506 :	"_"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { n , fwd_v , Q , P , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }

507 :	"return"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { n , fwd_v , Q , P , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

507 :	"horner_freeup"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { n , fwd_v , Q , P , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

507 :	"P"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { n , fwd_v , Q , P , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

507 :	"PROJ_ERR_INVALID_OP_MISSING_ARG"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { n , fwd_v , Q , P , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

509 :	"if"
		- NEIGH  = { n , Q , P , inv_u , parse_coefs , == , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { n , fwd_v , Q , P , parse_coefs , == , if , }
		- SUCC   = { n , inv_v , Q , P , parse_coefs , == , if , }

509 :	"=="
		- NEIGH  = { n , Q , P , inv_u , parse_coefs , == , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { n , fwd_v , Q , P , parse_coefs , == , if , }
		- SUCC   = { n , inv_v , Q , P , parse_coefs , == , if , }

509 :	"parse_coefs"
		- NEIGH  = { n , Q , P , inv_u , parse_coefs , == , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { n , fwd_v , Q , P , parse_coefs , == , if , }
		- SUCC   = { n , inv_v , Q , P , parse_coefs , == , if , }

509 :	"P"
		- NEIGH  = { n , Q , P , inv_u , parse_coefs , == , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { n , fwd_v , Q , P , parse_coefs , == , if , }
		- SUCC   = { n , inv_v , Q , P , parse_coefs , == , if , }

509 :	"Q"
		- NEIGH  = { n , Q , P , inv_u , parse_coefs , == , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { n , fwd_v , Q , P , parse_coefs , == , if , }
		- SUCC   = { n , inv_v , Q , P , parse_coefs , == , if , }

509 :	"inv_u"
		- NEIGH  = { n , Q , P , inv_u , parse_coefs , == , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { n , fwd_v , Q , P , parse_coefs , == , if , }
		- SUCC   = { n , inv_v , Q , P , parse_coefs , == , if , }

509 :	"n"
		- NEIGH  = { n , Q , P , inv_u , parse_coefs , == , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { n , fwd_v , Q , P , parse_coefs , == , if , }
		- SUCC   = { n , inv_v , Q , P , parse_coefs , == , if , }

511 :	"proj_log_error"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { n , Q , P , inv_u , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }

511 :	"P"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { n , Q , P , inv_u , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }

511 :	"_"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { n , Q , P , inv_u , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }

512 :	"return"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { n , Q , P , inv_u , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

512 :	"horner_freeup"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { n , Q , P , inv_u , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

512 :	"P"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { n , Q , P , inv_u , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

512 :	"PROJ_ERR_INVALID_OP_MISSING_ARG"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { n , Q , P , inv_u , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

514 :	"if"
		- NEIGH  = { n , inv_v , Q , P , parse_coefs , == , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { n , Q , P , inv_u , parse_coefs , == , if , }
		- SUCC   = { }

514 :	"=="
		- NEIGH  = { n , inv_v , Q , P , parse_coefs , == , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { n , Q , P , inv_u , parse_coefs , == , if , }
		- SUCC   = { }

514 :	"parse_coefs"
		- NEIGH  = { n , inv_v , Q , P , parse_coefs , == , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { n , Q , P , inv_u , parse_coefs , == , if , }
		- SUCC   = { }

514 :	"P"
		- NEIGH  = { n , inv_v , Q , P , parse_coefs , == , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { n , Q , P , inv_u , parse_coefs , == , if , }
		- SUCC   = { }

514 :	"Q"
		- NEIGH  = { n , inv_v , Q , P , parse_coefs , == , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { n , Q , P , inv_u , parse_coefs , == , if , }
		- SUCC   = { }

514 :	"inv_v"
		- NEIGH  = { n , inv_v , Q , P , parse_coefs , == , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { n , Q , P , inv_u , parse_coefs , == , if , }
		- SUCC   = { }

514 :	"n"
		- NEIGH  = { n , inv_v , Q , P , parse_coefs , == , if , }
		- PARENT = { complex_polynomia , if , }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { n , Q , P , inv_u , parse_coefs , == , if , }
		- SUCC   = { }

516 :	"proj_log_error"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { n , inv_v , Q , P , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }

516 :	"P"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { n , inv_v , Q , P , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }

516 :	"_"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { n , inv_v , Q , P , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }

517 :	"return"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { n , inv_v , Q , P , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

517 :	"horner_freeup"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { n , inv_v , Q , P , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

517 :	"P"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { n , inv_v , Q , P , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

517 :	"PROJ_ERR_INVALID_OP_MISSING_ARG"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { n , inv_v , Q , P , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

521 :	"if"
		- NEIGH  = { Q , fwd_origin , * , P , parse_coefs , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { complex_polynomia , if , }
		- SUCC   = { inv_origin , Q , * , P , parse_coefs , == , if , }

521 :	"=="
		- NEIGH  = { Q , fwd_origin , * , P , parse_coefs , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { complex_polynomia , if , }
		- SUCC   = { inv_origin , Q , * , P , parse_coefs , == , if , }

521 :	"parse_coefs"
		- NEIGH  = { Q , fwd_origin , * , P , parse_coefs , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { complex_polynomia , if , }
		- SUCC   = { inv_origin , Q , * , P , parse_coefs , == , if , }

521 :	"P"
		- NEIGH  = { Q , fwd_origin , * , P , parse_coefs , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { complex_polynomia , if , }
		- SUCC   = { inv_origin , Q , * , P , parse_coefs , == , if , }

521 :	"*"
		- NEIGH  = { Q , fwd_origin , * , P , parse_coefs , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { complex_polynomia , if , }
		- SUCC   = { inv_origin , Q , * , P , parse_coefs , == , if , }

521 :	"Q"
		- NEIGH  = { Q , fwd_origin , * , P , parse_coefs , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { complex_polynomia , if , }
		- SUCC   = { inv_origin , Q , * , P , parse_coefs , == , if , }

521 :	"fwd_origin"
		- NEIGH  = { Q , fwd_origin , * , P , parse_coefs , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { complex_polynomia , if , }
		- SUCC   = { inv_origin , Q , * , P , parse_coefs , == , if , }

523 :	"proj_log_error"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { Q , fwd_origin , * , P , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }

523 :	"P"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { Q , fwd_origin , * , P , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }

523 :	"_"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { Q , fwd_origin , * , P , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }

524 :	"return"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { Q , fwd_origin , * , P , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

524 :	"horner_freeup"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { Q , fwd_origin , * , P , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

524 :	"P"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { Q , fwd_origin , * , P , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

524 :	"PROJ_ERR_INVALID_OP_MISSING_ARG"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { Q , fwd_origin , * , P , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

526 :	"if"
		- NEIGH  = { inv_origin , Q , * , P , parse_coefs , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { Q , fwd_origin , * , P , parse_coefs , == , if , }
		- SUCC   = { P , Q , & , parse_coefs , range , == , if , }

526 :	"=="
		- NEIGH  = { inv_origin , Q , * , P , parse_coefs , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { Q , fwd_origin , * , P , parse_coefs , == , if , }
		- SUCC   = { P , Q , & , parse_coefs , range , == , if , }

526 :	"parse_coefs"
		- NEIGH  = { inv_origin , Q , * , P , parse_coefs , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { Q , fwd_origin , * , P , parse_coefs , == , if , }
		- SUCC   = { P , Q , & , parse_coefs , range , == , if , }

526 :	"P"
		- NEIGH  = { inv_origin , Q , * , P , parse_coefs , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { Q , fwd_origin , * , P , parse_coefs , == , if , }
		- SUCC   = { P , Q , & , parse_coefs , range , == , if , }

526 :	"*"
		- NEIGH  = { inv_origin , Q , * , P , parse_coefs , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { Q , fwd_origin , * , P , parse_coefs , == , if , }
		- SUCC   = { P , Q , & , parse_coefs , range , == , if , }

526 :	"Q"
		- NEIGH  = { inv_origin , Q , * , P , parse_coefs , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { Q , fwd_origin , * , P , parse_coefs , == , if , }
		- SUCC   = { P , Q , & , parse_coefs , range , == , if , }

526 :	"inv_origin"
		- NEIGH  = { inv_origin , Q , * , P , parse_coefs , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , horner_freeup , P , _ , return , proj_log_error , }
		- PRED   = { Q , fwd_origin , * , P , parse_coefs , == , if , }
		- SUCC   = { P , Q , & , parse_coefs , range , == , if , }

528 :	"proj_log_error"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { inv_origin , Q , * , P , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }

528 :	"P"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { inv_origin , Q , * , P , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }

528 :	"_"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { inv_origin , Q , * , P , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }

529 :	"return"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { inv_origin , Q , * , P , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

529 :	"horner_freeup"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { inv_origin , Q , * , P , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

529 :	"P"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { inv_origin , Q , * , P , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

529 :	"PROJ_ERR_INVALID_OP_MISSING_ARG"
		- NEIGH  = { horner_freeup , PROJ_ERR_INVALID_OP_MISSING_ARG , P , return , }
		- PARENT = { inv_origin , Q , * , P , parse_coefs , == , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

531 :	"if"
		- NEIGH  = { P , Q , & , parse_coefs , range , == , if , }
		- PARENT = { }
		- CHILD  = { range , Q , }
		- PRED   = { inv_origin , Q , * , P , parse_coefs , == , if , }
		- SUCC   = { P , return , }

531 :	"=="
		- NEIGH  = { P , Q , & , parse_coefs , range , == , if , }
		- PARENT = { }
		- CHILD  = { range , Q , }
		- PRED   = { inv_origin , Q , * , P , parse_coefs , == , if , }
		- SUCC   = { P , return , }

531 :	"parse_coefs"
		- NEIGH  = { P , Q , & , parse_coefs , range , == , if , }
		- PARENT = { }
		- CHILD  = { range , Q , }
		- PRED   = { inv_origin , Q , * , P , parse_coefs , == , if , }
		- SUCC   = { P , return , }

531 :	"P"
		- NEIGH  = { P , Q , & , parse_coefs , range , == , if , }
		- PARENT = { }
		- CHILD  = { range , Q , }
		- PRED   = { inv_origin , Q , * , P , parse_coefs , == , if , }
		- SUCC   = { P , return , }

531 :	"&"
		- NEIGH  = { P , Q , & , parse_coefs , range , == , if , }
		- PARENT = { }
		- CHILD  = { range , Q , }
		- PRED   = { inv_origin , Q , * , P , parse_coefs , == , if , }
		- SUCC   = { P , return , }

531 :	"Q"
		- NEIGH  = { P , Q , & , parse_coefs , range , == , if , }
		- PARENT = { }
		- CHILD  = { range , Q , }
		- PRED   = { inv_origin , Q , * , P , parse_coefs , == , if , }
		- SUCC   = { P , return , }

531 :	"range"
		- NEIGH  = { P , Q , & , parse_coefs , range , == , if , }
		- PARENT = { }
		- CHILD  = { range , Q , }
		- PRED   = { inv_origin , Q , * , P , parse_coefs , == , if , }
		- SUCC   = { P , return , }

532 :	"Q"
		- NEIGH  = { range , Q , }
		- PARENT = { P , Q , & , parse_coefs , range , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

532 :	"range"
		- NEIGH  = { range , Q , }
		- PARENT = { P , Q , & , parse_coefs , range , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

534 :	"return"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , Q , & , parse_coefs , range , == , if , }
		- SUCC   = { }

534 :	"P"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , Q , & , parse_coefs , range , == , if , }
		- SUCC   = { }

