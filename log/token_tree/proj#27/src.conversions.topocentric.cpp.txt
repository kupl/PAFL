33 :	"PROJ_HEAD"
		- NEIGH  = { PROJ_HEAD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

33 :	"topocentric"
		- NEIGH  = { topocentric , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

39 :	"pj_opaque"
		- NEIGH  = { pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

40 :	"X0"
		- NEIGH  = { X0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

41 :	"Y0"
		- NEIGH  = { Y0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

42 :	"Z0"
		- NEIGH  = { Z0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

43 :	"sinphi0"
		- NEIGH  = { sinphi0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

44 :	"cosphi0"
		- NEIGH  = { cosphi0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

45 :	"sinlam0"
		- NEIGH  = { sinlam0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

46 :	"coslam0"
		- NEIGH  = { coslam0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

51 :	"PJ_COORD"
		- NEIGH  = { PJ_COORD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

51 :	"topocentric_fwd"
		- NEIGH  = { topocentric_fwd , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

51 :	"PJ_COORD"
		- NEIGH  = { PJ_COORD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

51 :	"in"
		- NEIGH  = { in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

51 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

51 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

51 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

53 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { out , PJ_COORD , }

53 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { out , PJ_COORD , }

53 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { out , PJ_COORD , }

53 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { out , PJ_COORD , }

53 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { out , PJ_COORD , }

53 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { out , PJ_COORD , }

53 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { out , PJ_COORD , }

53 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { out , PJ_COORD , }

53 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { out , PJ_COORD , }

53 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { out , PJ_COORD , }

54 :	"PJ_COORD"
		- NEIGH  = { out , PJ_COORD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { X0 , Q , - , xyz , in , x , dX , }

54 :	"out"
		- NEIGH  = { out , PJ_COORD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { X0 , Q , - , xyz , in , x , dX , }

55 :	"dX"
		- NEIGH  = { X0 , Q , - , xyz , in , x , dX , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { Y0 , Q , - , y , xyz , in , dY , }

55 :	"in"
		- NEIGH  = { X0 , Q , - , xyz , in , x , dX , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { Y0 , Q , - , y , xyz , in , dY , }

55 :	"xyz"
		- NEIGH  = { X0 , Q , - , xyz , in , x , dX , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { Y0 , Q , - , y , xyz , in , dY , }

55 :	"x"
		- NEIGH  = { X0 , Q , - , xyz , in , x , dX , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { Y0 , Q , - , y , xyz , in , dY , }

55 :	"-"
		- NEIGH  = { X0 , Q , - , xyz , in , x , dX , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { Y0 , Q , - , y , xyz , in , dY , }

55 :	"Q"
		- NEIGH  = { X0 , Q , - , xyz , in , x , dX , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { Y0 , Q , - , y , xyz , in , dY , }

55 :	"X0"
		- NEIGH  = { X0 , Q , - , xyz , in , x , dX , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { Y0 , Q , - , y , xyz , in , dY , }

56 :	"dY"
		- NEIGH  = { Y0 , Q , - , y , xyz , in , dY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { X0 , Q , - , xyz , in , x , dX , }
		- SUCC   = { Q , - , xyz , Z0 , dZ , in , z , }

56 :	"in"
		- NEIGH  = { Y0 , Q , - , y , xyz , in , dY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { X0 , Q , - , xyz , in , x , dX , }
		- SUCC   = { Q , - , xyz , Z0 , dZ , in , z , }

56 :	"xyz"
		- NEIGH  = { Y0 , Q , - , y , xyz , in , dY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { X0 , Q , - , xyz , in , x , dX , }
		- SUCC   = { Q , - , xyz , Z0 , dZ , in , z , }

56 :	"y"
		- NEIGH  = { Y0 , Q , - , y , xyz , in , dY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { X0 , Q , - , xyz , in , x , dX , }
		- SUCC   = { Q , - , xyz , Z0 , dZ , in , z , }

56 :	"-"
		- NEIGH  = { Y0 , Q , - , y , xyz , in , dY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { X0 , Q , - , xyz , in , x , dX , }
		- SUCC   = { Q , - , xyz , Z0 , dZ , in , z , }

56 :	"Q"
		- NEIGH  = { Y0 , Q , - , y , xyz , in , dY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { X0 , Q , - , xyz , in , x , dX , }
		- SUCC   = { Q , - , xyz , Z0 , dZ , in , z , }

56 :	"Y0"
		- NEIGH  = { Y0 , Q , - , y , xyz , in , dY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { X0 , Q , - , xyz , in , x , dX , }
		- SUCC   = { Q , - , xyz , Z0 , dZ , in , z , }

57 :	"dZ"
		- NEIGH  = { Q , - , xyz , Z0 , dZ , in , z , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Y0 , Q , - , y , xyz , in , dY , }
		- SUCC   = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }

57 :	"in"
		- NEIGH  = { Q , - , xyz , Z0 , dZ , in , z , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Y0 , Q , - , y , xyz , in , dY , }
		- SUCC   = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }

57 :	"xyz"
		- NEIGH  = { Q , - , xyz , Z0 , dZ , in , z , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Y0 , Q , - , y , xyz , in , dY , }
		- SUCC   = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }

57 :	"z"
		- NEIGH  = { Q , - , xyz , Z0 , dZ , in , z , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Y0 , Q , - , y , xyz , in , dY , }
		- SUCC   = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }

57 :	"-"
		- NEIGH  = { Q , - , xyz , Z0 , dZ , in , z , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Y0 , Q , - , y , xyz , in , dY , }
		- SUCC   = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }

57 :	"Q"
		- NEIGH  = { Q , - , xyz , Z0 , dZ , in , z , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Y0 , Q , - , y , xyz , in , dY , }
		- SUCC   = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }

57 :	"Z0"
		- NEIGH  = { Q , - , xyz , Z0 , dZ , in , z , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Y0 , Q , - , y , xyz , in , dY , }
		- SUCC   = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }

58 :	"out"
		- NEIGH  = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , - , xyz , Z0 , dZ , in , z , }
		- SUCC   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }

58 :	"xyz"
		- NEIGH  = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , - , xyz , Z0 , dZ , in , z , }
		- SUCC   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }

58 :	"x"
		- NEIGH  = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , - , xyz , Z0 , dZ , in , z , }
		- SUCC   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }

58 :	"-"
		- NEIGH  = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , - , xyz , Z0 , dZ , in , z , }
		- SUCC   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }

58 :	"dX"
		- NEIGH  = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , - , xyz , Z0 , dZ , in , z , }
		- SUCC   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }

58 :	"*"
		- NEIGH  = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , - , xyz , Z0 , dZ , in , z , }
		- SUCC   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }

58 :	"Q"
		- NEIGH  = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , - , xyz , Z0 , dZ , in , z , }
		- SUCC   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }

58 :	"sinlam0"
		- NEIGH  = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , - , xyz , Z0 , dZ , in , z , }
		- SUCC   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }

58 :	"+"
		- NEIGH  = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , - , xyz , Z0 , dZ , in , z , }
		- SUCC   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }

58 :	"dY"
		- NEIGH  = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , - , xyz , Z0 , dZ , in , z , }
		- SUCC   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }

58 :	"*"
		- NEIGH  = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , - , xyz , Z0 , dZ , in , z , }
		- SUCC   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }

58 :	"Q"
		- NEIGH  = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , - , xyz , Z0 , dZ , in , z , }
		- SUCC   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }

58 :	"coslam0"
		- NEIGH  = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , - , xyz , Z0 , dZ , in , z , }
		- SUCC   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }

59 :	"out"
		- NEIGH  = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- SUCC   = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }

59 :	"xyz"
		- NEIGH  = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- SUCC   = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }

59 :	"y"
		- NEIGH  = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- SUCC   = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }

59 :	"-"
		- NEIGH  = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- SUCC   = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }

59 :	"dX"
		- NEIGH  = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- SUCC   = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }

59 :	"*"
		- NEIGH  = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- SUCC   = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }

59 :	"Q"
		- NEIGH  = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- SUCC   = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }

59 :	"sinphi0"
		- NEIGH  = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- SUCC   = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }

59 :	"*"
		- NEIGH  = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- SUCC   = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }

59 :	"Q"
		- NEIGH  = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- SUCC   = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }

59 :	"coslam0"
		- NEIGH  = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- SUCC   = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }

59 :	"-"
		- NEIGH  = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- SUCC   = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }

59 :	"dY"
		- NEIGH  = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- SUCC   = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }

59 :	"*"
		- NEIGH  = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- SUCC   = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }

59 :	"Q"
		- NEIGH  = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- SUCC   = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }

59 :	"sinphi0"
		- NEIGH  = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- SUCC   = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }

59 :	"*"
		- NEIGH  = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- SUCC   = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }

59 :	"Q"
		- NEIGH  = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- SUCC   = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }

59 :	"sinlam0"
		- NEIGH  = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- SUCC   = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }

59 :	"+"
		- NEIGH  = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- SUCC   = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }

59 :	"dZ"
		- NEIGH  = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- SUCC   = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }

59 :	"*"
		- NEIGH  = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- SUCC   = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }

59 :	"Q"
		- NEIGH  = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- SUCC   = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }

59 :	"cosphi0"
		- NEIGH  = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coslam0 , + , sinlam0 , Q , * , dX , x , xyz , - , dY , out , }
		- SUCC   = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }

60 :	"out"
		- NEIGH  = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- SUCC   = { out , return , }

60 :	"xyz"
		- NEIGH  = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- SUCC   = { out , return , }

60 :	"z"
		- NEIGH  = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- SUCC   = { out , return , }

60 :	"dX"
		- NEIGH  = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- SUCC   = { out , return , }

60 :	"*"
		- NEIGH  = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- SUCC   = { out , return , }

60 :	"Q"
		- NEIGH  = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- SUCC   = { out , return , }

60 :	"cosphi0"
		- NEIGH  = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- SUCC   = { out , return , }

60 :	"*"
		- NEIGH  = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- SUCC   = { out , return , }

60 :	"Q"
		- NEIGH  = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- SUCC   = { out , return , }

60 :	"coslam0"
		- NEIGH  = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- SUCC   = { out , return , }

60 :	"+"
		- NEIGH  = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- SUCC   = { out , return , }

60 :	"dY"
		- NEIGH  = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- SUCC   = { out , return , }

60 :	"*"
		- NEIGH  = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- SUCC   = { out , return , }

60 :	"Q"
		- NEIGH  = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- SUCC   = { out , return , }

60 :	"cosphi0"
		- NEIGH  = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- SUCC   = { out , return , }

60 :	"*"
		- NEIGH  = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- SUCC   = { out , return , }

60 :	"Q"
		- NEIGH  = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- SUCC   = { out , return , }

60 :	"sinlam0"
		- NEIGH  = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- SUCC   = { out , return , }

60 :	"+"
		- NEIGH  = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- SUCC   = { out , return , }

60 :	"dZ"
		- NEIGH  = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- SUCC   = { out , return , }

60 :	"*"
		- NEIGH  = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- SUCC   = { out , return , }

60 :	"Q"
		- NEIGH  = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- SUCC   = { out , return , }

60 :	"sinphi0"
		- NEIGH  = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dZ , + , sinlam0 , coslam0 , dY , Q , dX , * , cosphi0 , - , y , xyz , sinphi0 , out , }
		- SUCC   = { out , return , }

61 :	"return"
		- NEIGH  = { out , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }
		- SUCC   = { }

61 :	"out"
		- NEIGH  = { out , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dZ , sinlam0 , + , coslam0 , dY , Q , cosphi0 , z , * , dX , xyz , sinphi0 , out , }
		- SUCC   = { }

65 :	"PJ_COORD"
		- NEIGH  = { PJ_COORD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

65 :	"topocentric_inv"
		- NEIGH  = { topocentric_inv , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

65 :	"PJ_COORD"
		- NEIGH  = { PJ_COORD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

65 :	"in"
		- NEIGH  = { in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

65 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

65 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

65 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

67 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { out , PJ_COORD , }

67 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { out , PJ_COORD , }

67 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { out , PJ_COORD , }

67 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { out , PJ_COORD , }

67 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { out , PJ_COORD , }

67 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { out , PJ_COORD , }

67 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { out , PJ_COORD , }

67 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { out , PJ_COORD , }

67 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { out , PJ_COORD , }

67 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { out , PJ_COORD , }

68 :	"PJ_COORD"
		- NEIGH  = { out , PJ_COORD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }

68 :	"out"
		- NEIGH  = { out , PJ_COORD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }

69 :	"out"
		- NEIGH  = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }

69 :	"xyz"
		- NEIGH  = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }

69 :	"x"
		- NEIGH  = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }

69 :	"Q"
		- NEIGH  = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }

69 :	"X0"
		- NEIGH  = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }

69 :	"-"
		- NEIGH  = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }

69 :	"in"
		- NEIGH  = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }

69 :	"xyz"
		- NEIGH  = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }

69 :	"x"
		- NEIGH  = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }

69 :	"*"
		- NEIGH  = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }

69 :	"Q"
		- NEIGH  = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }

69 :	"sinlam0"
		- NEIGH  = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }

69 :	"-"
		- NEIGH  = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }

69 :	"in"
		- NEIGH  = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }

69 :	"xyz"
		- NEIGH  = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }

69 :	"y"
		- NEIGH  = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }

69 :	"*"
		- NEIGH  = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }

69 :	"Q"
		- NEIGH  = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }

69 :	"sinphi0"
		- NEIGH  = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }

69 :	"*"
		- NEIGH  = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }

69 :	"Q"
		- NEIGH  = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }

69 :	"coslam0"
		- NEIGH  = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }

69 :	"+"
		- NEIGH  = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }

69 :	"in"
		- NEIGH  = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }

69 :	"xyz"
		- NEIGH  = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }

69 :	"z"
		- NEIGH  = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }

69 :	"*"
		- NEIGH  = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }

69 :	"Q"
		- NEIGH  = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }

69 :	"cosphi0"
		- NEIGH  = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }

69 :	"*"
		- NEIGH  = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }

69 :	"Q"
		- NEIGH  = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }

69 :	"coslam0"
		- NEIGH  = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , PJ_COORD , }
		- SUCC   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }

70 :	"out"
		- NEIGH  = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- SUCC   = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }

70 :	"xyz"
		- NEIGH  = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- SUCC   = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }

70 :	"y"
		- NEIGH  = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- SUCC   = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }

70 :	"Q"
		- NEIGH  = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- SUCC   = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }

70 :	"Y0"
		- NEIGH  = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- SUCC   = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }

70 :	"+"
		- NEIGH  = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- SUCC   = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }

70 :	"in"
		- NEIGH  = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- SUCC   = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }

70 :	"xyz"
		- NEIGH  = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- SUCC   = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }

70 :	"x"
		- NEIGH  = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- SUCC   = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }

70 :	"*"
		- NEIGH  = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- SUCC   = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }

70 :	"Q"
		- NEIGH  = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- SUCC   = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }

70 :	"coslam0"
		- NEIGH  = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- SUCC   = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }

70 :	"-"
		- NEIGH  = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- SUCC   = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }

70 :	"in"
		- NEIGH  = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- SUCC   = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }

70 :	"xyz"
		- NEIGH  = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- SUCC   = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }

70 :	"y"
		- NEIGH  = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- SUCC   = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }

70 :	"*"
		- NEIGH  = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- SUCC   = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }

70 :	"Q"
		- NEIGH  = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- SUCC   = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }

70 :	"sinphi0"
		- NEIGH  = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- SUCC   = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }

70 :	"*"
		- NEIGH  = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- SUCC   = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }

70 :	"Q"
		- NEIGH  = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- SUCC   = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }

70 :	"sinlam0"
		- NEIGH  = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- SUCC   = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }

70 :	"+"
		- NEIGH  = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- SUCC   = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }

70 :	"in"
		- NEIGH  = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- SUCC   = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }

70 :	"xyz"
		- NEIGH  = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- SUCC   = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }

70 :	"z"
		- NEIGH  = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- SUCC   = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }

70 :	"*"
		- NEIGH  = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- SUCC   = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }

70 :	"Q"
		- NEIGH  = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- SUCC   = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }

70 :	"cosphi0"
		- NEIGH  = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- SUCC   = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }

70 :	"*"
		- NEIGH  = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- SUCC   = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }

70 :	"Q"
		- NEIGH  = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- SUCC   = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }

70 :	"sinlam0"
		- NEIGH  = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , + , coslam0 , sinlam0 , cosphi0 , - , y , * , in , Q , xyz , x , sinphi0 , out , X0 , }
		- SUCC   = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }

71 :	"out"
		- NEIGH  = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- SUCC   = { out , return , }

71 :	"xyz"
		- NEIGH  = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- SUCC   = { out , return , }

71 :	"z"
		- NEIGH  = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- SUCC   = { out , return , }

71 :	"Q"
		- NEIGH  = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- SUCC   = { out , return , }

71 :	"Z0"
		- NEIGH  = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- SUCC   = { out , return , }

71 :	"+"
		- NEIGH  = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- SUCC   = { out , return , }

71 :	"in"
		- NEIGH  = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- SUCC   = { out , return , }

71 :	"xyz"
		- NEIGH  = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- SUCC   = { out , return , }

71 :	"y"
		- NEIGH  = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- SUCC   = { out , return , }

71 :	"*"
		- NEIGH  = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- SUCC   = { out , return , }

71 :	"Q"
		- NEIGH  = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- SUCC   = { out , return , }

71 :	"cosphi0"
		- NEIGH  = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- SUCC   = { out , return , }

71 :	"+"
		- NEIGH  = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- SUCC   = { out , return , }

71 :	"in"
		- NEIGH  = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- SUCC   = { out , return , }

71 :	"xyz"
		- NEIGH  = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- SUCC   = { out , return , }

71 :	"z"
		- NEIGH  = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- SUCC   = { out , return , }

71 :	"*"
		- NEIGH  = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- SUCC   = { out , return , }

71 :	"Q"
		- NEIGH  = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- SUCC   = { out , return , }

71 :	"sinphi0"
		- NEIGH  = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , sinlam0 , cosphi0 , Y0 , y , - , xyz , x , coslam0 , * , in , + , Q , sinphi0 , out , }
		- SUCC   = { out , return , }

72 :	"return"
		- NEIGH  = { out , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }
		- SUCC   = { }

72 :	"out"
		- NEIGH  = { out , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , Q , cosphi0 , * , y , z , in , Z0 , xyz , sinphi0 , out , }
		- SUCC   = { }

77 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

77 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

77 :	"CONVERSION"
		- NEIGH  = { CONVERSION , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

77 :	"topocentric"
		- NEIGH  = { topocentric , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

79 :	"pj_opaque"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

79 :	"*"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

79 :	"Q"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

79 :	"static_cast"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

79 :	"<"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

79 :	"pj_opaque"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

79 :	"*"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

79 :	">"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

79 :	"calloc"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

79 :	"pj_opaque"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

80 :	"if"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PRED   = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { > , * , static_cast , < , Q , opaque , P , }

80 :	"=="
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PRED   = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { > , * , static_cast , < , Q , opaque , P , }

80 :	"Q"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PRED   = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { > , * , static_cast , < , Q , opaque , P , }

81 :	"return"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

81 :	"pj_default_destructor"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

81 :	"P"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

81 :	"PROJ_ERR_OTHER"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

82 :	"P"
		- NEIGH  = { > , * , static_cast , < , Q , opaque , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { params , P , pj_param_exists , hasX0 , }

82 :	"opaque"
		- NEIGH  = { > , * , static_cast , < , Q , opaque , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { params , P , pj_param_exists , hasX0 , }

82 :	"static_cast"
		- NEIGH  = { > , * , static_cast , < , Q , opaque , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { params , P , pj_param_exists , hasX0 , }

82 :	"<"
		- NEIGH  = { > , * , static_cast , < , Q , opaque , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { params , P , pj_param_exists , hasX0 , }

82 :	"*"
		- NEIGH  = { > , * , static_cast , < , Q , opaque , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { params , P , pj_param_exists , hasX0 , }

82 :	">"
		- NEIGH  = { > , * , static_cast , < , Q , opaque , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { params , P , pj_param_exists , hasX0 , }

82 :	"Q"
		- NEIGH  = { > , * , static_cast , < , Q , opaque , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { params , P , pj_param_exists , hasX0 , }

92 :	"hasX0"
		- NEIGH  = { params , P , pj_param_exists , hasX0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , < , Q , opaque , P , }
		- SUCC   = { params , P , pj_param_exists , hasY0 , }

92 :	"pj_param_exists"
		- NEIGH  = { params , P , pj_param_exists , hasX0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , < , Q , opaque , P , }
		- SUCC   = { params , P , pj_param_exists , hasY0 , }

92 :	"P"
		- NEIGH  = { params , P , pj_param_exists , hasX0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , < , Q , opaque , P , }
		- SUCC   = { params , P , pj_param_exists , hasY0 , }

92 :	"params"
		- NEIGH  = { params , P , pj_param_exists , hasX0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , * , static_cast , < , Q , opaque , P , }
		- SUCC   = { params , P , pj_param_exists , hasY0 , }

93 :	"hasY0"
		- NEIGH  = { params , P , pj_param_exists , hasY0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { params , P , pj_param_exists , hasX0 , }
		- SUCC   = { params , P , pj_param_exists , hasZ0 , }

93 :	"pj_param_exists"
		- NEIGH  = { params , P , pj_param_exists , hasY0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { params , P , pj_param_exists , hasX0 , }
		- SUCC   = { params , P , pj_param_exists , hasZ0 , }

93 :	"P"
		- NEIGH  = { params , P , pj_param_exists , hasY0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { params , P , pj_param_exists , hasX0 , }
		- SUCC   = { params , P , pj_param_exists , hasZ0 , }

93 :	"params"
		- NEIGH  = { params , P , pj_param_exists , hasY0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { params , P , pj_param_exists , hasX0 , }
		- SUCC   = { params , P , pj_param_exists , hasZ0 , }

94 :	"hasZ0"
		- NEIGH  = { params , P , pj_param_exists , hasZ0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { params , P , pj_param_exists , hasY0 , }
		- SUCC   = { params , P , pj_param_exists , hasLon0 , }

94 :	"pj_param_exists"
		- NEIGH  = { params , P , pj_param_exists , hasZ0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { params , P , pj_param_exists , hasY0 , }
		- SUCC   = { params , P , pj_param_exists , hasLon0 , }

94 :	"P"
		- NEIGH  = { params , P , pj_param_exists , hasZ0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { params , P , pj_param_exists , hasY0 , }
		- SUCC   = { params , P , pj_param_exists , hasLon0 , }

94 :	"params"
		- NEIGH  = { params , P , pj_param_exists , hasZ0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { params , P , pj_param_exists , hasY0 , }
		- SUCC   = { params , P , pj_param_exists , hasLon0 , }

95 :	"hasLon0"
		- NEIGH  = { params , P , pj_param_exists , hasLon0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { params , P , pj_param_exists , hasZ0 , }
		- SUCC   = { P , pj_param_exists , params , hasLat0 , }

95 :	"pj_param_exists"
		- NEIGH  = { params , P , pj_param_exists , hasLon0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { params , P , pj_param_exists , hasZ0 , }
		- SUCC   = { P , pj_param_exists , params , hasLat0 , }

95 :	"P"
		- NEIGH  = { params , P , pj_param_exists , hasLon0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { params , P , pj_param_exists , hasZ0 , }
		- SUCC   = { P , pj_param_exists , params , hasLat0 , }

95 :	"params"
		- NEIGH  = { params , P , pj_param_exists , hasLon0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { params , P , pj_param_exists , hasZ0 , }
		- SUCC   = { P , pj_param_exists , params , hasLat0 , }

96 :	"hasLat0"
		- NEIGH  = { P , pj_param_exists , params , hasLat0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { params , P , pj_param_exists , hasLon0 , }
		- SUCC   = { params , pj_param_exists , P , hash0 , }

96 :	"pj_param_exists"
		- NEIGH  = { P , pj_param_exists , params , hasLat0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { params , P , pj_param_exists , hasLon0 , }
		- SUCC   = { params , pj_param_exists , P , hash0 , }

96 :	"P"
		- NEIGH  = { P , pj_param_exists , params , hasLat0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { params , P , pj_param_exists , hasLon0 , }
		- SUCC   = { params , pj_param_exists , P , hash0 , }

96 :	"params"
		- NEIGH  = { P , pj_param_exists , params , hasLat0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { params , P , pj_param_exists , hasLon0 , }
		- SUCC   = { params , pj_param_exists , P , hash0 , }

97 :	"hash0"
		- NEIGH  = { params , pj_param_exists , P , hash0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , pj_param_exists , params , hasLat0 , }
		- SUCC   = { hasLon0 , && , hasX0 , ! , if , }

97 :	"pj_param_exists"
		- NEIGH  = { params , pj_param_exists , P , hash0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , pj_param_exists , params , hasLat0 , }
		- SUCC   = { hasLon0 , && , hasX0 , ! , if , }

97 :	"P"
		- NEIGH  = { params , pj_param_exists , P , hash0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , pj_param_exists , params , hasLat0 , }
		- SUCC   = { hasLon0 , && , hasX0 , ! , if , }

97 :	"params"
		- NEIGH  = { params , pj_param_exists , P , hash0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , pj_param_exists , params , hasLat0 , }
		- SUCC   = { hasLon0 , && , hasX0 , ! , if , }

98 :	"if"
		- NEIGH  = { hasLon0 , && , hasX0 , ! , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , _ , pj_default_destructor , return , proj_log_error , }
		- PRED   = { params , pj_param_exists , P , hash0 , }
		- SUCC   = { && , || , hasLon0 , hasX0 , hasZ0 , hasY0 , hash0 , hasLat0 , if , }

98 :	"!"
		- NEIGH  = { hasLon0 , && , hasX0 , ! , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , _ , pj_default_destructor , return , proj_log_error , }
		- PRED   = { params , pj_param_exists , P , hash0 , }
		- SUCC   = { && , || , hasLon0 , hasX0 , hasZ0 , hasY0 , hash0 , hasLat0 , if , }

98 :	"hasX0"
		- NEIGH  = { hasLon0 , && , hasX0 , ! , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , _ , pj_default_destructor , return , proj_log_error , }
		- PRED   = { params , pj_param_exists , P , hash0 , }
		- SUCC   = { && , || , hasLon0 , hasX0 , hasZ0 , hasY0 , hash0 , hasLat0 , if , }

98 :	"&&"
		- NEIGH  = { hasLon0 , && , hasX0 , ! , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , _ , pj_default_destructor , return , proj_log_error , }
		- PRED   = { params , pj_param_exists , P , hash0 , }
		- SUCC   = { && , || , hasLon0 , hasX0 , hasZ0 , hasY0 , hash0 , hasLat0 , if , }

98 :	"!"
		- NEIGH  = { hasLon0 , && , hasX0 , ! , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , _ , pj_default_destructor , return , proj_log_error , }
		- PRED   = { params , pj_param_exists , P , hash0 , }
		- SUCC   = { && , || , hasLon0 , hasX0 , hasZ0 , hasY0 , hash0 , hasLat0 , if , }

98 :	"hasLon0"
		- NEIGH  = { hasLon0 , && , hasX0 , ! , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , _ , pj_default_destructor , return , proj_log_error , }
		- PRED   = { params , pj_param_exists , P , hash0 , }
		- SUCC   = { && , || , hasLon0 , hasX0 , hasZ0 , hasY0 , hash0 , hasLat0 , if , }

100 :	"proj_log_error"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { hasLon0 , && , hasX0 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , pj_default_destructor , return , }

100 :	"P"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { hasLon0 , && , hasX0 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , pj_default_destructor , return , }

100 :	"_"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { hasLon0 , && , hasX0 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , pj_default_destructor , return , }

101 :	"return"
		- NEIGH  = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , pj_default_destructor , return , }
		- PARENT = { hasLon0 , && , hasX0 , ! , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

101 :	"pj_default_destructor"
		- NEIGH  = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , pj_default_destructor , return , }
		- PARENT = { hasLon0 , && , hasX0 , ! , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

101 :	"P"
		- NEIGH  = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , pj_default_destructor , return , }
		- PARENT = { hasLon0 , && , hasX0 , ! , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

101 :	"PROJ_ERR_INVALID_OP_MISSING_ARG"
		- NEIGH  = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , pj_default_destructor , return , }
		- PARENT = { hasLon0 , && , hasX0 , ! , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

103 :	"if"
		- NEIGH  = { && , || , hasLon0 , hasX0 , hasZ0 , hasY0 , hash0 , hasLat0 , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MUTUALLY_EXCLUSIVE_ARGS , P , _ , pj_default_destructor , return , proj_log_error , }
		- PRED   = { hasLon0 , && , hasX0 , ! , if , }
		- SUCC   = { || , if , ! , && , hasX0 , hasZ0 , hasY0 , }

103 :	"hasX0"
		- NEIGH  = { && , || , hasLon0 , hasX0 , hasZ0 , hasY0 , hash0 , hasLat0 , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MUTUALLY_EXCLUSIVE_ARGS , P , _ , pj_default_destructor , return , proj_log_error , }
		- PRED   = { hasLon0 , && , hasX0 , ! , if , }
		- SUCC   = { || , if , ! , && , hasX0 , hasZ0 , hasY0 , }

103 :	"||"
		- NEIGH  = { && , || , hasLon0 , hasX0 , hasZ0 , hasY0 , hash0 , hasLat0 , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MUTUALLY_EXCLUSIVE_ARGS , P , _ , pj_default_destructor , return , proj_log_error , }
		- PRED   = { hasLon0 , && , hasX0 , ! , if , }
		- SUCC   = { || , if , ! , && , hasX0 , hasZ0 , hasY0 , }

103 :	"hasY0"
		- NEIGH  = { && , || , hasLon0 , hasX0 , hasZ0 , hasY0 , hash0 , hasLat0 , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MUTUALLY_EXCLUSIVE_ARGS , P , _ , pj_default_destructor , return , proj_log_error , }
		- PRED   = { hasLon0 , && , hasX0 , ! , if , }
		- SUCC   = { || , if , ! , && , hasX0 , hasZ0 , hasY0 , }

103 :	"||"
		- NEIGH  = { && , || , hasLon0 , hasX0 , hasZ0 , hasY0 , hash0 , hasLat0 , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MUTUALLY_EXCLUSIVE_ARGS , P , _ , pj_default_destructor , return , proj_log_error , }
		- PRED   = { hasLon0 , && , hasX0 , ! , if , }
		- SUCC   = { || , if , ! , && , hasX0 , hasZ0 , hasY0 , }

103 :	"hasZ0"
		- NEIGH  = { && , || , hasLon0 , hasX0 , hasZ0 , hasY0 , hash0 , hasLat0 , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MUTUALLY_EXCLUSIVE_ARGS , P , _ , pj_default_destructor , return , proj_log_error , }
		- PRED   = { hasLon0 , && , hasX0 , ! , if , }
		- SUCC   = { || , if , ! , && , hasX0 , hasZ0 , hasY0 , }

103 :	"&&"
		- NEIGH  = { && , || , hasLon0 , hasX0 , hasZ0 , hasY0 , hash0 , hasLat0 , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MUTUALLY_EXCLUSIVE_ARGS , P , _ , pj_default_destructor , return , proj_log_error , }
		- PRED   = { hasLon0 , && , hasX0 , ! , if , }
		- SUCC   = { || , if , ! , && , hasX0 , hasZ0 , hasY0 , }

104 :	"hasLon0"
		- NEIGH  = { && , || , hasLon0 , hasX0 , hasZ0 , hasY0 , hash0 , hasLat0 , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MUTUALLY_EXCLUSIVE_ARGS , P , _ , pj_default_destructor , return , proj_log_error , }
		- PRED   = { hasLon0 , && , hasX0 , ! , if , }
		- SUCC   = { || , if , ! , && , hasX0 , hasZ0 , hasY0 , }

104 :	"||"
		- NEIGH  = { && , || , hasLon0 , hasX0 , hasZ0 , hasY0 , hash0 , hasLat0 , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MUTUALLY_EXCLUSIVE_ARGS , P , _ , pj_default_destructor , return , proj_log_error , }
		- PRED   = { hasLon0 , && , hasX0 , ! , if , }
		- SUCC   = { || , if , ! , && , hasX0 , hasZ0 , hasY0 , }

104 :	"hasLat0"
		- NEIGH  = { && , || , hasLon0 , hasX0 , hasZ0 , hasY0 , hash0 , hasLat0 , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MUTUALLY_EXCLUSIVE_ARGS , P , _ , pj_default_destructor , return , proj_log_error , }
		- PRED   = { hasLon0 , && , hasX0 , ! , if , }
		- SUCC   = { || , if , ! , && , hasX0 , hasZ0 , hasY0 , }

104 :	"||"
		- NEIGH  = { && , || , hasLon0 , hasX0 , hasZ0 , hasY0 , hash0 , hasLat0 , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MUTUALLY_EXCLUSIVE_ARGS , P , _ , pj_default_destructor , return , proj_log_error , }
		- PRED   = { hasLon0 , && , hasX0 , ! , if , }
		- SUCC   = { || , if , ! , && , hasX0 , hasZ0 , hasY0 , }

104 :	"hash0"
		- NEIGH  = { && , || , hasLon0 , hasX0 , hasZ0 , hasY0 , hash0 , hasLat0 , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MUTUALLY_EXCLUSIVE_ARGS , P , _ , pj_default_destructor , return , proj_log_error , }
		- PRED   = { hasLon0 , && , hasX0 , ! , if , }
		- SUCC   = { || , if , ! , && , hasX0 , hasZ0 , hasY0 , }

106 :	"proj_log_error"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { && , || , hasLon0 , hasX0 , hasZ0 , hasY0 , hash0 , hasLat0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_MUTUALLY_EXCLUSIVE_ARGS , P , pj_default_destructor , return , }

106 :	"P"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { && , || , hasLon0 , hasX0 , hasZ0 , hasY0 , hash0 , hasLat0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_MUTUALLY_EXCLUSIVE_ARGS , P , pj_default_destructor , return , }

106 :	"_"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { && , || , hasLon0 , hasX0 , hasZ0 , hasY0 , hash0 , hasLat0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_MUTUALLY_EXCLUSIVE_ARGS , P , pj_default_destructor , return , }

107 :	"return"
		- NEIGH  = { PROJ_ERR_INVALID_OP_MUTUALLY_EXCLUSIVE_ARGS , P , pj_default_destructor , return , }
		- PARENT = { && , || , hasLon0 , hasX0 , hasZ0 , hasY0 , hash0 , hasLat0 , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

107 :	"pj_default_destructor"
		- NEIGH  = { PROJ_ERR_INVALID_OP_MUTUALLY_EXCLUSIVE_ARGS , P , pj_default_destructor , return , }
		- PARENT = { && , || , hasLon0 , hasX0 , hasZ0 , hasY0 , hash0 , hasLat0 , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

107 :	"P"
		- NEIGH  = { PROJ_ERR_INVALID_OP_MUTUALLY_EXCLUSIVE_ARGS , P , pj_default_destructor , return , }
		- PARENT = { && , || , hasLon0 , hasX0 , hasZ0 , hasY0 , hash0 , hasLat0 , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

107 :	"PROJ_ERR_INVALID_OP_MUTUALLY_EXCLUSIVE_ARGS"
		- NEIGH  = { PROJ_ERR_INVALID_OP_MUTUALLY_EXCLUSIVE_ARGS , P , pj_default_destructor , return , }
		- PARENT = { && , || , hasLon0 , hasX0 , hasZ0 , hasY0 , hash0 , hasLat0 , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

109 :	"if"
		- NEIGH  = { || , if , ! , && , hasX0 , hasZ0 , hasY0 , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , _ , pj_default_destructor , return , proj_log_error , }
		- PRED   = { && , || , hasLon0 , hasX0 , hasZ0 , hasY0 , hash0 , hasLat0 , if , }
		- SUCC   = { hasLat0 , ! , && , hasLon0 , if , }

109 :	"hasX0"
		- NEIGH  = { || , if , ! , && , hasX0 , hasZ0 , hasY0 , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , _ , pj_default_destructor , return , proj_log_error , }
		- PRED   = { && , || , hasLon0 , hasX0 , hasZ0 , hasY0 , hash0 , hasLat0 , if , }
		- SUCC   = { hasLat0 , ! , && , hasLon0 , if , }

109 :	"&&"
		- NEIGH  = { || , if , ! , && , hasX0 , hasZ0 , hasY0 , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , _ , pj_default_destructor , return , proj_log_error , }
		- PRED   = { && , || , hasLon0 , hasX0 , hasZ0 , hasY0 , hash0 , hasLat0 , if , }
		- SUCC   = { hasLat0 , ! , && , hasLon0 , if , }

109 :	"!"
		- NEIGH  = { || , if , ! , && , hasX0 , hasZ0 , hasY0 , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , _ , pj_default_destructor , return , proj_log_error , }
		- PRED   = { && , || , hasLon0 , hasX0 , hasZ0 , hasY0 , hash0 , hasLat0 , if , }
		- SUCC   = { hasLat0 , ! , && , hasLon0 , if , }

109 :	"hasY0"
		- NEIGH  = { || , if , ! , && , hasX0 , hasZ0 , hasY0 , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , _ , pj_default_destructor , return , proj_log_error , }
		- PRED   = { && , || , hasLon0 , hasX0 , hasZ0 , hasY0 , hash0 , hasLat0 , if , }
		- SUCC   = { hasLat0 , ! , && , hasLon0 , if , }

109 :	"||"
		- NEIGH  = { || , if , ! , && , hasX0 , hasZ0 , hasY0 , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , _ , pj_default_destructor , return , proj_log_error , }
		- PRED   = { && , || , hasLon0 , hasX0 , hasZ0 , hasY0 , hash0 , hasLat0 , if , }
		- SUCC   = { hasLat0 , ! , && , hasLon0 , if , }

109 :	"!"
		- NEIGH  = { || , if , ! , && , hasX0 , hasZ0 , hasY0 , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , _ , pj_default_destructor , return , proj_log_error , }
		- PRED   = { && , || , hasLon0 , hasX0 , hasZ0 , hasY0 , hash0 , hasLat0 , if , }
		- SUCC   = { hasLat0 , ! , && , hasLon0 , if , }

109 :	"hasZ0"
		- NEIGH  = { || , if , ! , && , hasX0 , hasZ0 , hasY0 , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , _ , pj_default_destructor , return , proj_log_error , }
		- PRED   = { && , || , hasLon0 , hasX0 , hasZ0 , hasY0 , hash0 , hasLat0 , if , }
		- SUCC   = { hasLat0 , ! , && , hasLon0 , if , }

111 :	"proj_log_error"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { || , if , ! , && , hasX0 , hasZ0 , hasY0 , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , pj_default_destructor , return , }

111 :	"P"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { || , if , ! , && , hasX0 , hasZ0 , hasY0 , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , pj_default_destructor , return , }

111 :	"_"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { || , if , ! , && , hasX0 , hasZ0 , hasY0 , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , pj_default_destructor , return , }

112 :	"return"
		- NEIGH  = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , pj_default_destructor , return , }
		- PARENT = { || , if , ! , && , hasX0 , hasZ0 , hasY0 , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

112 :	"pj_default_destructor"
		- NEIGH  = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , pj_default_destructor , return , }
		- PARENT = { || , if , ! , && , hasX0 , hasZ0 , hasY0 , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

112 :	"P"
		- NEIGH  = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , pj_default_destructor , return , }
		- PARENT = { || , if , ! , && , hasX0 , hasZ0 , hasY0 , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

112 :	"PROJ_ERR_INVALID_OP_MISSING_ARG"
		- NEIGH  = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , pj_default_destructor , return , }
		- PARENT = { || , if , ! , && , hasX0 , hasZ0 , hasY0 , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

114 :	"if"
		- NEIGH  = { hasLat0 , ! , && , hasLon0 , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , _ , pj_default_destructor , return , proj_log_error , }
		- PRED   = { || , if , ! , && , hasX0 , hasZ0 , hasY0 , }
		- SUCC   = { ctx , PJ , P , proj_create , cart , * , }

114 :	"hasLon0"
		- NEIGH  = { hasLat0 , ! , && , hasLon0 , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , _ , pj_default_destructor , return , proj_log_error , }
		- PRED   = { || , if , ! , && , hasX0 , hasZ0 , hasY0 , }
		- SUCC   = { ctx , PJ , P , proj_create , cart , * , }

114 :	"&&"
		- NEIGH  = { hasLat0 , ! , && , hasLon0 , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , _ , pj_default_destructor , return , proj_log_error , }
		- PRED   = { || , if , ! , && , hasX0 , hasZ0 , hasY0 , }
		- SUCC   = { ctx , PJ , P , proj_create , cart , * , }

114 :	"!"
		- NEIGH  = { hasLat0 , ! , && , hasLon0 , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , _ , pj_default_destructor , return , proj_log_error , }
		- PRED   = { || , if , ! , && , hasX0 , hasZ0 , hasY0 , }
		- SUCC   = { ctx , PJ , P , proj_create , cart , * , }

114 :	"hasLat0"
		- NEIGH  = { hasLat0 , ! , && , hasLon0 , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , _ , pj_default_destructor , return , proj_log_error , }
		- PRED   = { || , if , ! , && , hasX0 , hasZ0 , hasY0 , }
		- SUCC   = { ctx , PJ , P , proj_create , cart , * , }

116 :	"proj_log_error"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { hasLat0 , ! , && , hasLon0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , pj_default_destructor , return , }

116 :	"P"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { hasLat0 , ! , && , hasLon0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , pj_default_destructor , return , }

116 :	"_"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { hasLat0 , ! , && , hasLon0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , pj_default_destructor , return , }

117 :	"return"
		- NEIGH  = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , pj_default_destructor , return , }
		- PARENT = { hasLat0 , ! , && , hasLon0 , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

117 :	"pj_default_destructor"
		- NEIGH  = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , pj_default_destructor , return , }
		- PARENT = { hasLat0 , ! , && , hasLon0 , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

117 :	"P"
		- NEIGH  = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , pj_default_destructor , return , }
		- PARENT = { hasLat0 , ! , && , hasLon0 , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

117 :	"PROJ_ERR_INVALID_OP_MISSING_ARG"
		- NEIGH  = { PROJ_ERR_INVALID_OP_MISSING_ARG , P , pj_default_destructor , return , }
		- PARENT = { hasLat0 , ! , && , hasLon0 , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

121 :	"PJ"
		- NEIGH  = { ctx , PJ , P , proj_create , cart , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { hasLat0 , ! , && , hasLon0 , if , }
		- SUCC   = { == , cart , if , }

121 :	"*"
		- NEIGH  = { ctx , PJ , P , proj_create , cart , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { hasLat0 , ! , && , hasLon0 , if , }
		- SUCC   = { == , cart , if , }

121 :	"cart"
		- NEIGH  = { ctx , PJ , P , proj_create , cart , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { hasLat0 , ! , && , hasLon0 , if , }
		- SUCC   = { == , cart , if , }

121 :	"proj_create"
		- NEIGH  = { ctx , PJ , P , proj_create , cart , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { hasLat0 , ! , && , hasLon0 , if , }
		- SUCC   = { == , cart , if , }

121 :	"P"
		- NEIGH  = { ctx , PJ , P , proj_create , cart , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { hasLat0 , ! , && , hasLon0 , if , }
		- SUCC   = { == , cart , if , }

121 :	"ctx"
		- NEIGH  = { ctx , PJ , P , proj_create , cart , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { hasLat0 , ! , && , hasLon0 , if , }
		- SUCC   = { == , cart , if , }

122 :	"if"
		- NEIGH  = { == , cart , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PRED   = { ctx , PJ , P , proj_create , cart , * , }
		- SUCC   = { cart , P , pj_inherit_ellipsoid_def , }

122 :	"cart"
		- NEIGH  = { == , cart , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PRED   = { ctx , PJ , P , proj_create , cart , * , }
		- SUCC   = { cart , P , pj_inherit_ellipsoid_def , }

122 :	"=="
		- NEIGH  = { == , cart , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PRED   = { ctx , PJ , P , proj_create , cart , * , }
		- SUCC   = { cart , P , pj_inherit_ellipsoid_def , }

123 :	"return"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { == , cart , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

123 :	"pj_default_destructor"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { == , cart , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

123 :	"P"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { == , cart , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

123 :	"PROJ_ERR_OTHER"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { == , cart , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

125 :	"pj_inherit_ellipsoid_def"
		- NEIGH  = { cart , P , pj_inherit_ellipsoid_def , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , cart , if , }
		- SUCC   = { hasX0 , if , }

125 :	"P"
		- NEIGH  = { cart , P , pj_inherit_ellipsoid_def , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , cart , if , }
		- SUCC   = { hasX0 , if , }

125 :	"cart"
		- NEIGH  = { cart , P , pj_inherit_ellipsoid_def , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , cart , if , }
		- SUCC   = { hasX0 , if , }

127 :	"if"
		- NEIGH  = { hasX0 , if , }
		- PARENT = { }
		- CHILD  = { phi0 , PJ_LPZ , coslam0 , lam , Y0 , cos , phi , lpz , x , xyz , y , sin , pj_param , params , PJ_XYZ , sinlam0 , sinphi0 , f , Z0 , cosphi0 , lam0 , cart , z , pj_fwd3d , Q , pj_inv3d , ctx , P , X0 , }
		- PRED   = { cart , P , pj_inherit_ellipsoid_def , }
		- SUCC   = { cart , proj_destroy , }

127 :	"hasX0"
		- NEIGH  = { hasX0 , if , }
		- PARENT = { }
		- CHILD  = { phi0 , PJ_LPZ , coslam0 , lam , Y0 , cos , phi , lpz , x , xyz , y , sin , pj_param , params , PJ_XYZ , sinlam0 , sinphi0 , f , Z0 , cosphi0 , lam0 , cart , z , pj_fwd3d , Q , pj_inv3d , ctx , P , X0 , }
		- PRED   = { cart , P , pj_inherit_ellipsoid_def , }
		- SUCC   = { cart , proj_destroy , }

129 :	"Q"
		- NEIGH  = { f , params , Q , ctx , pj_param , X0 , P , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { f , params , pj_param , Q , ctx , Y0 , P , }

129 :	"X0"
		- NEIGH  = { f , params , Q , ctx , pj_param , X0 , P , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { f , params , pj_param , Q , ctx , Y0 , P , }

129 :	"pj_param"
		- NEIGH  = { f , params , Q , ctx , pj_param , X0 , P , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { f , params , pj_param , Q , ctx , Y0 , P , }

129 :	"P"
		- NEIGH  = { f , params , Q , ctx , pj_param , X0 , P , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { f , params , pj_param , Q , ctx , Y0 , P , }

129 :	"ctx"
		- NEIGH  = { f , params , Q , ctx , pj_param , X0 , P , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { f , params , pj_param , Q , ctx , Y0 , P , }

129 :	"P"
		- NEIGH  = { f , params , Q , ctx , pj_param , X0 , P , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { f , params , pj_param , Q , ctx , Y0 , P , }

129 :	"params"
		- NEIGH  = { f , params , Q , ctx , pj_param , X0 , P , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { f , params , pj_param , Q , ctx , Y0 , P , }

129 :	"f"
		- NEIGH  = { f , params , Q , ctx , pj_param , X0 , P , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { f , params , pj_param , Q , ctx , Y0 , P , }

130 :	"Q"
		- NEIGH  = { f , params , pj_param , Q , ctx , Y0 , P , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { f , params , Q , ctx , pj_param , X0 , P , }
		- SUCC   = { f , params , Q , ctx , pj_param , Z0 , P , }

130 :	"Y0"
		- NEIGH  = { f , params , pj_param , Q , ctx , Y0 , P , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { f , params , Q , ctx , pj_param , X0 , P , }
		- SUCC   = { f , params , Q , ctx , pj_param , Z0 , P , }

130 :	"pj_param"
		- NEIGH  = { f , params , pj_param , Q , ctx , Y0 , P , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { f , params , Q , ctx , pj_param , X0 , P , }
		- SUCC   = { f , params , Q , ctx , pj_param , Z0 , P , }

130 :	"P"
		- NEIGH  = { f , params , pj_param , Q , ctx , Y0 , P , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { f , params , Q , ctx , pj_param , X0 , P , }
		- SUCC   = { f , params , Q , ctx , pj_param , Z0 , P , }

130 :	"ctx"
		- NEIGH  = { f , params , pj_param , Q , ctx , Y0 , P , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { f , params , Q , ctx , pj_param , X0 , P , }
		- SUCC   = { f , params , Q , ctx , pj_param , Z0 , P , }

130 :	"P"
		- NEIGH  = { f , params , pj_param , Q , ctx , Y0 , P , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { f , params , Q , ctx , pj_param , X0 , P , }
		- SUCC   = { f , params , Q , ctx , pj_param , Z0 , P , }

130 :	"params"
		- NEIGH  = { f , params , pj_param , Q , ctx , Y0 , P , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { f , params , Q , ctx , pj_param , X0 , P , }
		- SUCC   = { f , params , Q , ctx , pj_param , Z0 , P , }

130 :	"f"
		- NEIGH  = { f , params , pj_param , Q , ctx , Y0 , P , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { f , params , Q , ctx , pj_param , X0 , P , }
		- SUCC   = { f , params , Q , ctx , pj_param , Z0 , P , }

131 :	"Q"
		- NEIGH  = { f , params , Q , ctx , pj_param , Z0 , P , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { f , params , pj_param , Q , ctx , Y0 , P , }
		- SUCC   = { xyz , PJ_XYZ , }

131 :	"Z0"
		- NEIGH  = { f , params , Q , ctx , pj_param , Z0 , P , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { f , params , pj_param , Q , ctx , Y0 , P , }
		- SUCC   = { xyz , PJ_XYZ , }

131 :	"pj_param"
		- NEIGH  = { f , params , Q , ctx , pj_param , Z0 , P , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { f , params , pj_param , Q , ctx , Y0 , P , }
		- SUCC   = { xyz , PJ_XYZ , }

131 :	"P"
		- NEIGH  = { f , params , Q , ctx , pj_param , Z0 , P , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { f , params , pj_param , Q , ctx , Y0 , P , }
		- SUCC   = { xyz , PJ_XYZ , }

131 :	"ctx"
		- NEIGH  = { f , params , Q , ctx , pj_param , Z0 , P , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { f , params , pj_param , Q , ctx , Y0 , P , }
		- SUCC   = { xyz , PJ_XYZ , }

131 :	"P"
		- NEIGH  = { f , params , Q , ctx , pj_param , Z0 , P , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { f , params , pj_param , Q , ctx , Y0 , P , }
		- SUCC   = { xyz , PJ_XYZ , }

131 :	"params"
		- NEIGH  = { f , params , Q , ctx , pj_param , Z0 , P , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { f , params , pj_param , Q , ctx , Y0 , P , }
		- SUCC   = { xyz , PJ_XYZ , }

131 :	"f"
		- NEIGH  = { f , params , Q , ctx , pj_param , Z0 , P , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { f , params , pj_param , Q , ctx , Y0 , P , }
		- SUCC   = { xyz , PJ_XYZ , }

134 :	"PJ_XYZ"
		- NEIGH  = { xyz , PJ_XYZ , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { f , params , Q , ctx , pj_param , Z0 , P , }
		- SUCC   = { Q , x , X0 , xyz , }

134 :	"xyz"
		- NEIGH  = { xyz , PJ_XYZ , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { f , params , Q , ctx , pj_param , Z0 , P , }
		- SUCC   = { Q , x , X0 , xyz , }

135 :	"xyz"
		- NEIGH  = { Q , x , X0 , xyz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { xyz , PJ_XYZ , }
		- SUCC   = { Y0 , Q , y , xyz , }

135 :	"x"
		- NEIGH  = { Q , x , X0 , xyz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { xyz , PJ_XYZ , }
		- SUCC   = { Y0 , Q , y , xyz , }

135 :	"Q"
		- NEIGH  = { Q , x , X0 , xyz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { xyz , PJ_XYZ , }
		- SUCC   = { Y0 , Q , y , xyz , }

135 :	"X0"
		- NEIGH  = { Q , x , X0 , xyz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { xyz , PJ_XYZ , }
		- SUCC   = { Y0 , Q , y , xyz , }

136 :	"xyz"
		- NEIGH  = { Y0 , Q , y , xyz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { Q , x , X0 , xyz , }
		- SUCC   = { Q , z , Z0 , xyz , }

136 :	"y"
		- NEIGH  = { Y0 , Q , y , xyz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { Q , x , X0 , xyz , }
		- SUCC   = { Q , z , Z0 , xyz , }

136 :	"Q"
		- NEIGH  = { Y0 , Q , y , xyz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { Q , x , X0 , xyz , }
		- SUCC   = { Q , z , Z0 , xyz , }

136 :	"Y0"
		- NEIGH  = { Y0 , Q , y , xyz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { Q , x , X0 , xyz , }
		- SUCC   = { Q , z , Z0 , xyz , }

137 :	"xyz"
		- NEIGH  = { Q , z , Z0 , xyz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { Y0 , Q , y , xyz , }
		- SUCC   = { cart , xyz , pj_inv3d , lpz , }

137 :	"z"
		- NEIGH  = { Q , z , Z0 , xyz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { Y0 , Q , y , xyz , }
		- SUCC   = { cart , xyz , pj_inv3d , lpz , }

137 :	"Q"
		- NEIGH  = { Q , z , Z0 , xyz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { Y0 , Q , y , xyz , }
		- SUCC   = { cart , xyz , pj_inv3d , lpz , }

137 :	"Z0"
		- NEIGH  = { Q , z , Z0 , xyz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { Y0 , Q , y , xyz , }
		- SUCC   = { cart , xyz , pj_inv3d , lpz , }

138 :	"lpz"
		- NEIGH  = { cart , xyz , pj_inv3d , lpz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { Q , z , Z0 , xyz , }
		- SUCC   = { phi , lpz , sin , sinphi0 , Q , }

138 :	"pj_inv3d"
		- NEIGH  = { cart , xyz , pj_inv3d , lpz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { Q , z , Z0 , xyz , }
		- SUCC   = { phi , lpz , sin , sinphi0 , Q , }

138 :	"xyz"
		- NEIGH  = { cart , xyz , pj_inv3d , lpz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { Q , z , Z0 , xyz , }
		- SUCC   = { phi , lpz , sin , sinphi0 , Q , }

138 :	"cart"
		- NEIGH  = { cart , xyz , pj_inv3d , lpz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { Q , z , Z0 , xyz , }
		- SUCC   = { phi , lpz , sin , sinphi0 , Q , }

139 :	"Q"
		- NEIGH  = { phi , lpz , sin , sinphi0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { cart , xyz , pj_inv3d , lpz , }
		- SUCC   = { phi , lpz , cos , cosphi0 , Q , }

139 :	"sinphi0"
		- NEIGH  = { phi , lpz , sin , sinphi0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { cart , xyz , pj_inv3d , lpz , }
		- SUCC   = { phi , lpz , cos , cosphi0 , Q , }

139 :	"sin"
		- NEIGH  = { phi , lpz , sin , sinphi0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { cart , xyz , pj_inv3d , lpz , }
		- SUCC   = { phi , lpz , cos , cosphi0 , Q , }

139 :	"lpz"
		- NEIGH  = { phi , lpz , sin , sinphi0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { cart , xyz , pj_inv3d , lpz , }
		- SUCC   = { phi , lpz , cos , cosphi0 , Q , }

139 :	"phi"
		- NEIGH  = { phi , lpz , sin , sinphi0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { cart , xyz , pj_inv3d , lpz , }
		- SUCC   = { phi , lpz , cos , cosphi0 , Q , }

140 :	"Q"
		- NEIGH  = { phi , lpz , cos , cosphi0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { phi , lpz , sin , sinphi0 , Q , }
		- SUCC   = { lam , lpz , sin , sinlam0 , Q , }

140 :	"cosphi0"
		- NEIGH  = { phi , lpz , cos , cosphi0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { phi , lpz , sin , sinphi0 , Q , }
		- SUCC   = { lam , lpz , sin , sinlam0 , Q , }

140 :	"cos"
		- NEIGH  = { phi , lpz , cos , cosphi0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { phi , lpz , sin , sinphi0 , Q , }
		- SUCC   = { lam , lpz , sin , sinlam0 , Q , }

140 :	"lpz"
		- NEIGH  = { phi , lpz , cos , cosphi0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { phi , lpz , sin , sinphi0 , Q , }
		- SUCC   = { lam , lpz , sin , sinlam0 , Q , }

140 :	"phi"
		- NEIGH  = { phi , lpz , cos , cosphi0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { phi , lpz , sin , sinphi0 , Q , }
		- SUCC   = { lam , lpz , sin , sinlam0 , Q , }

141 :	"Q"
		- NEIGH  = { lam , lpz , sin , sinlam0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { phi , lpz , cos , cosphi0 , Q , }
		- SUCC   = { lam , lpz , cos , coslam0 , Q , }

141 :	"sinlam0"
		- NEIGH  = { lam , lpz , sin , sinlam0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { phi , lpz , cos , cosphi0 , Q , }
		- SUCC   = { lam , lpz , cos , coslam0 , Q , }

141 :	"sin"
		- NEIGH  = { lam , lpz , sin , sinlam0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { phi , lpz , cos , cosphi0 , Q , }
		- SUCC   = { lam , lpz , cos , coslam0 , Q , }

141 :	"lpz"
		- NEIGH  = { lam , lpz , sin , sinlam0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { phi , lpz , cos , cosphi0 , Q , }
		- SUCC   = { lam , lpz , cos , coslam0 , Q , }

141 :	"lam"
		- NEIGH  = { lam , lpz , sin , sinlam0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { phi , lpz , cos , cosphi0 , Q , }
		- SUCC   = { lam , lpz , cos , coslam0 , Q , }

142 :	"Q"
		- NEIGH  = { lam , lpz , cos , coslam0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { lam , lpz , sin , sinlam0 , Q , }
		- SUCC   = { }

142 :	"coslam0"
		- NEIGH  = { lam , lpz , cos , coslam0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { lam , lpz , sin , sinlam0 , Q , }
		- SUCC   = { }

142 :	"cos"
		- NEIGH  = { lam , lpz , cos , coslam0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { lam , lpz , sin , sinlam0 , Q , }
		- SUCC   = { }

142 :	"lpz"
		- NEIGH  = { lam , lpz , cos , coslam0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { lam , lpz , sin , sinlam0 , Q , }
		- SUCC   = { }

142 :	"lam"
		- NEIGH  = { lam , lpz , cos , coslam0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { lam , lpz , sin , sinlam0 , Q , }
		- SUCC   = { }

147 :	"PJ_LPZ"
		- NEIGH  = { lpz , PJ_LPZ , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , lam0 , lam , lpz , }

147 :	"lpz"
		- NEIGH  = { lpz , PJ_LPZ , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , lam0 , lam , lpz , }

148 :	"lpz"
		- NEIGH  = { P , lam0 , lam , lpz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { lpz , PJ_LPZ , }
		- SUCC   = { phi0 , P , phi , lpz , }

148 :	"lam"
		- NEIGH  = { P , lam0 , lam , lpz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { lpz , PJ_LPZ , }
		- SUCC   = { phi0 , P , phi , lpz , }

148 :	"P"
		- NEIGH  = { P , lam0 , lam , lpz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { lpz , PJ_LPZ , }
		- SUCC   = { phi0 , P , phi , lpz , }

148 :	"lam0"
		- NEIGH  = { P , lam0 , lam , lpz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { lpz , PJ_LPZ , }
		- SUCC   = { phi0 , P , phi , lpz , }

149 :	"lpz"
		- NEIGH  = { phi0 , P , phi , lpz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { P , lam0 , lam , lpz , }
		- SUCC   = { f , params , ctx , P , pj_param , z , lpz , }

149 :	"phi"
		- NEIGH  = { phi0 , P , phi , lpz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { P , lam0 , lam , lpz , }
		- SUCC   = { f , params , ctx , P , pj_param , z , lpz , }

149 :	"P"
		- NEIGH  = { phi0 , P , phi , lpz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { P , lam0 , lam , lpz , }
		- SUCC   = { f , params , ctx , P , pj_param , z , lpz , }

149 :	"phi0"
		- NEIGH  = { phi0 , P , phi , lpz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { P , lam0 , lam , lpz , }
		- SUCC   = { f , params , ctx , P , pj_param , z , lpz , }

150 :	"lpz"
		- NEIGH  = { f , params , ctx , P , pj_param , z , lpz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { phi0 , P , phi , lpz , }
		- SUCC   = { cart , lpz , pj_fwd3d , xyz , }

150 :	"z"
		- NEIGH  = { f , params , ctx , P , pj_param , z , lpz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { phi0 , P , phi , lpz , }
		- SUCC   = { cart , lpz , pj_fwd3d , xyz , }

150 :	"pj_param"
		- NEIGH  = { f , params , ctx , P , pj_param , z , lpz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { phi0 , P , phi , lpz , }
		- SUCC   = { cart , lpz , pj_fwd3d , xyz , }

150 :	"P"
		- NEIGH  = { f , params , ctx , P , pj_param , z , lpz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { phi0 , P , phi , lpz , }
		- SUCC   = { cart , lpz , pj_fwd3d , xyz , }

150 :	"ctx"
		- NEIGH  = { f , params , ctx , P , pj_param , z , lpz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { phi0 , P , phi , lpz , }
		- SUCC   = { cart , lpz , pj_fwd3d , xyz , }

150 :	"P"
		- NEIGH  = { f , params , ctx , P , pj_param , z , lpz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { phi0 , P , phi , lpz , }
		- SUCC   = { cart , lpz , pj_fwd3d , xyz , }

150 :	"params"
		- NEIGH  = { f , params , ctx , P , pj_param , z , lpz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { phi0 , P , phi , lpz , }
		- SUCC   = { cart , lpz , pj_fwd3d , xyz , }

150 :	"f"
		- NEIGH  = { f , params , ctx , P , pj_param , z , lpz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { phi0 , P , phi , lpz , }
		- SUCC   = { cart , lpz , pj_fwd3d , xyz , }

151 :	"xyz"
		- NEIGH  = { cart , lpz , pj_fwd3d , xyz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { f , params , ctx , P , pj_param , z , lpz , }
		- SUCC   = { x , xyz , X0 , Q , }

151 :	"pj_fwd3d"
		- NEIGH  = { cart , lpz , pj_fwd3d , xyz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { f , params , ctx , P , pj_param , z , lpz , }
		- SUCC   = { x , xyz , X0 , Q , }

151 :	"lpz"
		- NEIGH  = { cart , lpz , pj_fwd3d , xyz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { f , params , ctx , P , pj_param , z , lpz , }
		- SUCC   = { x , xyz , X0 , Q , }

151 :	"cart"
		- NEIGH  = { cart , lpz , pj_fwd3d , xyz , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { f , params , ctx , P , pj_param , z , lpz , }
		- SUCC   = { x , xyz , X0 , Q , }

152 :	"Q"
		- NEIGH  = { x , xyz , X0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { cart , lpz , pj_fwd3d , xyz , }
		- SUCC   = { y , xyz , Y0 , Q , }

152 :	"X0"
		- NEIGH  = { x , xyz , X0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { cart , lpz , pj_fwd3d , xyz , }
		- SUCC   = { y , xyz , Y0 , Q , }

152 :	"xyz"
		- NEIGH  = { x , xyz , X0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { cart , lpz , pj_fwd3d , xyz , }
		- SUCC   = { y , xyz , Y0 , Q , }

152 :	"x"
		- NEIGH  = { x , xyz , X0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { cart , lpz , pj_fwd3d , xyz , }
		- SUCC   = { y , xyz , Y0 , Q , }

153 :	"Q"
		- NEIGH  = { y , xyz , Y0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { x , xyz , X0 , Q , }
		- SUCC   = { z , xyz , Z0 , Q , }

153 :	"Y0"
		- NEIGH  = { y , xyz , Y0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { x , xyz , X0 , Q , }
		- SUCC   = { z , xyz , Z0 , Q , }

153 :	"xyz"
		- NEIGH  = { y , xyz , Y0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { x , xyz , X0 , Q , }
		- SUCC   = { z , xyz , Z0 , Q , }

153 :	"y"
		- NEIGH  = { y , xyz , Y0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { x , xyz , X0 , Q , }
		- SUCC   = { z , xyz , Z0 , Q , }

154 :	"Q"
		- NEIGH  = { z , xyz , Z0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { y , xyz , Y0 , Q , }
		- SUCC   = { phi0 , sin , sinphi0 , P , Q , }

154 :	"Z0"
		- NEIGH  = { z , xyz , Z0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { y , xyz , Y0 , Q , }
		- SUCC   = { phi0 , sin , sinphi0 , P , Q , }

154 :	"xyz"
		- NEIGH  = { z , xyz , Z0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { y , xyz , Y0 , Q , }
		- SUCC   = { phi0 , sin , sinphi0 , P , Q , }

154 :	"z"
		- NEIGH  = { z , xyz , Z0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { y , xyz , Y0 , Q , }
		- SUCC   = { phi0 , sin , sinphi0 , P , Q , }

156 :	"Q"
		- NEIGH  = { phi0 , sin , sinphi0 , P , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { z , xyz , Z0 , Q , }
		- SUCC   = { phi0 , cos , cosphi0 , P , Q , }

156 :	"sinphi0"
		- NEIGH  = { phi0 , sin , sinphi0 , P , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { z , xyz , Z0 , Q , }
		- SUCC   = { phi0 , cos , cosphi0 , P , Q , }

156 :	"sin"
		- NEIGH  = { phi0 , sin , sinphi0 , P , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { z , xyz , Z0 , Q , }
		- SUCC   = { phi0 , cos , cosphi0 , P , Q , }

156 :	"P"
		- NEIGH  = { phi0 , sin , sinphi0 , P , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { z , xyz , Z0 , Q , }
		- SUCC   = { phi0 , cos , cosphi0 , P , Q , }

156 :	"phi0"
		- NEIGH  = { phi0 , sin , sinphi0 , P , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { z , xyz , Z0 , Q , }
		- SUCC   = { phi0 , cos , cosphi0 , P , Q , }

157 :	"Q"
		- NEIGH  = { phi0 , cos , cosphi0 , P , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { phi0 , sin , sinphi0 , P , Q , }
		- SUCC   = { lam0 , sin , P , sinlam0 , Q , }

157 :	"cosphi0"
		- NEIGH  = { phi0 , cos , cosphi0 , P , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { phi0 , sin , sinphi0 , P , Q , }
		- SUCC   = { lam0 , sin , P , sinlam0 , Q , }

157 :	"cos"
		- NEIGH  = { phi0 , cos , cosphi0 , P , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { phi0 , sin , sinphi0 , P , Q , }
		- SUCC   = { lam0 , sin , P , sinlam0 , Q , }

157 :	"P"
		- NEIGH  = { phi0 , cos , cosphi0 , P , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { phi0 , sin , sinphi0 , P , Q , }
		- SUCC   = { lam0 , sin , P , sinlam0 , Q , }

157 :	"phi0"
		- NEIGH  = { phi0 , cos , cosphi0 , P , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { phi0 , sin , sinphi0 , P , Q , }
		- SUCC   = { lam0 , sin , P , sinlam0 , Q , }

158 :	"Q"
		- NEIGH  = { lam0 , sin , P , sinlam0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { phi0 , cos , cosphi0 , P , Q , }
		- SUCC   = { lam0 , cos , coslam0 , P , Q , }

158 :	"sinlam0"
		- NEIGH  = { lam0 , sin , P , sinlam0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { phi0 , cos , cosphi0 , P , Q , }
		- SUCC   = { lam0 , cos , coslam0 , P , Q , }

158 :	"sin"
		- NEIGH  = { lam0 , sin , P , sinlam0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { phi0 , cos , cosphi0 , P , Q , }
		- SUCC   = { lam0 , cos , coslam0 , P , Q , }

158 :	"P"
		- NEIGH  = { lam0 , sin , P , sinlam0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { phi0 , cos , cosphi0 , P , Q , }
		- SUCC   = { lam0 , cos , coslam0 , P , Q , }

158 :	"lam0"
		- NEIGH  = { lam0 , sin , P , sinlam0 , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { phi0 , cos , cosphi0 , P , Q , }
		- SUCC   = { lam0 , cos , coslam0 , P , Q , }

159 :	"Q"
		- NEIGH  = { lam0 , cos , coslam0 , P , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { lam0 , sin , P , sinlam0 , Q , }
		- SUCC   = { }

159 :	"coslam0"
		- NEIGH  = { lam0 , cos , coslam0 , P , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { lam0 , sin , P , sinlam0 , Q , }
		- SUCC   = { }

159 :	"cos"
		- NEIGH  = { lam0 , cos , coslam0 , P , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { lam0 , sin , P , sinlam0 , Q , }
		- SUCC   = { }

159 :	"P"
		- NEIGH  = { lam0 , cos , coslam0 , P , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { lam0 , sin , P , sinlam0 , Q , }
		- SUCC   = { }

159 :	"lam0"
		- NEIGH  = { lam0 , cos , coslam0 , P , Q , }
		- PARENT = { hasX0 , if , }
		- CHILD  = { }
		- PRED   = { lam0 , sin , P , sinlam0 , Q , }
		- SUCC   = { }

162 :	"proj_destroy"
		- NEIGH  = { cart , proj_destroy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { hasX0 , if , }
		- SUCC   = { topocentric_fwd , fwd4d , P , }

162 :	"cart"
		- NEIGH  = { cart , proj_destroy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { hasX0 , if , }
		- SUCC   = { topocentric_fwd , fwd4d , P , }

164 :	"P"
		- NEIGH  = { topocentric_fwd , fwd4d , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cart , proj_destroy , }
		- SUCC   = { topocentric_inv , inv4d , P , }

164 :	"fwd4d"
		- NEIGH  = { topocentric_fwd , fwd4d , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cart , proj_destroy , }
		- SUCC   = { topocentric_inv , inv4d , P , }

164 :	"topocentric_fwd"
		- NEIGH  = { topocentric_fwd , fwd4d , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cart , proj_destroy , }
		- SUCC   = { topocentric_inv , inv4d , P , }

165 :	"P"
		- NEIGH  = { topocentric_inv , inv4d , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { topocentric_fwd , fwd4d , P , }
		- SUCC   = { left , PJ_IO_UNITS_CARTESIAN , P , }

165 :	"inv4d"
		- NEIGH  = { topocentric_inv , inv4d , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { topocentric_fwd , fwd4d , P , }
		- SUCC   = { left , PJ_IO_UNITS_CARTESIAN , P , }

165 :	"topocentric_inv"
		- NEIGH  = { topocentric_inv , inv4d , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { topocentric_fwd , fwd4d , P , }
		- SUCC   = { left , PJ_IO_UNITS_CARTESIAN , P , }

166 :	"P"
		- NEIGH  = { left , PJ_IO_UNITS_CARTESIAN , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { topocentric_inv , inv4d , P , }
		- SUCC   = { right , PJ_IO_UNITS_CARTESIAN , P , }

166 :	"left"
		- NEIGH  = { left , PJ_IO_UNITS_CARTESIAN , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { topocentric_inv , inv4d , P , }
		- SUCC   = { right , PJ_IO_UNITS_CARTESIAN , P , }

166 :	"PJ_IO_UNITS_CARTESIAN"
		- NEIGH  = { left , PJ_IO_UNITS_CARTESIAN , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { topocentric_inv , inv4d , P , }
		- SUCC   = { right , PJ_IO_UNITS_CARTESIAN , P , }

167 :	"P"
		- NEIGH  = { right , PJ_IO_UNITS_CARTESIAN , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { left , PJ_IO_UNITS_CARTESIAN , P , }
		- SUCC   = { P , return , }

167 :	"right"
		- NEIGH  = { right , PJ_IO_UNITS_CARTESIAN , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { left , PJ_IO_UNITS_CARTESIAN , P , }
		- SUCC   = { P , return , }

167 :	"PJ_IO_UNITS_CARTESIAN"
		- NEIGH  = { right , PJ_IO_UNITS_CARTESIAN , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { left , PJ_IO_UNITS_CARTESIAN , P , }
		- SUCC   = { P , return , }

168 :	"return"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { right , PJ_IO_UNITS_CARTESIAN , P , }
		- SUCC   = { }

168 :	"P"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { right , PJ_IO_UNITS_CARTESIAN , P , }
		- SUCC   = { }

