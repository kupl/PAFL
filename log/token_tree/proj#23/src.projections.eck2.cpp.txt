8 :	"PROJ_HEAD"
		- NEIGH  = { PROJ_HEAD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

8 :	"eck2"
		- NEIGH  = { eck2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

16 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

16 :	"eck2_s_forward"
		- NEIGH  = { eck2_s_forward , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

16 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

16 :	"lp"
		- NEIGH  = { lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

16 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

16 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

16 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

17 :	"PJ_XY"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , }

17 :	"xy"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , }

18 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { phi , sin , - , sqrt , lp , fabs , lam , y , * , x , xy , }

20 :	"xy"
		- NEIGH  = { phi , sin , - , sqrt , lp , fabs , lam , y , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { - , * , y , xy , }

20 :	"x"
		- NEIGH  = { phi , sin , - , sqrt , lp , fabs , lam , y , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { - , * , y , xy , }

20 :	"*"
		- NEIGH  = { phi , sin , - , sqrt , lp , fabs , lam , y , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { - , * , y , xy , }

20 :	"lp"
		- NEIGH  = { phi , sin , - , sqrt , lp , fabs , lam , y , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { - , * , y , xy , }

20 :	"lam"
		- NEIGH  = { phi , sin , - , sqrt , lp , fabs , lam , y , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { - , * , y , xy , }

20 :	"*"
		- NEIGH  = { phi , sin , - , sqrt , lp , fabs , lam , y , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { - , * , y , xy , }

20 :	"xy"
		- NEIGH  = { phi , sin , - , sqrt , lp , fabs , lam , y , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { - , * , y , xy , }

20 :	"y"
		- NEIGH  = { phi , sin , - , sqrt , lp , fabs , lam , y , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { - , * , y , xy , }

20 :	"sqrt"
		- NEIGH  = { phi , sin , - , sqrt , lp , fabs , lam , y , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { - , * , y , xy , }

20 :	"-"
		- NEIGH  = { phi , sin , - , sqrt , lp , fabs , lam , y , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { - , * , y , xy , }

20 :	"*"
		- NEIGH  = { phi , sin , - , sqrt , lp , fabs , lam , y , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { - , * , y , xy , }

20 :	"sin"
		- NEIGH  = { phi , sin , - , sqrt , lp , fabs , lam , y , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { - , * , y , xy , }

20 :	"fabs"
		- NEIGH  = { phi , sin , - , sqrt , lp , fabs , lam , y , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { - , * , y , xy , }

20 :	"lp"
		- NEIGH  = { phi , sin , - , sqrt , lp , fabs , lam , y , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { - , * , y , xy , }

20 :	"phi"
		- NEIGH  = { phi , sin , - , sqrt , lp , fabs , lam , y , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { - , * , y , xy , }

21 :	"xy"
		- NEIGH  = { - , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , sin , - , sqrt , lp , fabs , lam , y , * , x , xy , }
		- SUCC   = { < , phi , lp , if , }

21 :	"y"
		- NEIGH  = { - , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , sin , - , sqrt , lp , fabs , lam , y , * , x , xy , }
		- SUCC   = { < , phi , lp , if , }

21 :	"*"
		- NEIGH  = { - , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , sin , - , sqrt , lp , fabs , lam , y , * , x , xy , }
		- SUCC   = { < , phi , lp , if , }

21 :	"-"
		- NEIGH  = { - , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , sin , - , sqrt , lp , fabs , lam , y , * , x , xy , }
		- SUCC   = { < , phi , lp , if , }

21 :	"xy"
		- NEIGH  = { - , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , sin , - , sqrt , lp , fabs , lam , y , * , x , xy , }
		- SUCC   = { < , phi , lp , if , }

21 :	"y"
		- NEIGH  = { - , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , sin , - , sqrt , lp , fabs , lam , y , * , x , xy , }
		- SUCC   = { < , phi , lp , if , }

22 :	"if"
		- NEIGH  = { < , phi , lp , if , }
		- PARENT = { }
		- CHILD  = { - , y , xy , }
		- PRED   = { - , * , y , xy , }
		- SUCC   = { xy , return , }

22 :	"lp"
		- NEIGH  = { < , phi , lp , if , }
		- PARENT = { }
		- CHILD  = { - , y , xy , }
		- PRED   = { - , * , y , xy , }
		- SUCC   = { xy , return , }

22 :	"phi"
		- NEIGH  = { < , phi , lp , if , }
		- PARENT = { }
		- CHILD  = { - , y , xy , }
		- PRED   = { - , * , y , xy , }
		- SUCC   = { xy , return , }

22 :	"<"
		- NEIGH  = { < , phi , lp , if , }
		- PARENT = { }
		- CHILD  = { - , y , xy , }
		- PRED   = { - , * , y , xy , }
		- SUCC   = { xy , return , }

22 :	"xy"
		- NEIGH  = { - , y , xy , }
		- PARENT = { < , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

22 :	"y"
		- NEIGH  = { - , y , xy , }
		- PARENT = { < , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

22 :	"-"
		- NEIGH  = { - , y , xy , }
		- PARENT = { < , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

22 :	"xy"
		- NEIGH  = { - , y , xy , }
		- PARENT = { < , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

22 :	"y"
		- NEIGH  = { - , y , xy , }
		- PARENT = { < , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

24 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , phi , lp , if , }
		- SUCC   = { }

24 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , phi , lp , if , }
		- SUCC   = { }

28 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

28 :	"eck2_s_inverse"
		- NEIGH  = { eck2_s_inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

28 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

28 :	"xy"
		- NEIGH  = { xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

28 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

28 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

28 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

29 :	"PJ_LP"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , }

29 :	"lp"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , }

30 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { y , xy , fabs , - , / , phi , lp , }

32 :	"lp"
		- NEIGH  = { y , xy , fabs , - , / , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { * , phi , / , x , xy , lam , lp , }

32 :	"phi"
		- NEIGH  = { y , xy , fabs , - , / , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { * , phi , / , x , xy , lam , lp , }

32 :	"-"
		- NEIGH  = { y , xy , fabs , - , / , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { * , phi , / , x , xy , lam , lp , }

32 :	"fabs"
		- NEIGH  = { y , xy , fabs , - , / , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { * , phi , / , x , xy , lam , lp , }

32 :	"xy"
		- NEIGH  = { y , xy , fabs , - , / , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { * , phi , / , x , xy , lam , lp , }

32 :	"y"
		- NEIGH  = { y , xy , fabs , - , / , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { * , phi , / , x , xy , lam , lp , }

32 :	"/"
		- NEIGH  = { y , xy , fabs , - , / , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { * , phi , / , x , xy , lam , lp , }

33 :	"lp"
		- NEIGH  = { * , phi , / , x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , xy , fabs , - , / , phi , lp , }
		- SUCC   = { * , - , phi , lp , }

33 :	"lam"
		- NEIGH  = { * , phi , / , x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , xy , fabs , - , / , phi , lp , }
		- SUCC   = { * , - , phi , lp , }

33 :	"xy"
		- NEIGH  = { * , phi , / , x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , xy , fabs , - , / , phi , lp , }
		- SUCC   = { * , - , phi , lp , }

33 :	"x"
		- NEIGH  = { * , phi , / , x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , xy , fabs , - , / , phi , lp , }
		- SUCC   = { * , - , phi , lp , }

33 :	"/"
		- NEIGH  = { * , phi , / , x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , xy , fabs , - , / , phi , lp , }
		- SUCC   = { * , - , phi , lp , }

33 :	"*"
		- NEIGH  = { * , phi , / , x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , xy , fabs , - , / , phi , lp , }
		- SUCC   = { * , - , phi , lp , }

33 :	"lp"
		- NEIGH  = { * , phi , / , x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , xy , fabs , - , / , phi , lp , }
		- SUCC   = { * , - , phi , lp , }

33 :	"phi"
		- NEIGH  = { * , phi , / , x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , xy , fabs , - , / , phi , lp , }
		- SUCC   = { * , - , phi , lp , }

34 :	"lp"
		- NEIGH  = { * , - , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , phi , / , x , xy , lam , lp , }
		- SUCC   = { >= , phi , lp , fabs , if , }

34 :	"phi"
		- NEIGH  = { * , - , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , phi , / , x , xy , lam , lp , }
		- SUCC   = { >= , phi , lp , fabs , if , }

34 :	"-"
		- NEIGH  = { * , - , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , phi , / , x , xy , lam , lp , }
		- SUCC   = { >= , phi , lp , fabs , if , }

34 :	"lp"
		- NEIGH  = { * , - , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , phi , / , x , xy , lam , lp , }
		- SUCC   = { >= , phi , lp , fabs , if , }

34 :	"phi"
		- NEIGH  = { * , - , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , phi , / , x , xy , lam , lp , }
		- SUCC   = { >= , phi , lp , fabs , if , }

34 :	"*"
		- NEIGH  = { * , - , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , phi , / , x , xy , lam , lp , }
		- SUCC   = { >= , phi , lp , fabs , if , }

34 :	"lp"
		- NEIGH  = { * , - , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , phi , / , x , xy , lam , lp , }
		- SUCC   = { >= , phi , lp , fabs , if , }

34 :	"phi"
		- NEIGH  = { * , - , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , phi , / , x , xy , lam , lp , }
		- SUCC   = { >= , phi , lp , fabs , if , }

34 :	"*"
		- NEIGH  = { * , - , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , phi , / , x , xy , lam , lp , }
		- SUCC   = { >= , phi , lp , fabs , if , }

35 :	"if"
		- NEIGH  = { >= , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { asin , > , phi , lp , fabs , if , }
		- PRED   = { * , - , phi , lp , }
		- SUCC   = { < , y , xy , if , }

35 :	"fabs"
		- NEIGH  = { >= , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { asin , > , phi , lp , fabs , if , }
		- PRED   = { * , - , phi , lp , }
		- SUCC   = { < , y , xy , if , }

35 :	"lp"
		- NEIGH  = { >= , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { asin , > , phi , lp , fabs , if , }
		- PRED   = { * , - , phi , lp , }
		- SUCC   = { < , y , xy , if , }

35 :	"phi"
		- NEIGH  = { >= , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { asin , > , phi , lp , fabs , if , }
		- PRED   = { * , - , phi , lp , }
		- SUCC   = { < , y , xy , if , }

35 :	">="
		- NEIGH  = { >= , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { asin , > , phi , lp , fabs , if , }
		- PRED   = { * , - , phi , lp , }
		- SUCC   = { < , y , xy , if , }

36 :	"if"
		- NEIGH  = { > , phi , lp , fabs , if , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { M_HALFPI , < , phi , - , return , proj_errno_set , PJD_ERR_TOLERANCE_CONDITION , P , lp , }
		- PRED   = { }
		- SUCC   = { }

36 :	"fabs"
		- NEIGH  = { > , phi , lp , fabs , if , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { M_HALFPI , < , phi , - , return , proj_errno_set , PJD_ERR_TOLERANCE_CONDITION , P , lp , }
		- PRED   = { }
		- SUCC   = { }

36 :	"lp"
		- NEIGH  = { > , phi , lp , fabs , if , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { M_HALFPI , < , phi , - , return , proj_errno_set , PJD_ERR_TOLERANCE_CONDITION , P , lp , }
		- PRED   = { }
		- SUCC   = { }

36 :	"phi"
		- NEIGH  = { > , phi , lp , fabs , if , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { M_HALFPI , < , phi , - , return , proj_errno_set , PJD_ERR_TOLERANCE_CONDITION , P , lp , }
		- PRED   = { }
		- SUCC   = { }

36 :	">"
		- NEIGH  = { > , phi , lp , fabs , if , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { M_HALFPI , < , phi , - , return , proj_errno_set , PJD_ERR_TOLERANCE_CONDITION , P , lp , }
		- PRED   = { }
		- SUCC   = { }

37 :	"proj_errno_set"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , return , }

37 :	"P"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , return , }

37 :	"PJD_ERR_TOLERANCE_CONDITION"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , return , }

38 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

38 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

40 :	"lp"
		- NEIGH  = { M_HALFPI , < , - , phi , lp , }
		- PARENT = { > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

40 :	"phi"
		- NEIGH  = { M_HALFPI , < , - , phi , lp , }
		- PARENT = { > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

40 :	"lp"
		- NEIGH  = { M_HALFPI , < , - , phi , lp , }
		- PARENT = { > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

40 :	"phi"
		- NEIGH  = { M_HALFPI , < , - , phi , lp , }
		- PARENT = { > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

40 :	"<"
		- NEIGH  = { M_HALFPI , < , - , phi , lp , }
		- PARENT = { > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

40 :	"-"
		- NEIGH  = { M_HALFPI , < , - , phi , lp , }
		- PARENT = { > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

40 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , < , - , phi , lp , }
		- PARENT = { > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

40 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , < , - , phi , lp , }
		- PARENT = { > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

43 :	"lp"
		- NEIGH  = { asin , phi , lp , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

43 :	"phi"
		- NEIGH  = { asin , phi , lp , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

43 :	"asin"
		- NEIGH  = { asin , phi , lp , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

43 :	"lp"
		- NEIGH  = { asin , phi , lp , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

43 :	"phi"
		- NEIGH  = { asin , phi , lp , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

44 :	"if"
		- NEIGH  = { < , y , xy , if , }
		- PARENT = { }
		- CHILD  = { - , phi , lp , }
		- PRED   = { >= , phi , lp , fabs , if , }
		- SUCC   = { lp , return , }

44 :	"xy"
		- NEIGH  = { < , y , xy , if , }
		- PARENT = { }
		- CHILD  = { - , phi , lp , }
		- PRED   = { >= , phi , lp , fabs , if , }
		- SUCC   = { lp , return , }

44 :	"y"
		- NEIGH  = { < , y , xy , if , }
		- PARENT = { }
		- CHILD  = { - , phi , lp , }
		- PRED   = { >= , phi , lp , fabs , if , }
		- SUCC   = { lp , return , }

44 :	"<"
		- NEIGH  = { < , y , xy , if , }
		- PARENT = { }
		- CHILD  = { - , phi , lp , }
		- PRED   = { >= , phi , lp , fabs , if , }
		- SUCC   = { lp , return , }

45 :	"lp"
		- NEIGH  = { - , phi , lp , }
		- PARENT = { < , y , xy , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

45 :	"phi"
		- NEIGH  = { - , phi , lp , }
		- PARENT = { < , y , xy , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

45 :	"-"
		- NEIGH  = { - , phi , lp , }
		- PARENT = { < , y , xy , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

45 :	"lp"
		- NEIGH  = { - , phi , lp , }
		- PARENT = { < , y , xy , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

45 :	"phi"
		- NEIGH  = { - , phi , lp , }
		- PARENT = { < , y , xy , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

46 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , y , xy , if , }
		- SUCC   = { }

46 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , y , xy , if , }
		- SUCC   = { }

51 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

51 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

51 :	"PROJECTION"
		- NEIGH  = { PROJECTION , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

51 :	"eck2"
		- NEIGH  = { eck2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

52 :	"P"
		- NEIGH  = { es , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { eck2_s_inverse , inv , P , }

52 :	"es"
		- NEIGH  = { es , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { eck2_s_inverse , inv , P , }

53 :	"P"
		- NEIGH  = { eck2_s_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , P , }
		- SUCC   = { eck2_s_forward , fwd , P , }

53 :	"inv"
		- NEIGH  = { eck2_s_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , P , }
		- SUCC   = { eck2_s_forward , fwd , P , }

53 :	"eck2_s_inverse"
		- NEIGH  = { eck2_s_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , P , }
		- SUCC   = { eck2_s_forward , fwd , P , }

54 :	"P"
		- NEIGH  = { eck2_s_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { eck2_s_inverse , inv , P , }
		- SUCC   = { P , return , }

54 :	"fwd"
		- NEIGH  = { eck2_s_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { eck2_s_inverse , inv , P , }
		- SUCC   = { P , return , }

54 :	"eck2_s_forward"
		- NEIGH  = { eck2_s_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { eck2_s_inverse , inv , P , }
		- SUCC   = { P , return , }

56 :	"return"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { eck2_s_forward , fwd , P , }
		- SUCC   = { }

56 :	"P"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { eck2_s_forward , fwd , P , }
		- SUCC   = { }

