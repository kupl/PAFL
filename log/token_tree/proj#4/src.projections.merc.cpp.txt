11 :	"PROJ_HEAD"
		- NEIGH  = { PROJ_HEAD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

11 :	"merc"
		- NEIGH  = { merc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

12 :	"PROJ_HEAD"
		- NEIGH  = { PROJ_HEAD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

12 :	"webmerc"
		- NEIGH  = { webmerc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

15 :	"logtanpfpim1"
		- NEIGH  = { logtanpfpim1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

15 :	"x"
		- NEIGH  = { x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

16 :	"if"
		- NEIGH  = { DBL_EPSILON , <= , x , fabs , if , }
		- PARENT = { }
		- CHILD  = { x , log1p , return , }
		- PRED   = { }
		- SUCC   = { x , * , return , tan , + , M_FORTPI , log , }

16 :	"fabs"
		- NEIGH  = { DBL_EPSILON , <= , x , fabs , if , }
		- PARENT = { }
		- CHILD  = { x , log1p , return , }
		- PRED   = { }
		- SUCC   = { x , * , return , tan , + , M_FORTPI , log , }

16 :	"x"
		- NEIGH  = { DBL_EPSILON , <= , x , fabs , if , }
		- PARENT = { }
		- CHILD  = { x , log1p , return , }
		- PRED   = { }
		- SUCC   = { x , * , return , tan , + , M_FORTPI , log , }

16 :	"<="
		- NEIGH  = { DBL_EPSILON , <= , x , fabs , if , }
		- PARENT = { }
		- CHILD  = { x , log1p , return , }
		- PRED   = { }
		- SUCC   = { x , * , return , tan , + , M_FORTPI , log , }

16 :	"DBL_EPSILON"
		- NEIGH  = { DBL_EPSILON , <= , x , fabs , if , }
		- PARENT = { }
		- CHILD  = { x , log1p , return , }
		- PRED   = { }
		- SUCC   = { x , * , return , tan , + , M_FORTPI , log , }

18 :	"return"
		- NEIGH  = { x , log1p , return , }
		- PARENT = { DBL_EPSILON , <= , x , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

18 :	"log1p"
		- NEIGH  = { x , log1p , return , }
		- PARENT = { DBL_EPSILON , <= , x , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

18 :	"x"
		- NEIGH  = { x , log1p , return , }
		- PARENT = { DBL_EPSILON , <= , x , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

20 :	"return"
		- NEIGH  = { x , * , return , tan , + , M_FORTPI , log , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { DBL_EPSILON , <= , x , fabs , if , }
		- SUCC   = { }

20 :	"log"
		- NEIGH  = { x , * , return , tan , + , M_FORTPI , log , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { DBL_EPSILON , <= , x , fabs , if , }
		- SUCC   = { }

20 :	"tan"
		- NEIGH  = { x , * , return , tan , + , M_FORTPI , log , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { DBL_EPSILON , <= , x , fabs , if , }
		- SUCC   = { }

20 :	"M_FORTPI"
		- NEIGH  = { x , * , return , tan , + , M_FORTPI , log , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { DBL_EPSILON , <= , x , fabs , if , }
		- SUCC   = { }

20 :	"+"
		- NEIGH  = { x , * , return , tan , + , M_FORTPI , log , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { DBL_EPSILON , <= , x , fabs , if , }
		- SUCC   = { }

20 :	"*"
		- NEIGH  = { x , * , return , tan , + , M_FORTPI , log , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { DBL_EPSILON , <= , x , fabs , if , }
		- SUCC   = { }

20 :	"x"
		- NEIGH  = { x , * , return , tan , + , M_FORTPI , log , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { DBL_EPSILON , <= , x , fabs , if , }
		- SUCC   = { }

23 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

23 :	"e_forward"
		- NEIGH  = { e_forward , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

23 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

23 :	"lp"
		- NEIGH  = { lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

23 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

23 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

23 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

24 :	"PJ_XY"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , - , <= , phi , lp , fabs , if , }

24 :	"xy"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , - , <= , phi , lp , fabs , if , }

25 :	"if"
		- NEIGH  = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , k0 , lam , P , * , x , xy , }

25 :	"fabs"
		- NEIGH  = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , k0 , lam , P , * , x , xy , }

25 :	"fabs"
		- NEIGH  = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , k0 , lam , P , * , x , xy , }

25 :	"lp"
		- NEIGH  = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , k0 , lam , P , * , x , xy , }

25 :	"phi"
		- NEIGH  = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , k0 , lam , P , * , x , xy , }

25 :	"-"
		- NEIGH  = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , k0 , lam , P , * , x , xy , }

25 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , k0 , lam , P , * , x , xy , }

25 :	"<="
		- NEIGH  = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , k0 , lam , P , * , x , xy , }

26 :	"proj_errno_set"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

26 :	"P"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

26 :	"PJD_ERR_TOLERANCE_CONDITION"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

27 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

27 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

29 :	"xy"
		- NEIGH  = { lp , k0 , lam , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- SUCC   = { log , sin , lp , phi , xy , k0 , e , P , y , - , pj_tsfn , * , }

29 :	"x"
		- NEIGH  = { lp , k0 , lam , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- SUCC   = { log , sin , lp , phi , xy , k0 , e , P , y , - , pj_tsfn , * , }

29 :	"P"
		- NEIGH  = { lp , k0 , lam , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- SUCC   = { log , sin , lp , phi , xy , k0 , e , P , y , - , pj_tsfn , * , }

29 :	"k0"
		- NEIGH  = { lp , k0 , lam , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- SUCC   = { log , sin , lp , phi , xy , k0 , e , P , y , - , pj_tsfn , * , }

29 :	"*"
		- NEIGH  = { lp , k0 , lam , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- SUCC   = { log , sin , lp , phi , xy , k0 , e , P , y , - , pj_tsfn , * , }

29 :	"lp"
		- NEIGH  = { lp , k0 , lam , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- SUCC   = { log , sin , lp , phi , xy , k0 , e , P , y , - , pj_tsfn , * , }

29 :	"lam"
		- NEIGH  = { lp , k0 , lam , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- SUCC   = { log , sin , lp , phi , xy , k0 , e , P , y , - , pj_tsfn , * , }

30 :	"xy"
		- NEIGH  = { log , sin , lp , phi , xy , k0 , e , P , y , - , pj_tsfn , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , k0 , lam , P , * , x , xy , }
		- SUCC   = { xy , return , }

30 :	"y"
		- NEIGH  = { log , sin , lp , phi , xy , k0 , e , P , y , - , pj_tsfn , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , k0 , lam , P , * , x , xy , }
		- SUCC   = { xy , return , }

30 :	"-"
		- NEIGH  = { log , sin , lp , phi , xy , k0 , e , P , y , - , pj_tsfn , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , k0 , lam , P , * , x , xy , }
		- SUCC   = { xy , return , }

30 :	"P"
		- NEIGH  = { log , sin , lp , phi , xy , k0 , e , P , y , - , pj_tsfn , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , k0 , lam , P , * , x , xy , }
		- SUCC   = { xy , return , }

30 :	"k0"
		- NEIGH  = { log , sin , lp , phi , xy , k0 , e , P , y , - , pj_tsfn , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , k0 , lam , P , * , x , xy , }
		- SUCC   = { xy , return , }

30 :	"*"
		- NEIGH  = { log , sin , lp , phi , xy , k0 , e , P , y , - , pj_tsfn , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , k0 , lam , P , * , x , xy , }
		- SUCC   = { xy , return , }

30 :	"log"
		- NEIGH  = { log , sin , lp , phi , xy , k0 , e , P , y , - , pj_tsfn , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , k0 , lam , P , * , x , xy , }
		- SUCC   = { xy , return , }

30 :	"pj_tsfn"
		- NEIGH  = { log , sin , lp , phi , xy , k0 , e , P , y , - , pj_tsfn , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , k0 , lam , P , * , x , xy , }
		- SUCC   = { xy , return , }

30 :	"lp"
		- NEIGH  = { log , sin , lp , phi , xy , k0 , e , P , y , - , pj_tsfn , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , k0 , lam , P , * , x , xy , }
		- SUCC   = { xy , return , }

30 :	"phi"
		- NEIGH  = { log , sin , lp , phi , xy , k0 , e , P , y , - , pj_tsfn , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , k0 , lam , P , * , x , xy , }
		- SUCC   = { xy , return , }

30 :	"sin"
		- NEIGH  = { log , sin , lp , phi , xy , k0 , e , P , y , - , pj_tsfn , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , k0 , lam , P , * , x , xy , }
		- SUCC   = { xy , return , }

30 :	"lp"
		- NEIGH  = { log , sin , lp , phi , xy , k0 , e , P , y , - , pj_tsfn , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , k0 , lam , P , * , x , xy , }
		- SUCC   = { xy , return , }

30 :	"phi"
		- NEIGH  = { log , sin , lp , phi , xy , k0 , e , P , y , - , pj_tsfn , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , k0 , lam , P , * , x , xy , }
		- SUCC   = { xy , return , }

30 :	"P"
		- NEIGH  = { log , sin , lp , phi , xy , k0 , e , P , y , - , pj_tsfn , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , k0 , lam , P , * , x , xy , }
		- SUCC   = { xy , return , }

30 :	"e"
		- NEIGH  = { log , sin , lp , phi , xy , k0 , e , P , y , - , pj_tsfn , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , k0 , lam , P , * , x , xy , }
		- SUCC   = { xy , return , }

31 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { log , sin , lp , phi , xy , k0 , e , P , y , - , pj_tsfn , * , }
		- SUCC   = { }

31 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { log , sin , lp , phi , xy , k0 , e , P , y , - , pj_tsfn , * , }
		- SUCC   = { }

35 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

35 :	"s_forward"
		- NEIGH  = { s_forward , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

35 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

35 :	"lp"
		- NEIGH  = { lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

35 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

35 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

35 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

36 :	"PJ_XY"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , - , <= , phi , lp , fabs , if , }

36 :	"xy"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , - , <= , phi , lp , fabs , if , }

37 :	"if"
		- NEIGH  = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , k0 , lam , P , * , x , xy , }

37 :	"fabs"
		- NEIGH  = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , k0 , lam , P , * , x , xy , }

37 :	"fabs"
		- NEIGH  = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , k0 , lam , P , * , x , xy , }

37 :	"lp"
		- NEIGH  = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , k0 , lam , P , * , x , xy , }

37 :	"phi"
		- NEIGH  = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , k0 , lam , P , * , x , xy , }

37 :	"-"
		- NEIGH  = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , k0 , lam , P , * , x , xy , }

37 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , k0 , lam , P , * , x , xy , }

37 :	"<="
		- NEIGH  = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , k0 , lam , P , * , x , xy , }

38 :	"proj_errno_set"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

38 :	"P"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

38 :	"PJD_ERR_TOLERANCE_CONDITION"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

39 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

39 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

41 :	"xy"
		- NEIGH  = { lp , k0 , lam , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- SUCC   = { phi , lp , logtanpfpim1 , k0 , P , * , y , xy , }

41 :	"x"
		- NEIGH  = { lp , k0 , lam , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- SUCC   = { phi , lp , logtanpfpim1 , k0 , P , * , y , xy , }

41 :	"P"
		- NEIGH  = { lp , k0 , lam , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- SUCC   = { phi , lp , logtanpfpim1 , k0 , P , * , y , xy , }

41 :	"k0"
		- NEIGH  = { lp , k0 , lam , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- SUCC   = { phi , lp , logtanpfpim1 , k0 , P , * , y , xy , }

41 :	"*"
		- NEIGH  = { lp , k0 , lam , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- SUCC   = { phi , lp , logtanpfpim1 , k0 , P , * , y , xy , }

41 :	"lp"
		- NEIGH  = { lp , k0 , lam , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- SUCC   = { phi , lp , logtanpfpim1 , k0 , P , * , y , xy , }

41 :	"lam"
		- NEIGH  = { lp , k0 , lam , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- SUCC   = { phi , lp , logtanpfpim1 , k0 , P , * , y , xy , }

42 :	"xy"
		- NEIGH  = { phi , lp , logtanpfpim1 , k0 , P , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , k0 , lam , P , * , x , xy , }
		- SUCC   = { xy , return , }

42 :	"y"
		- NEIGH  = { phi , lp , logtanpfpim1 , k0 , P , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , k0 , lam , P , * , x , xy , }
		- SUCC   = { xy , return , }

42 :	"P"
		- NEIGH  = { phi , lp , logtanpfpim1 , k0 , P , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , k0 , lam , P , * , x , xy , }
		- SUCC   = { xy , return , }

42 :	"k0"
		- NEIGH  = { phi , lp , logtanpfpim1 , k0 , P , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , k0 , lam , P , * , x , xy , }
		- SUCC   = { xy , return , }

42 :	"*"
		- NEIGH  = { phi , lp , logtanpfpim1 , k0 , P , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , k0 , lam , P , * , x , xy , }
		- SUCC   = { xy , return , }

42 :	"logtanpfpim1"
		- NEIGH  = { phi , lp , logtanpfpim1 , k0 , P , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , k0 , lam , P , * , x , xy , }
		- SUCC   = { xy , return , }

42 :	"lp"
		- NEIGH  = { phi , lp , logtanpfpim1 , k0 , P , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , k0 , lam , P , * , x , xy , }
		- SUCC   = { xy , return , }

42 :	"phi"
		- NEIGH  = { phi , lp , logtanpfpim1 , k0 , P , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , k0 , lam , P , * , x , xy , }
		- SUCC   = { xy , return , }

43 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , logtanpfpim1 , k0 , P , * , y , xy , }
		- SUCC   = { }

43 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , logtanpfpim1 , k0 , P , * , y , xy , }
		- SUCC   = { }

47 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

47 :	"e_inverse"
		- NEIGH  = { e_inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

47 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

47 :	"xy"
		- NEIGH  = { xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

47 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

47 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

47 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

48 :	"PJ_LP"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , exp , y , - , k0 , xy , ctx , e , P , pj_phi2 , / , == , phi , lp , if , }

48 :	"lp"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , exp , y , - , k0 , xy , ctx , e , P , pj_phi2 , / , == , phi , lp , if , }

49 :	"if"
		- NEIGH  = { HUGE_VAL , exp , y , - , k0 , xy , ctx , e , P , pj_phi2 , / , == , phi , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { k0 , / , x , xy , P , lam , lp , }

49 :	"lp"
		- NEIGH  = { HUGE_VAL , exp , y , - , k0 , xy , ctx , e , P , pj_phi2 , / , == , phi , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { k0 , / , x , xy , P , lam , lp , }

49 :	"phi"
		- NEIGH  = { HUGE_VAL , exp , y , - , k0 , xy , ctx , e , P , pj_phi2 , / , == , phi , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { k0 , / , x , xy , P , lam , lp , }

49 :	"pj_phi2"
		- NEIGH  = { HUGE_VAL , exp , y , - , k0 , xy , ctx , e , P , pj_phi2 , / , == , phi , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { k0 , / , x , xy , P , lam , lp , }

49 :	"P"
		- NEIGH  = { HUGE_VAL , exp , y , - , k0 , xy , ctx , e , P , pj_phi2 , / , == , phi , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { k0 , / , x , xy , P , lam , lp , }

49 :	"ctx"
		- NEIGH  = { HUGE_VAL , exp , y , - , k0 , xy , ctx , e , P , pj_phi2 , / , == , phi , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { k0 , / , x , xy , P , lam , lp , }

49 :	"exp"
		- NEIGH  = { HUGE_VAL , exp , y , - , k0 , xy , ctx , e , P , pj_phi2 , / , == , phi , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { k0 , / , x , xy , P , lam , lp , }

49 :	"-"
		- NEIGH  = { HUGE_VAL , exp , y , - , k0 , xy , ctx , e , P , pj_phi2 , / , == , phi , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { k0 , / , x , xy , P , lam , lp , }

49 :	"xy"
		- NEIGH  = { HUGE_VAL , exp , y , - , k0 , xy , ctx , e , P , pj_phi2 , / , == , phi , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { k0 , / , x , xy , P , lam , lp , }

49 :	"y"
		- NEIGH  = { HUGE_VAL , exp , y , - , k0 , xy , ctx , e , P , pj_phi2 , / , == , phi , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { k0 , / , x , xy , P , lam , lp , }

49 :	"/"
		- NEIGH  = { HUGE_VAL , exp , y , - , k0 , xy , ctx , e , P , pj_phi2 , / , == , phi , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { k0 , / , x , xy , P , lam , lp , }

49 :	"P"
		- NEIGH  = { HUGE_VAL , exp , y , - , k0 , xy , ctx , e , P , pj_phi2 , / , == , phi , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { k0 , / , x , xy , P , lam , lp , }

49 :	"k0"
		- NEIGH  = { HUGE_VAL , exp , y , - , k0 , xy , ctx , e , P , pj_phi2 , / , == , phi , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { k0 , / , x , xy , P , lam , lp , }

49 :	"P"
		- NEIGH  = { HUGE_VAL , exp , y , - , k0 , xy , ctx , e , P , pj_phi2 , / , == , phi , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { k0 , / , x , xy , P , lam , lp , }

49 :	"e"
		- NEIGH  = { HUGE_VAL , exp , y , - , k0 , xy , ctx , e , P , pj_phi2 , / , == , phi , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { k0 , / , x , xy , P , lam , lp , }

49 :	"=="
		- NEIGH  = { HUGE_VAL , exp , y , - , k0 , xy , ctx , e , P , pj_phi2 , / , == , phi , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { k0 , / , x , xy , P , lam , lp , }

49 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , exp , y , - , k0 , xy , ctx , e , P , pj_phi2 , / , == , phi , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { k0 , / , x , xy , P , lam , lp , }

50 :	"proj_errno_set"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { HUGE_VAL , exp , y , - , k0 , xy , ctx , e , P , pj_phi2 , / , == , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , return , }

50 :	"P"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { HUGE_VAL , exp , y , - , k0 , xy , ctx , e , P , pj_phi2 , / , == , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , return , }

50 :	"PJD_ERR_TOLERANCE_CONDITION"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { HUGE_VAL , exp , y , - , k0 , xy , ctx , e , P , pj_phi2 , / , == , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , return , }

51 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { HUGE_VAL , exp , y , - , k0 , xy , ctx , e , P , pj_phi2 , / , == , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

51 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { HUGE_VAL , exp , y , - , k0 , xy , ctx , e , P , pj_phi2 , / , == , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

53 :	"lp"
		- NEIGH  = { k0 , / , x , xy , P , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , exp , y , - , k0 , xy , ctx , e , P , pj_phi2 , / , == , phi , lp , if , }
		- SUCC   = { lp , return , }

53 :	"lam"
		- NEIGH  = { k0 , / , x , xy , P , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , exp , y , - , k0 , xy , ctx , e , P , pj_phi2 , / , == , phi , lp , if , }
		- SUCC   = { lp , return , }

53 :	"xy"
		- NEIGH  = { k0 , / , x , xy , P , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , exp , y , - , k0 , xy , ctx , e , P , pj_phi2 , / , == , phi , lp , if , }
		- SUCC   = { lp , return , }

53 :	"x"
		- NEIGH  = { k0 , / , x , xy , P , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , exp , y , - , k0 , xy , ctx , e , P , pj_phi2 , / , == , phi , lp , if , }
		- SUCC   = { lp , return , }

53 :	"/"
		- NEIGH  = { k0 , / , x , xy , P , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , exp , y , - , k0 , xy , ctx , e , P , pj_phi2 , / , == , phi , lp , if , }
		- SUCC   = { lp , return , }

53 :	"P"
		- NEIGH  = { k0 , / , x , xy , P , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , exp , y , - , k0 , xy , ctx , e , P , pj_phi2 , / , == , phi , lp , if , }
		- SUCC   = { lp , return , }

53 :	"k0"
		- NEIGH  = { k0 , / , x , xy , P , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , exp , y , - , k0 , xy , ctx , e , P , pj_phi2 , / , == , phi , lp , if , }
		- SUCC   = { lp , return , }

54 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { k0 , / , x , xy , P , lam , lp , }
		- SUCC   = { }

54 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { k0 , / , x , xy , P , lam , lp , }
		- SUCC   = { }

58 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

58 :	"s_inverse"
		- NEIGH  = { s_inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

58 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

58 :	"xy"
		- NEIGH  = { xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

58 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

58 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

58 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

59 :	"PJ_LP"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { k0 , P , y , xy , sinh , lp , atan , / , phi , }

59 :	"lp"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { k0 , P , y , xy , sinh , lp , atan , / , phi , }

60 :	"lp"
		- NEIGH  = { k0 , P , y , xy , sinh , lp , atan , / , phi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { k0 , / , x , xy , P , lam , lp , }

60 :	"phi"
		- NEIGH  = { k0 , P , y , xy , sinh , lp , atan , / , phi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { k0 , / , x , xy , P , lam , lp , }

60 :	"atan"
		- NEIGH  = { k0 , P , y , xy , sinh , lp , atan , / , phi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { k0 , / , x , xy , P , lam , lp , }

60 :	"sinh"
		- NEIGH  = { k0 , P , y , xy , sinh , lp , atan , / , phi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { k0 , / , x , xy , P , lam , lp , }

60 :	"xy"
		- NEIGH  = { k0 , P , y , xy , sinh , lp , atan , / , phi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { k0 , / , x , xy , P , lam , lp , }

60 :	"y"
		- NEIGH  = { k0 , P , y , xy , sinh , lp , atan , / , phi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { k0 , / , x , xy , P , lam , lp , }

60 :	"/"
		- NEIGH  = { k0 , P , y , xy , sinh , lp , atan , / , phi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { k0 , / , x , xy , P , lam , lp , }

60 :	"P"
		- NEIGH  = { k0 , P , y , xy , sinh , lp , atan , / , phi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { k0 , / , x , xy , P , lam , lp , }

60 :	"k0"
		- NEIGH  = { k0 , P , y , xy , sinh , lp , atan , / , phi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { k0 , / , x , xy , P , lam , lp , }

61 :	"lp"
		- NEIGH  = { k0 , / , x , xy , P , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { k0 , P , y , xy , sinh , lp , atan , / , phi , }
		- SUCC   = { lp , return , }

61 :	"lam"
		- NEIGH  = { k0 , / , x , xy , P , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { k0 , P , y , xy , sinh , lp , atan , / , phi , }
		- SUCC   = { lp , return , }

61 :	"xy"
		- NEIGH  = { k0 , / , x , xy , P , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { k0 , P , y , xy , sinh , lp , atan , / , phi , }
		- SUCC   = { lp , return , }

61 :	"x"
		- NEIGH  = { k0 , / , x , xy , P , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { k0 , P , y , xy , sinh , lp , atan , / , phi , }
		- SUCC   = { lp , return , }

61 :	"/"
		- NEIGH  = { k0 , / , x , xy , P , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { k0 , P , y , xy , sinh , lp , atan , / , phi , }
		- SUCC   = { lp , return , }

61 :	"P"
		- NEIGH  = { k0 , / , x , xy , P , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { k0 , P , y , xy , sinh , lp , atan , / , phi , }
		- SUCC   = { lp , return , }

61 :	"k0"
		- NEIGH  = { k0 , / , x , xy , P , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { k0 , P , y , xy , sinh , lp , atan , / , phi , }
		- SUCC   = { lp , return , }

62 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { k0 , / , x , xy , P , lam , lp , }
		- SUCC   = { }

62 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { k0 , / , x , xy , P , lam , lp , }
		- SUCC   = { }

66 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

66 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

66 :	"PROJECTION"
		- NEIGH  = { PROJECTION , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

66 :	"merc"
		- NEIGH  = { merc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

67 :	"phits"
		- NEIGH  = { phits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { is_phits , }

68 :	"is_phits"
		- NEIGH  = { is_phits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phits , }
		- SUCC   = { i , params , ctx , P , pj_param , is_phits , if , }

70 :	"if"
		- NEIGH  = { i , params , ctx , P , pj_param , is_phits , if , }
		- PARENT = { }
		- CHILD  = { M_HALFPI , if , f , >= , params , ctx , fabs , P , pj_param , phits , }
		- PRED   = { is_phits , }
		- SUCC   = { != , es , P , if , }

70 :	"is_phits"
		- NEIGH  = { i , params , ctx , P , pj_param , is_phits , if , }
		- PARENT = { }
		- CHILD  = { M_HALFPI , if , f , >= , params , ctx , fabs , P , pj_param , phits , }
		- PRED   = { is_phits , }
		- SUCC   = { != , es , P , if , }

70 :	"pj_param"
		- NEIGH  = { i , params , ctx , P , pj_param , is_phits , if , }
		- PARENT = { }
		- CHILD  = { M_HALFPI , if , f , >= , params , ctx , fabs , P , pj_param , phits , }
		- PRED   = { is_phits , }
		- SUCC   = { != , es , P , if , }

70 :	"P"
		- NEIGH  = { i , params , ctx , P , pj_param , is_phits , if , }
		- PARENT = { }
		- CHILD  = { M_HALFPI , if , f , >= , params , ctx , fabs , P , pj_param , phits , }
		- PRED   = { is_phits , }
		- SUCC   = { != , es , P , if , }

70 :	"ctx"
		- NEIGH  = { i , params , ctx , P , pj_param , is_phits , if , }
		- PARENT = { }
		- CHILD  = { M_HALFPI , if , f , >= , params , ctx , fabs , P , pj_param , phits , }
		- PRED   = { is_phits , }
		- SUCC   = { != , es , P , if , }

70 :	"P"
		- NEIGH  = { i , params , ctx , P , pj_param , is_phits , if , }
		- PARENT = { }
		- CHILD  = { M_HALFPI , if , f , >= , params , ctx , fabs , P , pj_param , phits , }
		- PRED   = { is_phits , }
		- SUCC   = { != , es , P , if , }

70 :	"params"
		- NEIGH  = { i , params , ctx , P , pj_param , is_phits , if , }
		- PARENT = { }
		- CHILD  = { M_HALFPI , if , f , >= , params , ctx , fabs , P , pj_param , phits , }
		- PRED   = { is_phits , }
		- SUCC   = { != , es , P , if , }

70 :	"i"
		- NEIGH  = { i , params , ctx , P , pj_param , is_phits , if , }
		- PARENT = { }
		- CHILD  = { M_HALFPI , if , f , >= , params , ctx , fabs , P , pj_param , phits , }
		- PRED   = { is_phits , }
		- SUCC   = { != , es , P , if , }

71 :	"phits"
		- NEIGH  = { f , params , ctx , fabs , P , pj_param , phits , }
		- PARENT = { i , params , ctx , P , pj_param , is_phits , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { >= , M_HALFPI , phits , if , }

71 :	"fabs"
		- NEIGH  = { f , params , ctx , fabs , P , pj_param , phits , }
		- PARENT = { i , params , ctx , P , pj_param , is_phits , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { >= , M_HALFPI , phits , if , }

71 :	"pj_param"
		- NEIGH  = { f , params , ctx , fabs , P , pj_param , phits , }
		- PARENT = { i , params , ctx , P , pj_param , is_phits , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { >= , M_HALFPI , phits , if , }

71 :	"P"
		- NEIGH  = { f , params , ctx , fabs , P , pj_param , phits , }
		- PARENT = { i , params , ctx , P , pj_param , is_phits , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { >= , M_HALFPI , phits , if , }

71 :	"ctx"
		- NEIGH  = { f , params , ctx , fabs , P , pj_param , phits , }
		- PARENT = { i , params , ctx , P , pj_param , is_phits , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { >= , M_HALFPI , phits , if , }

71 :	"P"
		- NEIGH  = { f , params , ctx , fabs , P , pj_param , phits , }
		- PARENT = { i , params , ctx , P , pj_param , is_phits , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { >= , M_HALFPI , phits , if , }

71 :	"params"
		- NEIGH  = { f , params , ctx , fabs , P , pj_param , phits , }
		- PARENT = { i , params , ctx , P , pj_param , is_phits , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { >= , M_HALFPI , phits , if , }

71 :	"f"
		- NEIGH  = { f , params , ctx , fabs , P , pj_param , phits , }
		- PARENT = { i , params , ctx , P , pj_param , is_phits , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { >= , M_HALFPI , phits , if , }

72 :	"if"
		- NEIGH  = { >= , M_HALFPI , phits , if , }
		- PARENT = { i , params , ctx , P , pj_param , is_phits , if , }
		- CHILD  = { PJD_ERR_LAT_TS_LARGER_THAN_90 , P , pj_default_destructor , return , }
		- PRED   = { f , params , ctx , fabs , P , pj_param , phits , }
		- SUCC   = { }

72 :	"phits"
		- NEIGH  = { >= , M_HALFPI , phits , if , }
		- PARENT = { i , params , ctx , P , pj_param , is_phits , if , }
		- CHILD  = { PJD_ERR_LAT_TS_LARGER_THAN_90 , P , pj_default_destructor , return , }
		- PRED   = { f , params , ctx , fabs , P , pj_param , phits , }
		- SUCC   = { }

72 :	">="
		- NEIGH  = { >= , M_HALFPI , phits , if , }
		- PARENT = { i , params , ctx , P , pj_param , is_phits , if , }
		- CHILD  = { PJD_ERR_LAT_TS_LARGER_THAN_90 , P , pj_default_destructor , return , }
		- PRED   = { f , params , ctx , fabs , P , pj_param , phits , }
		- SUCC   = { }

72 :	"M_HALFPI"
		- NEIGH  = { >= , M_HALFPI , phits , if , }
		- PARENT = { i , params , ctx , P , pj_param , is_phits , if , }
		- CHILD  = { PJD_ERR_LAT_TS_LARGER_THAN_90 , P , pj_default_destructor , return , }
		- PRED   = { f , params , ctx , fabs , P , pj_param , phits , }
		- SUCC   = { }

73 :	"return"
		- NEIGH  = { PJD_ERR_LAT_TS_LARGER_THAN_90 , P , pj_default_destructor , return , }
		- PARENT = { >= , M_HALFPI , phits , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

73 :	"pj_default_destructor"
		- NEIGH  = { PJD_ERR_LAT_TS_LARGER_THAN_90 , P , pj_default_destructor , return , }
		- PARENT = { >= , M_HALFPI , phits , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

73 :	"P"
		- NEIGH  = { PJD_ERR_LAT_TS_LARGER_THAN_90 , P , pj_default_destructor , return , }
		- PARENT = { >= , M_HALFPI , phits , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

73 :	"PJD_ERR_LAT_TS_LARGER_THAN_90"
		- NEIGH  = { PJD_ERR_LAT_TS_LARGER_THAN_90 , P , pj_default_destructor , return , }
		- PARENT = { >= , M_HALFPI , phits , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

76 :	"if"
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { s_forward , fwd , inv , P , e_inverse , s_inverse , e_forward , is_phits , if , }
		- PRED   = { i , params , ctx , P , pj_param , is_phits , if , }
		- SUCC   = { P , return , }

76 :	"P"
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { s_forward , fwd , inv , P , e_inverse , s_inverse , e_forward , is_phits , if , }
		- PRED   = { i , params , ctx , P , pj_param , is_phits , if , }
		- SUCC   = { P , return , }

76 :	"es"
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { s_forward , fwd , inv , P , e_inverse , s_inverse , e_forward , is_phits , if , }
		- PRED   = { i , params , ctx , P , pj_param , is_phits , if , }
		- SUCC   = { P , return , }

76 :	"!="
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { s_forward , fwd , inv , P , e_inverse , s_inverse , e_forward , is_phits , if , }
		- PRED   = { i , params , ctx , P , pj_param , is_phits , if , }
		- SUCC   = { P , return , }

77 :	"if"
		- NEIGH  = { is_phits , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { es , cos , phits , pj_msfn , sin , k0 , P , }
		- PRED   = { }
		- SUCC   = { e_inverse , inv , P , }

77 :	"is_phits"
		- NEIGH  = { is_phits , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { es , cos , phits , pj_msfn , sin , k0 , P , }
		- PRED   = { }
		- SUCC   = { e_inverse , inv , P , }

78 :	"P"
		- NEIGH  = { es , cos , phits , pj_msfn , sin , k0 , P , }
		- PARENT = { is_phits , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

78 :	"k0"
		- NEIGH  = { es , cos , phits , pj_msfn , sin , k0 , P , }
		- PARENT = { is_phits , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

78 :	"pj_msfn"
		- NEIGH  = { es , cos , phits , pj_msfn , sin , k0 , P , }
		- PARENT = { is_phits , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

78 :	"sin"
		- NEIGH  = { es , cos , phits , pj_msfn , sin , k0 , P , }
		- PARENT = { is_phits , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

78 :	"phits"
		- NEIGH  = { es , cos , phits , pj_msfn , sin , k0 , P , }
		- PARENT = { is_phits , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

78 :	"cos"
		- NEIGH  = { es , cos , phits , pj_msfn , sin , k0 , P , }
		- PARENT = { is_phits , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

78 :	"phits"
		- NEIGH  = { es , cos , phits , pj_msfn , sin , k0 , P , }
		- PARENT = { is_phits , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

78 :	"P"
		- NEIGH  = { es , cos , phits , pj_msfn , sin , k0 , P , }
		- PARENT = { is_phits , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

78 :	"es"
		- NEIGH  = { es , cos , phits , pj_msfn , sin , k0 , P , }
		- PARENT = { is_phits , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

79 :	"P"
		- NEIGH  = { e_inverse , inv , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { is_phits , if , }
		- SUCC   = { e_forward , fwd , P , }

79 :	"inv"
		- NEIGH  = { e_inverse , inv , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { is_phits , if , }
		- SUCC   = { e_forward , fwd , P , }

79 :	"e_inverse"
		- NEIGH  = { e_inverse , inv , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { is_phits , if , }
		- SUCC   = { e_forward , fwd , P , }

80 :	"P"
		- NEIGH  = { e_forward , fwd , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { e_inverse , inv , P , }
		- SUCC   = { }

80 :	"fwd"
		- NEIGH  = { e_forward , fwd , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { e_inverse , inv , P , }
		- SUCC   = { }

80 :	"e_forward"
		- NEIGH  = { e_forward , fwd , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { e_inverse , inv , P , }
		- SUCC   = { }

84 :	"if"
		- NEIGH  = { is_phits , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { phits , cos , k0 , P , }
		- PRED   = { }
		- SUCC   = { s_inverse , inv , P , }

84 :	"is_phits"
		- NEIGH  = { is_phits , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { phits , cos , k0 , P , }
		- PRED   = { }
		- SUCC   = { s_inverse , inv , P , }

85 :	"P"
		- NEIGH  = { phits , cos , k0 , P , }
		- PARENT = { is_phits , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

85 :	"k0"
		- NEIGH  = { phits , cos , k0 , P , }
		- PARENT = { is_phits , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

85 :	"cos"
		- NEIGH  = { phits , cos , k0 , P , }
		- PARENT = { is_phits , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

85 :	"phits"
		- NEIGH  = { phits , cos , k0 , P , }
		- PARENT = { is_phits , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

86 :	"P"
		- NEIGH  = { s_inverse , inv , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { is_phits , if , }
		- SUCC   = { s_forward , fwd , P , }

86 :	"inv"
		- NEIGH  = { s_inverse , inv , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { is_phits , if , }
		- SUCC   = { s_forward , fwd , P , }

86 :	"s_inverse"
		- NEIGH  = { s_inverse , inv , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { is_phits , if , }
		- SUCC   = { s_forward , fwd , P , }

87 :	"P"
		- NEIGH  = { s_forward , fwd , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { s_inverse , inv , P , }
		- SUCC   = { }

87 :	"fwd"
		- NEIGH  = { s_forward , fwd , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { s_inverse , inv , P , }
		- SUCC   = { }

87 :	"s_forward"
		- NEIGH  = { s_forward , fwd , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { s_inverse , inv , P , }
		- SUCC   = { }

90 :	"return"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , es , P , if , }
		- SUCC   = { }

90 :	"P"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , es , P , if , }
		- SUCC   = { }

93 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

93 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

93 :	"PROJECTION"
		- NEIGH  = { PROJECTION , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

93 :	"webmerc"
		- NEIGH  = { webmerc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

96 :	"P"
		- NEIGH  = { k0 , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { s_inverse , inv , P , }

96 :	"k0"
		- NEIGH  = { k0 , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { s_inverse , inv , P , }

98 :	"P"
		- NEIGH  = { s_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { k0 , P , }
		- SUCC   = { s_forward , fwd , P , }

98 :	"inv"
		- NEIGH  = { s_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { k0 , P , }
		- SUCC   = { s_forward , fwd , P , }

98 :	"s_inverse"
		- NEIGH  = { s_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { k0 , P , }
		- SUCC   = { s_forward , fwd , P , }

99 :	"P"
		- NEIGH  = { s_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { s_inverse , inv , P , }
		- SUCC   = { P , return , }

99 :	"fwd"
		- NEIGH  = { s_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { s_inverse , inv , P , }
		- SUCC   = { P , return , }

99 :	"s_forward"
		- NEIGH  = { s_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { s_inverse , inv , P , }
		- SUCC   = { P , return , }

100 :	"return"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { s_forward , fwd , P , }
		- SUCC   = { }

100 :	"P"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { s_forward , fwd , P , }
		- SUCC   = { }

