8 :	"TOL"
		- NEIGH  = { TOL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

9 :	"N_ITER"
		- NEIGH  = { N_ITER , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

12 :	"pj_phi2"
		- NEIGH  = { pj_phi2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

12 :	"projCtx"
		- NEIGH  = { projCtx , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

12 :	"ctx"
		- NEIGH  = { ctx , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

12 :	"ts0"
		- NEIGH  = { ts0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

12 :	"e"
		- NEIGH  = { e , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

27 :	"eccnth"
		- NEIGH  = { e , * , eccnth , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ts0 , ts , }

27 :	"*"
		- NEIGH  = { e , * , eccnth , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ts0 , ts , }

27 :	"e"
		- NEIGH  = { e , * , eccnth , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ts0 , ts , }

28 :	"ts"
		- NEIGH  = { ts0 , ts , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , * , eccnth , }
		- SUCC   = { N_ITER , i , }

28 :	"ts0"
		- NEIGH  = { ts0 , ts , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , * , eccnth , }
		- SUCC   = { N_ITER , i , }

32 :	"i"
		- NEIGH  = { N_ITER , i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ts0 , ts , }
		- SUCC   = { for , }

32 :	"N_ITER"
		- NEIGH  = { N_ITER , i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ts0 , ts , }
		- SUCC   = { for , }

34 :	"for"
		- NEIGH  = { for , }
		- PARENT = { }
		- CHILD  = { break , i , && , > , TOL , fabs , if , dphi , - , ts0 , * , old_ts , -- , e , / , con , + , ts , pow , eccnth , sinPhi , }
		- PRED   = { N_ITER , i , }
		- SUCC   = { <= , i , if , }

42 :	"sinPhi"
		- NEIGH  = { + , ts , / , sinPhi , - , * , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sinPhi , * , e , con , }

42 :	"-"
		- NEIGH  = { + , ts , / , sinPhi , - , * , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sinPhi , * , e , con , }

42 :	"ts"
		- NEIGH  = { + , ts , / , sinPhi , - , * , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sinPhi , * , e , con , }

42 :	"*"
		- NEIGH  = { + , ts , / , sinPhi , - , * , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sinPhi , * , e , con , }

42 :	"ts"
		- NEIGH  = { + , ts , / , sinPhi , - , * , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sinPhi , * , e , con , }

42 :	"/"
		- NEIGH  = { + , ts , / , sinPhi , - , * , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sinPhi , * , e , con , }

42 :	"+"
		- NEIGH  = { + , ts , / , sinPhi , - , * , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sinPhi , * , e , con , }

42 :	"ts"
		- NEIGH  = { + , ts , / , sinPhi , - , * , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sinPhi , * , e , con , }

42 :	"*"
		- NEIGH  = { + , ts , / , sinPhi , - , * , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sinPhi , * , e , con , }

42 :	"ts"
		- NEIGH  = { + , ts , / , sinPhi , - , * , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sinPhi , * , e , con , }

43 :	"con"
		- NEIGH  = { sinPhi , * , e , con , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { + , ts , / , sinPhi , - , * , }
		- SUCC   = { ts , old_ts , }

43 :	"e"
		- NEIGH  = { sinPhi , * , e , con , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { + , ts , / , sinPhi , - , * , }
		- SUCC   = { ts , old_ts , }

43 :	"*"
		- NEIGH  = { sinPhi , * , e , con , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { + , ts , / , sinPhi , - , * , }
		- SUCC   = { ts , old_ts , }

43 :	"sinPhi"
		- NEIGH  = { sinPhi , * , e , con , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { + , ts , / , sinPhi , - , * , }
		- SUCC   = { ts , old_ts , }

44 :	"old_ts"
		- NEIGH  = { ts , old_ts , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { sinPhi , * , e , con , }
		- SUCC   = { + , con , - , pow , eccnth , * , ts0 , / , ts , }

44 :	"ts"
		- NEIGH  = { ts , old_ts , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { sinPhi , * , e , con , }
		- SUCC   = { + , con , - , pow , eccnth , * , ts0 , / , ts , }

45 :	"ts"
		- NEIGH  = { + , con , - , pow , eccnth , * , ts0 , / , ts , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { ts , old_ts , }
		- SUCC   = { old_ts , ts , * , - , dphi , }

45 :	"ts0"
		- NEIGH  = { + , con , - , pow , eccnth , * , ts0 , / , ts , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { ts , old_ts , }
		- SUCC   = { old_ts , ts , * , - , dphi , }

45 :	"*"
		- NEIGH  = { + , con , - , pow , eccnth , * , ts0 , / , ts , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { ts , old_ts , }
		- SUCC   = { old_ts , ts , * , - , dphi , }

45 :	"pow"
		- NEIGH  = { + , con , - , pow , eccnth , * , ts0 , / , ts , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { ts , old_ts , }
		- SUCC   = { old_ts , ts , * , - , dphi , }

45 :	"-"
		- NEIGH  = { + , con , - , pow , eccnth , * , ts0 , / , ts , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { ts , old_ts , }
		- SUCC   = { old_ts , ts , * , - , dphi , }

45 :	"con"
		- NEIGH  = { + , con , - , pow , eccnth , * , ts0 , / , ts , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { ts , old_ts , }
		- SUCC   = { old_ts , ts , * , - , dphi , }

45 :	"/"
		- NEIGH  = { + , con , - , pow , eccnth , * , ts0 , / , ts , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { ts , old_ts , }
		- SUCC   = { old_ts , ts , * , - , dphi , }

45 :	"+"
		- NEIGH  = { + , con , - , pow , eccnth , * , ts0 , / , ts , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { ts , old_ts , }
		- SUCC   = { old_ts , ts , * , - , dphi , }

45 :	"con"
		- NEIGH  = { + , con , - , pow , eccnth , * , ts0 , / , ts , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { ts , old_ts , }
		- SUCC   = { old_ts , ts , * , - , dphi , }

45 :	"eccnth"
		- NEIGH  = { + , con , - , pow , eccnth , * , ts0 , / , ts , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { ts , old_ts , }
		- SUCC   = { old_ts , ts , * , - , dphi , }

58 :	"dphi"
		- NEIGH  = { old_ts , ts , * , - , dphi , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { + , con , - , pow , eccnth , * , ts0 , / , ts , }
		- SUCC   = { i , -- , && , TOL , > , dphi , fabs , if , }

58 :	"*"
		- NEIGH  = { old_ts , ts , * , - , dphi , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { + , con , - , pow , eccnth , * , ts0 , / , ts , }
		- SUCC   = { i , -- , && , TOL , > , dphi , fabs , if , }

58 :	"ts"
		- NEIGH  = { old_ts , ts , * , - , dphi , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { + , con , - , pow , eccnth , * , ts0 , / , ts , }
		- SUCC   = { i , -- , && , TOL , > , dphi , fabs , if , }

58 :	"-"
		- NEIGH  = { old_ts , ts , * , - , dphi , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { + , con , - , pow , eccnth , * , ts0 , / , ts , }
		- SUCC   = { i , -- , && , TOL , > , dphi , fabs , if , }

58 :	"old_ts"
		- NEIGH  = { old_ts , ts , * , - , dphi , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { + , con , - , pow , eccnth , * , ts0 , / , ts , }
		- SUCC   = { i , -- , && , TOL , > , dphi , fabs , if , }

60 :	"if"
		- NEIGH  = { i , -- , && , TOL , > , dphi , fabs , if , }
		- PARENT = { for , }
		- CHILD  = { continue , }
		- PRED   = { old_ts , ts , * , - , dphi , }
		- SUCC   = { break , }

60 :	"fabs"
		- NEIGH  = { i , -- , && , TOL , > , dphi , fabs , if , }
		- PARENT = { for , }
		- CHILD  = { continue , }
		- PRED   = { old_ts , ts , * , - , dphi , }
		- SUCC   = { break , }

60 :	"dphi"
		- NEIGH  = { i , -- , && , TOL , > , dphi , fabs , if , }
		- PARENT = { for , }
		- CHILD  = { continue , }
		- PRED   = { old_ts , ts , * , - , dphi , }
		- SUCC   = { break , }

60 :	">"
		- NEIGH  = { i , -- , && , TOL , > , dphi , fabs , if , }
		- PARENT = { for , }
		- CHILD  = { continue , }
		- PRED   = { old_ts , ts , * , - , dphi , }
		- SUCC   = { break , }

60 :	"TOL"
		- NEIGH  = { i , -- , && , TOL , > , dphi , fabs , if , }
		- PARENT = { for , }
		- CHILD  = { continue , }
		- PRED   = { old_ts , ts , * , - , dphi , }
		- SUCC   = { break , }

60 :	"&&"
		- NEIGH  = { i , -- , && , TOL , > , dphi , fabs , if , }
		- PARENT = { for , }
		- CHILD  = { continue , }
		- PRED   = { old_ts , ts , * , - , dphi , }
		- SUCC   = { break , }

60 :	"--"
		- NEIGH  = { i , -- , && , TOL , > , dphi , fabs , if , }
		- PARENT = { for , }
		- CHILD  = { continue , }
		- PRED   = { old_ts , ts , * , - , dphi , }
		- SUCC   = { break , }

60 :	"i"
		- NEIGH  = { i , -- , && , TOL , > , dphi , fabs , if , }
		- PARENT = { for , }
		- CHILD  = { continue , }
		- PRED   = { old_ts , ts , * , - , dphi , }
		- SUCC   = { break , }

61 :	"continue"
		- NEIGH  = { continue , }
		- PARENT = { i , -- , && , TOL , > , dphi , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

63 :	"break"
		- NEIGH  = { break , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { i , -- , && , TOL , > , dphi , fabs , if , }
		- SUCC   = { }

65 :	"if"
		- NEIGH  = { <= , i , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_NON_CON_INV_PHI2 , ctx , pj_ctx_set_errno , }
		- PRED   = { for , }
		- SUCC   = { ts , * , return , - , M_HALFPI , atan , }

65 :	"i"
		- NEIGH  = { <= , i , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_NON_CON_INV_PHI2 , ctx , pj_ctx_set_errno , }
		- PRED   = { for , }
		- SUCC   = { ts , * , return , - , M_HALFPI , atan , }

65 :	"<="
		- NEIGH  = { <= , i , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_NON_CON_INV_PHI2 , ctx , pj_ctx_set_errno , }
		- PRED   = { for , }
		- SUCC   = { ts , * , return , - , M_HALFPI , atan , }

66 :	"pj_ctx_set_errno"
		- NEIGH  = { PJD_ERR_NON_CON_INV_PHI2 , ctx , pj_ctx_set_errno , }
		- PARENT = { <= , i , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

66 :	"ctx"
		- NEIGH  = { PJD_ERR_NON_CON_INV_PHI2 , ctx , pj_ctx_set_errno , }
		- PARENT = { <= , i , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

66 :	"PJD_ERR_NON_CON_INV_PHI2"
		- NEIGH  = { PJD_ERR_NON_CON_INV_PHI2 , ctx , pj_ctx_set_errno , }
		- PARENT = { <= , i , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

67 :	"return"
		- NEIGH  = { ts , * , return , - , M_HALFPI , atan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , i , if , }
		- SUCC   = { }

67 :	"M_HALFPI"
		- NEIGH  = { ts , * , return , - , M_HALFPI , atan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , i , if , }
		- SUCC   = { }

67 :	"-"
		- NEIGH  = { ts , * , return , - , M_HALFPI , atan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , i , if , }
		- SUCC   = { }

67 :	"*"
		- NEIGH  = { ts , * , return , - , M_HALFPI , atan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , i , if , }
		- SUCC   = { }

67 :	"atan"
		- NEIGH  = { ts , * , return , - , M_HALFPI , atan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , i , if , }
		- SUCC   = { }

67 :	"ts"
		- NEIGH  = { ts , * , return , - , M_HALFPI , atan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , i , if , }
		- SUCC   = { }

