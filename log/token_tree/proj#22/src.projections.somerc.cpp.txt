9 :	"PROJ_HEAD"
		- NEIGH  = { PROJ_HEAD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

9 :	"somerc"
		- NEIGH  = { somerc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

12 :	"pj_opaque"
		- NEIGH  = { pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

13 :	"K"
		- NEIGH  = { K , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

13 :	"c"
		- NEIGH  = { c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

13 :	"hlf_e"
		- NEIGH  = { hlf_e , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

13 :	"kR"
		- NEIGH  = { kR , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

13 :	"cosp0"
		- NEIGH  = { cosp0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

13 :	"sinp0"
		- NEIGH  = { sinp0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

21 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

21 :	"somerc_e_forward"
		- NEIGH  = { somerc_e_forward , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

21 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

21 :	"lp"
		- NEIGH  = { lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

21 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

21 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

21 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

22 :	"PJ_XY"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cp , sp , lampp , phip , phipp , lamp , }

22 :	"xy"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cp , sp , lampp , phip , phipp , lamp , }

23 :	"phip"
		- NEIGH  = { cp , sp , lampp , phip , phipp , lamp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

23 :	"lamp"
		- NEIGH  = { cp , sp , lampp , phip , phipp , lamp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

23 :	"phipp"
		- NEIGH  = { cp , sp , lampp , phip , phipp , lamp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

23 :	"lampp"
		- NEIGH  = { cp , sp , lampp , phip , phipp , lamp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

23 :	"sp"
		- NEIGH  = { cp , sp , lampp , phip , phipp , lamp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

23 :	"cp"
		- NEIGH  = { cp , sp , lampp , phip , phipp , lamp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

24 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cp , sp , lampp , phip , phipp , lamp , }
		- SUCC   = { phi , lp , e , sin , * , P , sp , }

24 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cp , sp , lampp , phip , phipp , lamp , }
		- SUCC   = { phi , lp , e , sin , * , P , sp , }

24 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cp , sp , lampp , phip , phipp , lamp , }
		- SUCC   = { phi , lp , e , sin , * , P , sp , }

24 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cp , sp , lampp , phip , phipp , lamp , }
		- SUCC   = { phi , lp , e , sin , * , P , sp , }

24 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cp , sp , lampp , phip , phipp , lamp , }
		- SUCC   = { phi , lp , e , sin , * , P , sp , }

24 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cp , sp , lampp , phip , phipp , lamp , }
		- SUCC   = { phi , lp , e , sin , * , P , sp , }

24 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cp , sp , lampp , phip , phipp , lamp , }
		- SUCC   = { phi , lp , e , sin , * , P , sp , }

24 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cp , sp , lampp , phip , phipp , lamp , }
		- SUCC   = { phi , lp , e , sin , * , P , sp , }

24 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cp , sp , lampp , phip , phipp , lamp , }
		- SUCC   = { phi , lp , e , sin , * , P , sp , }

24 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cp , sp , lampp , phip , phipp , lamp , }
		- SUCC   = { phi , lp , e , sin , * , P , sp , }

26 :	"sp"
		- NEIGH  = { phi , lp , e , sin , * , P , sp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }

26 :	"P"
		- NEIGH  = { phi , lp , e , sin , * , P , sp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }

26 :	"e"
		- NEIGH  = { phi , lp , e , sin , * , P , sp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }

26 :	"*"
		- NEIGH  = { phi , lp , e , sin , * , P , sp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }

26 :	"sin"
		- NEIGH  = { phi , lp , e , sin , * , P , sp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }

26 :	"lp"
		- NEIGH  = { phi , lp , e , sin , * , P , sp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }

26 :	"phi"
		- NEIGH  = { phi , lp , e , sin , * , P , sp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }

27 :	"phip"
		- NEIGH  = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , e , sin , * , P , sp , }
		- SUCC   = { lam , * , c , Q , lp , lamp , }

27 :	"*"
		- NEIGH  = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , e , sin , * , P , sp , }
		- SUCC   = { lam , * , c , Q , lp , lamp , }

27 :	"atan"
		- NEIGH  = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , e , sin , * , P , sp , }
		- SUCC   = { lam , * , c , Q , lp , lamp , }

27 :	"exp"
		- NEIGH  = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , e , sin , * , P , sp , }
		- SUCC   = { lam , * , c , Q , lp , lamp , }

27 :	"Q"
		- NEIGH  = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , e , sin , * , P , sp , }
		- SUCC   = { lam , * , c , Q , lp , lamp , }

27 :	"c"
		- NEIGH  = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , e , sin , * , P , sp , }
		- SUCC   = { lam , * , c , Q , lp , lamp , }

27 :	"*"
		- NEIGH  = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , e , sin , * , P , sp , }
		- SUCC   = { lam , * , c , Q , lp , lamp , }

28 :	"log"
		- NEIGH  = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , e , sin , * , P , sp , }
		- SUCC   = { lam , * , c , Q , lp , lamp , }

28 :	"tan"
		- NEIGH  = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , e , sin , * , P , sp , }
		- SUCC   = { lam , * , c , Q , lp , lamp , }

28 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , e , sin , * , P , sp , }
		- SUCC   = { lam , * , c , Q , lp , lamp , }

28 :	"+"
		- NEIGH  = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , e , sin , * , P , sp , }
		- SUCC   = { lam , * , c , Q , lp , lamp , }

28 :	"*"
		- NEIGH  = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , e , sin , * , P , sp , }
		- SUCC   = { lam , * , c , Q , lp , lamp , }

28 :	"lp"
		- NEIGH  = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , e , sin , * , P , sp , }
		- SUCC   = { lam , * , c , Q , lp , lamp , }

28 :	"phi"
		- NEIGH  = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , e , sin , * , P , sp , }
		- SUCC   = { lam , * , c , Q , lp , lamp , }

28 :	"-"
		- NEIGH  = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , e , sin , * , P , sp , }
		- SUCC   = { lam , * , c , Q , lp , lamp , }

28 :	"Q"
		- NEIGH  = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , e , sin , * , P , sp , }
		- SUCC   = { lam , * , c , Q , lp , lamp , }

28 :	"hlf_e"
		- NEIGH  = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , e , sin , * , P , sp , }
		- SUCC   = { lam , * , c , Q , lp , lamp , }

28 :	"*"
		- NEIGH  = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , e , sin , * , P , sp , }
		- SUCC   = { lam , * , c , Q , lp , lamp , }

28 :	"log"
		- NEIGH  = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , e , sin , * , P , sp , }
		- SUCC   = { lam , * , c , Q , lp , lamp , }

28 :	"+"
		- NEIGH  = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , e , sin , * , P , sp , }
		- SUCC   = { lam , * , c , Q , lp , lamp , }

28 :	"sp"
		- NEIGH  = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , e , sin , * , P , sp , }
		- SUCC   = { lam , * , c , Q , lp , lamp , }

28 :	"/"
		- NEIGH  = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , e , sin , * , P , sp , }
		- SUCC   = { lam , * , c , Q , lp , lamp , }

28 :	"-"
		- NEIGH  = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , e , sin , * , P , sp , }
		- SUCC   = { lam , * , c , Q , lp , lamp , }

28 :	"sp"
		- NEIGH  = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , e , sin , * , P , sp , }
		- SUCC   = { lam , * , c , Q , lp , lamp , }

29 :	"+"
		- NEIGH  = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , e , sin , * , P , sp , }
		- SUCC   = { lam , * , c , Q , lp , lamp , }

29 :	"Q"
		- NEIGH  = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , e , sin , * , P , sp , }
		- SUCC   = { lam , * , c , Q , lp , lamp , }

29 :	"K"
		- NEIGH  = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , e , sin , * , P , sp , }
		- SUCC   = { lam , * , c , Q , lp , lamp , }

29 :	"-"
		- NEIGH  = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , e , sin , * , P , sp , }
		- SUCC   = { lam , * , c , Q , lp , lamp , }

29 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , e , sin , * , P , sp , }
		- SUCC   = { lam , * , c , Q , lp , lamp , }

30 :	"lamp"
		- NEIGH  = { lam , * , c , Q , lp , lamp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }
		- SUCC   = { phip , cos , cp , }

30 :	"Q"
		- NEIGH  = { lam , * , c , Q , lp , lamp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }
		- SUCC   = { phip , cos , cp , }

30 :	"c"
		- NEIGH  = { lam , * , c , Q , lp , lamp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }
		- SUCC   = { phip , cos , cp , }

30 :	"*"
		- NEIGH  = { lam , * , c , Q , lp , lamp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }
		- SUCC   = { phip , cos , cp , }

30 :	"lp"
		- NEIGH  = { lam , * , c , Q , lp , lamp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }
		- SUCC   = { phip , cos , cp , }

30 :	"lam"
		- NEIGH  = { lam , * , c , Q , lp , lamp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , K , / , hlf_e , phi , + , M_FORTPI , log , c , Q , - , phip , exp , sp , lp , atan , * , tan , }
		- SUCC   = { phip , cos , cp , }

31 :	"cp"
		- NEIGH  = { phip , cos , cp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , * , c , Q , lp , lamp , }
		- SUCC   = { lamp , ctx , * , sinp0 , Q , phip , - , cosp0 , cp , P , sin , cos , aasin , phipp , }

31 :	"cos"
		- NEIGH  = { phip , cos , cp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , * , c , Q , lp , lamp , }
		- SUCC   = { lamp , ctx , * , sinp0 , Q , phip , - , cosp0 , cp , P , sin , cos , aasin , phipp , }

31 :	"phip"
		- NEIGH  = { phip , cos , cp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , * , c , Q , lp , lamp , }
		- SUCC   = { lamp , ctx , * , sinp0 , Q , phip , - , cosp0 , cp , P , sin , cos , aasin , phipp , }

32 :	"phipp"
		- NEIGH  = { lamp , ctx , * , sinp0 , Q , phip , - , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip , cos , cp , }
		- SUCC   = { phipp , cos , / , lamp , * , ctx , P , sin , aasin , cp , lampp , }

32 :	"aasin"
		- NEIGH  = { lamp , ctx , * , sinp0 , Q , phip , - , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip , cos , cp , }
		- SUCC   = { phipp , cos , / , lamp , * , ctx , P , sin , aasin , cp , lampp , }

32 :	"P"
		- NEIGH  = { lamp , ctx , * , sinp0 , Q , phip , - , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip , cos , cp , }
		- SUCC   = { phipp , cos , / , lamp , * , ctx , P , sin , aasin , cp , lampp , }

32 :	"ctx"
		- NEIGH  = { lamp , ctx , * , sinp0 , Q , phip , - , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip , cos , cp , }
		- SUCC   = { phipp , cos , / , lamp , * , ctx , P , sin , aasin , cp , lampp , }

32 :	"Q"
		- NEIGH  = { lamp , ctx , * , sinp0 , Q , phip , - , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip , cos , cp , }
		- SUCC   = { phipp , cos , / , lamp , * , ctx , P , sin , aasin , cp , lampp , }

32 :	"cosp0"
		- NEIGH  = { lamp , ctx , * , sinp0 , Q , phip , - , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip , cos , cp , }
		- SUCC   = { phipp , cos , / , lamp , * , ctx , P , sin , aasin , cp , lampp , }

32 :	"*"
		- NEIGH  = { lamp , ctx , * , sinp0 , Q , phip , - , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip , cos , cp , }
		- SUCC   = { phipp , cos , / , lamp , * , ctx , P , sin , aasin , cp , lampp , }

32 :	"sin"
		- NEIGH  = { lamp , ctx , * , sinp0 , Q , phip , - , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip , cos , cp , }
		- SUCC   = { phipp , cos , / , lamp , * , ctx , P , sin , aasin , cp , lampp , }

32 :	"phip"
		- NEIGH  = { lamp , ctx , * , sinp0 , Q , phip , - , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip , cos , cp , }
		- SUCC   = { phipp , cos , / , lamp , * , ctx , P , sin , aasin , cp , lampp , }

32 :	"-"
		- NEIGH  = { lamp , ctx , * , sinp0 , Q , phip , - , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip , cos , cp , }
		- SUCC   = { phipp , cos , / , lamp , * , ctx , P , sin , aasin , cp , lampp , }

32 :	"Q"
		- NEIGH  = { lamp , ctx , * , sinp0 , Q , phip , - , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip , cos , cp , }
		- SUCC   = { phipp , cos , / , lamp , * , ctx , P , sin , aasin , cp , lampp , }

32 :	"sinp0"
		- NEIGH  = { lamp , ctx , * , sinp0 , Q , phip , - , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip , cos , cp , }
		- SUCC   = { phipp , cos , / , lamp , * , ctx , P , sin , aasin , cp , lampp , }

32 :	"*"
		- NEIGH  = { lamp , ctx , * , sinp0 , Q , phip , - , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip , cos , cp , }
		- SUCC   = { phipp , cos , / , lamp , * , ctx , P , sin , aasin , cp , lampp , }

32 :	"cp"
		- NEIGH  = { lamp , ctx , * , sinp0 , Q , phip , - , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip , cos , cp , }
		- SUCC   = { phipp , cos , / , lamp , * , ctx , P , sin , aasin , cp , lampp , }

32 :	"*"
		- NEIGH  = { lamp , ctx , * , sinp0 , Q , phip , - , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip , cos , cp , }
		- SUCC   = { phipp , cos , / , lamp , * , ctx , P , sin , aasin , cp , lampp , }

32 :	"cos"
		- NEIGH  = { lamp , ctx , * , sinp0 , Q , phip , - , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip , cos , cp , }
		- SUCC   = { phipp , cos , / , lamp , * , ctx , P , sin , aasin , cp , lampp , }

32 :	"lamp"
		- NEIGH  = { lamp , ctx , * , sinp0 , Q , phip , - , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip , cos , cp , }
		- SUCC   = { phipp , cos , / , lamp , * , ctx , P , sin , aasin , cp , lampp , }

33 :	"lampp"
		- NEIGH  = { phipp , cos , / , lamp , * , ctx , P , sin , aasin , cp , lampp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lamp , ctx , * , sinp0 , Q , phip , - , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- SUCC   = { kR , Q , * , x , lampp , xy , }

33 :	"aasin"
		- NEIGH  = { phipp , cos , / , lamp , * , ctx , P , sin , aasin , cp , lampp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lamp , ctx , * , sinp0 , Q , phip , - , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- SUCC   = { kR , Q , * , x , lampp , xy , }

33 :	"P"
		- NEIGH  = { phipp , cos , / , lamp , * , ctx , P , sin , aasin , cp , lampp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lamp , ctx , * , sinp0 , Q , phip , - , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- SUCC   = { kR , Q , * , x , lampp , xy , }

33 :	"ctx"
		- NEIGH  = { phipp , cos , / , lamp , * , ctx , P , sin , aasin , cp , lampp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lamp , ctx , * , sinp0 , Q , phip , - , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- SUCC   = { kR , Q , * , x , lampp , xy , }

33 :	"cp"
		- NEIGH  = { phipp , cos , / , lamp , * , ctx , P , sin , aasin , cp , lampp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lamp , ctx , * , sinp0 , Q , phip , - , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- SUCC   = { kR , Q , * , x , lampp , xy , }

33 :	"*"
		- NEIGH  = { phipp , cos , / , lamp , * , ctx , P , sin , aasin , cp , lampp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lamp , ctx , * , sinp0 , Q , phip , - , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- SUCC   = { kR , Q , * , x , lampp , xy , }

33 :	"sin"
		- NEIGH  = { phipp , cos , / , lamp , * , ctx , P , sin , aasin , cp , lampp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lamp , ctx , * , sinp0 , Q , phip , - , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- SUCC   = { kR , Q , * , x , lampp , xy , }

33 :	"lamp"
		- NEIGH  = { phipp , cos , / , lamp , * , ctx , P , sin , aasin , cp , lampp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lamp , ctx , * , sinp0 , Q , phip , - , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- SUCC   = { kR , Q , * , x , lampp , xy , }

33 :	"/"
		- NEIGH  = { phipp , cos , / , lamp , * , ctx , P , sin , aasin , cp , lampp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lamp , ctx , * , sinp0 , Q , phip , - , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- SUCC   = { kR , Q , * , x , lampp , xy , }

33 :	"cos"
		- NEIGH  = { phipp , cos , / , lamp , * , ctx , P , sin , aasin , cp , lampp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lamp , ctx , * , sinp0 , Q , phip , - , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- SUCC   = { kR , Q , * , x , lampp , xy , }

33 :	"phipp"
		- NEIGH  = { phipp , cos , / , lamp , * , ctx , P , sin , aasin , cp , lampp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lamp , ctx , * , sinp0 , Q , phip , - , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- SUCC   = { kR , Q , * , x , lampp , xy , }

34 :	"xy"
		- NEIGH  = { kR , Q , * , x , lampp , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phipp , cos , / , lamp , * , ctx , P , sin , aasin , cp , lampp , }
		- SUCC   = { + , M_FORTPI , phipp , tan , log , kR , Q , * , y , xy , }

34 :	"x"
		- NEIGH  = { kR , Q , * , x , lampp , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phipp , cos , / , lamp , * , ctx , P , sin , aasin , cp , lampp , }
		- SUCC   = { + , M_FORTPI , phipp , tan , log , kR , Q , * , y , xy , }

34 :	"Q"
		- NEIGH  = { kR , Q , * , x , lampp , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phipp , cos , / , lamp , * , ctx , P , sin , aasin , cp , lampp , }
		- SUCC   = { + , M_FORTPI , phipp , tan , log , kR , Q , * , y , xy , }

34 :	"kR"
		- NEIGH  = { kR , Q , * , x , lampp , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phipp , cos , / , lamp , * , ctx , P , sin , aasin , cp , lampp , }
		- SUCC   = { + , M_FORTPI , phipp , tan , log , kR , Q , * , y , xy , }

34 :	"*"
		- NEIGH  = { kR , Q , * , x , lampp , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phipp , cos , / , lamp , * , ctx , P , sin , aasin , cp , lampp , }
		- SUCC   = { + , M_FORTPI , phipp , tan , log , kR , Q , * , y , xy , }

34 :	"lampp"
		- NEIGH  = { kR , Q , * , x , lampp , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phipp , cos , / , lamp , * , ctx , P , sin , aasin , cp , lampp , }
		- SUCC   = { + , M_FORTPI , phipp , tan , log , kR , Q , * , y , xy , }

35 :	"xy"
		- NEIGH  = { + , M_FORTPI , phipp , tan , log , kR , Q , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { kR , Q , * , x , lampp , xy , }
		- SUCC   = { xy , return , }

35 :	"y"
		- NEIGH  = { + , M_FORTPI , phipp , tan , log , kR , Q , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { kR , Q , * , x , lampp , xy , }
		- SUCC   = { xy , return , }

35 :	"Q"
		- NEIGH  = { + , M_FORTPI , phipp , tan , log , kR , Q , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { kR , Q , * , x , lampp , xy , }
		- SUCC   = { xy , return , }

35 :	"kR"
		- NEIGH  = { + , M_FORTPI , phipp , tan , log , kR , Q , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { kR , Q , * , x , lampp , xy , }
		- SUCC   = { xy , return , }

35 :	"*"
		- NEIGH  = { + , M_FORTPI , phipp , tan , log , kR , Q , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { kR , Q , * , x , lampp , xy , }
		- SUCC   = { xy , return , }

35 :	"log"
		- NEIGH  = { + , M_FORTPI , phipp , tan , log , kR , Q , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { kR , Q , * , x , lampp , xy , }
		- SUCC   = { xy , return , }

35 :	"tan"
		- NEIGH  = { + , M_FORTPI , phipp , tan , log , kR , Q , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { kR , Q , * , x , lampp , xy , }
		- SUCC   = { xy , return , }

35 :	"M_FORTPI"
		- NEIGH  = { + , M_FORTPI , phipp , tan , log , kR , Q , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { kR , Q , * , x , lampp , xy , }
		- SUCC   = { xy , return , }

35 :	"+"
		- NEIGH  = { + , M_FORTPI , phipp , tan , log , kR , Q , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { kR , Q , * , x , lampp , xy , }
		- SUCC   = { xy , return , }

35 :	"*"
		- NEIGH  = { + , M_FORTPI , phipp , tan , log , kR , Q , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { kR , Q , * , x , lampp , xy , }
		- SUCC   = { xy , return , }

35 :	"phipp"
		- NEIGH  = { + , M_FORTPI , phipp , tan , log , kR , Q , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { kR , Q , * , x , lampp , xy , }
		- SUCC   = { xy , return , }

36 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , phipp , tan , log , kR , Q , * , y , xy , }
		- SUCC   = { }

36 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , phipp , tan , log , kR , Q , * , y , xy , }
		- SUCC   = { }

40 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

40 :	"somerc_e_inverse"
		- NEIGH  = { somerc_e_inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

40 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

40 :	"xy"
		- NEIGH  = { xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

40 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

40 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

40 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

41 :	"PJ_LP"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

41 :	"lp"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

42 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { delp , esp , con , cp , lampp , phip , phipp , lamp , }

42 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { delp , esp , con , cp , lampp , phip , phipp , lamp , }

42 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { delp , esp , con , cp , lampp , phip , phipp , lamp , }

42 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { delp , esp , con , cp , lampp , phip , phipp , lamp , }

42 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { delp , esp , con , cp , lampp , phip , phipp , lamp , }

42 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { delp , esp , con , cp , lampp , phip , phipp , lamp , }

42 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { delp , esp , con , cp , lampp , phip , phipp , lamp , }

42 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { delp , esp , con , cp , lampp , phip , phipp , lamp , }

42 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { delp , esp , con , cp , lampp , phip , phipp , lamp , }

42 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { delp , esp , con , cp , lampp , phip , phipp , lamp , }

43 :	"phip"
		- NEIGH  = { delp , esp , con , cp , lampp , phip , phipp , lamp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { i , }

43 :	"lamp"
		- NEIGH  = { delp , esp , con , cp , lampp , phip , phipp , lamp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { i , }

43 :	"phipp"
		- NEIGH  = { delp , esp , con , cp , lampp , phip , phipp , lamp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { i , }

43 :	"lampp"
		- NEIGH  = { delp , esp , con , cp , lampp , phip , phipp , lamp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { i , }

43 :	"cp"
		- NEIGH  = { delp , esp , con , cp , lampp , phip , phipp , lamp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { i , }

43 :	"esp"
		- NEIGH  = { delp , esp , con , cp , lampp , phip , phipp , lamp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { i , }

43 :	"con"
		- NEIGH  = { delp , esp , con , cp , lampp , phip , phipp , lamp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { i , }

43 :	"delp"
		- NEIGH  = { delp , esp , con , cp , lampp , phip , phipp , lamp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { i , }

44 :	"i"
		- NEIGH  = { i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { delp , esp , con , cp , lampp , phip , phipp , lamp , }
		- SUCC   = { M_FORTPI , kR , Q , / , xy , exp , atan , y , * , - , phipp , }

46 :	"phipp"
		- NEIGH  = { M_FORTPI , kR , Q , / , xy , exp , atan , y , * , - , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { kR , Q , / , x , xy , lampp , }

46 :	"*"
		- NEIGH  = { M_FORTPI , kR , Q , / , xy , exp , atan , y , * , - , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { kR , Q , / , x , xy , lampp , }

46 :	"atan"
		- NEIGH  = { M_FORTPI , kR , Q , / , xy , exp , atan , y , * , - , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { kR , Q , / , x , xy , lampp , }

46 :	"exp"
		- NEIGH  = { M_FORTPI , kR , Q , / , xy , exp , atan , y , * , - , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { kR , Q , / , x , xy , lampp , }

46 :	"xy"
		- NEIGH  = { M_FORTPI , kR , Q , / , xy , exp , atan , y , * , - , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { kR , Q , / , x , xy , lampp , }

46 :	"y"
		- NEIGH  = { M_FORTPI , kR , Q , / , xy , exp , atan , y , * , - , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { kR , Q , / , x , xy , lampp , }

46 :	"/"
		- NEIGH  = { M_FORTPI , kR , Q , / , xy , exp , atan , y , * , - , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { kR , Q , / , x , xy , lampp , }

46 :	"Q"
		- NEIGH  = { M_FORTPI , kR , Q , / , xy , exp , atan , y , * , - , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { kR , Q , / , x , xy , lampp , }

46 :	"kR"
		- NEIGH  = { M_FORTPI , kR , Q , / , xy , exp , atan , y , * , - , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { kR , Q , / , x , xy , lampp , }

46 :	"-"
		- NEIGH  = { M_FORTPI , kR , Q , / , xy , exp , atan , y , * , - , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { kR , Q , / , x , xy , lampp , }

46 :	"M_FORTPI"
		- NEIGH  = { M_FORTPI , kR , Q , / , xy , exp , atan , y , * , - , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { kR , Q , / , x , xy , lampp , }

47 :	"lampp"
		- NEIGH  = { kR , Q , / , x , xy , lampp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_FORTPI , kR , Q , / , xy , exp , atan , y , * , - , phipp , }
		- SUCC   = { cos , phipp , cp , }

47 :	"xy"
		- NEIGH  = { kR , Q , / , x , xy , lampp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_FORTPI , kR , Q , / , xy , exp , atan , y , * , - , phipp , }
		- SUCC   = { cos , phipp , cp , }

47 :	"x"
		- NEIGH  = { kR , Q , / , x , xy , lampp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_FORTPI , kR , Q , / , xy , exp , atan , y , * , - , phipp , }
		- SUCC   = { cos , phipp , cp , }

47 :	"/"
		- NEIGH  = { kR , Q , / , x , xy , lampp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_FORTPI , kR , Q , / , xy , exp , atan , y , * , - , phipp , }
		- SUCC   = { cos , phipp , cp , }

47 :	"Q"
		- NEIGH  = { kR , Q , / , x , xy , lampp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_FORTPI , kR , Q , / , xy , exp , atan , y , * , - , phipp , }
		- SUCC   = { cos , phipp , cp , }

47 :	"kR"
		- NEIGH  = { kR , Q , / , x , xy , lampp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_FORTPI , kR , Q , / , xy , exp , atan , y , * , - , phipp , }
		- SUCC   = { cos , phipp , cp , }

48 :	"cp"
		- NEIGH  = { cos , phipp , cp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { kR , Q , / , x , xy , lampp , }
		- SUCC   = { lampp , + , ctx , * , sinp0 , Q , phip , cosp0 , cp , P , sin , cos , aasin , phipp , }

48 :	"cos"
		- NEIGH  = { cos , phipp , cp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { kR , Q , / , x , xy , lampp , }
		- SUCC   = { lampp , + , ctx , * , sinp0 , Q , phip , cosp0 , cp , P , sin , cos , aasin , phipp , }

48 :	"phipp"
		- NEIGH  = { cos , phipp , cp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { kR , Q , / , x , xy , lampp , }
		- SUCC   = { lampp , + , ctx , * , sinp0 , Q , phip , cosp0 , cp , P , sin , cos , aasin , phipp , }

49 :	"phip"
		- NEIGH  = { lampp , + , ctx , * , sinp0 , Q , phip , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , phipp , cp , }
		- SUCC   = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }

49 :	"aasin"
		- NEIGH  = { lampp , + , ctx , * , sinp0 , Q , phip , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , phipp , cp , }
		- SUCC   = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }

49 :	"P"
		- NEIGH  = { lampp , + , ctx , * , sinp0 , Q , phip , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , phipp , cp , }
		- SUCC   = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }

49 :	"ctx"
		- NEIGH  = { lampp , + , ctx , * , sinp0 , Q , phip , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , phipp , cp , }
		- SUCC   = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }

49 :	"Q"
		- NEIGH  = { lampp , + , ctx , * , sinp0 , Q , phip , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , phipp , cp , }
		- SUCC   = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }

49 :	"cosp0"
		- NEIGH  = { lampp , + , ctx , * , sinp0 , Q , phip , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , phipp , cp , }
		- SUCC   = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }

49 :	"*"
		- NEIGH  = { lampp , + , ctx , * , sinp0 , Q , phip , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , phipp , cp , }
		- SUCC   = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }

49 :	"sin"
		- NEIGH  = { lampp , + , ctx , * , sinp0 , Q , phip , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , phipp , cp , }
		- SUCC   = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }

49 :	"phipp"
		- NEIGH  = { lampp , + , ctx , * , sinp0 , Q , phip , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , phipp , cp , }
		- SUCC   = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }

49 :	"+"
		- NEIGH  = { lampp , + , ctx , * , sinp0 , Q , phip , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , phipp , cp , }
		- SUCC   = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }

49 :	"Q"
		- NEIGH  = { lampp , + , ctx , * , sinp0 , Q , phip , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , phipp , cp , }
		- SUCC   = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }

49 :	"sinp0"
		- NEIGH  = { lampp , + , ctx , * , sinp0 , Q , phip , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , phipp , cp , }
		- SUCC   = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }

49 :	"*"
		- NEIGH  = { lampp , + , ctx , * , sinp0 , Q , phip , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , phipp , cp , }
		- SUCC   = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }

49 :	"cp"
		- NEIGH  = { lampp , + , ctx , * , sinp0 , Q , phip , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , phipp , cp , }
		- SUCC   = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }

49 :	"*"
		- NEIGH  = { lampp , + , ctx , * , sinp0 , Q , phip , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , phipp , cp , }
		- SUCC   = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }

49 :	"cos"
		- NEIGH  = { lampp , + , ctx , * , sinp0 , Q , phip , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , phipp , cp , }
		- SUCC   = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }

49 :	"lampp"
		- NEIGH  = { lampp , + , ctx , * , sinp0 , Q , phip , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , phipp , cp , }
		- SUCC   = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }

50 :	"lamp"
		- NEIGH  = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lampp , + , ctx , * , sinp0 , Q , phip , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- SUCC   = { c , * , + , M_FORTPI , - , phip , tan , con , / , log , Q , K , }

50 :	"aasin"
		- NEIGH  = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lampp , + , ctx , * , sinp0 , Q , phip , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- SUCC   = { c , * , + , M_FORTPI , - , phip , tan , con , / , log , Q , K , }

50 :	"P"
		- NEIGH  = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lampp , + , ctx , * , sinp0 , Q , phip , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- SUCC   = { c , * , + , M_FORTPI , - , phip , tan , con , / , log , Q , K , }

50 :	"ctx"
		- NEIGH  = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lampp , + , ctx , * , sinp0 , Q , phip , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- SUCC   = { c , * , + , M_FORTPI , - , phip , tan , con , / , log , Q , K , }

50 :	"cp"
		- NEIGH  = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lampp , + , ctx , * , sinp0 , Q , phip , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- SUCC   = { c , * , + , M_FORTPI , - , phip , tan , con , / , log , Q , K , }

50 :	"*"
		- NEIGH  = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lampp , + , ctx , * , sinp0 , Q , phip , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- SUCC   = { c , * , + , M_FORTPI , - , phip , tan , con , / , log , Q , K , }

50 :	"sin"
		- NEIGH  = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lampp , + , ctx , * , sinp0 , Q , phip , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- SUCC   = { c , * , + , M_FORTPI , - , phip , tan , con , / , log , Q , K , }

50 :	"lampp"
		- NEIGH  = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lampp , + , ctx , * , sinp0 , Q , phip , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- SUCC   = { c , * , + , M_FORTPI , - , phip , tan , con , / , log , Q , K , }

50 :	"/"
		- NEIGH  = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lampp , + , ctx , * , sinp0 , Q , phip , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- SUCC   = { c , * , + , M_FORTPI , - , phip , tan , con , / , log , Q , K , }

50 :	"cos"
		- NEIGH  = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lampp , + , ctx , * , sinp0 , Q , phip , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- SUCC   = { c , * , + , M_FORTPI , - , phip , tan , con , / , log , Q , K , }

50 :	"phip"
		- NEIGH  = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lampp , + , ctx , * , sinp0 , Q , phip , cosp0 , cp , P , sin , cos , aasin , phipp , }
		- SUCC   = { c , * , + , M_FORTPI , - , phip , tan , con , / , log , Q , K , }

51 :	"con"
		- NEIGH  = { c , * , + , M_FORTPI , - , phip , tan , con , / , log , Q , K , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }
		- SUCC   = { -- , i , for , }

51 :	"Q"
		- NEIGH  = { c , * , + , M_FORTPI , - , phip , tan , con , / , log , Q , K , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }
		- SUCC   = { -- , i , for , }

51 :	"K"
		- NEIGH  = { c , * , + , M_FORTPI , - , phip , tan , con , / , log , Q , K , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }
		- SUCC   = { -- , i , for , }

51 :	"-"
		- NEIGH  = { c , * , + , M_FORTPI , - , phip , tan , con , / , log , Q , K , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }
		- SUCC   = { -- , i , for , }

51 :	"log"
		- NEIGH  = { c , * , + , M_FORTPI , - , phip , tan , con , / , log , Q , K , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }
		- SUCC   = { -- , i , for , }

51 :	"tan"
		- NEIGH  = { c , * , + , M_FORTPI , - , phip , tan , con , / , log , Q , K , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }
		- SUCC   = { -- , i , for , }

51 :	"M_FORTPI"
		- NEIGH  = { c , * , + , M_FORTPI , - , phip , tan , con , / , log , Q , K , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }
		- SUCC   = { -- , i , for , }

51 :	"+"
		- NEIGH  = { c , * , + , M_FORTPI , - , phip , tan , con , / , log , Q , K , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }
		- SUCC   = { -- , i , for , }

51 :	"*"
		- NEIGH  = { c , * , + , M_FORTPI , - , phip , tan , con , / , log , Q , K , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }
		- SUCC   = { -- , i , for , }

51 :	"phip"
		- NEIGH  = { c , * , + , M_FORTPI , - , phip , tan , con , / , log , Q , K , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }
		- SUCC   = { -- , i , for , }

51 :	"/"
		- NEIGH  = { c , * , + , M_FORTPI , - , phip , tan , con , / , log , Q , K , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }
		- SUCC   = { -- , i , for , }

51 :	"Q"
		- NEIGH  = { c , * , + , M_FORTPI , - , phip , tan , con , / , log , Q , K , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }
		- SUCC   = { -- , i , for , }

51 :	"c"
		- NEIGH  = { c , * , + , M_FORTPI , - , phip , tan , con , / , log , Q , K , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip , lampp , * , cp , P , sin , aasin , ctx , cos , / , lamp , }
		- SUCC   = { -- , i , for , }

52 :	"for"
		- NEIGH  = { -- , i , for , }
		- PARENT = { }
		- CHILD  = { fabs , rone_es , cos , hlf_e , Q , if , sin , log , + , -= , / , con , P , e , tan , - , phip , M_FORTPI , delp , * , < , esp , }
		- PRED   = { c , * , + , M_FORTPI , - , phip , tan , con , / , log , Q , K , }
		- SUCC   = { i , if , }

52 :	"i"
		- NEIGH  = { -- , i , for , }
		- PARENT = { }
		- CHILD  = { fabs , rone_es , cos , hlf_e , Q , if , sin , log , + , -= , / , con , P , e , tan , - , phip , M_FORTPI , delp , * , < , esp , }
		- PRED   = { c , * , + , M_FORTPI , - , phip , tan , con , / , log , Q , K , }
		- SUCC   = { i , if , }

52 :	"i"
		- NEIGH  = { -- , i , for , }
		- PARENT = { }
		- CHILD  = { fabs , rone_es , cos , hlf_e , Q , if , sin , log , + , -= , / , con , P , e , tan , - , phip , M_FORTPI , delp , * , < , esp , }
		- PRED   = { c , * , + , M_FORTPI , - , phip , tan , con , / , log , Q , K , }
		- SUCC   = { i , if , }

52 :	"--"
		- NEIGH  = { -- , i , for , }
		- PARENT = { }
		- CHILD  = { fabs , rone_es , cos , hlf_e , Q , if , sin , log , + , -= , / , con , P , e , tan , - , phip , M_FORTPI , delp , * , < , esp , }
		- PRED   = { c , * , + , M_FORTPI , - , phip , tan , con , / , log , Q , K , }
		- SUCC   = { i , if , }

52 :	"i"
		- NEIGH  = { -- , i , for , }
		- PARENT = { }
		- CHILD  = { fabs , rone_es , cos , hlf_e , Q , if , sin , log , + , -= , / , con , P , e , tan , - , phip , M_FORTPI , delp , * , < , esp , }
		- PRED   = { c , * , + , M_FORTPI , - , phip , tan , con , / , log , Q , K , }
		- SUCC   = { i , if , }

53 :	"esp"
		- NEIGH  = { phip , e , sin , * , P , esp , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }

53 :	"P"
		- NEIGH  = { phip , e , sin , * , P , esp , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }

53 :	"e"
		- NEIGH  = { phip , e , sin , * , P , esp , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }

53 :	"*"
		- NEIGH  = { phip , e , sin , * , P , esp , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }

53 :	"sin"
		- NEIGH  = { phip , e , sin , * , P , esp , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }

53 :	"phip"
		- NEIGH  = { phip , e , sin , * , P , esp , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }

54 :	"delp"
		- NEIGH  = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phip , e , sin , * , P , esp , }
		- SUCC   = { -= , delp , phip , }

54 :	"con"
		- NEIGH  = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phip , e , sin , * , P , esp , }
		- SUCC   = { -= , delp , phip , }

54 :	"+"
		- NEIGH  = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phip , e , sin , * , P , esp , }
		- SUCC   = { -= , delp , phip , }

54 :	"log"
		- NEIGH  = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phip , e , sin , * , P , esp , }
		- SUCC   = { -= , delp , phip , }

54 :	"tan"
		- NEIGH  = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phip , e , sin , * , P , esp , }
		- SUCC   = { -= , delp , phip , }

54 :	"M_FORTPI"
		- NEIGH  = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phip , e , sin , * , P , esp , }
		- SUCC   = { -= , delp , phip , }

54 :	"+"
		- NEIGH  = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phip , e , sin , * , P , esp , }
		- SUCC   = { -= , delp , phip , }

54 :	"*"
		- NEIGH  = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phip , e , sin , * , P , esp , }
		- SUCC   = { -= , delp , phip , }

54 :	"phip"
		- NEIGH  = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phip , e , sin , * , P , esp , }
		- SUCC   = { -= , delp , phip , }

54 :	"-"
		- NEIGH  = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phip , e , sin , * , P , esp , }
		- SUCC   = { -= , delp , phip , }

54 :	"Q"
		- NEIGH  = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phip , e , sin , * , P , esp , }
		- SUCC   = { -= , delp , phip , }

54 :	"hlf_e"
		- NEIGH  = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phip , e , sin , * , P , esp , }
		- SUCC   = { -= , delp , phip , }

54 :	"*"
		- NEIGH  = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phip , e , sin , * , P , esp , }
		- SUCC   = { -= , delp , phip , }

55 :	"log"
		- NEIGH  = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phip , e , sin , * , P , esp , }
		- SUCC   = { -= , delp , phip , }

55 :	"+"
		- NEIGH  = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phip , e , sin , * , P , esp , }
		- SUCC   = { -= , delp , phip , }

55 :	"esp"
		- NEIGH  = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phip , e , sin , * , P , esp , }
		- SUCC   = { -= , delp , phip , }

55 :	"/"
		- NEIGH  = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phip , e , sin , * , P , esp , }
		- SUCC   = { -= , delp , phip , }

55 :	"-"
		- NEIGH  = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phip , e , sin , * , P , esp , }
		- SUCC   = { -= , delp , phip , }

55 :	"esp"
		- NEIGH  = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phip , e , sin , * , P , esp , }
		- SUCC   = { -= , delp , phip , }

55 :	"*"
		- NEIGH  = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phip , e , sin , * , P , esp , }
		- SUCC   = { -= , delp , phip , }

56 :	"-"
		- NEIGH  = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phip , e , sin , * , P , esp , }
		- SUCC   = { -= , delp , phip , }

56 :	"esp"
		- NEIGH  = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phip , e , sin , * , P , esp , }
		- SUCC   = { -= , delp , phip , }

56 :	"*"
		- NEIGH  = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phip , e , sin , * , P , esp , }
		- SUCC   = { -= , delp , phip , }

56 :	"esp"
		- NEIGH  = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phip , e , sin , * , P , esp , }
		- SUCC   = { -= , delp , phip , }

56 :	"*"
		- NEIGH  = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phip , e , sin , * , P , esp , }
		- SUCC   = { -= , delp , phip , }

56 :	"cos"
		- NEIGH  = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phip , e , sin , * , P , esp , }
		- SUCC   = { -= , delp , phip , }

56 :	"phip"
		- NEIGH  = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phip , e , sin , * , P , esp , }
		- SUCC   = { -= , delp , phip , }

56 :	"*"
		- NEIGH  = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phip , e , sin , * , P , esp , }
		- SUCC   = { -= , delp , phip , }

56 :	"P"
		- NEIGH  = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phip , e , sin , * , P , esp , }
		- SUCC   = { -= , delp , phip , }

56 :	"rone_es"
		- NEIGH  = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phip , e , sin , * , P , esp , }
		- SUCC   = { -= , delp , phip , }

57 :	"phip"
		- NEIGH  = { -= , delp , phip , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }
		- SUCC   = { delp , < , fabs , if , }

57 :	"-="
		- NEIGH  = { -= , delp , phip , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }
		- SUCC   = { delp , < , fabs , if , }

57 :	"delp"
		- NEIGH  = { -= , delp , phip , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { rone_es , cos , esp , hlf_e , Q , log , delp , M_FORTPI , + , - , phip , P , tan , / , con , * , }
		- SUCC   = { delp , < , fabs , if , }

58 :	"if"
		- NEIGH  = { delp , < , fabs , if , }
		- PARENT = { -- , i , for , }
		- CHILD  = { break , }
		- PRED   = { -= , delp , phip , }
		- SUCC   = { }

58 :	"fabs"
		- NEIGH  = { delp , < , fabs , if , }
		- PARENT = { -- , i , for , }
		- CHILD  = { break , }
		- PRED   = { -= , delp , phip , }
		- SUCC   = { }

58 :	"delp"
		- NEIGH  = { delp , < , fabs , if , }
		- PARENT = { -- , i , for , }
		- CHILD  = { break , }
		- PRED   = { -= , delp , phip , }
		- SUCC   = { }

58 :	"<"
		- NEIGH  = { delp , < , fabs , if , }
		- PARENT = { -- , i , for , }
		- CHILD  = { break , }
		- PRED   = { -= , delp , phip , }
		- SUCC   = { }

59 :	"break"
		- NEIGH  = { break , }
		- PARENT = { delp , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

61 :	"if"
		- NEIGH  = { i , if , }
		- PARENT = { }
		- CHILD  = { c , Q , PJD_ERR_TOLERANCE_CONDITION , P , phi , proj_errno_set , lp , lam , / , lamp , return , phip , }
		- PRED   = { -- , i , for , }
		- SUCC   = { lp , return , }

61 :	"i"
		- NEIGH  = { i , if , }
		- PARENT = { }
		- CHILD  = { c , Q , PJD_ERR_TOLERANCE_CONDITION , P , phi , proj_errno_set , lp , lam , / , lamp , return , phip , }
		- PRED   = { -- , i , for , }
		- SUCC   = { lp , return , }

62 :	"lp"
		- NEIGH  = { phip , phi , lp , }
		- PARENT = { i , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { c , Q , lamp , / , lam , lp , }

62 :	"phi"
		- NEIGH  = { phip , phi , lp , }
		- PARENT = { i , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { c , Q , lamp , / , lam , lp , }

62 :	"phip"
		- NEIGH  = { phip , phi , lp , }
		- PARENT = { i , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { c , Q , lamp , / , lam , lp , }

63 :	"lp"
		- NEIGH  = { c , Q , lamp , / , lam , lp , }
		- PARENT = { i , if , }
		- CHILD  = { }
		- PRED   = { phip , phi , lp , }
		- SUCC   = { }

63 :	"lam"
		- NEIGH  = { c , Q , lamp , / , lam , lp , }
		- PARENT = { i , if , }
		- CHILD  = { }
		- PRED   = { phip , phi , lp , }
		- SUCC   = { }

63 :	"lamp"
		- NEIGH  = { c , Q , lamp , / , lam , lp , }
		- PARENT = { i , if , }
		- CHILD  = { }
		- PRED   = { phip , phi , lp , }
		- SUCC   = { }

63 :	"/"
		- NEIGH  = { c , Q , lamp , / , lam , lp , }
		- PARENT = { i , if , }
		- CHILD  = { }
		- PRED   = { phip , phi , lp , }
		- SUCC   = { }

63 :	"Q"
		- NEIGH  = { c , Q , lamp , / , lam , lp , }
		- PARENT = { i , if , }
		- CHILD  = { }
		- PRED   = { phip , phi , lp , }
		- SUCC   = { }

63 :	"c"
		- NEIGH  = { c , Q , lamp , / , lam , lp , }
		- PARENT = { i , if , }
		- CHILD  = { }
		- PRED   = { phip , phi , lp , }
		- SUCC   = { }

65 :	"proj_errno_set"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { i , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , return , }

65 :	"P"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { i , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , return , }

65 :	"PJD_ERR_TOLERANCE_CONDITION"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { i , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , return , }

66 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { i , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

66 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { i , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

68 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , if , }
		- SUCC   = { }

68 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , if , }
		- SUCC   = { }

72 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

72 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

72 :	"PROJECTION"
		- NEIGH  = { PROJECTION , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

72 :	"somerc"
		- NEIGH  = { somerc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

73 :	"cp"
		- NEIGH  = { sp , phip0 , cp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }

73 :	"phip0"
		- NEIGH  = { sp , phip0 , cp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }

73 :	"sp"
		- NEIGH  = { sp , phip0 , cp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }

74 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sp , phip0 , cp , }
		- SUCC   = { Q , == , if , }

74 :	"*"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sp , phip0 , cp , }
		- SUCC   = { Q , == , if , }

74 :	"Q"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sp , phip0 , cp , }
		- SUCC   = { Q , == , if , }

74 :	"static_cast"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sp , phip0 , cp , }
		- SUCC   = { Q , == , if , }

74 :	"<"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sp , phip0 , cp , }
		- SUCC   = { Q , == , if , }

74 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sp , phip0 , cp , }
		- SUCC   = { Q , == , if , }

74 :	"*"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sp , phip0 , cp , }
		- SUCC   = { Q , == , if , }

74 :	">"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sp , phip0 , cp , }
		- SUCC   = { Q , == , if , }

74 :	"pj_calloc"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sp , phip0 , cp , }
		- SUCC   = { Q , == , if , }

74 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sp , phip0 , cp , }
		- SUCC   = { Q , == , if , }

75 :	"if"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

75 :	"=="
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

75 :	"Q"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

76 :	"return"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

76 :	"pj_default_destructor"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

76 :	"P"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

76 :	"ENOMEM"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

77 :	"P"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { e , * , hlf_e , P , Q , }

77 :	"opaque"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { e , * , hlf_e , P , Q , }

77 :	"Q"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { e , * , hlf_e , P , Q , }

80 :	"Q"
		- NEIGH  = { e , * , hlf_e , P , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { P , cos , phi0 , cp , }

80 :	"hlf_e"
		- NEIGH  = { e , * , hlf_e , P , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { P , cos , phi0 , cp , }

80 :	"*"
		- NEIGH  = { e , * , hlf_e , P , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { P , cos , phi0 , cp , }

80 :	"P"
		- NEIGH  = { e , * , hlf_e , P , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { P , cos , phi0 , cp , }

80 :	"e"
		- NEIGH  = { e , * , hlf_e , P , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { P , cos , phi0 , cp , }

81 :	"cp"
		- NEIGH  = { P , cos , phi0 , cp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , * , hlf_e , P , Q , }
		- SUCC   = { *= , cp , }

81 :	"cos"
		- NEIGH  = { P , cos , phi0 , cp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , * , hlf_e , P , Q , }
		- SUCC   = { *= , cp , }

81 :	"P"
		- NEIGH  = { P , cos , phi0 , cp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , * , hlf_e , P , Q , }
		- SUCC   = { *= , cp , }

81 :	"phi0"
		- NEIGH  = { P , cos , phi0 , cp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , * , hlf_e , P , Q , }
		- SUCC   = { *= , cp , }

82 :	"cp"
		- NEIGH  = { *= , cp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , cos , phi0 , cp , }
		- SUCC   = { rone_es , cp , * , es , Q , sqrt , c , P , + , }

82 :	"*="
		- NEIGH  = { *= , cp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , cos , phi0 , cp , }
		- SUCC   = { rone_es , cp , * , es , Q , sqrt , c , P , + , }

82 :	"cp"
		- NEIGH  = { *= , cp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , cos , phi0 , cp , }
		- SUCC   = { rone_es , cp , * , es , Q , sqrt , c , P , + , }

83 :	"Q"
		- NEIGH  = { rone_es , cp , * , es , Q , sqrt , c , P , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { *= , cp , }
		- SUCC   = { phi0 , P , sin , sp , }

83 :	"c"
		- NEIGH  = { rone_es , cp , * , es , Q , sqrt , c , P , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { *= , cp , }
		- SUCC   = { phi0 , P , sin , sp , }

83 :	"sqrt"
		- NEIGH  = { rone_es , cp , * , es , Q , sqrt , c , P , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { *= , cp , }
		- SUCC   = { phi0 , P , sin , sp , }

83 :	"+"
		- NEIGH  = { rone_es , cp , * , es , Q , sqrt , c , P , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { *= , cp , }
		- SUCC   = { phi0 , P , sin , sp , }

83 :	"P"
		- NEIGH  = { rone_es , cp , * , es , Q , sqrt , c , P , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { *= , cp , }
		- SUCC   = { phi0 , P , sin , sp , }

83 :	"es"
		- NEIGH  = { rone_es , cp , * , es , Q , sqrt , c , P , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { *= , cp , }
		- SUCC   = { phi0 , P , sin , sp , }

83 :	"*"
		- NEIGH  = { rone_es , cp , * , es , Q , sqrt , c , P , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { *= , cp , }
		- SUCC   = { phi0 , P , sin , sp , }

83 :	"cp"
		- NEIGH  = { rone_es , cp , * , es , Q , sqrt , c , P , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { *= , cp , }
		- SUCC   = { phi0 , P , sin , sp , }

83 :	"*"
		- NEIGH  = { rone_es , cp , * , es , Q , sqrt , c , P , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { *= , cp , }
		- SUCC   = { phi0 , P , sin , sp , }

83 :	"cp"
		- NEIGH  = { rone_es , cp , * , es , Q , sqrt , c , P , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { *= , cp , }
		- SUCC   = { phi0 , P , sin , sp , }

83 :	"*"
		- NEIGH  = { rone_es , cp , * , es , Q , sqrt , c , P , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { *= , cp , }
		- SUCC   = { phi0 , P , sin , sp , }

83 :	"P"
		- NEIGH  = { rone_es , cp , * , es , Q , sqrt , c , P , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { *= , cp , }
		- SUCC   = { phi0 , P , sin , sp , }

83 :	"rone_es"
		- NEIGH  = { rone_es , cp , * , es , Q , sqrt , c , P , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { *= , cp , }
		- SUCC   = { phi0 , P , sin , sp , }

84 :	"sp"
		- NEIGH  = { phi0 , P , sin , sp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { rone_es , cp , * , es , Q , sqrt , c , P , + , }
		- SUCC   = { c , sp , sinp0 , / , Q , }

84 :	"sin"
		- NEIGH  = { phi0 , P , sin , sp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { rone_es , cp , * , es , Q , sqrt , c , P , + , }
		- SUCC   = { c , sp , sinp0 , / , Q , }

84 :	"P"
		- NEIGH  = { phi0 , P , sin , sp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { rone_es , cp , * , es , Q , sqrt , c , P , + , }
		- SUCC   = { c , sp , sinp0 , / , Q , }

84 :	"phi0"
		- NEIGH  = { phi0 , P , sin , sp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { rone_es , cp , * , es , Q , sqrt , c , P , + , }
		- SUCC   = { c , sp , sinp0 , / , Q , }

85 :	"Q"
		- NEIGH  = { c , sp , sinp0 , / , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi0 , P , sin , sp , }
		- SUCC   = { sinp0 , ctx , Q , phip0 , P , aasin , }

85 :	"sinp0"
		- NEIGH  = { c , sp , sinp0 , / , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi0 , P , sin , sp , }
		- SUCC   = { sinp0 , ctx , Q , phip0 , P , aasin , }

85 :	"sp"
		- NEIGH  = { c , sp , sinp0 , / , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi0 , P , sin , sp , }
		- SUCC   = { sinp0 , ctx , Q , phip0 , P , aasin , }

85 :	"/"
		- NEIGH  = { c , sp , sinp0 , / , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi0 , P , sin , sp , }
		- SUCC   = { sinp0 , ctx , Q , phip0 , P , aasin , }

85 :	"Q"
		- NEIGH  = { c , sp , sinp0 , / , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi0 , P , sin , sp , }
		- SUCC   = { sinp0 , ctx , Q , phip0 , P , aasin , }

85 :	"c"
		- NEIGH  = { c , sp , sinp0 , / , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi0 , P , sin , sp , }
		- SUCC   = { sinp0 , ctx , Q , phip0 , P , aasin , }

86 :	"phip0"
		- NEIGH  = { sinp0 , ctx , Q , phip0 , P , aasin , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , sp , sinp0 , / , Q , }
		- SUCC   = { phip0 , cos , cosp0 , Q , }

86 :	"aasin"
		- NEIGH  = { sinp0 , ctx , Q , phip0 , P , aasin , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , sp , sinp0 , / , Q , }
		- SUCC   = { phip0 , cos , cosp0 , Q , }

86 :	"P"
		- NEIGH  = { sinp0 , ctx , Q , phip0 , P , aasin , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , sp , sinp0 , / , Q , }
		- SUCC   = { phip0 , cos , cosp0 , Q , }

86 :	"ctx"
		- NEIGH  = { sinp0 , ctx , Q , phip0 , P , aasin , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , sp , sinp0 , / , Q , }
		- SUCC   = { phip0 , cos , cosp0 , Q , }

86 :	"Q"
		- NEIGH  = { sinp0 , ctx , Q , phip0 , P , aasin , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , sp , sinp0 , / , Q , }
		- SUCC   = { phip0 , cos , cosp0 , Q , }

86 :	"sinp0"
		- NEIGH  = { sinp0 , ctx , Q , phip0 , P , aasin , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , sp , sinp0 , / , Q , }
		- SUCC   = { phip0 , cos , cosp0 , Q , }

87 :	"Q"
		- NEIGH  = { phip0 , cos , cosp0 , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinp0 , ctx , Q , phip0 , P , aasin , }
		- SUCC   = { e , P , *= , sp , }

87 :	"cosp0"
		- NEIGH  = { phip0 , cos , cosp0 , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinp0 , ctx , Q , phip0 , P , aasin , }
		- SUCC   = { e , P , *= , sp , }

87 :	"cos"
		- NEIGH  = { phip0 , cos , cosp0 , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinp0 , ctx , Q , phip0 , P , aasin , }
		- SUCC   = { e , P , *= , sp , }

87 :	"phip0"
		- NEIGH  = { phip0 , cos , cosp0 , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinp0 , ctx , Q , phip0 , P , aasin , }
		- SUCC   = { e , P , *= , sp , }

88 :	"sp"
		- NEIGH  = { e , P , *= , sp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip0 , cos , cosp0 , Q , }
		- SUCC   = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }

88 :	"*="
		- NEIGH  = { e , P , *= , sp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip0 , cos , cosp0 , Q , }
		- SUCC   = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }

88 :	"P"
		- NEIGH  = { e , P , *= , sp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip0 , cos , cosp0 , Q , }
		- SUCC   = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }

88 :	"e"
		- NEIGH  = { e , P , *= , sp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip0 , cos , cosp0 , Q , }
		- SUCC   = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }

89 :	"Q"
		- NEIGH  = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , P , *= , sp , }
		- SUCC   = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }

89 :	"K"
		- NEIGH  = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , P , *= , sp , }
		- SUCC   = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }

89 :	"log"
		- NEIGH  = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , P , *= , sp , }
		- SUCC   = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }

89 :	"tan"
		- NEIGH  = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , P , *= , sp , }
		- SUCC   = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }

89 :	"M_FORTPI"
		- NEIGH  = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , P , *= , sp , }
		- SUCC   = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }

89 :	"+"
		- NEIGH  = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , P , *= , sp , }
		- SUCC   = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }

89 :	"*"
		- NEIGH  = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , P , *= , sp , }
		- SUCC   = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }

89 :	"phip0"
		- NEIGH  = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , P , *= , sp , }
		- SUCC   = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }

89 :	"-"
		- NEIGH  = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , P , *= , sp , }
		- SUCC   = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }

89 :	"Q"
		- NEIGH  = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , P , *= , sp , }
		- SUCC   = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }

89 :	"c"
		- NEIGH  = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , P , *= , sp , }
		- SUCC   = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }

89 :	"*"
		- NEIGH  = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , P , *= , sp , }
		- SUCC   = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }

90 :	"log"
		- NEIGH  = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , P , *= , sp , }
		- SUCC   = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }

90 :	"tan"
		- NEIGH  = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , P , *= , sp , }
		- SUCC   = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }

90 :	"M_FORTPI"
		- NEIGH  = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , P , *= , sp , }
		- SUCC   = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }

90 :	"+"
		- NEIGH  = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , P , *= , sp , }
		- SUCC   = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }

90 :	"*"
		- NEIGH  = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , P , *= , sp , }
		- SUCC   = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }

90 :	"P"
		- NEIGH  = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , P , *= , sp , }
		- SUCC   = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }

90 :	"phi0"
		- NEIGH  = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , P , *= , sp , }
		- SUCC   = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }

90 :	"-"
		- NEIGH  = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , P , *= , sp , }
		- SUCC   = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }

90 :	"Q"
		- NEIGH  = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , P , *= , sp , }
		- SUCC   = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }

90 :	"hlf_e"
		- NEIGH  = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , P , *= , sp , }
		- SUCC   = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }

90 :	"*"
		- NEIGH  = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , P , *= , sp , }
		- SUCC   = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }

91 :	"log"
		- NEIGH  = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , P , *= , sp , }
		- SUCC   = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }

91 :	"+"
		- NEIGH  = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , P , *= , sp , }
		- SUCC   = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }

91 :	"sp"
		- NEIGH  = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , P , *= , sp , }
		- SUCC   = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }

91 :	"/"
		- NEIGH  = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , P , *= , sp , }
		- SUCC   = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }

91 :	"-"
		- NEIGH  = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , P , *= , sp , }
		- SUCC   = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }

91 :	"sp"
		- NEIGH  = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , P , *= , sp , }
		- SUCC   = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }

92 :	"Q"
		- NEIGH  = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- SUCC   = { inv , somerc_e_inverse , P , }

92 :	"kR"
		- NEIGH  = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- SUCC   = { inv , somerc_e_inverse , P , }

92 :	"P"
		- NEIGH  = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- SUCC   = { inv , somerc_e_inverse , P , }

92 :	"k0"
		- NEIGH  = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- SUCC   = { inv , somerc_e_inverse , P , }

92 :	"*"
		- NEIGH  = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- SUCC   = { inv , somerc_e_inverse , P , }

92 :	"sqrt"
		- NEIGH  = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- SUCC   = { inv , somerc_e_inverse , P , }

92 :	"P"
		- NEIGH  = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- SUCC   = { inv , somerc_e_inverse , P , }

92 :	"one_es"
		- NEIGH  = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- SUCC   = { inv , somerc_e_inverse , P , }

92 :	"/"
		- NEIGH  = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- SUCC   = { inv , somerc_e_inverse , P , }

92 :	"-"
		- NEIGH  = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- SUCC   = { inv , somerc_e_inverse , P , }

92 :	"sp"
		- NEIGH  = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- SUCC   = { inv , somerc_e_inverse , P , }

92 :	"*"
		- NEIGH  = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- SUCC   = { inv , somerc_e_inverse , P , }

92 :	"sp"
		- NEIGH  = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , sp , hlf_e , phi0 , c , tan , P , - , phip0 , * , K , + , M_FORTPI , log , Q , }
		- SUCC   = { inv , somerc_e_inverse , P , }

93 :	"P"
		- NEIGH  = { inv , somerc_e_inverse , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }
		- SUCC   = { somerc_e_forward , fwd , P , }

93 :	"inv"
		- NEIGH  = { inv , somerc_e_inverse , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }
		- SUCC   = { somerc_e_forward , fwd , P , }

93 :	"somerc_e_inverse"
		- NEIGH  = { inv , somerc_e_inverse , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sp , - , / , one_es , * , k0 , P , kR , sqrt , Q , }
		- SUCC   = { somerc_e_forward , fwd , P , }

94 :	"P"
		- NEIGH  = { somerc_e_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { inv , somerc_e_inverse , P , }
		- SUCC   = { P , return , }

94 :	"fwd"
		- NEIGH  = { somerc_e_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { inv , somerc_e_inverse , P , }
		- SUCC   = { P , return , }

94 :	"somerc_e_forward"
		- NEIGH  = { somerc_e_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { inv , somerc_e_inverse , P , }
		- SUCC   = { P , return , }

95 :	"return"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { somerc_e_forward , fwd , P , }
		- SUCC   = { }

95 :	"P"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { somerc_e_forward , fwd , P , }
		- SUCC   = { }

